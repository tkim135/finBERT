idx: 0, example: The Bristol Port Company has sealed a one million pound contract with Cooper Specialised Handling to supply it with four 45-tonne , customised reach stackers from Konecranes , prediction: 2, correct_label: 1, class_scores: [0.25945646 0.31694284 0.42360076], word_scores: ['the:6.3806996877247e-06', 'bristol:8.33375543152215e-06', 'port:5.874064754607389e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'sealed:8.380153303733096e-06', 'a:8.62785782373976e-06', 'one:4.584404450724833e-06', 'million:6.018835847498849e-06', 'pound:7.64060314395465e-06', 'contract:7.1864019446366e-06', 'with:4.733654350275174e-06', 'cooper:7.708286830165889e-06', 'specialised:1.1377658665878698e-05', 'handling:8.843817340675741e-06', 'to:2.886244146793615e-06', 'supply:6.221108833415201e-06', 'it:3.3415778943890473e-06', 'with:4.733654350275174e-06', 'four:3.606506425057887e-06', '45:4.878051640844205e-06', '-:4.821180027647642e-06', 'ton:6.645556823059451e-06', '##ne:8.183636964531615e-06', ',:7.986737728060689e-06', 'custom:7.436775831592968e-06', '##ised:5.989420969854109e-06', 'reach:8.23132722871378e-06', 'stack:1.0525375728320796e-05', '##ers:5.0093617574020755e-06', 'from:4.495178018260049e-06', 'ko:5.9404255807748996e-06', '##ne:8.183636964531615e-06', '##cr:6.230764483916573e-06', '##ane:6.42778195469873e-06', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0332, device='cuda:0')), ('bristol', tensor(0.0433, device='cuda:0')), ('port', tensor(0.0305, device='cuda:0')), ('company', tensor(0.0348, device='cuda:0')), ('has', tensor(0.0308, device='cuda:0')), ('sealed', tensor(0.0436, device='cuda:0')), ('a', tensor(0.0449, device='cuda:0')), ('one', tensor(0.0238, device='cuda:0')), ('million', tensor(0.0313, device='cuda:0')), ('pound', tensor(0.0397, device='cuda:0')), ('contract', tensor(0.0374, device='cuda:0')), ('with', tensor(0.0246, device='cuda:0')), ('cooper', tensor(0.0401, device='cuda:0')), ('specialised', tensor(0.0592, device='cuda:0')), ('handling', tensor(0.0460, device='cuda:0')), ('to', tensor(0.0150, device='cuda:0')), ('supply', tensor(0.0324, device='cuda:0')), ('it', tensor(0.0174, device='cuda:0')), ('with', tensor(0.0246, device='cuda:0')), ('four', tensor(0.0188, device='cuda:0')), ('45', tensor(0.0254, device='cuda:0')), ('-', tensor(0.0251, device='cuda:0')), ('tonne', tensor(0.0346, device='cuda:0')), (',', tensor(0.0415, device='cuda:0')), ('customised', tensor(0.0387, device='cuda:0')), ('reach', tensor(0.0428, device='cuda:0')), ('stackers', tensor(0.0547, device='cuda:0')), ('from', tensor(0.0234, device='cuda:0')), ('konecranes', tensor(0.0426, device='cuda:0'))],  word_scores_max: [('the', tensor(0.0303, device='cuda:0')), ('bristol', tensor(0.0395, device='cuda:0')), ('port', tensor(0.0279, device='cuda:0')), ('company', tensor(0.0317, device='cuda:0')), ('has', tensor(0.0281, device='cuda:0')), ('sealed', tensor(0.0397, device='cuda:0')), ('a', tensor(0.0409, device='cuda:0')), ('one', tensor(0.0217, device='cuda:0')), ('million', tensor(0.0285, device='cuda:0')), ('pound', tensor(0.0362, device='cuda:0')), ('contract', tensor(0.0341, device='cuda:0')), ('with', tensor(0.0224, device='cuda:0')), ('cooper', tensor(0.0365, device='cuda:0')), ('specialised', tensor(0.0539, device='cuda:0')), ('handling', tensor(0.0419, device='cuda:0')), ('to', tensor(0.0137, device='cuda:0')), ('supply', tensor(0.0295, device='cuda:0')), ('it', tensor(0.0158, device='cuda:0')), ('with', tensor(0.0224, device='cuda:0')), ('four', tensor(0.0171, device='cuda:0')), ('45', tensor(0.0231, device='cuda:0')), ('-', tensor(0.0229, device='cuda:0')), ('tonne', tensor(0.0315, device='cuda:0')), (',', tensor(0.0379, device='cuda:0')), ('customised', tensor(0.0353, device='cuda:0')), ('reach', tensor(0.0390, device='cuda:0')), ('stackers', tensor(0.0499, device='cuda:0')), ('from', tensor(0.0213, device='cuda:0')), ('konecranes', tensor(0.1270, device='cuda:0'))]
idx: 1, example: A paper mill in the central Maine town of Madison soon will have a new owner , prediction: 2, correct_label: 2, class_scores: [0.14831075 0.3172844  0.5344048 ], word_scores: ['a:8.62785782373976e-06', 'paper:2.697490344871767e-06', 'mill:2.6564571271592285e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'central:1.9185144992661662e-06', 'maine:3.5421139727986883e-06', 'town:2.4598032268841052e-06', 'of:3.4365734791208524e-06', 'madison:3.4110794331354555e-06', 'soon:4.303194600652205e-06', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'owner:5.6893281907832716e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('a', tensor(0.1296, device='cuda:0')), ('paper', tensor(0.0405, device='cuda:0')), ('mill', tensor(0.0399, device='cuda:0')), ('in', tensor(0.0454, device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('central', tensor(0.0288, device='cuda:0')), ('maine', tensor(0.0532, device='cuda:0')), ('town', tensor(0.0370, device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('madison', tensor(0.0513, device='cuda:0')), ('soon', tensor(0.0647, device='cuda:0')), ('will', tensor(0.0612, device='cuda:0')), ('have', tensor(0.0437, device='cuda:0')), ('a', tensor(0.1296, device='cuda:0')), ('new', tensor(0.0420, device='cuda:0')), ('owner', tensor(0.0855, device='cuda:0'))],  word_scores_max: [('a', tensor(0.1296, device='cuda:0')), ('paper', tensor(0.0405, device='cuda:0')), ('mill', tensor(0.0399, device='cuda:0')), ('in', tensor(0.0454, device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('central', tensor(0.0288, device='cuda:0')), ('maine', tensor(0.0532, device='cuda:0')), ('town', tensor(0.0370, device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('madison', tensor(0.0513, device='cuda:0')), ('soon', tensor(0.0647, device='cuda:0')), ('will', tensor(0.0612, device='cuda:0')), ('have', tensor(0.0437, device='cuda:0')), ('a', tensor(0.1296, device='cuda:0')), ('new', tensor(0.0420, device='cuda:0')), ('owner', tensor(0.0855, device='cuda:0'))]
idx: 2, example: ALEXANDRIA , Va. , Oct. 23 -- Hans-Otto Scheck of Espoo , Finland , has developed a method of identifying remote radio units in a communication system , prediction: 2, correct_label: 2, class_scores: [0.24704278 0.26556918 0.4873881 ], word_scores: ['alexandria:4.809578967979178e-06', ',:7.986737728060689e-06', 'va:2.3812995095795486e-06', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'oct:4.3818322410515975e-06', '.:2.903296945078182e-06', '23:3.2229838780040154e-06', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'hans:2.869052195819677e-06', '-:4.821180027647642e-06', 'otto:2.1969599401927553e-06', 'sc:1.3329485000213026e-06', '##he:1.304545435232285e-06', '##ck:1.956489086296642e-06', 'of:3.4365734791208524e-06', 'es:2.450917691021459e-06', '##poo:4.037954568048008e-06', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'developed:2.488632617314579e-06', 'a:8.62785782373976e-06', 'method:2.380315208938555e-06', 'of:3.4365734791208524e-06', 'identifying:4.317278126109159e-06', 'remote:3.999933596787741e-06', 'radio:2.7861385660798987e-06', 'units:2.8638919502554927e-06', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'communication:3.43316605722066e-06', 'system:2.472523192409426e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('alexandria', tensor(0.0349, device='cuda:0')), (',', tensor(0.0580, device='cuda:0')), ('va', tensor(0.0173, device='cuda:0')), ('.', tensor(0.0211, device='cuda:0')), (',', tensor(0.0580, device='cuda:0')), ('oct', tensor(0.0318, device='cuda:0')), ('.', tensor(0.0211, device='cuda:0')), ('23', tensor(0.0234, device='cuda:0')), ('-', tensor(0.0350, device='cuda:0')), ('-', tensor(0.0350, device='cuda:0')), ('hans', tensor(0.0208, device='cuda:0')), ('-', tensor(0.0350, device='cuda:0')), ('otto', tensor(0.0159, device='cuda:0')), ('scheck', tensor(0.0097, device='cuda:0')), ('of', tensor(0.0249, device='cuda:0')), ('espoo', tensor(0.0178, device='cuda:0')), (',', tensor(0.0580, device='cuda:0')), ('finland', tensor(0.0297, device='cuda:0')), (',', tensor(0.0580, device='cuda:0')), ('has', tensor(0.0430, device='cuda:0')), ('developed', tensor(0.0181, device='cuda:0')), ('a', tensor(0.0626, device='cuda:0')), ('method', tensor(0.0173, device='cuda:0')), ('of', tensor(0.0249, device='cuda:0')), ('identifying', tensor(0.0313, device='cuda:0')), ('remote', tensor(0.0290, device='cuda:0')), ('radio', tensor(0.0202, device='cuda:0')), ('units', tensor(0.0208, device='cuda:0')), ('in', tensor(0.0219, device='cuda:0')), ('a', tensor(0.0626, device='cuda:0')), ('communication', tensor(0.0249, device='cuda:0')), ('system', tensor(0.0179, device='cuda:0'))],  word_scores_max: [('alexandria', tensor(0.0346, device='cuda:0')), (',', tensor(0.0574, device='cuda:0')), ('va', tensor(0.0171, device='cuda:0')), ('.', tensor(0.0209, device='cuda:0')), (',', tensor(0.0574, device='cuda:0')), ('oct', tensor(0.0315, device='cuda:0')), ('.', tensor(0.0209, device='cuda:0')), ('23', tensor(0.0232, device='cuda:0')), ('-', tensor(0.0347, device='cuda:0')), ('-', tensor(0.0347, device='cuda:0')), ('hans', tensor(0.0206, device='cuda:0')), ('-', tensor(0.0347, device='cuda:0')), ('otto', tensor(0.0158, device='cuda:0')), ('scheck', tensor(0.0190, device='cuda:0')), ('of', tensor(0.0247, device='cuda:0')), ('espoo', tensor(0.0176, device='cuda:0')), (',', tensor(0.0574, device='cuda:0')), ('finland', tensor(0.0295, device='cuda:0')), (',', tensor(0.0574, device='cuda:0')), ('has', tensor(0.0426, device='cuda:0')), ('developed', tensor(0.0179, device='cuda:0')), ('a', tensor(0.0620, device='cuda:0')), ('method', tensor(0.0171, device='cuda:0')), ('of', tensor(0.0247, device='cuda:0')), ('identifying', tensor(0.0310, device='cuda:0')), ('remote', tensor(0.0288, device='cuda:0')), ('radio', tensor(0.0200, device='cuda:0')), ('units', tensor(0.0206, device='cuda:0')), ('in', tensor(0.0217, device='cuda:0')), ('a', tensor(0.0620, device='cuda:0')), ('communication', tensor(0.0247, device='cuda:0')), ('system', tensor(0.0178, device='cuda:0'))]
idx: 3, example: Altona stated that the private company of Altona chairman Kevin Maloney , Tulla Resources , would take up its entitlement in full , prediction: 1, correct_label: 2, class_scores: [0.22932418 0.39275247 0.3779234 ], word_scores: ['alton:9.520066669210792e-06', '##a:3.804580501309829e-06', 'stated:3.03409819935041e-06', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'private:3.393340421098401e-06', 'company:6.695386673527537e-06', 'of:3.4365734791208524e-06', 'alton:9.520066669210792e-06', '##a:3.804580501309829e-06', 'chairman:3.5376444884605007e-06', 'kevin:3.505928589220275e-06', 'malone:5.12659244122915e-06', '##y:1.832826342251792e-06', ',:7.986737728060689e-06', 'tu:3.6499097859632457e-06', '##lla:4.67361724076909e-06', 'resources:3.8971406866039615e-06', ',:7.986737728060689e-06', 'would:2.0953068542439723e-06', 'take:2.0325496734585613e-06', 'up:1.4959460941099678e-06', 'its:1.7191393908433383e-06', 'en:2.1442599518195493e-06', '##ti:2.5915114747476764e-06', '##tlement:6.109421065048082e-06', 'in:3.0217122457543155e-06', 'full:3.0938992949813837e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('altona', tensor(0.1000, device='cuda:0')), ('stated', tensor(0.0319, device='cuda:0')), ('that', tensor(0.0159, device='cuda:0')), ('the', tensor(0.0670, device='cuda:0')), ('private', tensor(0.0356, device='cuda:0')), ('company', tensor(0.0703, device='cuda:0')), ('of', tensor(0.0361, device='cuda:0')), ('altona', tensor(0.1000, device='cuda:0')), ('chairman', tensor(0.0371, device='cuda:0')), ('kevin', tensor(0.0368, device='cuda:0')), ('maloney', tensor(0.0538, device='cuda:0')), (',', tensor(0.0839, device='cuda:0')), ('tulla', tensor(0.0383, device='cuda:0')), ('resources', tensor(0.0409, device='cuda:0')), (',', tensor(0.0839, device='cuda:0')), ('would', tensor(0.0220, device='cuda:0')), ('take', tensor(0.0213, device='cuda:0')), ('up', tensor(0.0157, device='cuda:0')), ('its', tensor(0.0181, device='cuda:0')), ('entitlement', tensor(0.0272, device='cuda:0')), ('in', tensor(0.0317, device='cuda:0')), ('full', tensor(0.0325, device='cuda:0'))],  word_scores_max: [('altona', tensor(0.0978, device='cuda:0')), ('stated', tensor(0.0312, device='cuda:0')), ('that', tensor(0.0155, device='cuda:0')), ('the', tensor(0.0655, device='cuda:0')), ('private', tensor(0.0348, device='cuda:0')), ('company', tensor(0.0688, device='cuda:0')), ('of', tensor(0.0353, device='cuda:0')), ('altona', tensor(0.0978, device='cuda:0')), ('chairman', tensor(0.0363, device='cuda:0')), ('kevin', tensor(0.0360, device='cuda:0')), ('maloney', tensor(0.0526, device='cuda:0')), (',', tensor(0.0820, device='cuda:0')), ('tulla', tensor(0.0375, device='cuda:0')), ('resources', tensor(0.0400, device='cuda:0')), (',', tensor(0.0820, device='cuda:0')), ('would', tensor(0.0215, device='cuda:0')), ('take', tensor(0.0209, device='cuda:0')), ('up', tensor(0.0154, device='cuda:0')), ('its', tensor(0.0177, device='cuda:0')), ('entitlement', tensor(0.0486, device='cuda:0')), ('in', tensor(0.0310, device='cuda:0')), ('full', tensor(0.0318, device='cuda:0'))]
idx: 4, example: Registration is required , prediction: 2, correct_label: 2, class_scores: [0.1887361  0.38763443 0.42362946], word_scores: ['registration:0.0', 'is:0.0', 'required:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('registration', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('required', tensor(nan, device='cuda:0'))],  word_scores_max: [('registration', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('required', tensor(nan, device='cuda:0'))]
idx: 5, example: Comparable operating profit for the quarter decreased from EUR510m while sales increased from EUR860m , as compared to the third quarter 2007 , prediction: 1, correct_label: 0, class_scores: [0.3472815  0.36033788 0.2923807 ], word_scores: ['comparable:0.0', 'operating:0.0', 'profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'quarter:0.0', 'decreased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##51:0.0', '##0:0.0', '##m:0.0', 'while:0.0', 'sales:0.0', 'increased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##86:0.0', '##0:0.0', '##m:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('comparable', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1956, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('from', tensor(0.1378, device='cuda:0')), ('eur510m', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.1378, device='cuda:0')), ('eur860m', tensor(0., device='cuda:0')), (',', tensor(0.2448, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0885, device='cuda:0')), ('the', tensor(0.1956, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('comparable', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1956, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('from', tensor(0.1378, device='cuda:0')), ('eur510m', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.1378, device='cuda:0')), ('eur860m', tensor(0., device='cuda:0')), (',', tensor(0.2448, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0885, device='cuda:0')), ('the', tensor(0.1956, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 6, example: `` Because we 're a pension insurance company , we 're required to diversify and not put too much in one asset class , prediction: 2, correct_label: 2, class_scores: [0.1828276  0.40242973 0.41474265], word_scores: ['`:0.0', '`:0.0', 'because:0.0', 'we:0.0', "':0.0", 're:0.0', 'a:8.62785782373976e-06', 'pension:0.0', 'insurance:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'we:0.0', "':0.0", 're:0.0', 'required:0.0', 'to:2.886244146793615e-06', 'divers:0.0', '##ify:0.0', 'and:0.0', 'not:0.0', 'put:0.0', 'too:0.0', 'much:0.0', 'in:3.0217122457543155e-06', 'one:4.584404450724833e-06', 'asset:0.0', 'class:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('because', tensor(nan, device='cuda:0'))],  word_scores_max: [('because', tensor(nan, device='cuda:0'))]
idx: 7, example: The Hayward , Calif.-based target designs active , casual and dress footwear , as well as boots and sandals , prediction: 2, correct_label: 2, class_scores: [0.14462963 0.35551625 0.49985406], word_scores: ['the:6.3806996877247e-06', 'hayward:0.0', ',:7.986737728060689e-06', 'cal:0.0', '##if:0.0', '.:2.903296945078182e-06', '-:4.821180027647642e-06', 'based:0.0', 'target:0.0', 'designs:0.0', 'active:0.0', ',:7.986737728060689e-06', 'casual:0.0', 'and:0.0', 'dress:0.0', 'foot:0.0', '##wear:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'boots:0.0', 'and:0.0', 'sandals:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1676, device='cuda:0')), ('hayward', tensor(0., device='cuda:0')), (',', tensor(0.2098, device='cuda:0')), ('calif', tensor(0., device='cuda:0')), ('.', tensor(0.0763, device='cuda:0')), ('-', tensor(0.1267, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('designs', tensor(0., device='cuda:0')), ('active', tensor(0., device='cuda:0')), (',', tensor(0.2098, device='cuda:0')), ('casual', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dress', tensor(0., device='cuda:0')), ('footwear', tensor(0., device='cuda:0')), (',', tensor(0.2098, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('boots', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sandals', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1676, device='cuda:0')), ('hayward', tensor(0., device='cuda:0')), (',', tensor(0.2098, device='cuda:0')), ('calif', tensor(0., device='cuda:0')), ('.', tensor(0.0763, device='cuda:0')), ('-', tensor(0.1267, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('designs', tensor(0., device='cuda:0')), ('active', tensor(0., device='cuda:0')), (',', tensor(0.2098, device='cuda:0')), ('casual', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dress', tensor(0., device='cuda:0')), ('footwear', tensor(0., device='cuda:0')), (',', tensor(0.2098, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('boots', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sandals', tensor(0., device='cuda:0'))]
idx: 8, example: Talvivaara has secured a 10-year off-take agreement for 100 per cent of its main output of nickel and cobalt to Norilsk Nickel and entered into a long-term zinc streaming agreement with Nyrstar NV , prediction: 2, correct_label: 1, class_scores: [0.1894476  0.35286838 0.4576841 ], word_scores: ['tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', 'has:5.9214244174654596e-06', 'secured:0.0', 'a:8.62785782373976e-06', '10:0.0', '-:4.821180027647642e-06', 'year:0.0', 'off:0.0', '-:4.821180027647642e-06', 'take:2.0325496734585613e-06', 'agreement:0.0', 'for:0.0', '100:0.0', 'per:0.0', 'cent:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'main:0.0', 'output:0.0', 'of:3.4365734791208524e-06', 'nickel:0.0', 'and:0.0', 'cobalt:0.0', 'to:2.886244146793615e-06', 'nor:0.0', '##ils:0.0', '##k:0.0', 'nickel:0.0', 'and:0.0', 'entered:0.0', 'into:0.0', 'a:8.62785782373976e-06', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'zinc:0.0', 'streaming:0.0', 'agreement:0.0', 'with:4.733654350275174e-06', 'ny:0.0', '##rst:0.0', '##ar:0.0', 'n:0.0', '##v:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('talvivaara', tensor(0., device='cuda:0')), ('has', tensor(0.1060, device='cuda:0')), ('secured', tensor(0., device='cuda:0')), ('a', tensor(0.1544, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.0863, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('-', tensor(0.0863, device='cuda:0')), ('take', tensor(0.0364, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('cent', tensor(0., device='cuda:0')), ('of', tensor(0.0615, device='cuda:0')), ('its', tensor(0.0308, device='cuda:0')), ('main', tensor(0., device='cuda:0')), ('output', tensor(0., device='cuda:0')), ('of', tensor(0.0615, device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('cobalt', tensor(0., device='cuda:0')), ('to', tensor(0.0516, device='cuda:0')), ('norilsk', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('a', tensor(0.1544, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.0863, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('streaming', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('with', tensor(0.0847, device='cuda:0')), ('nyrstar', tensor(0., device='cuda:0')), ('nv', tensor(0., device='cuda:0'))],  word_scores_max: [('talvivaara', tensor(0., device='cuda:0')), ('has', tensor(0.1060, device='cuda:0')), ('secured', tensor(0., device='cuda:0')), ('a', tensor(0.1544, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.0863, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('-', tensor(0.0863, device='cuda:0')), ('take', tensor(0.0364, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('cent', tensor(0., device='cuda:0')), ('of', tensor(0.0615, device='cuda:0')), ('its', tensor(0.0308, device='cuda:0')), ('main', tensor(0., device='cuda:0')), ('output', tensor(0., device='cuda:0')), ('of', tensor(0.0615, device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('cobalt', tensor(0., device='cuda:0')), ('to', tensor(0.0516, device='cuda:0')), ('norilsk', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('a', tensor(0.1544, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.0863, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('streaming', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('with', tensor(0.0847, device='cuda:0')), ('nyrstar', tensor(0., device='cuda:0')), ('nv', tensor(0., device='cuda:0'))]
idx: 9, example: ALEXANDRIA , Va. , Nov. 19 -- Erkki Aho , Elimaki , Finland , has developed a method and apparatus in conjunction with a shoe press , prediction: 2, correct_label: 2, class_scores: [0.18893069 0.27657968 0.5344897 ], word_scores: ['alexandria:4.809578967979178e-06', ',:7.986737728060689e-06', 'va:2.3812995095795486e-06', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'nov:0.0', '.:2.903296945078182e-06', '19:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'er:0.0', '##kki:0.0', 'ah:0.0', '##o:0.0', ',:7.986737728060689e-06', 'eli:0.0', '##ma:0.0', '##ki:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'developed:2.488632617314579e-06', 'a:8.62785782373976e-06', 'method:2.380315208938555e-06', 'and:0.0', 'apparatus:0.0', 'in:3.0217122457543155e-06', 'conjunction:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'shoe:0.0', 'press:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('alexandria', tensor(0.0469, device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('va', tensor(0.0232, device='cuda:0')), ('.', tensor(0.0283, device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('nov', tensor(0., device='cuda:0')), ('.', tensor(0.0283, device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('-', tensor(0.0470, device='cuda:0')), ('-', tensor(0.0470, device='cuda:0')), ('erkki', tensor(0., device='cuda:0')), ('aho', tensor(0., device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('elimaki', tensor(0., device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('finland', tensor(0.0400, device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('has', tensor(0.0578, device='cuda:0')), ('developed', tensor(0.0243, device='cuda:0')), ('a', tensor(0.0842, device='cuda:0')), ('method', tensor(0.0232, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('apparatus', tensor(0., device='cuda:0')), ('in', tensor(0.0295, device='cuda:0')), ('conjunction', tensor(0., device='cuda:0')), ('with', tensor(0.0462, device='cuda:0')), ('a', tensor(0.0842, device='cuda:0')), ('shoe', tensor(0., device='cuda:0')), ('press', tensor(0., device='cuda:0'))],  word_scores_max: [('alexandria', tensor(0.0469, device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('va', tensor(0.0232, device='cuda:0')), ('.', tensor(0.0283, device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('nov', tensor(0., device='cuda:0')), ('.', tensor(0.0283, device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('-', tensor(0.0470, device='cuda:0')), ('-', tensor(0.0470, device='cuda:0')), ('erkki', tensor(0., device='cuda:0')), ('aho', tensor(0., device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('elimaki', tensor(0., device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('finland', tensor(0.0400, device='cuda:0')), (',', tensor(0.0779, device='cuda:0')), ('has', tensor(0.0578, device='cuda:0')), ('developed', tensor(0.0243, device='cuda:0')), ('a', tensor(0.0842, device='cuda:0')), ('method', tensor(0.0232, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('apparatus', tensor(0., device='cuda:0')), ('in', tensor(0.0295, device='cuda:0')), ('conjunction', tensor(0., device='cuda:0')), ('with', tensor(0.0462, device='cuda:0')), ('a', tensor(0.0842, device='cuda:0')), ('shoe', tensor(0., device='cuda:0')), ('press', tensor(0., device='cuda:0'))]
idx: 10, example: The payment of 2.779 million litas in interest on a long-term loan provided by Ragutis ' majority shareholder , Estonia 's A. Le Coq , also added to the losses , prediction: 2, correct_label: 0, class_scores: [0.21628456 0.3314372  0.4522782 ], word_scores: ['the:6.3806996877247e-06', 'payment:0.0', 'of:3.4365734791208524e-06', '2:0.0', '.:2.903296945078182e-06', '77:0.0', '##9:0.0', 'million:6.018835847498849e-06', 'lit:0.0', '##as:0.0', 'in:3.0217122457543155e-06', 'interest:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'loan:0.0', 'provided:0.0', 'by:0.0', 'rag:0.0', '##uti:0.0', '##s:4.601175078278175e-06', "':0.0", 'majority:0.0', 'shareholder:0.0', ',:7.986737728060689e-06', 'estonia:0.0', "':0.0", 's:0.0', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', 'le:0.0', 'co:0.0', '##q:0.0', ',:7.986737728060689e-06', 'also:0.0', 'added:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'losses:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1812, device='cuda:0')), ('payment', tensor(0., device='cuda:0')), ('of', tensor(0.0976, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('779', tensor(0., device='cuda:0')), ('million', tensor(0.1709, device='cuda:0')), ('litas', tensor(0., device='cuda:0')), ('in', tensor(0.0858, device='cuda:0')), ('interest', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2450, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.1369, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1812, device='cuda:0')), ('payment', tensor(0., device='cuda:0')), ('of', tensor(0.0976, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('779', tensor(0., device='cuda:0')), ('million', tensor(0.1709, device='cuda:0')), ('litas', tensor(0., device='cuda:0')), ('in', tensor(0.0858, device='cuda:0')), ('interest', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2450, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.1369, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))]
idx: 11, example: Pharmaceuticals - Poland This brand-new market analysis gives a clear overview of the actual situation and future outlook of the pharmaceutical market in Poland , prediction: 1, correct_label: 2, class_scores: [0.2439268  0.42587158 0.33020157], word_scores: ['pharmaceuticals:0.0', '-:4.821180027647642e-06', 'poland:0.0', 'this:0.0', 'brand:0.0', '-:4.821180027647642e-06', 'new:2.798587502184091e-06', 'market:0.0', 'analysis:0.0', 'gives:0.0', 'a:8.62785782373976e-06', 'clear:0.0', 'overview:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'actual:0.0', 'situation:0.0', 'and:0.0', 'future:0.0', 'outlook:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'pharmaceutical:0.0', 'market:0.0', 'in:3.0217122457543155e-06', 'poland:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pharmaceuticals', tensor(0., device='cuda:0')), ('-', tensor(0.1103, device='cuda:0')), ('poland', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('brand', tensor(0., device='cuda:0')), ('-', tensor(0.1103, device='cuda:0')), ('new', tensor(0.0640, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('analysis', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('a', tensor(0.1973, device='cuda:0')), ('clear', tensor(0., device='cuda:0')), ('overview', tensor(0., device='cuda:0')), ('of', tensor(0.0786, device='cuda:0')), ('the', tensor(0.1459, device='cuda:0')), ('actual', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('of', tensor(0.0786, device='cuda:0')), ('the', tensor(0.1459, device='cuda:0')), ('pharmaceutical', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0691, device='cuda:0')), ('poland', tensor(0., device='cuda:0'))],  word_scores_max: [('pharmaceuticals', tensor(0., device='cuda:0')), ('-', tensor(0.1103, device='cuda:0')), ('poland', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('brand', tensor(0., device='cuda:0')), ('-', tensor(0.1103, device='cuda:0')), ('new', tensor(0.0640, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('analysis', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('a', tensor(0.1973, device='cuda:0')), ('clear', tensor(0., device='cuda:0')), ('overview', tensor(0., device='cuda:0')), ('of', tensor(0.0786, device='cuda:0')), ('the', tensor(0.1459, device='cuda:0')), ('actual', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('of', tensor(0.0786, device='cuda:0')), ('the', tensor(0.1459, device='cuda:0')), ('pharmaceutical', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0691, device='cuda:0')), ('poland', tensor(0., device='cuda:0'))]
idx: 12, example: South America and Asia are other promising markets , prediction: 2, correct_label: 2, class_scores: [0.17508478 0.287843   0.5370722 ], word_scores: ['south:0.0', 'america:0.0', 'and:0.0', 'asia:0.0', 'are:0.0', 'other:0.0', 'promising:0.0', 'markets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('south', tensor(nan, device='cuda:0')), ('america', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('asia', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('other', tensor(nan, device='cuda:0')), ('promising', tensor(nan, device='cuda:0')), ('markets', tensor(nan, device='cuda:0'))],  word_scores_max: [('south', tensor(nan, device='cuda:0')), ('america', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('asia', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('other', tensor(nan, device='cuda:0')), ('promising', tensor(nan, device='cuda:0')), ('markets', tensor(nan, device='cuda:0'))]
idx: 13, example: Swiss franc surged to record 1.42 euros after it reported sharpest gain in manufacturing in March , prediction: 1, correct_label: 1, class_scores: [0.20768242 0.42938545 0.3629322 ], word_scores: ['swiss:0.0', 'fran:0.0', '##c:0.0', 'surged:0.0', 'to:2.886244146793615e-06', 'record:0.0', '1:0.0', '.:2.903296945078182e-06', '42:0.0', 'euros:0.0', 'after:0.0', 'it:3.3415778943890473e-06', 'reported:0.0', 'sharpe:0.0', '##st:0.0', 'gain:0.0', 'in:3.0217122457543155e-06', 'manufacturing:0.0', 'in:3.0217122457543155e-06', 'march:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('swiss', tensor(0., device='cuda:0')), ('franc', tensor(0., device='cuda:0')), ('surged', tensor(0., device='cuda:0')), ('to', tensor(0.1902, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1913, device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('it', tensor(0.2202, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('sharpest', tensor(0., device='cuda:0')), ('gain', tensor(0., device='cuda:0')), ('in', tensor(0.1991, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('in', tensor(0.1991, device='cuda:0')), ('march', tensor(0., device='cuda:0'))],  word_scores_max: [('swiss', tensor(0., device='cuda:0')), ('franc', tensor(0., device='cuda:0')), ('surged', tensor(0., device='cuda:0')), ('to', tensor(0.1902, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1913, device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('it', tensor(0.2202, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('sharpest', tensor(0., device='cuda:0')), ('gain', tensor(0., device='cuda:0')), ('in', tensor(0.1991, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('in', tensor(0.1991, device='cuda:0')), ('march', tensor(0., device='cuda:0'))]
idx: 14, example: An individual promotion also generated slightly higher-than-expected revenues , prediction: 2, correct_label: 1, class_scores: [0.16854425 0.3056692  0.52578664], word_scores: ['an:0.0', 'individual:0.0', 'promotion:0.0', 'also:0.0', 'generated:0.0', 'slightly:0.0', 'higher:0.0', '-:4.821180027647642e-06', 'than:0.0', '-:4.821180027647642e-06', 'expected:0.0', 'revenues:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('an', tensor(0., device='cuda:0')), ('individual', tensor(0., device='cuda:0')), ('promotion', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('slightly', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0'))],  word_scores_max: [('an', tensor(0., device='cuda:0')), ('individual', tensor(0., device='cuda:0')), ('promotion', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('slightly', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0'))]
idx: 15, example: - The Group -� s result before taxes was a loss of EUR 0.6 ( +0.6 ) million , prediction: 2, correct_label: 2, class_scores: [0.17357375 0.33637524 0.49005097], word_scores: ['-:4.821180027647642e-06', 'the:6.3806996877247e-06', 'group:0.0', '-:4.821180027647642e-06', 's:0.0', 'result:0.0', 'before:0.0', 'taxes:0.0', 'was:0.0', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '6:0.0', '(:0.0', '+:0.0', '0:0.0', '.:2.903296945078182e-06', '6:0.0', '):0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('-', tensor(0.1208, device='cuda:0')), ('the', tensor(0.1599, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('-', tensor(0.1208, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('a', tensor(0.2162, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0861, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0727, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0727, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1508, device='cuda:0'))],  word_scores_max: [('-', tensor(0.1208, device='cuda:0')), ('the', tensor(0.1599, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('-', tensor(0.1208, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('a', tensor(0.2162, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0861, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0727, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0727, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1508, device='cuda:0'))]
idx: 16, example: The EBRD is using its own funds to provide a 21.6 mln A loan while the B portion of 10 mln Euros has been syndicated to two Finnish commercial banks , Nordea Bank Finland Plc 7.7 mln Euros and Pohjola Bank Plc 2.3 mln Euros , prediction: 2, correct_label: 2, class_scores: [0.23737516 0.32447344 0.43815148], word_scores: ['the:6.3806996877247e-06', 'e:0.0', '##br:0.0', '##d:0.0', 'is:0.0', 'using:0.0', 'its:1.7191393908433383e-06', 'own:0.0', 'funds:0.0', 'to:2.886244146793615e-06', 'provide:0.0', 'a:8.62785782373976e-06', '21:0.0', '.:2.903296945078182e-06', 'a:8.62785782373976e-06', 'loan:0.0', 'while:0.0', 'the:6.3806996877247e-06', 'b:0.0', 'portion:0.0', 'of:3.4365734791208524e-06', '10:0.0', 'ml:0.0', '##n:0.0', 'euros:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'syndicated:0.0', 'to:2.886244146793615e-06', 'two:0.0', 'finnish:0.0', 'commercial:0.0', 'banks:0.0', ',:7.986737728060689e-06', 'nord:0.0', '##ea:0.0', 'bank:0.0', 'finland:4.096111752005527e-06', 'plc:0.0', '7:0.0', '.:2.903296945078182e-06', '7:0.0', 'ml:0.0', '##n:0.0', 'euros:0.0', 'and:0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'bank:0.0', 'plc:0.0', '2:0.0', '.:2.903296945078182e-06', '3:0.0', 'ml:0.0', '##n:0.0', 'euros:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('the', tensor(0.0943, device='cuda:0')), ('ebrd', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('using', tensor(0., device='cuda:0')), ('its', tensor(0.0254, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('to', tensor(0.0427, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('a', tensor(0.1275, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0429, device='cuda:0')), ('a', tensor(0.1275, device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('the', tensor(0.0943, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('portion', tensor(0., device='cuda:0')), ('of', tensor(0.0508, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('has', tensor(0.0875, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('syndicated', tensor(0., device='cuda:0')), ('to', tensor(0.0427, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('commercial', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), (',', tensor(0.1180, device='cuda:0')), ('nordea', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('finland', tensor(0.0605, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0429, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0429, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0943, device='cuda:0')), ('ebrd', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('using', tensor(0., device='cuda:0')), ('its', tensor(0.0254, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('to', tensor(0.0427, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('a', tensor(0.1275, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0429, device='cuda:0')), ('a', tensor(0.1275, device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('the', tensor(0.0943, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('portion', tensor(0., device='cuda:0')), ('of', tensor(0.0508, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('has', tensor(0.0875, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('syndicated', tensor(0., device='cuda:0')), ('to', tensor(0.0427, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('commercial', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), (',', tensor(0.1180, device='cuda:0')), ('nordea', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('finland', tensor(0.0605, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0429, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0429, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0'))]
idx: 17, example: The offer of some 30 million shares aimed to raise more than  x20ac 500 million US$ 640 million , was expected to be completed by Oct. 9 , Outokumpu said , prediction: 2, correct_label: 2, class_scores: [0.18948765 0.3466113  0.46390107], word_scores: ['the:6.3806996877247e-06', 'offer:0.0', 'of:3.4365734791208524e-06', 'some:0.0', '30:0.0', 'million:6.018835847498849e-06', 'shares:0.0', 'aimed:0.0', 'to:2.886244146793615e-06', 'raise:0.0', 'more:0.0', 'than:0.0', 'x:0.0', '##20:0.0', '##ac:0.0', '500:0.0', 'million:6.018835847498849e-06', 'us:0.0', '$:0.0', '640:0.0', 'million:6.018835847498849e-06', ',:7.986737728060689e-06', 'was:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'completed:0.0', 'by:0.0', 'oct:4.3818322410515975e-06', '.:2.903296945078182e-06', '9:0.0', ',:7.986737728060689e-06', 'out:0.0', '##oku:0.0', '##mp:0.0', '##u:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1121, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('of', tensor(0.0604, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('million', tensor(0.1058, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('to', tensor(0.0507, device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('million', tensor(0.1058, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('640', tensor(0., device='cuda:0')), ('million', tensor(0.1058, device='cuda:0')), (',', tensor(0.1404, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.0507, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('oct', tensor(0.0770, device='cuda:0')), ('.', tensor(0.0510, device='cuda:0')), ('9', tensor(0., device='cuda:0')), (',', tensor(0.1404, device='cuda:0')), ('outokumpu', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1121, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('of', tensor(0.0604, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('million', tensor(0.1058, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('to', tensor(0.0507, device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('million', tensor(0.1058, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('640', tensor(0., device='cuda:0')), ('million', tensor(0.1058, device='cuda:0')), (',', tensor(0.1404, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.0507, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('oct', tensor(0.0770, device='cuda:0')), ('.', tensor(0.0510, device='cuda:0')), ('9', tensor(0., device='cuda:0')), (',', tensor(0.1404, device='cuda:0')), ('outokumpu', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 18, example: - BEIJING XFN-ASIA - Hong Kong-listed Standard Chartered Bank said it has signed a China mobile phone dealer financing agreement with Nokia , making it the first foreign bank to offer financing to the country 's small and medium enterprise -L, prediction: 1, correct_label: 1, class_scores: [0.1638297  0.48626003 0.34991026], word_scores: ['-:4.821180027647642e-06', 'beijing:0.0', 'x:0.0', '##f:0.0', '##n:0.0', '-:4.821180027647642e-06', 'asia:0.0', '-:4.821180027647642e-06', 'hong:0.0', 'kong:0.0', '-:4.821180027647642e-06', 'listed:0.0', 'standard:0.0', 'chartered:0.0', 'bank:0.0', 'said:0.0', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'signed:0.0', 'a:8.62785782373976e-06', 'china:0.0', 'mobile:0.0', 'phone:0.0', 'dealer:0.0', 'financing:0.0', 'agreement:0.0', 'with:4.733654350275174e-06', 'nokia:0.0', ',:7.986737728060689e-06', 'making:0.0', 'it:3.3415778943890473e-06', 'the:6.3806996877247e-06', 'first:0.0', 'foreign:0.0', 'bank:0.0', 'to:2.886244146793615e-06', 'offer:0.0', 'financing:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'country:0.0', "':0.0", 's:0.0', 'small:0.0', 'and:0.0', 'medium:0.0', 'enterprise:0.0', '-:4.821180027647642e-06', 'l:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('-', tensor(0.0672, device='cuda:0')), ('beijing', tensor(0., device='cuda:0')), ('xfn', tensor(0., device='cuda:0')), ('-', tensor(0.0672, device='cuda:0')), ('asia', tensor(0., device='cuda:0')), ('-', tensor(0.0672, device='cuda:0')), ('hong', tensor(0., device='cuda:0')), ('kong', tensor(0., device='cuda:0')), ('-', tensor(0.0672, device='cuda:0')), ('listed', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0466, device='cuda:0')), ('has', tensor(0.0825, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1202, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('dealer', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('with', tensor(0.0660, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), (',', tensor(0.1113, device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('it', tensor(0.0466, device='cuda:0')), ('the', tensor(0.0889, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('foreign', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('to', tensor(0.0402, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('to', tensor(0.0402, device='cuda:0')), ('the', tensor(0.0889, device='cuda:0'))],  word_scores_max: [('-', tensor(0.0672, device='cuda:0')), ('beijing', tensor(0., device='cuda:0')), ('xfn', tensor(0., device='cuda:0')), ('-', tensor(0.0672, device='cuda:0')), ('asia', tensor(0., device='cuda:0')), ('-', tensor(0.0672, device='cuda:0')), ('hong', tensor(0., device='cuda:0')), ('kong', tensor(0., device='cuda:0')), ('-', tensor(0.0672, device='cuda:0')), ('listed', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0466, device='cuda:0')), ('has', tensor(0.0825, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1202, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('dealer', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('with', tensor(0.0660, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), (',', tensor(0.1113, device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('it', tensor(0.0466, device='cuda:0')), ('the', tensor(0.0889, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('foreign', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('to', tensor(0.0402, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('to', tensor(0.0402, device='cuda:0')), ('the', tensor(0.0889, device='cuda:0'))]
idx: 19, example: GSK announced in November 2008 that it would close its operations in Dartford , prediction: 2, correct_label: 0, class_scores: [0.16921498 0.3837467  0.44703826], word_scores: ['gs:0.0', '##k:0.0', 'announced:0.0', 'in:3.0217122457543155e-06', 'november:0.0', '2008:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'would:2.0953068542439723e-06', 'close:0.0', 'its:1.7191393908433383e-06', 'operations:0.0', 'in:3.0217122457543155e-06', 'dart:0.0', '##ford:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gsk', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('in', tensor(0.2054, device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('that', tensor(0.1029, device='cuda:0')), ('it', tensor(0.2271, device='cuda:0')), ('would', tensor(0.1424, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('its', tensor(0.1168, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.2054, device='cuda:0')), ('dartford', tensor(0., device='cuda:0'))],  word_scores_max: [('gsk', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('in', tensor(0.2054, device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('that', tensor(0.1029, device='cuda:0')), ('it', tensor(0.2271, device='cuda:0')), ('would', tensor(0.1424, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('its', tensor(0.1168, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.2054, device='cuda:0')), ('dartford', tensor(0., device='cuda:0'))]
idx: 20, example: We aim to ensure that Vacon is in good shape when capital expenditure starts to pick up again , '' comments Vacon Plc President and CEO Vesa Laisi , prediction: 2, correct_label: 1, class_scores: [0.21556853 0.2532552  0.53117627], word_scores: ['we:0.0', 'aim:0.0', 'to:2.886244146793615e-06', 'ensure:0.0', 'that:1.5133816759771435e-06', 'va:2.3812995095795486e-06', '##con:0.0', 'is:0.0', 'in:3.0217122457543155e-06', 'good:0.0', 'shape:0.0', 'when:0.0', 'capital:0.0', 'expenditure:0.0', 'starts:0.0', 'to:2.886244146793615e-06', 'pick:0.0', 'up:1.4959460941099678e-06', 'again:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'comments:0.0', 'va:2.3812995095795486e-06', '##con:0.0', 'plc:0.0', 'president:0.0', 'and:0.0', 'ceo:0.0', 've:0.0', '##sa:0.0', 'lai:0.0', '##si:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('aim', tensor(0., device='cuda:0')), ('to', tensor(0.1302, device='cuda:0')), ('ensure', tensor(0., device='cuda:0')), ('that', tensor(0.0683, device='cuda:0')), ('vacon', tensor(0.1074, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.1363, device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('shape', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('expenditure', tensor(0., device='cuda:0')), ('starts', tensor(0., device='cuda:0')), ('to', tensor(0.1302, device='cuda:0')), ('pick', tensor(0., device='cuda:0')), ('up', tensor(0.0675, device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.3602, device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('aim', tensor(0., device='cuda:0')), ('to', tensor(0.1302, device='cuda:0')), ('ensure', tensor(0., device='cuda:0')), ('that', tensor(0.0683, device='cuda:0')), ('vacon', tensor(0.1074, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.1363, device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('shape', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('expenditure', tensor(0., device='cuda:0')), ('starts', tensor(0., device='cuda:0')), ('to', tensor(0.1302, device='cuda:0')), ('pick', tensor(0., device='cuda:0')), ('up', tensor(0.0675, device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.3602, device='cuda:0'))]
idx: 21, example: Net sales rose by 25.5 % year-on-year to EUR59 .6 m , as the number of chargers delivered went up by 41 % to 65.9 million pieces , prediction: 2, correct_label: 1, class_scores: [0.23190331 0.3440452  0.42405146], word_scores: ['net:0.0', 'sales:0.0', 'rose:0.0', 'by:0.0', '25:0.0', '.:2.903296945078182e-06', '5:0.0', '%:0.0', 'year:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'year:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##59:0.0', '.:2.903296945078182e-06', '6:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'chargers:0.0', 'delivered:0.0', 'went:0.0', 'up:1.4959460941099678e-06', 'by:0.0', '41:0.0', '%:0.0', 'to:2.886244146793615e-06', '65:0.0', '.:2.903296945078182e-06', '9:0.0', 'million:6.018835847498849e-06', 'pieces:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('.', tensor(0.0587, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0975, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0975, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0584, device='cuda:0')), ('eur59', tensor(0., device='cuda:0')), ('.', tensor(0.0587, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1615, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1291, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0695, device='cuda:0')), ('chargers', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('up', tensor(0.0303, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('to', tensor(0.0584, device='cuda:0')), ('65', tensor(0., device='cuda:0')), ('.', tensor(0.0587, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1217, device='cuda:0')), ('pieces', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('.', tensor(0.0587, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0975, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0975, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0584, device='cuda:0')), ('eur59', tensor(0., device='cuda:0')), ('.', tensor(0.0587, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1615, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1291, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0695, device='cuda:0')), ('chargers', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('up', tensor(0.0303, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('to', tensor(0.0584, device='cuda:0')), ('65', tensor(0., device='cuda:0')), ('.', tensor(0.0587, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1217, device='cuda:0')), ('pieces', tensor(0., device='cuda:0'))]
idx: 22, example: Stora Enso has also had meetings with the labor authorities , Employment and Economic Development Centres and representatives of the government in order to find solutions , prediction: 2, correct_label: 2, class_scores: [0.2674852 0.3366844 0.3958304], word_scores: ['st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'has:5.9214244174654596e-06', 'also:0.0', 'had:0.0', 'meetings:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'labor:0.0', 'authorities:0.0', ',:7.986737728060689e-06', 'employment:0.0', 'and:0.0', 'economic:0.0', 'development:0.0', 'centres:0.0', 'and:0.0', 'representatives:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'government:0.0', 'in:3.0217122457543155e-06', 'order:0.0', 'to:2.886244146793615e-06', 'find:0.0', 'solutions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0500, device='cuda:0')), ('has', tensor(0.1381, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('meetings', tensor(0., device='cuda:0')), ('with', tensor(0.1104, device='cuda:0')), ('the', tensor(0.1488, device='cuda:0')), ('labor', tensor(0., device='cuda:0')), ('authorities', tensor(0., device='cuda:0')), (',', tensor(0.1862, device='cuda:0')), ('employment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('centres', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('representatives', tensor(0., device='cuda:0')), ('of', tensor(0.0801, device='cuda:0')), ('the', tensor(0.1488, device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('in', tensor(0.0704, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('to', tensor(0.0673, device='cuda:0')), ('find', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0'))],  word_scores_max: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0500, device='cuda:0')), ('has', tensor(0.1381, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('meetings', tensor(0., device='cuda:0')), ('with', tensor(0.1104, device='cuda:0')), ('the', tensor(0.1488, device='cuda:0')), ('labor', tensor(0., device='cuda:0')), ('authorities', tensor(0., device='cuda:0')), (',', tensor(0.1862, device='cuda:0')), ('employment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('centres', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('representatives', tensor(0., device='cuda:0')), ('of', tensor(0.0801, device='cuda:0')), ('the', tensor(0.1488, device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('in', tensor(0.0704, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('to', tensor(0.0673, device='cuda:0')), ('find', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0'))]
idx: 23, example: Finnish plumbing and heating systems supplier Uponor 's net sales in continuing business operations decreased to EUR 249.1 mn in July-September 2008 , compared to EUR 262.1 mn in the third quarter of 2007 , prediction: 2, correct_label: 0, class_scores: [0.20057783 0.3381986  0.46122363], word_scores: ['finnish:0.0', 'plumbing:0.0', 'and:0.0', 'heating:0.0', 'systems:0.0', 'supplier:0.0', 'upon:0.0', '##or:0.0', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', 'continuing:0.0', 'business:0.0', 'operations:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '249:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'july:0.0', '-:4.821180027647642e-06', 'september:0.0', '2008:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '262:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(nan, device='cuda:0')), ('plumbing', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('heating', tensor(nan, device='cuda:0')), ('systems', tensor(nan, device='cuda:0')), ('supplier', tensor(nan, device='cuda:0'))],  word_scores_max: [('finnish', tensor(nan, device='cuda:0')), ('plumbing', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('heating', tensor(nan, device='cuda:0')), ('systems', tensor(nan, device='cuda:0')), ('supplier', tensor(nan, device='cuda:0'))]
idx: 24, example: The terms of the financing were approved by the Annual General Meeting of the Company held on June 30 , 2010 , prediction: 2, correct_label: 1, class_scores: [0.26233786 0.33579335 0.40186876], word_scores: ['the:6.3806996877247e-06', 'terms:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'financing:0.0', 'were:0.0', 'approved:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'annual:0.0', 'general:0.0', 'meeting:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'held:0.0', 'on:0.0', 'june:0.0', '30:0.0', ',:7.986737728060689e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1355, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.0730, device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('approved', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('of', tensor(0.0730, device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('company', tensor(0.1422, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1696, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1355, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.0730, device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('approved', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('of', tensor(0.0730, device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('company', tensor(0.1422, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1696, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 25, example: The government started the sell-off last month , putting an 8 percent stake in TeliaSonera on the auction bloc , prediction: 2, correct_label: 2, class_scores: [0.17466587 0.29665488 0.5286792 ], word_scores: ['the:6.3806996877247e-06', 'government:0.0', 'started:0.0', 'the:6.3806996877247e-06', 'sell:0.0', '-:4.821180027647642e-06', 'off:0.0', 'last:0.0', 'month:0.0', ',:7.986737728060689e-06', 'putting:0.0', 'an:0.0', '8:0.0', 'percent:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'auction:0.0', 'bloc:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1825, device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('the', tensor(0.1825, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('-', tensor(0.1379, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0')), (',', tensor(0.2284, device='cuda:0')), ('putting', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0864, device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1825, device='cuda:0')), ('auction', tensor(0., device='cuda:0')), ('bloc', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1825, device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('the', tensor(0.1825, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('-', tensor(0.1379, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0')), (',', tensor(0.2284, device='cuda:0')), ('putting', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0864, device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1825, device='cuda:0')), ('auction', tensor(0., device='cuda:0')), ('bloc', tensor(0., device='cuda:0'))]
idx: 26, example: The issuer is solely responsible for the content of this announcement , prediction: 2, correct_label: 2, class_scores: [0.20748107 0.33872932 0.45378953], word_scores: ['the:6.3806996877247e-06', 'issue:0.0', '##r:0.0', 'is:0.0', 'solely:0.0', 'responsible:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'content:0.0', 'of:3.4365734791208524e-06', 'this:0.0', 'announcement:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('issuer', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('solely', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('content', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('issuer', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('solely', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('content', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0'))]
idx: 27, example: Finnish lifting equipment maker Konecranes HEL : KCR1V said on 29 July 2009 it has raised its stake in Austrian manipulator maker ACS Konecranes to 80 % and bought German sector player Knight Europe , prediction: 2, correct_label: 1, class_scores: [0.19854154 0.33347136 0.46798706], word_scores: ['finnish:0.0', 'lifting:0.0', 'equipment:0.0', 'maker:0.0', 'ko:5.9404255807748996e-06', '##ne:8.183636964531615e-06', '##cr:6.230764483916573e-06', '##ane:6.42778195469873e-06', '##s:4.601175078278175e-06', 'he:0.0', '##l:0.0', '::0.0', 'kc:0.0', '##r:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'on:0.0', '29:0.0', 'july:0.0', '2009:0.0', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'raised:0.0', 'its:1.7191393908433383e-06', 'stake:0.0', 'in:3.0217122457543155e-06', 'austrian:0.0', 'mani:0.0', '##pu:0.0', '##lat:0.0', '##or:0.0', 'maker:0.0', 'ac:0.0', '##s:4.601175078278175e-06', 'ko:5.9404255807748996e-06', '##ne:8.183636964531615e-06', '##cr:6.230764483916573e-06', '##ane:6.42778195469873e-06', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', '80:0.0', '%:0.0', 'and:0.0', 'bought:0.0', 'german:0.0', 'sector:0.0', 'player:0.0', 'knight:0.0', 'europe:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('lifting', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('konecranes', tensor(0.2461, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('kcr1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('it', tensor(0.1005, device='cuda:0')), ('has', tensor(0.1780, device='cuda:0')), ('raised', tensor(0., device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0909, device='cuda:0')), ('austrian', tensor(0., device='cuda:0')), ('manipulator', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('acs', tensor(0., device='cuda:0')), ('konecranes', tensor(0.2461, device='cuda:0')), ('to', tensor(0.0868, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('german', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('player', tensor(0., device='cuda:0')), ('knight', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('lifting', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('konecranes', tensor(0.3801, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('kcr1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('it', tensor(0.0474, device='cuda:0')), ('has', tensor(0.0840, device='cuda:0')), ('raised', tensor(0., device='cuda:0')), ('its', tensor(0.0244, device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0429, device='cuda:0')), ('austrian', tensor(0., device='cuda:0')), ('manipulator', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('acs', tensor(0., device='cuda:0')), ('konecranes', tensor(0.3801, device='cuda:0')), ('to', tensor(0.0410, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('german', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('player', tensor(0., device='cuda:0')), ('knight', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0'))]
idx: 28, example: After the renovation the biggest moulding line in the Orhangazi foundry is the most modern line in Europe , prediction: 2, correct_label: 1, class_scores: [0.19997807 0.33041498 0.4696069 ], word_scores: ['after:0.0', 'the:6.3806996877247e-06', 'renovation:0.0', 'the:6.3806996877247e-06', 'biggest:0.0', 'mo:0.0', '##uld:0.0', '##ing:0.0', 'line:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'or:0.0', '##hang:0.0', '##azi:0.0', 'foundry:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'most:0.0', 'modern:0.0', 'line:0.0', 'in:3.0217122457543155e-06', 'europe:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('renovation', tensor(0., device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('biggest', tensor(0., device='cuda:0')), ('moulding', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('in', tensor(0.0957, device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('orhangazi', tensor(0., device='cuda:0')), ('foundry', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('in', tensor(0.0957, device='cuda:0')), ('europe', tensor(0., device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('renovation', tensor(0., device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('biggest', tensor(0., device='cuda:0')), ('moulding', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('in', tensor(0.0957, device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('orhangazi', tensor(0., device='cuda:0')), ('foundry', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2021, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('in', tensor(0.0957, device='cuda:0')), ('europe', tensor(0., device='cuda:0'))]
idx: 29, example: Metso estimates the need for personnel reductions to amount to 25 people , prediction: 2, correct_label: 0, class_scores: [0.1769404  0.33574268 0.48731697], word_scores: ['mets:0.0', '##o:0.0', 'estimates:0.0', 'the:6.3806996877247e-06', 'need:0.0', 'for:0.0', 'personnel:0.0', 'reductions:0.0', 'to:2.886244146793615e-06', 'amount:0.0', 'to:2.886244146793615e-06', '25:0.0', 'people:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('metso', tensor(0., device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('the', tensor(0.5250, device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('to', tensor(0.2375, device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('to', tensor(0.2375, device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))],  word_scores_max: [('metso', tensor(0., device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('the', tensor(0.5250, device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('to', tensor(0.2375, device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('to', tensor(0.2375, device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))]
idx: 30, example: The Group 's business is balanced by its broad portfolio of sports and presence in all major markets , prediction: 2, correct_label: 1, class_scores: [0.2231696  0.2729814  0.50384897], word_scores: ['the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'business:0.0', 'is:0.0', 'balanced:0.0', 'by:0.0', 'its:1.7191393908433383e-06', 'broad:0.0', 'portfolio:0.0', 'of:3.4365734791208524e-06', 'sports:0.0', 'and:0.0', 'presence:0.0', 'in:3.0217122457543155e-06', 'all:0.0', 'major:0.0', 'markets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 31, example: The add-on order contains , among others , control valves and instrumentation as well as complete mill engineering and electrification with Metso drive controls , prediction: 2, correct_label: 2, class_scores: [0.1647943  0.32126388 0.5139418 ], word_scores: ['the:6.3806996877247e-06', 'add:0.0', '-:4.821180027647642e-06', 'on:0.0', 'order:0.0', 'contains:0.0', ',:7.986737728060689e-06', 'among:0.0', 'others:0.0', ',:7.986737728060689e-06', 'control:0.0', 'valves:0.0', 'and:0.0', 'instrumentation:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'complete:0.0', 'mill:2.6564571271592285e-06', 'engineering:0.0', 'and:0.0', 'electrification:0.0', 'with:4.733654350275174e-06', 'mets:0.0', '##o:0.0', 'drive:0.0', 'controls:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1846, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('-', tensor(0.1395, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('contains', tensor(0., device='cuda:0')), (',', tensor(0.2311, device='cuda:0')), ('among', tensor(0., device='cuda:0')), ('others', tensor(0., device='cuda:0')), (',', tensor(0.2311, device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('valves', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('instrumentation', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('complete', tensor(0., device='cuda:0')), ('mill', tensor(0.0769, device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('electrification', tensor(0., device='cuda:0')), ('with', tensor(0.1369, device='cuda:0')), ('metso', tensor(0., device='cuda:0')), ('drive', tensor(0., device='cuda:0')), ('controls', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1846, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('-', tensor(0.1395, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('contains', tensor(0., device='cuda:0')), (',', tensor(0.2311, device='cuda:0')), ('among', tensor(0., device='cuda:0')), ('others', tensor(0., device='cuda:0')), (',', tensor(0.2311, device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('valves', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('instrumentation', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('complete', tensor(0., device='cuda:0')), ('mill', tensor(0.0769, device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('electrification', tensor(0., device='cuda:0')), ('with', tensor(0.1369, device='cuda:0')), ('metso', tensor(0., device='cuda:0')), ('drive', tensor(0., device='cuda:0')), ('controls', tensor(0., device='cuda:0'))]
idx: 32, example: The new policy was also aimed at making the companies more profitable and competitive , prediction: 1, correct_label: 1, class_scores: [0.17514656 0.41812614 0.40672725], word_scores: ['the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'policy:0.0', 'was:0.0', 'also:0.0', 'aimed:0.0', 'at:0.0', 'making:0.0', 'the:6.3806996877247e-06', 'companies:0.0', 'more:0.0', 'profitable:0.0', 'and:0.0', 'competitive:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4101, device='cuda:0')), ('new', tensor(0.1799, device='cuda:0')), ('policy', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('the', tensor(0.4101, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('competitive', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4101, device='cuda:0')), ('new', tensor(0.1799, device='cuda:0')), ('policy', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('the', tensor(0.4101, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('competitive', tensor(0., device='cuda:0'))]
idx: 33, example: The Swedish player became majority owner of UCell in mid-2007 , prediction: 2, correct_label: 2, class_scores: [0.2383401 0.2341147 0.5275452], word_scores: ['the:6.3806996877247e-06', 'swedish:0.0', 'player:0.0', 'became:0.0', 'majority:0.0', 'owner:5.6893281907832716e-06', 'of:3.4365734791208524e-06', 'uc:0.0', '##ell:0.0', 'in:3.0217122457543155e-06', 'mid:0.0', '-:4.821180027647642e-06', '2007:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2733, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('player', tensor(0., device='cuda:0')), ('became', tensor(0., device='cuda:0')), ('majority', tensor(0., device='cuda:0')), ('owner', tensor(0.2437, device='cuda:0')), ('of', tensor(0.1472, device='cuda:0')), ('ucell', tensor(0., device='cuda:0')), ('in', tensor(0.1294, device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.2065, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2733, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('player', tensor(0., device='cuda:0')), ('became', tensor(0., device='cuda:0')), ('majority', tensor(0., device='cuda:0')), ('owner', tensor(0.2437, device='cuda:0')), ('of', tensor(0.1472, device='cuda:0')), ('ucell', tensor(0., device='cuda:0')), ('in', tensor(0.1294, device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.2065, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 34, example: The project is expected to be completed in 2009 , prediction: 2, correct_label: 2, class_scores: [0.16791472 0.37501642 0.45706883], word_scores: ['the:6.3806996877247e-06', 'project:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'completed:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.5192, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.2349, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.2459, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5192, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.2349, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.2459, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 35, example: The completion of the recycling plant is an important link in the chain of creating a waste management system in the Dubna region that meets the EU standards , prediction: 2, correct_label: 1, class_scores: [0.25906932 0.3423683  0.3985624 ], word_scores: ['the:6.3806996877247e-06', 'completion:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'recycling:0.0', 'plant:0.0', 'is:0.0', 'an:0.0', 'important:0.0', 'link:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'chain:0.0', 'of:3.4365734791208524e-06', 'creating:0.0', 'a:8.62785782373976e-06', 'waste:0.0', 'management:0.0', 'system:2.472523192409426e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'dub:0.0', '##na:0.0', 'region:0.0', 'that:1.5133816759771435e-06', 'meets:0.0', 'the:6.3806996877247e-06', 'eu:0.0', 'standards:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1111, device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('of', tensor(0.0598, device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('recycling', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('link', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('of', tensor(0.0598, device='cuda:0')), ('creating', tensor(0., device='cuda:0')), ('a', tensor(0.1502, device='cuda:0')), ('waste', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('system', tensor(0.0430, device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('dubna', tensor(0., device='cuda:0')), ('region', tensor(0., device='cuda:0')), ('that', tensor(0.0264, device='cuda:0')), ('meets', tensor(0., device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('standards', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1111, device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('of', tensor(0.0598, device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('recycling', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('link', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('of', tensor(0.0598, device='cuda:0')), ('creating', tensor(0., device='cuda:0')), ('a', tensor(0.1502, device='cuda:0')), ('waste', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('system', tensor(0.0430, device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('dubna', tensor(0., device='cuda:0')), ('region', tensor(0., device='cuda:0')), ('that', tensor(0.0264, device='cuda:0')), ('meets', tensor(0., device='cuda:0')), ('the', tensor(0.1111, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('standards', tensor(0., device='cuda:0'))]
idx: 36, example: ( ADPnews ) - Dec 1 , 2009 - Finnish cutlery and hand tools maker Fiskars Oyj Abp ( HEL : FISAS ) said today that it will make redundant a total of 18 office and management staff members of its subsidiary Iittala Group Ltd. , prediction: 1, correct_label: 0, class_scores: [0.17166562 0.42945886 0.3988755 ], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', '##ne:8.183636964531615e-06', '##ws:0.0', '):0.0', '-:4.821180027647642e-06', 'dec:0.0', '1:0.0', ',:7.986737728060689e-06', '2009:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'cutler:0.0', 'and:0.0', 'hand:0.0', 'tools:0.0', 'maker:0.0', 'fis:0.0', '##kar:0.0', '##s:4.601175078278175e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'ab:0.0', '##p:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'fis:0.0', '##as:0.0', '):0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'make:0.0', 'redundant:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', '18:0.0', 'office:0.0', 'and:0.0', 'management:0.0', 'staff:0.0', 'members:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'subsidiary:0.0', 'ii:0.0', '##ttal:0.0', '##a:3.804580501309829e-06', 'group:0.0', 'ltd:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adpnews', tensor(0.1443, device='cuda:0')), ('-', tensor(0.0850, device='cuda:0')), ('dec', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1409, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0850, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('cutler', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hand', tensor(0., device='cuda:0')), ('tools', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('oyj', tensor(0.0323, device='cuda:0')), ('abp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fisas', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0267, device='cuda:0')), ('it', tensor(0.0589, device='cuda:0')), ('will', tensor(0.0718, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('redundant', tensor(0., device='cuda:0')), ('a', tensor(0.1522, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0606, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0')), ('of', tensor(0.0606, device='cuda:0')), ('its', tensor(0.0303, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('iittala', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0512, device='cuda:0'))],  word_scores_max: [('adpnews', tensor(0.1443, device='cuda:0')), ('-', tensor(0.0850, device='cuda:0')), ('dec', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1409, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0850, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('cutler', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hand', tensor(0., device='cuda:0')), ('tools', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('oyj', tensor(0.0323, device='cuda:0')), ('abp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fisas', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0267, device='cuda:0')), ('it', tensor(0.0589, device='cuda:0')), ('will', tensor(0.0718, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('redundant', tensor(0., device='cuda:0')), ('a', tensor(0.1522, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0606, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0')), ('of', tensor(0.0606, device='cuda:0')), ('its', tensor(0.0303, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('iittala', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0512, device='cuda:0'))]
idx: 37, example: The company specialises in temporary electrification and heating at construction sites , prediction: 2, correct_label: 2, class_scores: [0.2067852  0.29479617 0.4984187 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'special:0.0', '##ises:0.0', 'in:3.0217122457543155e-06', 'temporary:0.0', 'electrification:0.0', 'and:0.0', 'heating:0.0', 'at:0.0', 'construction:0.0', 'sites:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3964, device='cuda:0')), ('company', tensor(0.4159, device='cuda:0')), ('specialises', tensor(0., device='cuda:0')), ('in', tensor(0.1877, device='cuda:0')), ('temporary', tensor(0., device='cuda:0')), ('electrification', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('heating', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('sites', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3964, device='cuda:0')), ('company', tensor(0.4159, device='cuda:0')), ('specialises', tensor(0., device='cuda:0')), ('in', tensor(0.1877, device='cuda:0')), ('temporary', tensor(0., device='cuda:0')), ('electrification', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('heating', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('sites', tensor(0., device='cuda:0'))]
idx: 38, example: Sanoma Corporation wants a new and better frequency for the Helsinki metropolitan area , prediction: 2, correct_label: 2, class_scores: [0.15968983 0.34104377 0.4992664 ], word_scores: ['san:0.0', '##oma:0.0', 'corporation:0.0', 'wants:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'and:0.0', 'better:0.0', 'frequency:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'helsinki:0.0', 'metropolitan:0.0', 'area:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sanoma', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('a', tensor(0.4845, device='cuda:0')), ('new', tensor(0.1572, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('better', tensor(0., device='cuda:0')), ('frequency', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3583, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('metropolitan', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0'))],  word_scores_max: [('sanoma', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('a', tensor(0.4845, device='cuda:0')), ('new', tensor(0.1572, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('better', tensor(0., device='cuda:0')), ('frequency', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3583, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('metropolitan', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0'))]
idx: 39, example: Via the Satlan acquisition , Teleste plans to further expand its market presence as a video services partner for cable operators , broadcasters and IPTV service providers , prediction: 2, correct_label: 1, class_scores: [0.19189976 0.38408354 0.42401674], word_scores: ['via:0.0', 'the:6.3806996877247e-06', 'sat:0.0', '##lan:0.0', 'acquisition:0.0', ',:7.986737728060689e-06', 'tel:0.0', '##est:0.0', '##e:0.0', 'plans:0.0', 'to:2.886244146793615e-06', 'further:0.0', 'expand:0.0', 'its:1.7191393908433383e-06', 'market:0.0', 'presence:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'video:0.0', 'services:0.0', 'partner:0.0', 'for:0.0', 'cable:0.0', 'operators:0.0', ',:7.986737728060689e-06', 'broadcasters:0.0', 'and:0.0', 'ip:0.0', '##tv:0.0', 'service:0.0', 'providers:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('via', tensor(0., device='cuda:0')), ('the', tensor(0.1793, device='cuda:0')), ('satlan', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), (',', tensor(0.2244, device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.0811, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('expand', tensor(0., device='cuda:0')), ('its', tensor(0.0483, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('presence', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.2424, device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('partner', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('cable', tensor(0., device='cuda:0')), ('operators', tensor(0., device='cuda:0')), (',', tensor(0.2244, device='cuda:0')), ('broadcasters', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('iptv', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('providers', tensor(0., device='cuda:0'))],  word_scores_max: [('via', tensor(0., device='cuda:0')), ('the', tensor(0.1793, device='cuda:0')), ('satlan', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), (',', tensor(0.2244, device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.0811, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('expand', tensor(0., device='cuda:0')), ('its', tensor(0.0483, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('presence', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.2424, device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('partner', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('cable', tensor(0., device='cuda:0')), ('operators', tensor(0., device='cuda:0')), (',', tensor(0.2244, device='cuda:0')), ('broadcasters', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('iptv', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('providers', tensor(0., device='cuda:0'))]
idx: 40, example: Finnish IT solutions provider Affecto Oyj HEL : AFE1V said today its slipped to a net loss of EUR 115,000 USD 152,000 in the second quarter of 2010 from a profit of EUR 845,000 in the corresponding period a year earlier , prediction: 2, correct_label: 0, class_scores: [0.17278087 0.36365327 0.46356586], word_scores: ['finnish:0.0', 'it:3.3415778943890473e-06', 'solutions:0.0', 'provider:0.0', 'affect:0.0', '##o:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'af:0.0', '##e:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'slipped:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'net:0.0', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '115:0.0', ',:7.986737728060689e-06', '000:0.0', 'usd:0.0', '152:0.0', ',:7.986737728060689e-06', '000:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'a:8.62785782373976e-06', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '84:0.0', '##5:0.0', ',:7.986737728060689e-06', '000:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('it', tensor(0.0358, device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('affecto', tensor(0., device='cuda:0')), ('oyj', tensor(0.0197, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('afe1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0184, device='cuda:0')), ('slipped', tensor(0., device='cuda:0')), ('to', tensor(0.0310, device='cuda:0')), ('a', tensor(0.0925, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('115', tensor(0., device='cuda:0')), (',', tensor(0.0857, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('152', tensor(0., device='cuda:0')), (',', tensor(0.0857, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0684, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0482, device='cuda:0')), ('a', tensor(0.0925, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('845', tensor(0., device='cuda:0')), (',', tensor(0.0857, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0684, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.0925, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('it', tensor(0.0358, device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('affecto', tensor(0., device='cuda:0')), ('oyj', tensor(0.0197, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('afe1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0184, device='cuda:0')), ('slipped', tensor(0., device='cuda:0')), ('to', tensor(0.0310, device='cuda:0')), ('a', tensor(0.0925, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('115', tensor(0., device='cuda:0')), (',', tensor(0.0857, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('152', tensor(0., device='cuda:0')), (',', tensor(0.0857, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0684, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0482, device='cuda:0')), ('a', tensor(0.0925, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('845', tensor(0., device='cuda:0')), (',', tensor(0.0857, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0684, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.0925, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 41, example: 17 March 2011 - Goldman Sachs estimates that there are negative prospects for the Norwegian mobile operations of Norway 's Telenor ASA OSL : TEL and Sweden 's TeliaSonera AB STO : TLSN in the short term , prediction: 2, correct_label: 0, class_scores: [0.19319233 0.36691514 0.43989253], word_scores: ['17:0.0', 'march:0.0', '2011:0.0', '-:4.821180027647642e-06', 'goldman:0.0', 'sachs:0.0', 'estimates:0.0', 'that:1.5133816759771435e-06', 'there:0.0', 'are:0.0', 'negative:0.0', 'prospects:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'norwegian:0.0', 'mobile:0.0', 'operations:0.0', 'of:3.4365734791208524e-06', 'norway:0.0', "':0.0", 's:0.0', 'tel:0.0', '##eno:0.0', '##r:0.0', 'asa:0.0', 'os:0.0', '##l:0.0', '::0.0', 'tel:0.0', 'and:0.0', 'sweden:0.0', "':0.0", 's:0.0', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'ab:0.0', 'st:0.0', '##o:0.0', '::0.0', 't:0.0', '##ls:0.0', '##n:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'short:0.0', 'term:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('17', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('-', tensor(0.2985, device='cuda:0')), ('goldman', tensor(0., device='cuda:0')), ('sachs', tensor(0., device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('that', tensor(0.0937, device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('negative', tensor(0., device='cuda:0')), ('prospects', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3950, device='cuda:0')), ('norwegian', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('of', tensor(0.2128, device='cuda:0'))],  word_scores_max: [('17', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('-', tensor(0.2985, device='cuda:0')), ('goldman', tensor(0., device='cuda:0')), ('sachs', tensor(0., device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('that', tensor(0.0937, device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('negative', tensor(0., device='cuda:0')), ('prospects', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3950, device='cuda:0')), ('norwegian', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('of', tensor(0.2128, device='cuda:0'))]
idx: 42, example: However , the broker gave an `` outperform '' recommendation on the stock , prediction: 1, correct_label: 1, class_scores: [0.14120807 0.4537423  0.40504965], word_scores: ['however:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'broker:0.0', 'gave:0.0', 'an:0.0', '`:0.0', '`:0.0', 'out:0.0', '##per:0.0', '##form:0.0', "':0.0", "':0.0", 'recommendation:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'stock:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('however', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('broker', tensor(0., device='cuda:0')), ('gave', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0'))],  word_scores_max: [('however', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('broker', tensor(0., device='cuda:0')), ('gave', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0'))]
idx: 43, example: Additionally , the company will use the solutions to automate the preparation of financial statements according to IFRS standard , prediction: 2, correct_label: 2, class_scores: [0.242745   0.37084806 0.38640693], word_scores: ['additionally:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'use:0.0', 'the:6.3806996877247e-06', 'solutions:0.0', 'to:2.886244146793615e-06', 'auto:0.0', '##mate:0.0', 'the:6.3806996877247e-06', 'preparation:0.0', 'of:3.4365734791208524e-06', 'financial:0.0', 'statements:0.0', 'according:0.0', 'to:2.886244146793615e-06', 'if:0.0', '##rs:0.0', 'standard:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('additionally', tensor(0., device='cuda:0')), (',', tensor(0.1695, device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('company', tensor(0.1421, device='cuda:0')), ('will', tensor(0.0865, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('to', tensor(0.0613, device='cuda:0')), ('automate', tensor(0., device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('preparation', tensor(0., device='cuda:0')), ('of', tensor(0.0730, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('statements', tensor(0., device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0613, device='cuda:0')), ('ifrs', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0'))],  word_scores_max: [('additionally', tensor(0., device='cuda:0')), (',', tensor(0.1695, device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('company', tensor(0.1421, device='cuda:0')), ('will', tensor(0.0865, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('to', tensor(0.0613, device='cuda:0')), ('automate', tensor(0., device='cuda:0')), ('the', tensor(0.1355, device='cuda:0')), ('preparation', tensor(0., device='cuda:0')), ('of', tensor(0.0730, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('statements', tensor(0., device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0613, device='cuda:0')), ('ifrs', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0'))]
idx: 44, example: A total of 15,000 new Citycon shares with a nominal value of EUR 1.35 per share were subscribed between 17 and 23 March 2006 exercising the A-B-C options based on the company 's stock option plan 1999 , prediction: 2, correct_label: 2, class_scores: [0.20739746 0.33193263 0.46066985], word_scores: ['a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', '15:0.0', ',:7.986737728060689e-06', '000:0.0', 'new:2.798587502184091e-06', 'city:0.0', '##con:0.0', 'shares:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'nominal:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '35:0.0', 'per:0.0', 'share:0.0', 'were:0.0', 'sub:0.0', '##scribe:0.0', '##d:0.0', 'between:0.0', '17:0.0', 'and:0.0', '23:3.2229838780040154e-06', 'march:0.0', '2006:0.0', 'exercising:0.0', 'the:6.3806996877247e-06', 'a:8.62785782373976e-06', '-:4.821180027647642e-06', 'b:0.0', '-:4.821180027647642e-06', 'c:0.0', 'options:0.0', 'based:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'stock:0.0', 'option:0.0', 'plan:0.0', '1999:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1123, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('15', tensor(0., device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('new', tensor(0.0364, device='cuda:0')), ('citycon', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('with', tensor(0.0616, device='cuda:0')), ('a', tensor(0.1123, device='cuda:0')), ('nominal', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0378, device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('23', tensor(0.0420, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('exercising', tensor(0., device='cuda:0')), ('the', tensor(0.0831, device='cuda:0')), ('a', tensor(0.1123, device='cuda:0')), ('-', tensor(0.0628, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('-', tensor(0.0628, device='cuda:0')), ('c', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0831, device='cuda:0'))],  word_scores_max: [('a', tensor(0.1123, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('15', tensor(0., device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('new', tensor(0.0364, device='cuda:0')), ('citycon', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('with', tensor(0.0616, device='cuda:0')), ('a', tensor(0.1123, device='cuda:0')), ('nominal', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0378, device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('23', tensor(0.0420, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('exercising', tensor(0., device='cuda:0')), ('the', tensor(0.0831, device='cuda:0')), ('a', tensor(0.1123, device='cuda:0')), ('-', tensor(0.0628, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('-', tensor(0.0628, device='cuda:0')), ('c', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0831, device='cuda:0'))]
idx: 45, example: Luna took fifth place on six-under 207 , a shot behind Spain 's Beatriz Recari and Germany 's Martina Eberl , while Welsh player Becky Brewerton was the highest-placed British finisher , sharing seventh place on three-under 210 after shooting 71 , prediction: 1, correct_label: 2, class_scores: [0.20140728 0.48767075 0.310922  ], word_scores: ['luna:0.0', 'took:0.0', 'fifth:0.0', 'place:0.0', 'on:0.0', 'six:0.0', '-:4.821180027647642e-06', 'under:0.0', '207:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'shot:0.0', 'behind:0.0', 'spain:0.0', "':0.0", 's:0.0', 'beat:0.0', '##riz:0.0', 'rec:0.0', '##ari:0.0', 'and:0.0', 'germany:0.0', "':0.0", 's:0.0', 'martina:0.0', 'e:0.0', '##ber:0.0', '##l:0.0', ',:7.986737728060689e-06', 'while:0.0', 'welsh:0.0', 'player:0.0', 'becky:0.0', 'brewer:0.0', '##ton:0.0', 'was:0.0', 'the:6.3806996877247e-06', 'highest:0.0', '-:4.821180027647642e-06', 'placed:0.0', 'british:0.0', 'finish:0.0', '##er:0.0', ',:7.986737728060689e-06', 'sharing:0.0', 'seventh:0.0', 'place:0.0', 'on:0.0', 'three:0.0', '-:4.821180027647642e-06', 'under:0.0', '210:0.0', 'after:0.0', 'shooting:0.0', '71:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('luna', tensor(0., device='cuda:0')), ('took', tensor(0., device='cuda:0')), ('fifth', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('-', tensor(0.2249, device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('207', tensor(0., device='cuda:0')), (',', tensor(0.3726, device='cuda:0')), ('a', tensor(0.4025, device='cuda:0')), ('shot', tensor(0., device='cuda:0')), ('behind', tensor(0., device='cuda:0'))],  word_scores_max: [('luna', tensor(0., device='cuda:0')), ('took', tensor(0., device='cuda:0')), ('fifth', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('-', tensor(0.2249, device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('207', tensor(0., device='cuda:0')), (',', tensor(0.3726, device='cuda:0')), ('a', tensor(0.4025, device='cuda:0')), ('shot', tensor(0., device='cuda:0')), ('behind', tensor(0., device='cuda:0'))]
idx: 46, example: First quarter underlying operating profit rose to 41 mln eur from 33 mln a year earlier , prediction: 2, correct_label: 1, class_scores: [0.22502226 0.31413457 0.46084315], word_scores: ['first:0.0', 'quarter:0.0', 'underlying:0.0', 'operating:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', '41:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', 'from:4.495178018260049e-06', '33:0.0', 'ml:0.0', '##n:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('underlying', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.1803, device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('from', tensor(0.2808, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('a', tensor(0.5389, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('underlying', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.1803, device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('from', tensor(0.2808, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('a', tensor(0.5389, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 47, example: Operating profit for continuing operations fell to EUR 48.3 mn from EUR 72.4 mn in the first half of 2007 , prediction: 2, correct_label: 0, class_scores: [0.2722141  0.2977685  0.43001744], word_scores: ['operating:0.0', 'profit:0.0', 'for:0.0', 'continuing:0.0', 'operations:0.0', 'fell:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '48:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '72:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('continuing', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('to', tensor(0.1109, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1727, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('72', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1161, device='cuda:0')), ('the', tensor(0.2452, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.1320, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('continuing', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('to', tensor(0.1109, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1727, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('72', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1161, device='cuda:0')), ('the', tensor(0.2452, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.1320, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 48, example: fi is developing cooperation in keyword advertising with Microsoft , prediction: 1, correct_label: 1, class_scores: [0.19289489 0.4215847  0.38552046], word_scores: ['fi:0.0', 'is:0.0', 'developing:0.0', 'cooperation:0.0', 'in:3.0217122457543155e-06', 'key:0.0', '##word:0.0', 'advertising:0.0', 'with:4.733654350275174e-06', 'microsoft:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fi', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('in', tensor(0.3896, device='cuda:0')), ('keyword', tensor(0., device='cuda:0')), ('advertising', tensor(0., device='cuda:0')), ('with', tensor(0.6104, device='cuda:0')), ('microsoft', tensor(0., device='cuda:0'))],  word_scores_max: [('fi', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('in', tensor(0.3896, device='cuda:0')), ('keyword', tensor(0., device='cuda:0')), ('advertising', tensor(0., device='cuda:0')), ('with', tensor(0.6104, device='cuda:0')), ('microsoft', tensor(0., device='cuda:0'))]
idx: 49, example: The company can be split into two parts over the coming months , with Essent owning and operating production and supply , and Enexis owning and operating the grid , prediction: 2, correct_label: 2, class_scores: [0.24366625 0.29928827 0.45704547], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'can:0.0', 'be:0.0', 'split:0.0', 'into:0.0', 'two:0.0', 'parts:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'coming:0.0', 'months:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'essen:0.0', '##t:0.0', 'owning:0.0', 'and:0.0', 'operating:0.0', 'production:0.0', 'and:0.0', 'supply:6.221108833415201e-06', ',:7.986737728060689e-06', 'and:0.0', 'en:2.1442599518195493e-06', '##ex:0.0', '##is:0.0', 'owning:0.0', 'and:0.0', 'operating:0.0', 'the:6.3806996877247e-06', 'grid:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1162, device='cuda:0')), ('company', tensor(0.1219, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('split', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('with', tensor(0.0862, device='cuda:0')), ('essent', tensor(0., device='cuda:0')), ('owning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('supply', tensor(0.1133, device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('enexis', tensor(0.0391, device='cuda:0')), ('owning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('grid', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1162, device='cuda:0')), ('company', tensor(0.1219, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('split', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('with', tensor(0.0862, device='cuda:0')), ('essent', tensor(0., device='cuda:0')), ('owning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('supply', tensor(0.1133, device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('enexis', tensor(0.0391, device='cuda:0')), ('owning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('grid', tensor(0., device='cuda:0'))]
idx: 50, example: TeliaSonera said about $ 100 million will be invested in the next year in the region to bring mobile coverage to about 90 % of Nepal s population , prediction: 2, correct_label: 1, class_scores: [0.19609289 0.35212132 0.45178577], word_scores: ['tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'said:0.0', 'about:0.0', '$:0.0', '100:0.0', 'million:6.018835847498849e-06', 'will:4.073096533829812e-06', 'be:0.0', 'invested:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'next:0.0', 'year:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'region:0.0', 'to:2.886244146793615e-06', 'bring:0.0', 'mobile:0.0', 'coverage:0.0', 'to:2.886244146793615e-06', 'about:0.0', '90:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'nepal:0.0', 's:0.0', 'population:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('teliasonera', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('million', tensor(0.1580, device='cuda:0')), ('will', tensor(0.1069, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('in', tensor(0.0793, device='cuda:0')), ('the', tensor(0.1674, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('in', tensor(0.0793, device='cuda:0')), ('the', tensor(0.1674, device='cuda:0')), ('region', tensor(0., device='cuda:0')), ('to', tensor(0.0757, device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('coverage', tensor(0., device='cuda:0')), ('to', tensor(0.0757, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('of', tensor(0.0902, device='cuda:0')), ('nepal', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('population', tensor(0., device='cuda:0'))],  word_scores_max: [('teliasonera', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('million', tensor(0.1580, device='cuda:0')), ('will', tensor(0.1069, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('in', tensor(0.0793, device='cuda:0')), ('the', tensor(0.1674, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('in', tensor(0.0793, device='cuda:0')), ('the', tensor(0.1674, device='cuda:0')), ('region', tensor(0., device='cuda:0')), ('to', tensor(0.0757, device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('coverage', tensor(0., device='cuda:0')), ('to', tensor(0.0757, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('of', tensor(0.0902, device='cuda:0')), ('nepal', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('population', tensor(0., device='cuda:0'))]
idx: 51, example: In beers , Olvi retained its market position , prediction: 1, correct_label: 2, class_scores: [0.20621292 0.45667782 0.33710927], word_scores: ['in:3.0217122457543155e-06', 'beers:0.0', ',:7.986737728060689e-06', 'ol:0.0', '##vi:0.0', 'retained:0.0', 'its:1.7191393908433383e-06', 'market:0.0', 'position:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.2374, device='cuda:0')), ('beers', tensor(0., device='cuda:0')), (',', tensor(0.6275, device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), ('retained', tensor(0., device='cuda:0')), ('its', tensor(0.1351, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.2374, device='cuda:0')), ('beers', tensor(0., device='cuda:0')), (',', tensor(0.6275, device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), ('retained', tensor(0., device='cuda:0')), ('its', tensor(0.1351, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0'))]
idx: 52, example: Raisio 's malting capacity was in full use in 2008 , prediction: 2, correct_label: 1, class_scores: [0.21916713 0.3638001  0.4170328 ], word_scores: ['rai:0.0', '##sio:0.0', "':0.0", 's:0.0', 'mal:0.0', '##ting:0.0', 'capacity:0.0', 'was:0.0', 'in:3.0217122457543155e-06', 'full:3.0938992949813837e-06', 'use:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 53, example: An appeal concerning the project has been lodged at the Czech Ministry of the Environment , prediction: 2, correct_label: 2, class_scores: [0.16064624 0.38240924 0.45694456], word_scores: ['an:0.0', 'appeal:0.0', 'concerning:0.0', 'the:6.3806996877247e-06', 'project:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'lodged:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'czech:0.0', 'ministry:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'environment:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('an', tensor(0., device='cuda:0')), ('appeal', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('the', tensor(0.2239, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('has', tensor(0.2078, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('lodged', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2239, device='cuda:0')), ('czech', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), ('of', tensor(0.1206, device='cuda:0')), ('the', tensor(0.2239, device='cuda:0')), ('environment', tensor(0., device='cuda:0'))],  word_scores_max: [('an', tensor(0., device='cuda:0')), ('appeal', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('the', tensor(0.2239, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('has', tensor(0.2078, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('lodged', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2239, device='cuda:0')), ('czech', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), ('of', tensor(0.1206, device='cuda:0')), ('the', tensor(0.2239, device='cuda:0')), ('environment', tensor(0., device='cuda:0'))]
idx: 54, example: U.S. District Judge Douglas P. Woodlock yesterday extended a Jan. 17 temporary restraining order until March 7 , prediction: 2, correct_label: 2, class_scores: [0.21206059 0.39102763 0.39691186], word_scores: ['u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'district:0.0', 'judge:0.0', 'douglas:0.0', 'p:0.0', '.:2.903296945078182e-06', 'wood:0.0', '##lock:0.0', 'yesterday:0.0', 'extended:0.0', 'a:8.62785782373976e-06', 'jan:0.0', '.:2.903296945078182e-06', '17:0.0', 'temporary:0.0', 'restraining:0.0', 'order:0.0', 'until:0.0', 'march:0.0', '7:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('u', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('district', tensor(0., device='cuda:0')), ('judge', tensor(0., device='cuda:0')), ('douglas', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('woodlock', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('a', tensor(0.4263, device='cuda:0')), ('jan', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('temporary', tensor(0., device='cuda:0')), ('restraining', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0'))],  word_scores_max: [('u', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('district', tensor(0., device='cuda:0')), ('judge', tensor(0., device='cuda:0')), ('douglas', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('woodlock', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('a', tensor(0.4263, device='cuda:0')), ('jan', tensor(0., device='cuda:0')), ('.', tensor(0.1434, device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('temporary', tensor(0., device='cuda:0')), ('restraining', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0'))]
idx: 55, example: Jens Schulte-Bockum , Vodafone 's global director of terminals , said the company expects to sell one to two million of the Vodafone 125 and 225 models in the first year of launch , and potentially tens of millions over the lifetime of the device , prediction: 1, correct_label: 1, class_scores: [0.30280513 0.38311312 0.31408176], word_scores: ['jens:0.0', 'sc:1.3329485000213026e-06', '##hul:0.0', '##te:0.0', '-:4.821180027647642e-06', 'bo:0.0', '##ck:1.956489086296642e-06', '##um:0.0', ',:7.986737728060689e-06', 'vo:0.0', '##da:0.0', '##fo:0.0', '##ne:8.183636964531615e-06', "':0.0", 's:0.0', 'global:0.0', 'director:0.0', 'of:3.4365734791208524e-06', 'terminals:0.0', ',:7.986737728060689e-06', 'said:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'expects:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'one:4.584404450724833e-06', 'to:2.886244146793615e-06', 'two:0.0', 'million:6.018835847498849e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'vo:0.0', '##da:0.0', '##fo:0.0', '##ne:8.183636964531615e-06', '125:0.0', 'and:0.0', '225:0.0', 'models:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'year:0.0', 'of:3.4365734791208524e-06', 'launch:0.0', ',:7.986737728060689e-06', 'and:0.0', 'potentially:0.0', 'tens:0.0', 'of:3.4365734791208524e-06', 'millions:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'lifetime:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'device:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('jens', tensor(0., device='cuda:0')), ('schulte', tensor(0.0828, device='cuda:0')), ('-', tensor(0.2995, device='cuda:0')), ('bockum', tensor(0.1215, device='cuda:0')), (',', tensor(0.4962, device='cuda:0'))],  word_scores_max: [('jens', tensor(0., device='cuda:0')), ('schulte', tensor(0.0828, device='cuda:0')), ('-', tensor(0.2995, device='cuda:0')), ('bockum', tensor(0.1215, device='cuda:0')), (',', tensor(0.4962, device='cuda:0'))]
idx: 56, example: Helsinki 19 May 2010 - Finnish company Lemminkainen Oyj ( HEL : LEM1S ) said today that it will construct an office building at Toolonlahti in downtown Helsinki , without disclosing financial details , prediction: 2, correct_label: 2, class_scores: [0.19920549 0.31247273 0.48832175], word_scores: ['helsinki:0.0', '19:0.0', 'may:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'company:6.695386673527537e-06', 'le:0.0', '##mm:0.0', '##ink:0.0', '##aine:0.0', '##n:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'le:0.0', '##m:0.0', '##1:0.0', '##s:4.601175078278175e-06', '):0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'construct:0.0', 'an:0.0', 'office:0.0', 'building:0.0', 'at:0.0', 'tool:0.0', '##on:0.0', '##lah:0.0', '##ti:2.5915114747476764e-06', 'in:3.0217122457543155e-06', 'downtown:0.0', 'helsinki:0.0', ',:7.986737728060689e-06', 'without:0.0', 'disc:0.0', '##los:0.0', '##ing:0.0', 'financial:0.0', 'details:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('helsinki', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.1448, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('company', tensor(0.2011, device='cuda:0')), ('lemminkainen', tensor(0., device='cuda:0')), ('oyj', tensor(0.0551, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('lem1s', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0455, device='cuda:0')), ('it', tensor(0.1004, device='cuda:0')), ('will', tensor(0.1224, device='cuda:0')), ('construct', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('toolonlahti', tensor(0., device='cuda:0')), ('in', tensor(0.0908, device='cuda:0')), ('downtown', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.2399, device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('disclosing', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('details', tensor(0., device='cuda:0'))],  word_scores_max: [('helsinki', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.1448, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('company', tensor(0.2011, device='cuda:0')), ('lemminkainen', tensor(0., device='cuda:0')), ('oyj', tensor(0.0551, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('lem1s', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0455, device='cuda:0')), ('it', tensor(0.1004, device='cuda:0')), ('will', tensor(0.1224, device='cuda:0')), ('construct', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('toolonlahti', tensor(0., device='cuda:0')), ('in', tensor(0.0908, device='cuda:0')), ('downtown', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.2399, device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('disclosing', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('details', tensor(0., device='cuda:0'))]
idx: 57, example: In January , traffic , measured in revenue passenger kilometres RPK , went up by 3.2 % and capacity , measured in available seat kilometres ASK , rose by 12.2 % , prediction: 1, correct_label: 1, class_scores: [0.26277682 0.39075908 0.34646407], word_scores: ['in:3.0217122457543155e-06', 'january:0.0', ',:7.986737728060689e-06', 'traffic:0.0', ',:7.986737728060689e-06', 'measured:0.0', 'in:3.0217122457543155e-06', 'revenue:0.0', 'passenger:0.0', 'kilometres:0.0', 'r:0.0', '##p:0.0', '##k:0.0', ',:7.986737728060689e-06', 'went:0.0', 'up:1.4959460941099678e-06', 'by:0.0', '3:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', 'and:0.0', 'capacity:0.0', ',:7.986737728060689e-06', 'measured:0.0', 'in:3.0217122457543155e-06', 'available:0.0', 'seat:0.0', 'kilometres:0.0', 'ask:0.0', ',:7.986737728060689e-06', 'rose:0.0', 'by:0.0', '12:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0537, device='cuda:0')), ('january', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('measured', tensor(0., device='cuda:0')), ('in', tensor(0.0537, device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('passenger', tensor(0., device='cuda:0')), ('kilometres', tensor(0., device='cuda:0')), ('rpk', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('up', tensor(0.0266, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0516, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('measured', tensor(0., device='cuda:0')), ('in', tensor(0.0537, device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('seat', tensor(0., device='cuda:0')), ('kilometres', tensor(0., device='cuda:0')), ('ask', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0516, device='cuda:0')), ('2', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0537, device='cuda:0')), ('january', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('measured', tensor(0., device='cuda:0')), ('in', tensor(0.0537, device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('passenger', tensor(0., device='cuda:0')), ('kilometres', tensor(0., device='cuda:0')), ('rpk', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('up', tensor(0.0266, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0516, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('measured', tensor(0., device='cuda:0')), ('in', tensor(0.0537, device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('seat', tensor(0., device='cuda:0')), ('kilometres', tensor(0., device='cuda:0')), ('ask', tensor(0., device='cuda:0')), (',', tensor(0.1419, device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0516, device='cuda:0')), ('2', tensor(0., device='cuda:0'))]
idx: 58, example: No service pricing details were disclosed , prediction: 2, correct_label: 2, class_scores: [0.2744714  0.29820096 0.42732766], word_scores: ['no:0.0', 'service:0.0', 'pricing:0.0', 'details:0.0', 'were:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('no', tensor(nan, device='cuda:0')), ('service', tensor(nan, device='cuda:0')), ('pricing', tensor(nan, device='cuda:0')), ('details', tensor(nan, device='cuda:0')), ('were', tensor(nan, device='cuda:0')), ('disclosed', tensor(nan, device='cuda:0'))],  word_scores_max: [('no', tensor(nan, device='cuda:0')), ('service', tensor(nan, device='cuda:0')), ('pricing', tensor(nan, device='cuda:0')), ('details', tensor(nan, device='cuda:0')), ('were', tensor(nan, device='cuda:0')), ('disclosed', tensor(nan, device='cuda:0'))]
idx: 59, example: On the basis of competitive bidding OOO Kitai Stroi , the Russian subsidiary of China State Construction Engineering Corporation , a construction company owned by China State , has been selected as the main constructor , prediction: 2, correct_label: 2, class_scores: [0.2620698 0.3375939 0.4003363], word_scores: ['on:0.0', 'the:6.3806996877247e-06', 'basis:0.0', 'of:3.4365734791208524e-06', 'competitive:0.0', 'bidding:0.0', 'o:0.0', '##oo:0.0', 'kit:0.0', '##ai:0.0', 'st:0.0', '##roi:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'russian:0.0', 'subsidiary:0.0', 'of:3.4365734791208524e-06', 'china:0.0', 'state:0.0', 'construction:0.0', 'engineering:0.0', 'corporation:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'construction:0.0', 'company:6.695386673527537e-06', 'owned:0.0', 'by:0.0', 'china:0.0', 'state:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'been:0.0', 'selected:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'main:0.0', 'construct:0.0', '##or:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('on', tensor(0., device='cuda:0')), ('the', tensor(0.0896, device='cuda:0')), ('basis', tensor(0., device='cuda:0')), ('of', tensor(0.0483, device='cuda:0')), ('competitive', tensor(0., device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('ooo', tensor(0., device='cuda:0')), ('kitai', tensor(0., device='cuda:0')), ('stroi', tensor(0., device='cuda:0')), (',', tensor(0.1121, device='cuda:0')), ('the', tensor(0.0896, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('of', tensor(0.0483, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('state', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), (',', tensor(0.1121, device='cuda:0')), ('a', tensor(0.1211, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('company', tensor(0.0940, device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('state', tensor(0., device='cuda:0')), (',', tensor(0.1121, device='cuda:0')), ('has', tensor(0.0831, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('selected', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.0896, device='cuda:0')), ('main', tensor(0., device='cuda:0')), ('constructor', tensor(0., device='cuda:0'))],  word_scores_max: [('on', tensor(0., device='cuda:0')), ('the', tensor(0.0896, device='cuda:0')), ('basis', tensor(0., device='cuda:0')), ('of', tensor(0.0483, device='cuda:0')), ('competitive', tensor(0., device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('ooo', tensor(0., device='cuda:0')), ('kitai', tensor(0., device='cuda:0')), ('stroi', tensor(0., device='cuda:0')), (',', tensor(0.1121, device='cuda:0')), ('the', tensor(0.0896, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('of', tensor(0.0483, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('state', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), (',', tensor(0.1121, device='cuda:0')), ('a', tensor(0.1211, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('company', tensor(0.0940, device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('state', tensor(0., device='cuda:0')), (',', tensor(0.1121, device='cuda:0')), ('has', tensor(0.0831, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('selected', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.0896, device='cuda:0')), ('main', tensor(0., device='cuda:0')), ('constructor', tensor(0., device='cuda:0'))]
idx: 60, example: Aldata noted that its Voice Supply Chain Technology approach enables VDW to integrate with warehouse management systems , prediction: 2, correct_label: 2, class_scores: [0.17427863 0.32823518 0.49748617], word_scores: ['al:0.0', '##da:0.0', '##ta:0.0', 'noted:0.0', 'that:1.5133816759771435e-06', 'its:1.7191393908433383e-06', 'voice:0.0', 'supply:6.221108833415201e-06', 'chain:0.0', 'technology:0.0', 'approach:0.0', 'enables:0.0', 'v:0.0', '##d:0.0', '##w:0.0', 'to:2.886244146793615e-06', 'integrate:0.0', 'with:4.733654350275174e-06', 'warehouse:0.0', 'management:0.0', 'systems:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aldata', tensor(0., device='cuda:0')), ('noted', tensor(0., device='cuda:0')), ('that', tensor(0.0886, device='cuda:0')), ('its', tensor(0.1007, device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('supply', tensor(0.3644, device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('approach', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('vdw', tensor(0., device='cuda:0')), ('to', tensor(0.1690, device='cuda:0')), ('integrate', tensor(0., device='cuda:0')), ('with', tensor(0.2773, device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0'))],  word_scores_max: [('aldata', tensor(0., device='cuda:0')), ('noted', tensor(0., device='cuda:0')), ('that', tensor(0.0886, device='cuda:0')), ('its', tensor(0.1007, device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('supply', tensor(0.3644, device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('approach', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('vdw', tensor(0., device='cuda:0')), ('to', tensor(0.1690, device='cuda:0')), ('integrate', tensor(0., device='cuda:0')), ('with', tensor(0.2773, device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0'))]
idx: 61, example: `` I am very pleased and proud of our performance last year , '' Chief Executive Juha Rantanen said in a statement , prediction: 1, correct_label: 1, class_scores: [0.1767995  0.44959712 0.37360346], word_scores: ['`:0.0', '`:0.0', 'i:0.0', 'am:0.0', 'very:0.0', 'pleased:0.0', 'and:0.0', 'proud:0.0', 'of:3.4365734791208524e-06', 'our:0.0', 'performance:0.0', 'last:0.0', 'year:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'chief:0.0', 'executive:0.0', 'ju:0.0', '##ha:0.0', 'ran:0.0', '##tan:0.0', '##en:0.0', 'said:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'statement:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('i', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('pleased', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('proud', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('performance', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0'))],  word_scores_max: [('i', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('pleased', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('proud', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('performance', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0'))]
idx: 62, example: Prior to the transaction , whose financial terms have not been disclosed , Alma Media owned 40 % of Kotikokki net , prediction: 2, correct_label: 2, class_scores: [0.21625604 0.20375775 0.57998616], word_scores: ['prior:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'transaction:0.0', ',:7.986737728060689e-06', 'whose:0.0', 'financial:0.0', 'terms:0.0', 'have:2.910326429628185e-06', 'not:0.0', 'been:0.0', 'disclosed:0.0', ',:7.986737728060689e-06', 'alma:0.0', 'media:0.0', 'owned:0.0', '40:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'ko:5.9404255807748996e-06', '##ti:2.5915114747476764e-06', '##ko:0.0', '##kki:0.0', 'net:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('prior', tensor(0., device='cuda:0')), ('to', tensor(0.0769, device='cuda:0')), ('the', tensor(0.1700, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.2128, device='cuda:0')), ('whose', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('have', tensor(0.0776, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0')), (',', tensor(0.2128, device='cuda:0')), ('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('of', tensor(0.0916, device='cuda:0')), ('kotikokki', tensor(0.1583, device='cuda:0')), ('net', tensor(0., device='cuda:0'))],  word_scores_max: [('prior', tensor(0., device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('the', tensor(0.1590, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1991, device='cuda:0')), ('whose', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('have', tensor(0.0725, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0')), (',', tensor(0.1991, device='cuda:0')), ('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('of', tensor(0.0857, device='cuda:0')), ('kotikokki', tensor(0.2127, device='cuda:0')), ('net', tensor(0., device='cuda:0'))]
idx: 63, example: OUTOTEC OYJ PRESS RELEASE , FEBRUARY 19 , 2008 AT 11.00 AM Outotec has won two large minerals processing technology orders from Mirabela Mineracao do Brasil Ltda , Brazil and from Cumerio Med JSCo , Bulgaria , prediction: 2, correct_label: 1, class_scores: [0.25333306 0.31784055 0.42882636], word_scores: ['out:0.0', '##ote:0.0', '##c:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'press:0.0', 'release:0.0', ',:7.986737728060689e-06', 'february:0.0', '19:0.0', ',:7.986737728060689e-06', '2008:0.0', 'at:0.0', '11:0.0', '.:2.903296945078182e-06', '00:0.0', 'am:0.0', 'out:0.0', '##ote:0.0', '##c:0.0', 'has:5.9214244174654596e-06', 'won:0.0', 'two:0.0', 'large:0.0', 'minerals:0.0', 'processing:0.0', 'technology:0.0', 'orders:0.0', 'from:4.495178018260049e-06', 'mira:0.0', '##bel:0.0', '##a:3.804580501309829e-06', 'miner:0.0', '##aca:0.0', '##o:0.0', 'do:0.0', 'brasil:0.0', 'ltd:0.0', '##a:3.804580501309829e-06', ',:7.986737728060689e-06', 'brazil:0.0', 'and:0.0', 'from:4.495178018260049e-06', 'cum:0.0', '##eri:0.0', '##o:0.0', 'med:0.0', 'j:0.0', '##sco:0.0', ',:7.986737728060689e-06', 'bulgaria:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('outotec', tensor(0., device='cuda:0')), ('oyj', tensor(0.0355, device='cuda:0')), ('press', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0563, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('outotec', tensor(0., device='cuda:0')), ('has', tensor(0.1148, device='cuda:0')), ('won', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('large', tensor(0., device='cuda:0')), ('minerals', tensor(0., device='cuda:0')), ('processing', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('from', tensor(0.0871, device='cuda:0')), ('mirabela', tensor(0., device='cuda:0')), ('mineracao', tensor(0., device='cuda:0')), ('do', tensor(0., device='cuda:0')), ('brasil', tensor(0., device='cuda:0')), ('ltda', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('from', tensor(0.0871, device='cuda:0')), ('cumerio', tensor(0., device='cuda:0')), ('med', tensor(0., device='cuda:0')), ('jsco', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('bulgaria', tensor(0., device='cuda:0'))],  word_scores_max: [('outotec', tensor(0., device='cuda:0')), ('oyj', tensor(0.0355, device='cuda:0')), ('press', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0563, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('outotec', tensor(0., device='cuda:0')), ('has', tensor(0.1148, device='cuda:0')), ('won', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('large', tensor(0., device='cuda:0')), ('minerals', tensor(0., device='cuda:0')), ('processing', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('from', tensor(0.0871, device='cuda:0')), ('mirabela', tensor(0., device='cuda:0')), ('mineracao', tensor(0., device='cuda:0')), ('do', tensor(0., device='cuda:0')), ('brasil', tensor(0., device='cuda:0')), ('ltda', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('from', tensor(0.0871, device='cuda:0')), ('cumerio', tensor(0., device='cuda:0')), ('med', tensor(0., device='cuda:0')), ('jsco', tensor(0., device='cuda:0')), (',', tensor(0.1548, device='cuda:0')), ('bulgaria', tensor(0., device='cuda:0'))]
idx: 64, example: Fiskars , a 360-year-old global business best known for its orange-handled scissors , expects to derive synergies of EUR5 million a year by consolidating certain parts of the housewares division where the two compete , prediction: 2, correct_label: 1, class_scores: [0.18715222 0.3092435  0.50360423], word_scores: ['fis:0.0', '##kar:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', '360:0.0', '-:4.821180027647642e-06', 'year:0.0', '-:4.821180027647642e-06', 'old:0.0', 'global:0.0', 'business:0.0', 'best:0.0', 'known:0.0', 'for:0.0', 'its:1.7191393908433383e-06', 'orange:0.0', '-:4.821180027647642e-06', 'handled:0.0', 'scissors:0.0', ',:7.986737728060689e-06', 'expects:0.0', 'to:2.886244146793615e-06', 'derive:0.0', 'syn:0.0', '##er:0.0', '##gies:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##5:0.0', 'million:6.018835847498849e-06', 'a:8.62785782373976e-06', 'year:0.0', 'by:0.0', 'con:0.0', '##sol:0.0', '##ida:0.0', '##ting:0.0', 'certain:0.0', 'parts:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'house:0.0', '##ware:0.0', '##s:4.601175078278175e-06', 'division:0.0', 'where:0.0', 'the:6.3806996877247e-06', 'two:0.0', 'compete:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fiskars', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('a', tensor(0.1107, device='cuda:0')), ('360', tensor(0., device='cuda:0')), ('-', tensor(0.0618, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0618, device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('known', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.0221, device='cuda:0')), ('orange', tensor(0., device='cuda:0')), ('-', tensor(0.0618, device='cuda:0')), ('handled', tensor(0., device='cuda:0')), ('scissors', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('to', tensor(0.0370, device='cuda:0')), ('derive', tensor(0., device='cuda:0')), ('synergies', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('million', tensor(0.0772, device='cuda:0')), ('a', tensor(0.1107, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('consolidating', tensor(0., device='cuda:0')), ('certain', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('housewares', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('compete', tensor(0., device='cuda:0'))],  word_scores_max: [('fiskars', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('a', tensor(0.1107, device='cuda:0')), ('360', tensor(0., device='cuda:0')), ('-', tensor(0.0618, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0618, device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('known', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.0221, device='cuda:0')), ('orange', tensor(0., device='cuda:0')), ('-', tensor(0.0618, device='cuda:0')), ('handled', tensor(0., device='cuda:0')), ('scissors', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('to', tensor(0.0370, device='cuda:0')), ('derive', tensor(0., device='cuda:0')), ('synergies', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('million', tensor(0.0772, device='cuda:0')), ('a', tensor(0.1107, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('consolidating', tensor(0., device='cuda:0')), ('certain', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('housewares', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('compete', tensor(0., device='cuda:0'))]
idx: 65, example: The group 's net sales in 2007 were EUR683 .6 m, prediction: 2, correct_label: 2, class_scores: [0.19545932 0.3512811  0.45325962], word_scores: ['the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', '2007:0.0', 'were:0.0', 'eu:0.0', '##r:0.0', '##6:0.0', '##8:0.0', '##3:0.0', '.:2.903296945078182e-06', '6:0.0', 'm:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 66, example: It provides customers with industry-leading elevators , escalators and innovative solutions for maintenance and modernization , prediction: 1, correct_label: 1, class_scores: [0.27790967 0.3798566  0.3422337 ], word_scores: ['it:3.3415778943890473e-06', 'provides:0.0', 'customers:0.0', 'with:4.733654350275174e-06', 'industry:0.0', '-:4.821180027647642e-06', 'leading:0.0', 'elevators:0.0', ',:7.986737728060689e-06', 'es:2.450917691021459e-06', '##cala:0.0', '##tors:0.0', 'and:0.0', 'innovative:0.0', 'solutions:0.0', 'for:0.0', 'maintenance:0.0', 'and:0.0', 'modernization:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('it', tensor(0.1432, device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('with', tensor(0.2029, device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('-', tensor(0.2066, device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('elevators', tensor(0., device='cuda:0')), (',', tensor(0.3423, device='cuda:0')), ('escalators', tensor(0.1050, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('innovative', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('modernization', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.1432, device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('with', tensor(0.2029, device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('-', tensor(0.2066, device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('elevators', tensor(0., device='cuda:0')), (',', tensor(0.3423, device='cuda:0')), ('escalators', tensor(0.1050, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('innovative', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('modernization', tensor(0., device='cuda:0'))]
idx: 67, example: Latvenergo has ordered a significant expansion to the Tekla Xpower network information system , prediction: 2, correct_label: 1, class_scores: [0.22477685 0.256093   0.5191302 ], word_scores: ['la:0.0', '##tv:0.0', '##ener:0.0', '##go:0.0', 'has:5.9214244174654596e-06', 'ordered:0.0', 'a:8.62785782373976e-06', 'significant:0.0', 'expansion:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'te:0.0', '##kla:0.0', 'xp:0.0', '##ower:0.0', 'network:0.0', 'information:0.0', 'system:2.472523192409426e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('latvenergo', tensor(0., device='cuda:0')), ('has', tensor(0.2252, device='cuda:0')), ('ordered', tensor(0., device='cuda:0')), ('a', tensor(0.3282, device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('to', tensor(0.1098, device='cuda:0')), ('the', tensor(0.2427, device='cuda:0')), ('tekla', tensor(0., device='cuda:0')), ('xpower', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('system', tensor(0.0941, device='cuda:0'))],  word_scores_max: [('latvenergo', tensor(0., device='cuda:0')), ('has', tensor(0.2252, device='cuda:0')), ('ordered', tensor(0., device='cuda:0')), ('a', tensor(0.3282, device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('to', tensor(0.1098, device='cuda:0')), ('the', tensor(0.2427, device='cuda:0')), ('tekla', tensor(0., device='cuda:0')), ('xpower', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('system', tensor(0.0941, device='cuda:0'))]
idx: 68, example: The total value of the deal is USD 29mn , prediction: 2, correct_label: 2, class_scores: [0.20747127 0.28494808 0.50758064], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'deal:0.0', 'is:0.0', 'usd:0.0', '29:0.0', '##m:0.0', '##n:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('29mn', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('29mn', tensor(0., device='cuda:0'))]
idx: 69, example: Separately , YIT Corporation and Austrian firm E AG last week signed an agreement on the sale of E 's building system service business in Germany , Austria , Poland , the Czech Republic , Hungary and Romania for EUR 55 mln , prediction: 2, correct_label: 1, class_scores: [0.1669188  0.31743082 0.5156504 ], word_scores: ['separately:0.0', ',:7.986737728060689e-06', 'yi:0.0', '##t:0.0', 'corporation:0.0', 'and:0.0', 'austrian:0.0', 'firm:0.0', 'e:0.0', 'ag:0.0', 'last:0.0', 'week:0.0', 'signed:0.0', 'an:0.0', 'agreement:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'sale:0.0', 'of:3.4365734791208524e-06', 'e:0.0', "':0.0", 's:0.0', 'building:0.0', 'system:2.472523192409426e-06', 'service:0.0', 'business:0.0', 'in:3.0217122457543155e-06', 'germany:0.0', ',:7.986737728060689e-06', 'austria:0.0', ',:7.986737728060689e-06', 'poland:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'czech:0.0', 'republic:0.0', ',:7.986737728060689e-06', 'hungary:0.0', 'and:0.0', 'romania:0.0', 'for:0.0', 'eu:0.0', '##r:0.0', '55:0.0', 'ml:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('separately', tensor(0., device='cuda:0')), (',', tensor(0.4486, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('austrian', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('ag', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3584, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('of', tensor(0.1930, device='cuda:0'))],  word_scores_max: [('separately', tensor(0., device='cuda:0')), (',', tensor(0.4486, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('austrian', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('ag', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3584, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('of', tensor(0.1930, device='cuda:0'))]
idx: 70, example: Estonia 's beer market overall grew three percent last year to 130 million liters , prediction: 1, correct_label: 1, class_scores: [0.18905534 0.4351395  0.3758052 ], word_scores: ['estonia:0.0', "':0.0", 's:0.0', 'beer:0.0', 'market:0.0', 'overall:0.0', 'grew:0.0', 'three:0.0', 'percent:0.0', 'last:0.0', 'year:0.0', 'to:2.886244146793615e-06', '130:0.0', 'million:6.018835847498849e-06', 'liter:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 71, example: Anttila 's online department store - NetAnttila - has an established position as the best-known , most visited and most shopped online store in Finland  , prediction: 2, correct_label: 2, class_scores: [0.280891  0.3272576 0.3918514], word_scores: ['ant:0.0', '##tila:0.0', "':0.0", 's:0.0', 'online:0.0', 'department:0.0', 'store:0.0', '-:4.821180027647642e-06', 'net:0.0', '##ant:0.0', '##tila:0.0', '-:4.821180027647642e-06', 'has:5.9214244174654596e-06', 'an:0.0', 'established:0.0', 'position:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'best:0.0', '-:4.821180027647642e-06', 'known:0.0', ',:7.986737728060689e-06', 'most:0.0', 'visited:0.0', 'and:0.0', 'most:0.0', 'shop:0.0', '##ped:0.0', 'online:0.0', 'store:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 72, example: Country : , Finland Sector : Construction-Real Estate Target : Pohjolan Design-Talo Oy Buyer : CapMan Oyj Vendor : Ruukki Group Oyj Deal size in USD : 102.6 m Type : Divestment Status : Agree, prediction: 2, correct_label: 2, class_scores: [0.19913855 0.37749344 0.42336807], word_scores: ['country:0.0', '::0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', 'sector:0.0', '::0.0', 'construction:0.0', '-:4.821180027647642e-06', 'real:0.0', 'estate:0.0', 'target:0.0', '::0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##lan:0.0', 'design:0.0', '-:4.821180027647642e-06', 'tal:0.0', '##o:0.0', 'o:0.0', '##y:1.832826342251792e-06', 'buyer:0.0', '::0.0', 'cap:0.0', '##man:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'vendor:0.0', '::0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', 'group:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'deal:0.0', 'size:0.0', 'in:3.0217122457543155e-06', 'usd:0.0', '::0.0', '102:0.0', '.:2.903296945078182e-06', '6:0.0', 'm:0.0', 'type:0.0', '::0.0', 'dive:0.0', '##st:0.0', '##ment:0.0', 'status:0.0', '::0.0', 'agree:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('country', tensor(0., device='cuda:0')), (',', tensor(0.2550, device='cuda:0')), ('finland', tensor(0.1308, device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('-', tensor(0.1540, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('pohjolan', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('-', tensor(0.1540, device='cuda:0')), ('talo', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('buyer', tensor(0., device='cuda:0')), ('capman', tensor(0., device='cuda:0')), ('oyj', tensor(0.0585, device='cuda:0')), ('vendor', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('oyj', tensor(0.0585, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('in', tensor(0.0965, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('102', tensor(0., device='cuda:0')), ('.', tensor(0.0927, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('type', tensor(0., device='cuda:0')), ('divestment', tensor(0., device='cuda:0')), ('status', tensor(0., device='cuda:0')), ('agree', tensor(0., device='cuda:0'))],  word_scores_max: [('country', tensor(0., device='cuda:0')), (',', tensor(0.2550, device='cuda:0')), ('finland', tensor(0.1308, device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('-', tensor(0.1540, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('pohjolan', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('-', tensor(0.1540, device='cuda:0')), ('talo', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('buyer', tensor(0., device='cuda:0')), ('capman', tensor(0., device='cuda:0')), ('oyj', tensor(0.0585, device='cuda:0')), ('vendor', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('oyj', tensor(0.0585, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('in', tensor(0.0965, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('102', tensor(0., device='cuda:0')), ('.', tensor(0.0927, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('type', tensor(0., device='cuda:0')), ('divestment', tensor(0., device='cuda:0')), ('status', tensor(0., device='cuda:0')), ('agree', tensor(0., device='cuda:0'))]
idx: 73, example: To prove the efficiency of the China Mobile system , Rod Baber , an English climber , climbed to the Mount Everest summit and successfully made calls , prediction: 2, correct_label: 1, class_scores: [0.2814021  0.3264709  0.39212692], word_scores: ['to:2.886244146793615e-06', 'prove:0.0', 'the:6.3806996877247e-06', 'efficiency:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'china:0.0', 'mobile:0.0', 'system:2.472523192409426e-06', ',:7.986737728060689e-06', 'rod:0.0', 'babe:0.0', '##r:0.0', ',:7.986737728060689e-06', 'an:0.0', 'english:0.0', 'climb:0.0', '##er:0.0', ',:7.986737728060689e-06', 'climbed:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'mount:0.0', 'everest:0.0', 'summit:0.0', 'and:0.0', 'successfully:0.0', 'made:0.0', 'calls:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('to', tensor(0.0527, device='cuda:0')), ('prove', tensor(0., device='cuda:0')), ('the', tensor(0.1165, device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('of', tensor(0.0627, device='cuda:0')), ('the', tensor(0.1165, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('system', tensor(0.0451, device='cuda:0')), (',', tensor(0.1458, device='cuda:0')), ('rod', tensor(0., device='cuda:0')), ('baber', tensor(0., device='cuda:0')), (',', tensor(0.1458, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('english', tensor(0., device='cuda:0')), ('climber', tensor(0., device='cuda:0')), (',', tensor(0.1458, device='cuda:0')), ('climbed', tensor(0., device='cuda:0')), ('to', tensor(0.0527, device='cuda:0')), ('the', tensor(0.1165, device='cuda:0')), ('mount', tensor(0., device='cuda:0')), ('everest', tensor(0., device='cuda:0')), ('summit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('successfully', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0'))],  word_scores_max: [('to', tensor(0.0527, device='cuda:0')), ('prove', tensor(0., device='cuda:0')), ('the', tensor(0.1165, device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('of', tensor(0.0627, device='cuda:0')), ('the', tensor(0.1165, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('system', tensor(0.0451, device='cuda:0')), (',', tensor(0.1458, device='cuda:0')), ('rod', tensor(0., device='cuda:0')), ('baber', tensor(0., device='cuda:0')), (',', tensor(0.1458, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('english', tensor(0., device='cuda:0')), ('climber', tensor(0., device='cuda:0')), (',', tensor(0.1458, device='cuda:0')), ('climbed', tensor(0., device='cuda:0')), ('to', tensor(0.0527, device='cuda:0')), ('the', tensor(0.1165, device='cuda:0')), ('mount', tensor(0., device='cuda:0')), ('everest', tensor(0., device='cuda:0')), ('summit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('successfully', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0'))]
idx: 74, example: Nyrstar has also agreed to supply to Talvivaara up to 150,000 tonnes of sulphuric acid per annum for use in Talvivaara 's leaching process during the period of supply of the zinc in concentrate , prediction: 1, correct_label: 1, class_scores: [0.2256707  0.45965403 0.31467524], word_scores: ['ny:0.0', '##rst:0.0', '##ar:0.0', 'has:5.9214244174654596e-06', 'also:0.0', 'agreed:0.0', 'to:2.886244146793615e-06', 'supply:6.221108833415201e-06', 'to:2.886244146793615e-06', 'tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '150:0.0', ',:7.986737728060689e-06', '000:0.0', 'tonnes:0.0', 'of:3.4365734791208524e-06', 'sul:0.0', '##ph:0.0', '##uri:0.0', '##c:0.0', 'acid:0.0', 'per:0.0', 'annum:0.0', 'for:0.0', 'use:0.0', 'in:3.0217122457543155e-06', 'tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', "':0.0", 's:0.0', 'leach:0.0', '##ing:0.0', 'process:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'period:0.0', 'of:3.4365734791208524e-06', 'supply:6.221108833415201e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'zinc:0.0', 'in:3.0217122457543155e-06', 'concentrate:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nyrstar', tensor(0., device='cuda:0')), ('has', tensor(0.1612, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0786, device='cuda:0')), ('supply', tensor(0.1693, device='cuda:0')), ('to', tensor(0.0786, device='cuda:0')), ('talvivaara', tensor(0., device='cuda:0')), ('up', tensor(0.0407, device='cuda:0')), ('to', tensor(0.0786, device='cuda:0')), ('150', tensor(0., device='cuda:0')), (',', tensor(0.2174, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('tonnes', tensor(0., device='cuda:0')), ('of', tensor(0.0935, device='cuda:0')), ('sulphuric', tensor(0., device='cuda:0')), ('acid', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('annum', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('in', tensor(0.0822, device='cuda:0'))],  word_scores_max: [('nyrstar', tensor(0., device='cuda:0')), ('has', tensor(0.1612, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0786, device='cuda:0')), ('supply', tensor(0.1693, device='cuda:0')), ('to', tensor(0.0786, device='cuda:0')), ('talvivaara', tensor(0., device='cuda:0')), ('up', tensor(0.0407, device='cuda:0')), ('to', tensor(0.0786, device='cuda:0')), ('150', tensor(0., device='cuda:0')), (',', tensor(0.2174, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('tonnes', tensor(0., device='cuda:0')), ('of', tensor(0.0935, device='cuda:0')), ('sulphuric', tensor(0., device='cuda:0')), ('acid', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('annum', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('in', tensor(0.0822, device='cuda:0'))]
idx: 75, example: TVO 's two-unit 1,740 MW Olkiluoto plant generated 14.2 TWh with an operating ratio across both reactors of 93.5 % , which the company described as `` high by international standards '' , prediction: 1, correct_label: 2, class_scores: [0.20613426 0.40745485 0.3864109 ], word_scores: ['tv:0.0', '##o:0.0', "':0.0", 's:0.0', 'two:0.0', '-:4.821180027647642e-06', 'unit:0.0', '1:0.0', ',:7.986737728060689e-06', '740:0.0', 'mw:0.0', 'ol:0.0', '##ki:0.0', '##lu:0.0', '##oto:0.0', 'plant:0.0', 'generated:0.0', '14:0.0', '.:2.903296945078182e-06', '2:0.0', 't:0.0', '##w:0.0', '##h:0.0', 'with:4.733654350275174e-06', 'an:0.0', 'operating:0.0', 'ratio:0.0', 'across:0.0', 'both:0.0', 'reactors:0.0', 'of:3.4365734791208524e-06', '93:0.0', '.:2.903296945078182e-06', '5:0.0', '%:0.0', ',:7.986737728060689e-06', 'which:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'described:0.0', 'as:0.0', '`:0.0', '`:0.0', 'high:0.0', 'by:0.0', 'international:0.0', 'standards:0.0', "':0.0", "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 76, example: It said Comptel delivers reliable provisioning and activation solutions which improve fulfilment processes for operators , prediction: 1, correct_label: 2, class_scores: [0.20971358 0.405662   0.38462442], word_scores: ['it:3.3415778943890473e-06', 'said:0.0', 'com:0.0', '##pt:0.0', '##el:0.0', 'delivers:0.0', 'reliable:0.0', 'provision:0.0', '##ing:0.0', 'and:0.0', 'activation:0.0', 'solutions:0.0', 'which:0.0', 'improve:0.0', 'fu:0.0', '##lf:0.0', '##il:0.0', '##ment:0.0', 'processes:0.0', 'for:0.0', 'operators:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(1., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('comptel', tensor(0., device='cuda:0')), ('delivers', tensor(0., device='cuda:0')), ('reliable', tensor(0., device='cuda:0')), ('provisioning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('activation', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('improve', tensor(0., device='cuda:0')), ('fulfilment', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('operators', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(1., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('comptel', tensor(0., device='cuda:0')), ('delivers', tensor(0., device='cuda:0')), ('reliable', tensor(0., device='cuda:0')), ('provisioning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('activation', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('improve', tensor(0., device='cuda:0')), ('fulfilment', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('operators', tensor(0., device='cuda:0'))]
idx: 77, example: A replay will be available until 27 October 2006 in the following numbers : US callers : +1 617-�801-�6888 , non-US callers : +44 20 7365 8427 , access code : 2659 5401 , prediction: 2, correct_label: 2, class_scores: [0.18981834 0.35991916 0.45026255], word_scores: ['a:8.62785782373976e-06', 'replay:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'available:0.0', 'until:0.0', '27:0.0', 'october:0.0', '2006:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'following:0.0', 'numbers:0.0', '::0.0', 'us:0.0', 'caller:0.0', '##s:4.601175078278175e-06', '::0.0', '+:0.0', '1:0.0', '61:0.0', '##7:0.0', '-:4.821180027647642e-06', '80:0.0', '##1:0.0', '-:4.821180027647642e-06', '68:0.0', '##8:0.0', '##8:0.0', ',:7.986737728060689e-06', 'non:0.0', '-:4.821180027647642e-06', 'us:0.0', 'caller:0.0', '##s:4.601175078278175e-06', '::0.0', '+:0.0', '44:0.0', '20:0.0', '73:0.0', '##65:0.0', '84:0.0', '##27:0.0', ',:7.986737728060689e-06', 'access:0.0', 'code:0.0', '::0.0', '265:0.0', '##9:0.0', '540:0.0', '##1:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1642, device='cuda:0')), ('replay', tensor(0., device='cuda:0')), ('will', tensor(0.0775, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('in', tensor(0.0575, device='cuda:0')), ('the', tensor(0.1214, device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('numbers', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('callers', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('617', tensor(0., device='cuda:0')), ('-', tensor(0.0918, device='cuda:0')), ('801', tensor(0., device='cuda:0')), ('-', tensor(0.0918, device='cuda:0')), ('6888', tensor(0., device='cuda:0')), (',', tensor(0.1520, device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.0918, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('callers', tensor(0., device='cuda:0')), ('44', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('7365', tensor(0., device='cuda:0')), ('8427', tensor(0., device='cuda:0')), (',', tensor(0.1520, device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('code', tensor(0., device='cuda:0')), ('2659', tensor(0., device='cuda:0')), ('5401', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.1642, device='cuda:0')), ('replay', tensor(0., device='cuda:0')), ('will', tensor(0.0775, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('in', tensor(0.0575, device='cuda:0')), ('the', tensor(0.1214, device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('numbers', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('callers', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('617', tensor(0., device='cuda:0')), ('-', tensor(0.0918, device='cuda:0')), ('801', tensor(0., device='cuda:0')), ('-', tensor(0.0918, device='cuda:0')), ('6888', tensor(0., device='cuda:0')), (',', tensor(0.1520, device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.0918, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('callers', tensor(0., device='cuda:0')), ('44', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('7365', tensor(0., device='cuda:0')), ('8427', tensor(0., device='cuda:0')), (',', tensor(0.1520, device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('code', tensor(0., device='cuda:0')), ('2659', tensor(0., device='cuda:0')), ('5401', tensor(0., device='cuda:0'))]
idx: 78, example: Last year 's third quarter result had been burdened by costs stemming from restructuring in the US , prediction: 2, correct_label: 0, class_scores: [0.18670656 0.23821142 0.57508194], word_scores: ['last:0.0', 'year:0.0', "':0.0", 's:0.0', 'third:0.0', 'quarter:0.0', 'result:0.0', 'had:0.0', 'been:0.0', 'burden:0.0', '##ed:0.0', 'by:0.0', 'costs:0.0', 'stemming:0.0', 'from:4.495178018260049e-06', 'restructuring:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'us:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('last', tensor(nan, device='cuda:0'))],  word_scores_max: [('last', tensor(nan, device='cuda:0'))]
idx: 79, example: Finnish-Swedish TietoEnator is expanding its business quickly in Russia , prediction: 2, correct_label: 1, class_scores: [0.15324445 0.25356194 0.59319365], word_scores: ['finnish:0.0', '-:4.821180027647642e-06', 'swedish:0.0', 'tie:0.0', '##to:0.0', '##ena:0.0', '##tor:0.0', 'is:0.0', 'expanding:0.0', 'its:1.7191393908433383e-06', 'business:0.0', 'quickly:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('-', tensor(0.5042, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('tietoenator', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expanding', tensor(0., device='cuda:0')), ('its', tensor(0.1798, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('quickly', tensor(0., device='cuda:0')), ('in', tensor(0.3160, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('-', tensor(0.5042, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('tietoenator', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expanding', tensor(0., device='cuda:0')), ('its', tensor(0.1798, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('quickly', tensor(0., device='cuda:0')), ('in', tensor(0.3160, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 80, example: Earnings per share ( EPS ) amounted to a loss of EUR0 .05 , prediction: 1, correct_label: 0, class_scores: [0.17461601 0.44587326 0.37951073], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', '(:0.0', 'eps:0.0', '):0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '05:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.1617, device='cuda:0')), ('a', tensor(0.4832, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1925, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1626, device='cuda:0')), ('05', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.1617, device='cuda:0')), ('a', tensor(0.4832, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1925, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1626, device='cuda:0')), ('05', tensor(0., device='cuda:0'))]
idx: 81, example: Finnish Ponsse has signed an agreement with Babcock Africa for the distribution and support of Ponsse forest machines , harvester heads , and information systems in South Africa , prediction: 2, correct_label: 1, class_scores: [0.16517176 0.3403786  0.49444965], word_scores: ['finnish:0.0', 'po:0.0', '##ns:0.0', '##se:0.0', 'has:5.9214244174654596e-06', 'signed:0.0', 'an:0.0', 'agreement:0.0', 'with:4.733654350275174e-06', 'ba:0.0', '##bc:0.0', '##ock:0.0', 'africa:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'distribution:0.0', 'and:0.0', 'support:0.0', 'of:3.4365734791208524e-06', 'po:0.0', '##ns:0.0', '##se:0.0', 'forest:0.0', 'machines:0.0', ',:7.986737728060689e-06', 'harvest:0.0', '##er:0.0', 'heads:0.0', ',:7.986737728060689e-06', 'and:0.0', 'information:0.0', 'systems:0.0', 'in:3.0217122457543155e-06', 'south:0.0', 'africa:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('has', tensor(0.1500, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('with', tensor(0.1199, device='cuda:0')), ('babcock', tensor(0., device='cuda:0')), ('africa', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1617, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('of', tensor(0.0871, device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('forest', tensor(0., device='cuda:0')), ('machines', tensor(0., device='cuda:0')), (',', tensor(0.2024, device='cuda:0')), ('harvester', tensor(0., device='cuda:0')), ('heads', tensor(0., device='cuda:0')), (',', tensor(0.2024, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('in', tensor(0.0766, device='cuda:0')), ('south', tensor(0., device='cuda:0')), ('africa', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('has', tensor(0.1500, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('with', tensor(0.1199, device='cuda:0')), ('babcock', tensor(0., device='cuda:0')), ('africa', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1617, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('of', tensor(0.0871, device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('forest', tensor(0., device='cuda:0')), ('machines', tensor(0., device='cuda:0')), (',', tensor(0.2024, device='cuda:0')), ('harvester', tensor(0., device='cuda:0')), ('heads', tensor(0., device='cuda:0')), (',', tensor(0.2024, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('in', tensor(0.0766, device='cuda:0')), ('south', tensor(0., device='cuda:0')), ('africa', tensor(0., device='cuda:0'))]
idx: 82, example: The Baltimore Police and Fire Pension , which has about $ 1.5 billion , lost about $ 3.5 million in Madoff Ponzi scheme , prediction: 2, correct_label: 0, class_scores: [0.19914842 0.33560082 0.4652507 ], word_scores: ['the:6.3806996877247e-06', 'baltimore:0.0', 'police:0.0', 'and:0.0', 'fire:0.0', 'pension:0.0', ',:7.986737728060689e-06', 'which:0.0', 'has:5.9214244174654596e-06', 'about:0.0', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '5:0.0', 'billion:0.0', ',:7.986737728060689e-06', 'lost:0.0', 'about:0.0', '$:0.0', '3:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', 'mad:0.0', '##off:0.0', 'po:0.0', '##nz:0.0', '##i:0.0', 'scheme:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1480, device='cuda:0')), ('baltimore', tensor(0., device='cuda:0')), ('police', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fire', tensor(0., device='cuda:0')), ('pension', tensor(0., device='cuda:0')), (',', tensor(0.1852, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('has', tensor(0.1373, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0673, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), (',', tensor(0.1852, device='cuda:0')), ('lost', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0673, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.1396, device='cuda:0')), ('in', tensor(0.0701, device='cuda:0')), ('madoff', tensor(0., device='cuda:0')), ('ponzi', tensor(0., device='cuda:0')), ('scheme', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1480, device='cuda:0')), ('baltimore', tensor(0., device='cuda:0')), ('police', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fire', tensor(0., device='cuda:0')), ('pension', tensor(0., device='cuda:0')), (',', tensor(0.1852, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('has', tensor(0.1373, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0673, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), (',', tensor(0.1852, device='cuda:0')), ('lost', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0673, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.1396, device='cuda:0')), ('in', tensor(0.0701, device='cuda:0')), ('madoff', tensor(0., device='cuda:0')), ('ponzi', tensor(0., device='cuda:0')), ('scheme', tensor(0., device='cuda:0'))]
idx: 83, example: Unilever 's Turun Sinappi that is made in Sweden holds 40 % of the market , prediction: 2, correct_label: 2, class_scores: [0.27717933 0.3130528  0.40976787], word_scores: ['un:0.0', '##ile:0.0', '##ver:0.0', "':0.0", 's:0.0', 'tu:3.6499097859632457e-06', '##run:0.0', 'sin:0.0', '##app:0.0', '##i:0.0', 'that:1.5133816759771435e-06', 'is:0.0', 'made:0.0', 'in:3.0217122457543155e-06', 'sweden:0.0', 'holds:0.0', '40:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'market:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 84, example: Iso Omena is based in the Matinkyla district of the southern part of the city of Espoo , southern Finland , prediction: 2, correct_label: 2, class_scores: [0.13550784 0.3023779  0.56211424], word_scores: ['iso:0.0', 'om:0.0', '##ena:0.0', 'is:0.0', 'based:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'mat:0.0', '##ink:0.0', '##yla:0.0', 'district:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'southern:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'city:0.0', 'of:3.4365734791208524e-06', 'es:2.450917691021459e-06', '##poo:4.037954568048008e-06', ',:7.986737728060689e-06', 'southern:0.0', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('iso', tensor(0., device='cuda:0')), ('omena', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.0643, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('matinkyla', tensor(0., device='cuda:0')), ('district', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('southern', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('espoo', tensor(0.0521, device='cuda:0')), (',', tensor(0.1699, device='cuda:0')), ('southern', tensor(0., device='cuda:0')), ('finland', tensor(0.0871, device='cuda:0'))],  word_scores_max: [('iso', tensor(0., device='cuda:0')), ('omena', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.0643, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('matinkyla', tensor(0., device='cuda:0')), ('district', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('southern', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('espoo', tensor(0.0521, device='cuda:0')), (',', tensor(0.1699, device='cuda:0')), ('southern', tensor(0., device='cuda:0')), ('finland', tensor(0.0871, device='cuda:0'))]
idx: 85, example: Lember said the matter was topical also in Estonia , where a bill has been drafted at the Social Affairs Ministry that would scrap old-age pensions on favorable conditions , prediction: 2, correct_label: 2, class_scores: [0.22763215 0.29541793 0.4769499 ], word_scores: ['le:0.0', '##mber:0.0', 'said:0.0', 'the:6.3806996877247e-06', 'matter:0.0', 'was:0.0', 'topical:0.0', 'also:0.0', 'in:3.0217122457543155e-06', 'estonia:0.0', ',:7.986737728060689e-06', 'where:0.0', 'a:8.62785782373976e-06', 'bill:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'drafted:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'social:0.0', 'affairs:0.0', 'ministry:0.0', 'that:1.5133816759771435e-06', 'would:2.0953068542439723e-06', 'scrap:0.0', 'old:0.0', '-:4.821180027647642e-06', 'age:0.0', 'pensions:0.0', 'on:0.0', 'favorable:0.0', 'conditions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lember', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('matter', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('topical', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('in', tensor(0.0646, device='cuda:0')), ('estonia', tensor(0., device='cuda:0')), (',', tensor(0.1708, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('a', tensor(0.1846, device='cuda:0')), ('bill', tensor(0., device='cuda:0')), ('has', tensor(0.1267, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('drafted', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('social', tensor(0., device='cuda:0')), ('affairs', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), ('that', tensor(0.0324, device='cuda:0')), ('would', tensor(0.0448, device='cuda:0')), ('scrap', tensor(0., device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('age', tensor(0., device='cuda:0')), ('pensions', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('favorable', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0'))],  word_scores_max: [('lember', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('matter', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('topical', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('in', tensor(0.0646, device='cuda:0')), ('estonia', tensor(0., device='cuda:0')), (',', tensor(0.1708, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('a', tensor(0.1846, device='cuda:0')), ('bill', tensor(0., device='cuda:0')), ('has', tensor(0.1267, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('drafted', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('social', tensor(0., device='cuda:0')), ('affairs', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), ('that', tensor(0.0324, device='cuda:0')), ('would', tensor(0.0448, device='cuda:0')), ('scrap', tensor(0., device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('age', tensor(0., device='cuda:0')), ('pensions', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('favorable', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0'))]
idx: 86, example: Westpac Banking Corp - Is to issue a benchmark , 3 year FRN deal in Euros , prediction: 2, correct_label: 2, class_scores: [0.19160418 0.29101107 0.5173847 ], word_scores: ['west:0.0', '##pac:0.0', 'banking:0.0', 'corp:0.0', '-:4.821180027647642e-06', 'is:0.0', 'to:2.886244146793615e-06', 'issue:0.0', 'a:8.62785782373976e-06', 'bench:0.0', '##mark:0.0', ',:7.986737728060689e-06', '3:0.0', 'year:0.0', 'fr:0.0', '##n:0.0', 'deal:0.0', 'in:3.0217122457543155e-06', 'euros:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('westpac', tensor(0., device='cuda:0')), ('banking', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('-', tensor(0.1763, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.1056, device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('a', tensor(0.3155, device='cuda:0')), ('benchmark', tensor(0., device='cuda:0')), (',', tensor(0.2921, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('frn', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('in', tensor(0.1105, device='cuda:0')), ('euros', tensor(0., device='cuda:0'))],  word_scores_max: [('westpac', tensor(0., device='cuda:0')), ('banking', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('-', tensor(0.1763, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.1056, device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('a', tensor(0.3155, device='cuda:0')), ('benchmark', tensor(0., device='cuda:0')), (',', tensor(0.2921, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('frn', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('in', tensor(0.1105, device='cuda:0')), ('euros', tensor(0., device='cuda:0'))]
idx: 87, example: President and CEO Mika Vehvil+�inen says the positive signs are first and foremost emerging outside Finland , prediction: 2, correct_label: 1, class_scores: [0.15241338 0.3949214  0.4526652 ], word_scores: ['president:0.0', 'and:0.0', 'ceo:0.0', 'mika:0.0', 've:0.0', '##h:0.0', '##vil:0.0', '+:0.0', 'in:3.0217122457543155e-06', '##en:0.0', 'says:0.0', 'the:6.3806996877247e-06', 'positive:0.0', 'signs:0.0', 'are:0.0', 'first:0.0', 'and:0.0', 'foremost:0.0', 'emerging:0.0', 'outside:0.0', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('president', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('mika', tensor(0., device='cuda:0')), ('vehvil', tensor(0., device='cuda:0')), ('inen', tensor(0.2239, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.4727, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('signs', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('foremost', tensor(0., device='cuda:0')), ('emerging', tensor(0., device='cuda:0')), ('outside', tensor(0., device='cuda:0')), ('finland', tensor(0.3034, device='cuda:0'))],  word_scores_max: [('president', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('mika', tensor(0., device='cuda:0')), ('vehvil', tensor(0., device='cuda:0')), ('inen', tensor(0.2239, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.4727, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('signs', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('foremost', tensor(0., device='cuda:0')), ('emerging', tensor(0., device='cuda:0')), ('outside', tensor(0., device='cuda:0')), ('finland', tensor(0.3034, device='cuda:0'))]
idx: 88, example: Yesterday , Legrand issued its E300 million fixed rate deal maturing 2017 , prediction: 2, correct_label: 2, class_scores: [0.19195883 0.3812152  0.42682594], word_scores: ['yesterday:0.0', ',:7.986737728060689e-06', 'leg:0.0', '##rand:0.0', 'issued:0.0', 'its:1.7191393908433383e-06', 'e:0.0', '##30:0.0', '##0:0.0', 'million:6.018835847498849e-06', 'fixed:0.0', 'rate:0.0', 'deal:0.0', 'mat:0.0', '##uring:0.0', '2017:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.5079, device='cuda:0')), ('legrand', tensor(0., device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('its', tensor(0.1093, device='cuda:0')), ('e300', tensor(0., device='cuda:0')), ('million', tensor(0.3828, device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('maturing', tensor(0., device='cuda:0')), ('2017', tensor(0., device='cuda:0'))],  word_scores_max: [('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.5079, device='cuda:0')), ('legrand', tensor(0., device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('its', tensor(0.1093, device='cuda:0')), ('e300', tensor(0., device='cuda:0')), ('million', tensor(0.3828, device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('maturing', tensor(0., device='cuda:0')), ('2017', tensor(0., device='cuda:0'))]
idx: 89, example: Incap Contract Manufacturing Services Pvt Ltd , a subsidiary of Incap Corporation of Finland , is acquiring the manufacturing unit of the TVS Electronic Ltd at Tumkur , near Bangalore , for Rs40 crore , prediction: 2, correct_label: 2, class_scores: [0.19245335 0.36488926 0.44265744], word_scores: ['inca:0.0', '##p:0.0', 'contract:7.1864019446366e-06', 'manufacturing:0.0', 'services:0.0', 'pv:0.0', '##t:0.0', 'ltd:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'subsidiary:0.0', 'of:3.4365734791208524e-06', 'inca:0.0', '##p:0.0', 'corporation:0.0', 'of:3.4365734791208524e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'is:0.0', 'acquiring:0.0', 'the:6.3806996877247e-06', 'manufacturing:0.0', 'unit:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'tv:0.0', '##s:4.601175078278175e-06', 'electronic:0.0', 'ltd:0.0', 'at:0.0', 'tu:3.6499097859632457e-06', '##m:0.0', '##kur:0.0', ',:7.986737728060689e-06', 'near:0.0', 'bangalore:0.0', ',:7.986737728060689e-06', 'for:0.0', 'rs:0.0', '##40:0.0', 'crore:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('incap', tensor(0., device='cuda:0')), ('contract', tensor(0.0915, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('pvt', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('a', tensor(0.1098, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('of', tensor(0.0437, device='cuda:0')), ('incap', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('of', tensor(0.0437, device='cuda:0')), ('finland', tensor(0.0521, device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('the', tensor(0.0812, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.0437, device='cuda:0')), ('the', tensor(0.0812, device='cuda:0')), ('tvs', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('tumkur', tensor(0.0464, device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('bangalore', tensor(0., device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('rs40', tensor(0., device='cuda:0')), ('crore', tensor(0., device='cuda:0'))],  word_scores_max: [('incap', tensor(0., device='cuda:0')), ('contract', tensor(0.0915, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('pvt', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('a', tensor(0.1098, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('of', tensor(0.0437, device='cuda:0')), ('incap', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('of', tensor(0.0437, device='cuda:0')), ('finland', tensor(0.0521, device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('the', tensor(0.0812, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.0437, device='cuda:0')), ('the', tensor(0.0812, device='cuda:0')), ('tvs', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('tumkur', tensor(0.0464, device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('bangalore', tensor(0., device='cuda:0')), (',', tensor(0.1016, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('rs40', tensor(0., device='cuda:0')), ('crore', tensor(0., device='cuda:0'))]
idx: 90, example: Ragutis , controlled by the Finnish brewery Olvi , achieved a 5.7 percent rise in beer sales to 22.6 million liters and held a 10.75 percent market share , prediction: 1, correct_label: 1, class_scores: [0.15561889 0.43389538 0.4104857 ], word_scores: ['rag:0.0', '##uti:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'controlled:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'finnish:0.0', 'brewery:0.0', 'ol:0.0', '##vi:0.0', ',:7.986737728060689e-06', 'achieved:0.0', 'a:8.62785782373976e-06', '5:0.0', '.:2.903296945078182e-06', '7:0.0', 'percent:0.0', 'rise:0.0', 'in:3.0217122457543155e-06', 'beer:0.0', 'sales:0.0', 'to:2.886244146793615e-06', '22:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'liter:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'held:0.0', 'a:8.62785782373976e-06', '10:0.0', '.:2.903296945078182e-06', '75:0.0', 'percent:0.0', 'market:0.0', 'share:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ragutis', tensor(0., device='cuda:0')), (',', tensor(0.1326, device='cuda:0')), ('controlled', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1059, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('brewery', tensor(0., device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), (',', tensor(0.1326, device='cuda:0')), ('achieved', tensor(0., device='cuda:0')), ('a', tensor(0.1432, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0482, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('in', tensor(0.0502, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('to', tensor(0.0479, device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('.', tensor(0.0482, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.0999, device='cuda:0')), ('liters', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('a', tensor(0.1432, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0482, device='cuda:0')), ('75', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))],  word_scores_max: [('ragutis', tensor(0., device='cuda:0')), (',', tensor(0.1326, device='cuda:0')), ('controlled', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1059, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('brewery', tensor(0., device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), (',', tensor(0.1326, device='cuda:0')), ('achieved', tensor(0., device='cuda:0')), ('a', tensor(0.1432, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0482, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('in', tensor(0.0502, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('to', tensor(0.0479, device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('.', tensor(0.0482, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.0999, device='cuda:0')), ('liters', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('a', tensor(0.1432, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0482, device='cuda:0')), ('75', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))]
idx: 91, example: The amendment will not incur additional costs , prediction: 1, correct_label: 2, class_scores: [0.19861487 0.45244586 0.34893924], word_scores: ['the:6.3806996877247e-06', 'amendment:0.0', 'will:4.073096533829812e-06', 'not:0.0', 'inc:0.0', '##ur:0.0', 'additional:0.0', 'costs:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6104, device='cuda:0')), ('amendment', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('incur', tensor(0., device='cuda:0')), ('additional', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6104, device='cuda:0')), ('amendment', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('incur', tensor(0., device='cuda:0')), ('additional', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0'))]
idx: 92, example: There has been some recovery of the base metals prices and increased demand for metals in China , however , prediction: 2, correct_label: 1, class_scores: [0.22597542 0.37010565 0.40391886], word_scores: ['there:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'some:0.0', 'recovery:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'base:0.0', 'metals:0.0', 'prices:0.0', 'and:0.0', 'increased:0.0', 'demand:0.0', 'for:0.0', 'metals:0.0', 'in:3.0217122457543155e-06', 'china:0.0', ',:7.986737728060689e-06', 'however:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('there', tensor(0., device='cuda:0')), ('has', tensor(0.2214, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('recovery', tensor(0., device='cuda:0')), ('of', tensor(0.1285, device='cuda:0')), ('the', tensor(0.2386, device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('china', tensor(0., device='cuda:0')), (',', tensor(0.2986, device='cuda:0')), ('however', tensor(0., device='cuda:0'))],  word_scores_max: [('there', tensor(0., device='cuda:0')), ('has', tensor(0.2214, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('recovery', tensor(0., device='cuda:0')), ('of', tensor(0.1285, device='cuda:0')), ('the', tensor(0.2386, device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('china', tensor(0., device='cuda:0')), (',', tensor(0.2986, device='cuda:0')), ('however', tensor(0., device='cuda:0'))]
idx: 93, example: Return on investment was 16.6 % compared to 15.8 % in 2004 , prediction: 1, correct_label: 1, class_scores: [0.19983715 0.43583497 0.36432785], word_scores: ['return:0.0', 'on:0.0', 'investment:0.0', 'was:0.0', '16:0.0', '.:2.903296945078182e-06', '6:0.0', '%:0.0', 'compared:0.0', 'to:2.886244146793615e-06', '15:0.0', '.:2.903296945078182e-06', '8:0.0', '%:0.0', 'in:3.0217122457543155e-06', '2004:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('return', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.2478, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.2464, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.2478, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('in', tensor(0.2579, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('return', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.2478, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.2464, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.2478, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('in', tensor(0.2579, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 94, example: The copying , republication or redistribution of AFX News Content , including by framing or similar means , is expressly prohibited without the prior written consent of AFX News , prediction: 2, correct_label: 2, class_scores: [0.21674098 0.2888455  0.4944135 ], word_scores: ['the:6.3806996877247e-06', 'copying:0.0', ',:7.986737728060689e-06', 'republic:0.0', '##ation:0.0', 'or:0.0', 'redistribution:0.0', 'of:3.4365734791208524e-06', 'af:0.0', '##x:0.0', 'news:0.0', 'content:0.0', ',:7.986737728060689e-06', 'including:0.0', 'by:0.0', 'framing:0.0', 'or:0.0', 'similar:0.0', 'means:0.0', ',:7.986737728060689e-06', 'is:0.0', 'express:0.0', '##ly:0.0', 'prohibited:0.0', 'without:0.0', 'the:6.3806996877247e-06', 'prior:0.0', 'written:0.0', 'consent:0.0', 'of:3.4365734791208524e-06', 'af:0.0', '##x:0.0', 'news:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1464, device='cuda:0')), ('copying', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('republication', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('redistribution', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('content', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('framing', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('similar', tensor(0., device='cuda:0')), ('means', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expressly', tensor(0., device='cuda:0')), ('prohibited', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('the', tensor(0.1464, device='cuda:0')), ('prior', tensor(0., device='cuda:0')), ('written', tensor(0., device='cuda:0')), ('consent', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1464, device='cuda:0')), ('copying', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('republication', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('redistribution', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('content', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('framing', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('similar', tensor(0., device='cuda:0')), ('means', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expressly', tensor(0., device='cuda:0')), ('prohibited', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('the', tensor(0.1464, device='cuda:0')), ('prior', tensor(0., device='cuda:0')), ('written', tensor(0., device='cuda:0')), ('consent', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0'))]
idx: 95, example: The expansion will be delivered in the fourth quarter of 2006 , prediction: 2, correct_label: 2, class_scores: [0.2587909  0.33614334 0.40506572], word_scores: ['the:6.3806996877247e-06', 'expansion:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'delivered:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'fourth:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2006:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2739, device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('will', tensor(0.1749, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('in', tensor(0.1297, device='cuda:0')), ('the', tensor(0.2739, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1475, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2739, device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('will', tensor(0.1749, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('in', tensor(0.1297, device='cuda:0')), ('the', tensor(0.2739, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1475, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 96, example: The hull of the vessel was built one block at a time and Ruukki delivered the plate material for each block as construction progressed , prediction: 2, correct_label: 2, class_scores: [0.19770037 0.3138773  0.4884223 ], word_scores: ['the:6.3806996877247e-06', 'hull:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'vessel:0.0', 'was:0.0', 'built:0.0', 'one:4.584404450724833e-06', 'block:0.0', 'at:0.0', 'a:8.62785782373976e-06', 'time:0.0', 'and:0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', 'delivered:0.0', 'the:6.3806996877247e-06', 'plate:0.0', 'material:0.0', 'for:0.0', 'each:0.0', 'block:0.0', 'as:0.0', 'construction:0.0', 'progressed:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1783, device='cuda:0')), ('hull', tensor(0., device='cuda:0')), ('of', tensor(0.0960, device='cuda:0')), ('the', tensor(0.1783, device='cuda:0')), ('vessel', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('one', tensor(0.1281, device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.2411, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('the', tensor(0.1783, device='cuda:0')), ('plate', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('each', tensor(0., device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('progressed', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1783, device='cuda:0')), ('hull', tensor(0., device='cuda:0')), ('of', tensor(0.0960, device='cuda:0')), ('the', tensor(0.1783, device='cuda:0')), ('vessel', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('one', tensor(0.1281, device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.2411, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('the', tensor(0.1783, device='cuda:0')), ('plate', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('each', tensor(0., device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('progressed', tensor(0., device='cuda:0'))]
idx: 97, example: Ahlstrom Corporation STOCK EXCHANGE ANNOUNCEMENT 7.2.2007 at 10.30 A total of 56,955 new shares of Ahlstrom Corporation have been subscribed with option rights under the company 's stock option programs I 2001 and II 2001 , prediction: 2, correct_label: 2, class_scores: [0.1981543  0.399775   0.40207076], word_scores: ['ahl:0.0', '##strom:0.0', 'corporation:0.0', 'stock:0.0', 'exchange:0.0', 'announcement:0.0', '7:0.0', '.:2.903296945078182e-06', '2:0.0', '.:2.903296945078182e-06', '2007:0.0', 'at:0.0', '10:0.0', '.:2.903296945078182e-06', '30:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', '56:0.0', ',:7.986737728060689e-06', '95:0.0', '##5:0.0', 'new:2.798587502184091e-06', 'shares:0.0', 'of:3.4365734791208524e-06', 'ahl:0.0', '##strom:0.0', 'corporation:0.0', 'have:2.910326429628185e-06', 'been:0.0', 'sub:0.0', '##scribe:0.0', '##d:0.0', 'with:4.733654350275174e-06', 'option:0.0', 'rights:0.0', 'under:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'stock:0.0', 'option:0.0', 'programs:0.0', 'i:0.0', '2001:0.0', 'and:0.0', 'ii:0.0', '2001:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ahlstrom', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0592, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0592, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0592, device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('a', tensor(0.1760, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0701, device='cuda:0')), ('56', tensor(0., device='cuda:0')), (',', tensor(0.1629, device='cuda:0')), ('955', tensor(0., device='cuda:0')), ('new', tensor(0.0571, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('of', tensor(0.0701, device='cuda:0')), ('ahlstrom', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('have', tensor(0.0594, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('with', tensor(0.0966, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.1302, device='cuda:0'))],  word_scores_max: [('ahlstrom', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0592, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0592, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0592, device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('a', tensor(0.1760, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0701, device='cuda:0')), ('56', tensor(0., device='cuda:0')), (',', tensor(0.1629, device='cuda:0')), ('955', tensor(0., device='cuda:0')), ('new', tensor(0.0571, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('of', tensor(0.0701, device='cuda:0')), ('ahlstrom', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('have', tensor(0.0594, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('with', tensor(0.0966, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.1302, device='cuda:0'))]
idx: 98, example: `` Over the years , the color orange has become synonymous with quality , prediction: 2, correct_label: 2, class_scores: [0.17845994 0.3833438  0.43819633], word_scores: ['`:0.0', '`:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'years:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'color:0.0', 'orange:0.0', 'has:5.9214244174654596e-06', 'become:0.0', 'synonymous:0.0', 'with:4.733654350275174e-06', 'quality:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('over', tensor(0., device='cuda:0')), ('the', tensor(0.2032, device='cuda:0')), ('years', tensor(0., device='cuda:0')), (',', tensor(0.2543, device='cuda:0')), ('the', tensor(0.2032, device='cuda:0')), ('color', tensor(0., device='cuda:0')), ('orange', tensor(0., device='cuda:0')), ('has', tensor(0.1886, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('synonymous', tensor(0., device='cuda:0')), ('with', tensor(0.1507, device='cuda:0')), ('quality', tensor(0., device='cuda:0'))],  word_scores_max: [('over', tensor(0., device='cuda:0')), ('the', tensor(0.2032, device='cuda:0')), ('years', tensor(0., device='cuda:0')), (',', tensor(0.2543, device='cuda:0')), ('the', tensor(0.2032, device='cuda:0')), ('color', tensor(0., device='cuda:0')), ('orange', tensor(0., device='cuda:0')), ('has', tensor(0.1886, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('synonymous', tensor(0., device='cuda:0')), ('with', tensor(0.1507, device='cuda:0')), ('quality', tensor(0., device='cuda:0'))]
idx: 99, example: In the building and home improvement trade , net sales totalled EUR 1,173 mn , down from EUR 1,566 mn a year earlier , prediction: 2, correct_label: 0, class_scores: [0.22197294 0.34574264 0.43228438], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'building:0.0', 'and:0.0', 'home:0.0', 'improvement:0.0', 'trade:0.0', ',:7.986737728060689e-06', 'net:0.0', 'sales:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '1:0.0', ',:7.986737728060689e-06', '173:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', ',:7.986737728060689e-06', '56:0.0', '##6:0.0', 'mn:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0555, device='cuda:0')), ('the', tensor(0.1171, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('improvement', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('173', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0825, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('566', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('a', tensor(0.1584, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0555, device='cuda:0')), ('the', tensor(0.1171, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('improvement', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('173', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0825, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1466, device='cuda:0')), ('566', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('a', tensor(0.1584, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 100, example: Trading under the name Velta UK , a former Uponor brand , the company has been Uponor 's long-term partner in supplying Velta-branded systems particularly for the commercial and industrial building sector in the UK and internationally , prediction: 1, correct_label: 2, class_scores: [0.19087236 0.46566734 0.34346023], word_scores: ['trading:0.0', 'under:0.0', 'the:6.3806996877247e-06', 'name:0.0', 've:0.0', '##lta:0.0', 'uk:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'former:0.0', 'upon:0.0', '##or:0.0', 'brand:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'been:0.0', 'upon:0.0', '##or:0.0', "':0.0", 's:0.0', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'partner:0.0', 'in:3.0217122457543155e-06', 'supplying:0.0', 've:0.0', '##lta:0.0', '-:4.821180027647642e-06', 'branded:0.0', 'systems:0.0', 'particularly:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'commercial:0.0', 'and:0.0', 'industrial:0.0', 'building:0.0', 'sector:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'uk:0.0', 'and:0.0', 'internationally:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('trading', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.1277, device='cuda:0')), ('name', tensor(0., device='cuda:0')), ('velta', tensor(0., device='cuda:0')), ('uk', tensor(0., device='cuda:0')), (',', tensor(0.1598, device='cuda:0')), ('a', tensor(0.1726, device='cuda:0')), ('former', tensor(0., device='cuda:0')), ('uponor', tensor(0., device='cuda:0')), ('brand', tensor(0., device='cuda:0')), (',', tensor(0.1598, device='cuda:0')), ('the', tensor(0.1277, device='cuda:0')), ('company', tensor(0.1340, device='cuda:0')), ('has', tensor(0.1185, device='cuda:0')), ('been', tensor(0., device='cuda:0'))],  word_scores_max: [('trading', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.1277, device='cuda:0')), ('name', tensor(0., device='cuda:0')), ('velta', tensor(0., device='cuda:0')), ('uk', tensor(0., device='cuda:0')), (',', tensor(0.1598, device='cuda:0')), ('a', tensor(0.1726, device='cuda:0')), ('former', tensor(0., device='cuda:0')), ('uponor', tensor(0., device='cuda:0')), ('brand', tensor(0., device='cuda:0')), (',', tensor(0.1598, device='cuda:0')), ('the', tensor(0.1277, device='cuda:0')), ('company', tensor(0.1340, device='cuda:0')), ('has', tensor(0.1185, device='cuda:0')), ('been', tensor(0., device='cuda:0'))]
idx: 101, example: Sanoma Magazines ' net sales are estimated to grow in 2006 , prediction: 2, correct_label: 1, class_scores: [0.2316545  0.34542483 0.42292067], word_scores: ['san:0.0', '##oma:0.0', 'magazines:0.0', "':0.0", 'net:0.0', 'sales:0.0', 'are:0.0', 'estimated:0.0', 'to:2.886244146793615e-06', 'grow:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sanoma', tensor(nan, device='cuda:0'))],  word_scores_max: [('sanoma', tensor(nan, device='cuda:0'))]
idx: 102, example: RISING costs have forced packaging producer Huhtamaki to axe 90 jobs at its Hampshire manufacturing plant , prediction: 2, correct_label: 0, class_scores: [0.23177557 0.35397393 0.41425058], word_scores: ['rising:0.0', 'costs:0.0', 'have:2.910326429628185e-06', 'forced:0.0', 'packaging:0.0', 'producer:0.0', 'huh:0.0', '##tama:0.0', '##ki:0.0', 'to:2.886244146793615e-06', 'axe:0.0', '90:0.0', 'jobs:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'hampshire:0.0', 'manufacturing:0.0', 'plant:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('rising', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('have', tensor(0.3872, device='cuda:0')), ('forced', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), ('huhtamaki', tensor(0., device='cuda:0')), ('to', tensor(0.3840, device='cuda:0')), ('axe', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.2287, device='cuda:0')), ('hampshire', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0'))],  word_scores_max: [('rising', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('have', tensor(0.3872, device='cuda:0')), ('forced', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), ('huhtamaki', tensor(0., device='cuda:0')), ('to', tensor(0.3840, device='cuda:0')), ('axe', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.2287, device='cuda:0')), ('hampshire', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0'))]
idx: 103, example: The deliveries started in April 2006 and will be completed in 2007 , prediction: 2, correct_label: 2, class_scores: [0.18605596 0.32800758 0.48593643], word_scores: ['the:6.3806996877247e-06', 'deliveries:0.0', 'started:0.0', 'in:3.0217122457543155e-06', 'april:0.0', '2006:0.0', 'and:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'completed:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3868, device='cuda:0')), ('deliveries', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('in', tensor(0.1832, device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.2469, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.1832, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3868, device='cuda:0')), ('deliveries', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('in', tensor(0.1832, device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.2469, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.1832, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 104, example: Sarantel , based in Wellingborough , UK , designs high-performance antennas for portable wireless devices , prediction: 2, correct_label: 2, class_scores: [0.1938712  0.31106666 0.49506214], word_scores: ['sara:0.0', '##nte:0.0', '##l:0.0', ',:7.986737728060689e-06', 'based:0.0', 'in:3.0217122457543155e-06', 'well:0.0', '##ing:0.0', '##borough:0.0', ',:7.986737728060689e-06', 'uk:0.0', ',:7.986737728060689e-06', 'designs:0.0', 'high:0.0', '-:4.821180027647642e-06', 'performance:0.0', 'antennas:0.0', 'for:0.0', 'portable:0.0', 'wireless:0.0', 'devices:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sarantel', tensor(0., device='cuda:0')), (',', tensor(0.2511, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.0950, device='cuda:0')), ('wellingborough', tensor(0., device='cuda:0')), (',', tensor(0.2511, device='cuda:0')), ('uk', tensor(0., device='cuda:0')), (',', tensor(0.2511, device='cuda:0')), ('designs', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('-', tensor(0.1516, device='cuda:0')), ('performance', tensor(0., device='cuda:0')), ('antennas', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('portable', tensor(0., device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0'))],  word_scores_max: [('sarantel', tensor(0., device='cuda:0')), (',', tensor(0.2511, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.0950, device='cuda:0')), ('wellingborough', tensor(0., device='cuda:0')), (',', tensor(0.2511, device='cuda:0')), ('uk', tensor(0., device='cuda:0')), (',', tensor(0.2511, device='cuda:0')), ('designs', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('-', tensor(0.1516, device='cuda:0')), ('performance', tensor(0., device='cuda:0')), ('antennas', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('portable', tensor(0., device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0'))]
idx: 105, example: Cargotec 's share capital after the increase totals EUR 64,299,180 , prediction: 2, correct_label: 2, class_scores: [0.1644687  0.25143006 0.5841012 ], word_scores: ['cargo:0.0', '##tec:0.0', "':0.0", 's:0.0', 'share:0.0', 'capital:0.0', 'after:0.0', 'the:6.3806996877247e-06', 'increase:0.0', 'totals:0.0', 'eu:0.0', '##r:0.0', '64:0.0', ',:7.986737728060689e-06', '299:0.0', ',:7.986737728060689e-06', '180:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 106, example: Vehvilainen , who is currently the chief operating officer at Nokia Siemens Networks , will join Finnair on 5 January 2010 and take over as CEO effective 1 February 2010 , prediction: 2, correct_label: 2, class_scores: [0.26924145 0.3087238  0.42203474], word_scores: ['ve:0.0', '##h:0.0', '##vil:0.0', '##aine:0.0', '##n:0.0', ',:7.986737728060689e-06', 'who:0.0', 'is:0.0', 'currently:0.0', 'the:6.3806996877247e-06', 'chief:0.0', 'operating:0.0', 'officer:0.0', 'at:0.0', 'nokia:0.0', 'siemens:0.0', 'networks:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'join:0.0', 'finn:0.0', '##air:0.0', 'on:0.0', '5:0.0', 'january:0.0', '2010:0.0', 'and:0.0', 'take:2.0325496734585613e-06', 'over:0.0', 'as:0.0', 'ceo:0.0', 'effective:0.0', '1:0.0', 'february:0.0', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vehvilainen', tensor(0., device='cuda:0')), (',', tensor(0.2806, device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('the', tensor(0.2242, device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('officer', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('siemens', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), (',', tensor(0.2806, device='cuda:0')), ('will', tensor(0.1431, device='cuda:0')), ('join', tensor(0., device='cuda:0')), ('finnair', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('take', tensor(0.0714, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('effective', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('vehvilainen', tensor(0., device='cuda:0')), (',', tensor(0.2806, device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('the', tensor(0.2242, device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('officer', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('siemens', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), (',', tensor(0.2806, device='cuda:0')), ('will', tensor(0.1431, device='cuda:0')), ('join', tensor(0., device='cuda:0')), ('finnair', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('take', tensor(0.0714, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('effective', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 107, example: Fiskars R , founded in 1649 , is one of the oldest companies in the world and is the largest manufacturer of lightweight stainless steel scissors in the U.S. , prediction: 2, correct_label: 2, class_scores: [0.26083538 0.34084305 0.3983216 ], word_scores: ['fis:0.0', '##kar:0.0', '##s:4.601175078278175e-06', 'r:0.0', ',:7.986737728060689e-06', 'founded:0.0', 'in:3.0217122457543155e-06', '1649:0.0', ',:7.986737728060689e-06', 'is:0.0', 'one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'oldest:0.0', 'companies:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'world:0.0', 'and:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'largest:0.0', 'manufacturer:0.0', 'of:3.4365734791208524e-06', 'lightweight:0.0', 'stainless:0.0', 'steel:0.0', 'scissors:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fiskars', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), (',', tensor(0.1178, device='cuda:0')), ('founded', tensor(0., device='cuda:0')), ('in', tensor(0.0446, device='cuda:0')), ('1649', tensor(0., device='cuda:0')), (',', tensor(0.1178, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('one', tensor(0.0676, device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('oldest', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('in', tensor(0.0446, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('world', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('lightweight', tensor(0., device='cuda:0')), ('stainless', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('scissors', tensor(0., device='cuda:0')), ('in', tensor(0.0446, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.0428, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0428, device='cuda:0'))],  word_scores_max: [('fiskars', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), (',', tensor(0.1178, device='cuda:0')), ('founded', tensor(0., device='cuda:0')), ('in', tensor(0.0446, device='cuda:0')), ('1649', tensor(0., device='cuda:0')), (',', tensor(0.1178, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('one', tensor(0.0676, device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('oldest', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('in', tensor(0.0446, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('world', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('lightweight', tensor(0., device='cuda:0')), ('stainless', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('scissors', tensor(0., device='cuda:0')), ('in', tensor(0.0446, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.0428, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0428, device='cuda:0'))]
idx: 108, example: After the sale , Outokumpu 's share of the technology unit will be reduced to some 12-20 percent , prediction: 2, correct_label: 2, class_scores: [0.20407581 0.3053651  0.49055913], word_scores: ['after:0.0', 'the:6.3806996877247e-06', 'sale:0.0', ',:7.986737728060689e-06', 'out:0.0', '##oku:0.0', '##mp:0.0', '##u:0.0', "':0.0", 's:0.0', 'share:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'technology:0.0', 'unit:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'reduced:0.0', 'to:2.886244146793615e-06', 'some:0.0', '12:0.0', '-:4.821180027647642e-06', '20:0.0', 'percent:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0'))]
idx: 109, example: The volumes are expected to increase during the next few years , prediction: 2, correct_label: 1, class_scores: [0.2232299  0.36736032 0.40940982], word_scores: ['the:6.3806996877247e-06', 'volumes:0.0', 'are:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'increase:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'next:0.0', 'few:0.0', 'years:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4078, device='cuda:0')), ('volumes', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1845, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.4078, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4078, device='cuda:0')), ('volumes', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1845, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.4078, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0'))]
idx: 110, example: The fair value of the company 's investment properties grew to EUR 2.803 billion at the end of March 2009 from EUR 2.691 million a year ago , prediction: 2, correct_label: 1, class_scores: [0.17303587 0.4077509  0.41921324], word_scores: ['the:6.3806996877247e-06', 'fair:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'investment:0.0', 'properties:0.0', 'grew:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '80:0.0', '##3:0.0', 'billion:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', 'march:0.0', '2009:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '69:0.0', '##1:0.0', 'million:6.018835847498849e-06', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('fair', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('fair', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))]
idx: 111, example: Finnish Bank of +�land reports operating profit of EUR 2.2 mn in the first quarter of 2010 , down from EUR 6.3 mn in the corresponding period in 2009 , prediction: 2, correct_label: 0, class_scores: [0.26559275 0.30577588 0.42863137], word_scores: ['finnish:0.0', 'bank:0.0', 'of:3.4365734791208524e-06', '+:0.0', 'land:0.0', 'reports:0.0', 'operating:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '6:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0599, device='cuda:0')), ('the', tensor(0.1265, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1584, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0891, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0599, device='cuda:0')), ('the', tensor(0.1265, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0599, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0599, device='cuda:0')), ('the', tensor(0.1265, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1584, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0891, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0599, device='cuda:0')), ('the', tensor(0.1265, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0599, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 112, example: Tikkurila acquired a majority stake in Kolorit Paints in the autumn of 2004 , prediction: 2, correct_label: 2, class_scores: [0.21951172 0.38938782 0.39110047], word_scores: ['ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', 'acquired:0.0', 'a:8.62785782373976e-06', 'majority:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'ko:5.9404255807748996e-06', '##lor:0.0', '##it:0.0', 'paints:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'autumn:0.0', 'of:3.4365734791208524e-06', '2004:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tikkurila', tensor(0., device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('a', tensor(0.2835, device='cuda:0')), ('majority', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0993, device='cuda:0')), ('kolorit', tensor(0.1952, device='cuda:0')), ('paints', tensor(0., device='cuda:0')), ('in', tensor(0.0993, device='cuda:0')), ('the', tensor(0.2097, device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('of', tensor(0.1129, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('tikkurila', tensor(0., device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('a', tensor(0.2835, device='cuda:0')), ('majority', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0993, device='cuda:0')), ('kolorit', tensor(0.1952, device='cuda:0')), ('paints', tensor(0., device='cuda:0')), ('in', tensor(0.0993, device='cuda:0')), ('the', tensor(0.2097, device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('of', tensor(0.1129, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 113, example: `` There is no room to modify the share component as we have already indicated . ', prediction: 2, correct_label: 2, class_scores: [0.19264519 0.30046055 0.5068943 ], word_scores: ['`:0.0', '`:0.0', 'there:0.0', 'is:0.0', 'no:0.0', 'room:0.0', 'to:2.886244146793615e-06', 'modify:0.0', 'the:6.3806996877247e-06', 'share:0.0', 'component:0.0', 'as:0.0', 'we:0.0', 'have:2.910326429628185e-06', 'already:0.0', 'indicated:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('there', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('room', tensor(0., device='cuda:0')), ('to', tensor(0.1914, device='cuda:0')), ('modify', tensor(0., device='cuda:0')), ('the', tensor(0.4231, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('component', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.1930, device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('indicated', tensor(0., device='cuda:0')), ('.', tensor(0.1925, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('there', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('room', tensor(0., device='cuda:0')), ('to', tensor(0.1914, device='cuda:0')), ('modify', tensor(0., device='cuda:0')), ('the', tensor(0.4231, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('component', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.1930, device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('indicated', tensor(0., device='cuda:0')), ('.', tensor(0.1925, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 114, example: hu will offer a further discount of between 25 % and 50 % on selected books , prediction: 2, correct_label: 2, class_scores: [0.23077948 0.38377562 0.38544488], word_scores: ['hu:0.0', 'will:4.073096533829812e-06', 'offer:0.0', 'a:8.62785782373976e-06', 'further:0.0', 'discount:0.0', 'of:3.4365734791208524e-06', 'between:0.0', '25:0.0', '%:0.0', 'and:0.0', '50:0.0', '%:0.0', 'on:0.0', 'selected:0.0', 'books:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('hu', tensor(0., device='cuda:0')), ('will', tensor(0.2524, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('a', tensor(0.5346, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('discount', tensor(0., device='cuda:0')), ('of', tensor(0.2130, device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('selected', tensor(0., device='cuda:0')), ('books', tensor(0., device='cuda:0'))],  word_scores_max: [('hu', tensor(0., device='cuda:0')), ('will', tensor(0.2524, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('a', tensor(0.5346, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('discount', tensor(0., device='cuda:0')), ('of', tensor(0.2130, device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('selected', tensor(0., device='cuda:0')), ('books', tensor(0., device='cuda:0'))]
idx: 115, example: Residents access to the block is planned to be from Aleksandri Street , prediction: 2, correct_label: 2, class_scores: [0.18659702 0.2661554  0.5472476 ], word_scores: ['residents:0.0', 'access:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'block:0.0', 'is:0.0', 'planned:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'from:4.495178018260049e-06', 'aleksandr:0.0', '##i:0.0', 'street:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('residents', tensor(0., device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('to', tensor(0.1734, device='cuda:0')), ('the', tensor(0.3833, device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planned', tensor(0., device='cuda:0')), ('to', tensor(0.1734, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('from', tensor(0.2700, device='cuda:0')), ('aleksandri', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0'))],  word_scores_max: [('residents', tensor(0., device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('to', tensor(0.1734, device='cuda:0')), ('the', tensor(0.3833, device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planned', tensor(0., device='cuda:0')), ('to', tensor(0.1734, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('from', tensor(0.2700, device='cuda:0')), ('aleksandri', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0'))]
idx: 116, example: The company , employing 6,400 , reported net sales of 620 mln euro $ 823.2 mln for 2006 , prediction: 1, correct_label: 2, class_scores: [0.16718248 0.42144474 0.41137278], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'employing:0.0', '6:0.0', ',:7.986737728060689e-06', '400:0.0', ',:7.986737728060689e-06', 'reported:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', '620:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '82:0.0', '##3:0.0', '.:2.903296945078182e-06', '2:0.0', 'ml:0.0', '##n:0.0', 'for:0.0', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1471, device='cuda:0')), ('company', tensor(0.1544, device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('employing', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('400', tensor(0., device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0792, device='cuda:0')), ('620', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('823', tensor(0., device='cuda:0')), ('.', tensor(0.0669, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1471, device='cuda:0')), ('company', tensor(0.1544, device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('employing', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('400', tensor(0., device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0792, device='cuda:0')), ('620', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('823', tensor(0., device='cuda:0')), ('.', tensor(0.0669, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 117, example: The company website is www.ahlstrom.com , prediction: 2, correct_label: 2, class_scores: [0.25062203 0.2815426  0.46783543], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'website:0.0', 'is:0.0', 'www:0.0', '.:2.903296945078182e-06', 'ahl:0.0', '##strom:0.0', '.:2.903296945078182e-06', 'com:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3379, device='cuda:0')), ('company', tensor(0.3546, device='cuda:0')), ('website', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.1538, device='cuda:0')), ('ahlstrom', tensor(0., device='cuda:0')), ('.', tensor(0.1538, device='cuda:0')), ('com', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3379, device='cuda:0')), ('company', tensor(0.3546, device='cuda:0')), ('website', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.1538, device='cuda:0')), ('ahlstrom', tensor(0., device='cuda:0')), ('.', tensor(0.1538, device='cuda:0')), ('com', tensor(0., device='cuda:0'))]
idx: 118, example: Again , the most significant sales increase of 18.6 % was in Russia , prediction: 2, correct_label: 1, class_scores: [0.27831832 0.2906503  0.43103135], word_scores: ['again:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'most:0.0', 'significant:0.0', 'sales:0.0', 'increase:0.0', 'of:3.4365734791208524e-06', '18:0.0', '.:2.903296945078182e-06', '6:0.0', '%:0.0', 'was:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('again', tensor(0., device='cuda:0')), (',', tensor(0.3366, device='cuda:0')), ('the', tensor(0.2689, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('of', tensor(0.1448, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.1224, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('in', tensor(0.1273, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('again', tensor(0., device='cuda:0')), (',', tensor(0.3366, device='cuda:0')), ('the', tensor(0.2689, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('of', tensor(0.1448, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.1224, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('in', tensor(0.1273, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 119, example: The contract also includes cutting and edging wagon parts at Ruukki 's steel service centres in Seinajoki and Raahe , from where they will be delivered to VR for welding and assembly , prediction: 2, correct_label: 2, class_scores: [0.20741025 0.36142835 0.43116134], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'also:0.0', 'includes:0.0', 'cutting:0.0', 'and:0.0', 'ed:0.0', '##ging:0.0', 'wagon:0.0', 'parts:0.0', 'at:0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', "':0.0", 's:0.0', 'steel:0.0', 'service:0.0', 'centres:0.0', 'in:3.0217122457543155e-06', 'se:0.0', '##ina:0.0', '##jo:0.0', '##ki:0.0', 'and:0.0', 'ra:0.0', '##ah:0.0', '##e:0.0', ',:7.986737728060689e-06', 'from:4.495178018260049e-06', 'where:0.0', 'they:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'delivered:0.0', 'to:2.886244146793615e-06', 'vr:0.0', 'for:0.0', 'welding:0.0', 'and:0.0', 'assembly:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.4703, device='cuda:0')), ('contract', tensor(0.5297, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('edging', tensor(0., device='cuda:0')), ('wagon', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4703, device='cuda:0')), ('contract', tensor(0.5297, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('edging', tensor(0., device='cuda:0')), ('wagon', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))]
idx: 120, example: The company 's order book stood at 1.5 bln euro $ 2.2 bln on September 30 , 2007 , up by 24.2 pct on the year , with international orders amounting to 365 mln euro $ 534.3 mln , prediction: 2, correct_label: 1, class_scores: [0.19532062 0.32516116 0.47951815], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'order:0.0', 'book:0.0', 'stood:0.0', 'at:0.0', '1:0.0', '.:2.903296945078182e-06', '5:0.0', 'b:0.0', '##ln:0.0', 'euro:0.0', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '2:0.0', 'b:0.0', '##ln:0.0', 'on:0.0', 'september:0.0', '30:0.0', ',:7.986737728060689e-06', '2007:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'by:0.0', '24:0.0', '.:2.903296945078182e-06', '2:0.0', 'pc:0.0', '##t:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'year:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'international:0.0', 'orders:0.0', 'amount:0.0', '##ing:0.0', 'to:2.886244146793615e-06', '365:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '53:0.0', '##4:0.0', '.:2.903296945078182e-06', '3:0.0', 'ml:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 121, example: We look forward to helping the company develop its operational services and further digitalize its services for its customers . ', prediction: 2, correct_label: 1, class_scores: [0.16921322 0.35149565 0.47929114], word_scores: ['we:0.0', 'look:0.0', 'forward:0.0', 'to:2.886244146793615e-06', 'helping:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'develop:0.0', 'its:1.7191393908433383e-06', 'operational:0.0', 'services:0.0', 'and:0.0', 'further:0.0', 'digital:0.0', '##ize:0.0', 'its:1.7191393908433383e-06', 'services:0.0', 'for:0.0', 'its:1.7191393908433383e-06', 'customers:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.1201, device='cuda:0')), ('helping', tensor(0., device='cuda:0')), ('the', tensor(0.2656, device='cuda:0')), ('company', tensor(0.2787, device='cuda:0')), ('develop', tensor(0., device='cuda:0')), ('its', tensor(0.0716, device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('digitalize', tensor(0., device='cuda:0')), ('its', tensor(0.0716, device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.0716, device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('.', tensor(0.1209, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.1201, device='cuda:0')), ('helping', tensor(0., device='cuda:0')), ('the', tensor(0.2656, device='cuda:0')), ('company', tensor(0.2787, device='cuda:0')), ('develop', tensor(0., device='cuda:0')), ('its', tensor(0.0716, device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('digitalize', tensor(0., device='cuda:0')), ('its', tensor(0.0716, device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.0716, device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('.', tensor(0.1209, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 122, example: The contract involves refurbishing the bathrooms of 189 units as well as re-plumbing their water and sewer pipes , prediction: 1, correct_label: 2, class_scores: [0.14652032 0.46113297 0.3923467 ], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'involves:0.0', 'ref:0.0', '##ur:0.0', '##bis:0.0', '##hing:0.0', 'the:6.3806996877247e-06', 'bathrooms:0.0', 'of:3.4365734791208524e-06', '189:0.0', 'units:2.8638919502554927e-06', 'as:0.0', 'well:0.0', 'as:0.0', 're:0.0', '-:4.821180027647642e-06', 'plumbing:0.0', 'their:0.0', 'water:0.0', 'and:0.0', 'sewer:0.0', 'pipes:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2054, device='cuda:0')), ('contract', tensor(0.2313, device='cuda:0')), ('involves', tensor(0., device='cuda:0')), ('refurbishing', tensor(0., device='cuda:0')), ('the', tensor(0.2054, device='cuda:0')), ('bathrooms', tensor(0., device='cuda:0')), ('of', tensor(0.1106, device='cuda:0')), ('189', tensor(0., device='cuda:0')), ('units', tensor(0.0922, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('re', tensor(0., device='cuda:0')), ('-', tensor(0.1552, device='cuda:0')), ('plumbing', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sewer', tensor(0., device='cuda:0')), ('pipes', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2054, device='cuda:0')), ('contract', tensor(0.2313, device='cuda:0')), ('involves', tensor(0., device='cuda:0')), ('refurbishing', tensor(0., device='cuda:0')), ('the', tensor(0.2054, device='cuda:0')), ('bathrooms', tensor(0., device='cuda:0')), ('of', tensor(0.1106, device='cuda:0')), ('189', tensor(0., device='cuda:0')), ('units', tensor(0.0922, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('re', tensor(0., device='cuda:0')), ('-', tensor(0.1552, device='cuda:0')), ('plumbing', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sewer', tensor(0., device='cuda:0')), ('pipes', tensor(0., device='cuda:0'))]
idx: 123, example: The new company will likely hold an IPO on the NYSE or another international stock exchange , according to Altimo which manages the Alfa Group 's telecommunications assets and TeliaSonera 's agreement , which has been published on the website of the U.S. Securities and Exchange Commission , prediction: 2, correct_label: 2, class_scores: [0.24000944 0.36827525 0.39171538], word_scores: ['the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'likely:0.0', 'hold:0.0', 'an:0.0', 'ip:0.0', '##o:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'ny:0.0', '##se:0.0', 'or:0.0', 'another:0.0', 'international:0.0', 'stock:0.0', 'exchange:0.0', ',:7.986737728060689e-06', 'according:0.0', 'to:2.886244146793615e-06', 'alt:0.0', '##imo:0.0', 'which:0.0', 'manages:0.0', 'the:6.3806996877247e-06', 'alfa:0.0', 'group:0.0', "':0.0", 's:0.0', 'telecommunications:0.0', 'assets:0.0', 'and:0.0', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', "':0.0", 's:0.0', 'agreement:0.0', ',:7.986737728060689e-06', 'which:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'published:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'website:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'securities:0.0', 'and:0.0', 'exchange:0.0', 'commission:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('the', tensor(0.1464, device='cuda:0')), ('new', tensor(0.0642, device='cuda:0')), ('company', tensor(0.1536, device='cuda:0')), ('will', tensor(0.0935, device='cuda:0')), ('likely', tensor(0., device='cuda:0')), ('hold', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1464, device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), (',', tensor(0.1833, device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0662, device='cuda:0')), ('altimo', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('manages', tensor(0., device='cuda:0')), ('the', tensor(0.1464, device='cuda:0')), ('alfa', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1464, device='cuda:0')), ('new', tensor(0.0642, device='cuda:0')), ('company', tensor(0.1536, device='cuda:0')), ('will', tensor(0.0935, device='cuda:0')), ('likely', tensor(0., device='cuda:0')), ('hold', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1464, device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), (',', tensor(0.1833, device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0662, device='cuda:0')), ('altimo', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('manages', tensor(0., device='cuda:0')), ('the', tensor(0.1464, device='cuda:0')), ('alfa', tensor(0., device='cuda:0'))]
idx: 124, example: Net sales in 2006 totaled EUR 302 million and the operating margin was 16 % , prediction: 1, correct_label: 2, class_scores: [0.18783633 0.44633105 0.36583266], word_scores: ['net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', '2006:0.0', 'totaled:0.0', 'eu:0.0', '##r:0.0', '302:0.0', 'million:6.018835847498849e-06', 'and:0.0', 'the:6.3806996877247e-06', 'operating:0.0', 'margin:0.0', 'was:0.0', '16:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1959, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('302', tensor(0., device='cuda:0')), ('million', tensor(0.3903, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1959, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('302', tensor(0., device='cuda:0')), ('million', tensor(0.3903, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0'))]
idx: 125, example: It is estimated that the consolidated turnover of Kausta Guder will reach Lt 53mn US$ 22.53 mn EUR 15.35 mn in 2007 , prediction: 2, correct_label: 2, class_scores: [0.2322532  0.3580984  0.40964836], word_scores: ['it:3.3415778943890473e-06', 'is:0.0', 'estimated:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'consolidated:0.0', 'turnover:0.0', 'of:3.4365734791208524e-06', 'ka:0.0', '##ust:0.0', '##a:3.804580501309829e-06', 'gu:0.0', '##der:0.0', 'will:4.073096533829812e-06', 'reach:8.23132722871378e-06', 'lt:0.0', '53:0.0', '##m:0.0', '##n:0.0', 'us:0.0', '$:0.0', '22:0.0', '.:2.903296945078182e-06', '53:0.0', 'mn:0.0', 'eu:0.0', '##r:0.0', '15:0.0', '.:2.903296945078182e-06', '35:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.0933, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('that', tensor(0.0423, device='cuda:0')), ('the', tensor(0.1782, device='cuda:0')), ('consolidated', tensor(0., device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('of', tensor(0.0960, device='cuda:0')), ('kausta', tensor(0., device='cuda:0')), ('guder', tensor(0., device='cuda:0')), ('will', tensor(0.1138, device='cuda:0')), ('reach', tensor(0.2299, device='cuda:0')), ('lt', tensor(0., device='cuda:0')), ('53mn', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('.', tensor(0.0811, device='cuda:0')), ('53', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0811, device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0844, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.0933, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('that', tensor(0.0423, device='cuda:0')), ('the', tensor(0.1782, device='cuda:0')), ('consolidated', tensor(0., device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('of', tensor(0.0960, device='cuda:0')), ('kausta', tensor(0., device='cuda:0')), ('guder', tensor(0., device='cuda:0')), ('will', tensor(0.1138, device='cuda:0')), ('reach', tensor(0.2299, device='cuda:0')), ('lt', tensor(0., device='cuda:0')), ('53mn', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('.', tensor(0.0811, device='cuda:0')), ('53', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0811, device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0844, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 126, example: In the spring 2006 , a total of 386,530 Stock Options 2002 B were annulled , prediction: 2, correct_label: 2, class_scores: [0.22608532 0.3700379  0.4038767 ], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'spring:0.0', '2006:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', '38:0.0', '##6:0.0', ',:7.986737728060689e-06', '530:0.0', 'stock:0.0', 'options:0.0', '2002:0.0', 'b:0.0', 'were:0.0', 'ann:0.0', '##ull:0.0', '##ed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.0807, device='cuda:0')), ('the', tensor(0.1704, device='cuda:0')), ('spring', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2133, device='cuda:0')), ('a', tensor(0.2304, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0918, device='cuda:0')), ('386', tensor(0., device='cuda:0')), (',', tensor(0.2133, device='cuda:0')), ('530', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('2002', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('annulled', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0807, device='cuda:0')), ('the', tensor(0.1704, device='cuda:0')), ('spring', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2133, device='cuda:0')), ('a', tensor(0.2304, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0918, device='cuda:0')), ('386', tensor(0., device='cuda:0')), (',', tensor(0.2133, device='cuda:0')), ('530', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('2002', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('annulled', tensor(0., device='cuda:0'))]
idx: 127, example: Amer Sports divests an industrial site in Rumilly , France -  This announcement is distributed by Thomson Reuters on behalf of Thomson Reuters clients , prediction: 2, correct_label: 2, class_scores: [0.16598134 0.33656195 0.4974568 ], word_scores: ['am:0.0', '##er:0.0', 'sports:0.0', 'dive:0.0', '##sts:0.0', 'an:0.0', 'industrial:0.0', 'site:0.0', 'in:3.0217122457543155e-06', 'rum:0.0', '##illy:0.0', ',:7.986737728060689e-06', 'france:0.0', '-:4.821180027647642e-06', 'this:0.0', 'announcement:0.0', 'is:0.0', 'distributed:0.0', 'by:0.0', 'thomson:0.0', 'reuters:0.0', 'on:0.0', 'behalf:0.0', 'of:3.4365734791208524e-06', 'thomson:0.0', 'reuters:0.0', 'clients:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('amer', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('divests', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('in', tensor(0.1568, device='cuda:0')), ('rumilly', tensor(0., device='cuda:0')), (',', tensor(0.4145, device='cuda:0')), ('france', tensor(0., device='cuda:0')), ('-', tensor(0.2502, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('distributed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('thomson', tensor(0., device='cuda:0')), ('reuters', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('behalf', tensor(0., device='cuda:0')), ('of', tensor(0.1784, device='cuda:0')), ('thomson', tensor(0., device='cuda:0')), ('reuters', tensor(0., device='cuda:0')), ('clients', tensor(0., device='cuda:0'))],  word_scores_max: [('amer', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('divests', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('in', tensor(0.1568, device='cuda:0')), ('rumilly', tensor(0., device='cuda:0')), (',', tensor(0.4145, device='cuda:0')), ('france', tensor(0., device='cuda:0')), ('-', tensor(0.2502, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('distributed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('thomson', tensor(0., device='cuda:0')), ('reuters', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('behalf', tensor(0., device='cuda:0')), ('of', tensor(0.1784, device='cuda:0')), ('thomson', tensor(0., device='cuda:0')), ('reuters', tensor(0., device='cuda:0')), ('clients', tensor(0., device='cuda:0'))]
idx: 128, example: 26 October 2010 - Finnish environmental management company Lassila & Tikanoja Oyj ( HEL : LAT1V ) , or L&T , said today its net profit declined to EUR20 .9 m for the first nine months of 2010 from EUR27 .6 m for the same period a year earlier , prediction: 1, correct_label: 0, class_scores: [0.18379363 0.44874954 0.36745676], word_scores: ['26:0.0', 'october:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'environmental:0.0', 'management:0.0', 'company:6.695386673527537e-06', 'lass:0.0', '##ila:0.0', '&:0.0', 'ti:0.0', '##kan:0.0', '##oja:0.0', '##t:0.0', '##1:0.0', '##v:0.0', '):0.0', ',:7.986737728060689e-06', 'or:0.0', 'l:0.0', '&:0.0', 't:0.0', ',:7.986737728060689e-06', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'declined:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##20:0.0', '.:2.903296945078182e-06', '9:0.0', 'm:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'nine:0.0', 'months:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##27:0.0', '.:2.903296945078182e-06', '6:0.0', 'm:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('26', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0717, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('company', tensor(0.0996, device='cuda:0')), ('lassila', tensor(0., device='cuda:0')), ('tikanojat1v', tensor(0., device='cuda:0')), (',', tensor(0.1188, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), (',', tensor(0.1188, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0256, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('declined', tensor(0., device='cuda:0')), ('to', tensor(0.0429, device='cuda:0')), ('eur20', tensor(0., device='cuda:0')), ('.', tensor(0.0432, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0949, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0511, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0669, device='cuda:0')), ('eur27', tensor(0., device='cuda:0')), ('.', tensor(0.0432, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0949, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1283, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('26', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0717, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('company', tensor(0.0996, device='cuda:0')), ('lassila', tensor(0., device='cuda:0')), ('tikanojat1v', tensor(0., device='cuda:0')), (',', tensor(0.1188, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), (',', tensor(0.1188, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0256, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('declined', tensor(0., device='cuda:0')), ('to', tensor(0.0429, device='cuda:0')), ('eur20', tensor(0., device='cuda:0')), ('.', tensor(0.0432, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0949, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0511, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0669, device='cuda:0')), ('eur27', tensor(0., device='cuda:0')), ('.', tensor(0.0432, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0949, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1283, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 129, example: Mr Ashley , deputy executive chairman of Sports Direct , sold a 43pc stake in the company for more than pounds 900m at the time of the float , prediction: 1, correct_label: 2, class_scores: [0.13931836 0.48517165 0.37550998], word_scores: ['mr:0.0', 'ashley:0.0', ',:7.986737728060689e-06', 'deputy:0.0', 'executive:0.0', 'chairman:3.5376444884605007e-06', 'of:3.4365734791208524e-06', 'sports:0.0', 'direct:0.0', ',:7.986737728060689e-06', 'sold:0.0', 'a:8.62785782373976e-06', '43:0.0', '##pc:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'for:0.0', 'more:0.0', 'than:0.0', 'pounds:0.0', '900:0.0', '##m:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'time:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'float:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('mr', tensor(0., device='cuda:0')), ('ashley', tensor(0., device='cuda:0')), (',', tensor(0.1250, device='cuda:0')), ('deputy', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('chairman', tensor(0.0554, device='cuda:0')), ('of', tensor(0.0538, device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('direct', tensor(0., device='cuda:0')), (',', tensor(0.1250, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('a', tensor(0.1351, device='cuda:0')), ('43pc', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0473, device='cuda:0')), ('the', tensor(0.0999, device='cuda:0')), ('company', tensor(0.1048, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('pounds', tensor(0., device='cuda:0')), ('900m', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0999, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('of', tensor(0.0538, device='cuda:0')), ('the', tensor(0.0999, device='cuda:0')), ('float', tensor(0., device='cuda:0'))],  word_scores_max: [('mr', tensor(0., device='cuda:0')), ('ashley', tensor(0., device='cuda:0')), (',', tensor(0.1250, device='cuda:0')), ('deputy', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('chairman', tensor(0.0554, device='cuda:0')), ('of', tensor(0.0538, device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('direct', tensor(0., device='cuda:0')), (',', tensor(0.1250, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('a', tensor(0.1351, device='cuda:0')), ('43pc', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0473, device='cuda:0')), ('the', tensor(0.0999, device='cuda:0')), ('company', tensor(0.1048, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('pounds', tensor(0., device='cuda:0')), ('900m', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0999, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('of', tensor(0.0538, device='cuda:0')), ('the', tensor(0.0999, device='cuda:0')), ('float', tensor(0., device='cuda:0'))]
idx: 130, example: Finnish Scanfil , a systems supplier and contract manufacturer to the communications sector and the electronics industry , reports its net sales totalled EUR 94.7 mn in the first half of 2010 , down from EUR 99.5 mn in the first half of 2009 , prediction: 2, correct_label: 0, class_scores: [0.2195328  0.33933774 0.44112948], word_scores: ['finnish:0.0', 'scan:0.0', '##fi:0.0', '##l:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'systems:0.0', 'supplier:0.0', 'and:0.0', 'contract:7.1864019446366e-06', 'manufacturer:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'communications:0.0', 'sector:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'electronics:0.0', 'industry:0.0', ',:7.986737728060689e-06', 'reports:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'sales:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '94:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '99:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('scanfil', tensor(0., device='cuda:0')), (',', tensor(0.0858, device='cuda:0')), ('a', tensor(0.0927, device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('contract', tensor(0.0772, device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('to', tensor(0.0310, device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.0858, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('its', tensor(0.0185, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('94', tensor(0., device='cuda:0')), ('.', tensor(0.0312, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.0858, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0483, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('.', tensor(0.0312, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('scanfil', tensor(0., device='cuda:0')), (',', tensor(0.0858, device='cuda:0')), ('a', tensor(0.0927, device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('contract', tensor(0.0772, device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('to', tensor(0.0310, device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.0858, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('its', tensor(0.0185, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('94', tensor(0., device='cuda:0')), ('.', tensor(0.0312, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.0858, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0483, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('.', tensor(0.0312, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0324, device='cuda:0')), ('the', tensor(0.0685, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0369, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 131, example: Operating profit for the three-month period increased from EUR1 .2 m , while revenue increased from EUR20 .2 m , as compared to the corresponding period in 2005 , prediction: 2, correct_label: 1, class_scores: [0.22788028 0.29988256 0.4722372 ], word_scores: ['operating:0.0', 'profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'three:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'increased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##1:0.0', '.:2.903296945078182e-06', '2:0.0', 'm:0.0', ',:7.986737728060689e-06', 'while:0.0', 'revenue:0.0', 'increased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##20:0.0', '.:2.903296945078182e-06', '2:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1176, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('-', tensor(0.0889, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.0828, device='cuda:0')), ('eur1', tensor(0., device='cuda:0')), ('.', tensor(0.0535, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1472, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.0828, device='cuda:0')), ('eur20', tensor(0., device='cuda:0')), ('.', tensor(0.0535, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1472, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0532, device='cuda:0')), ('the', tensor(0.1176, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0557, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1176, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('-', tensor(0.0889, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.0828, device='cuda:0')), ('eur1', tensor(0., device='cuda:0')), ('.', tensor(0.0535, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1472, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.0828, device='cuda:0')), ('eur20', tensor(0., device='cuda:0')), ('.', tensor(0.0535, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1472, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0532, device='cuda:0')), ('the', tensor(0.1176, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0557, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))]
idx: 132, example: You are warmly welcome , prediction: 2, correct_label: 2, class_scores: [0.21599889 0.3460703  0.43793088], word_scores: ['you:0.0', 'are:0.0', 'warmly:0.0', 'welcome:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('you', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('warmly', tensor(nan, device='cuda:0')), ('welcome', tensor(nan, device='cuda:0'))],  word_scores_max: [('you', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('warmly', tensor(nan, device='cuda:0')), ('welcome', tensor(nan, device='cuda:0'))]
idx: 133, example: When open next year , it will be the largest facility in the world to produce diesel fuel from renewable feedstock such as palm oil and animal fat , prediction: 2, correct_label: 1, class_scores: [0.29965243 0.224677   0.47567067], word_scores: ['when:0.0', 'open:0.0', 'next:0.0', 'year:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'be:0.0', 'the:6.3806996877247e-06', 'largest:0.0', 'facility:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'world:0.0', 'to:2.886244146793615e-06', 'produce:0.0', 'diesel:0.0', 'fuel:0.0', 'from:4.495178018260049e-06', 'renewable:0.0', 'feeds:0.0', '##tock:0.0', 'such:0.0', 'as:0.0', 'palm:0.0', 'oil:0.0', 'and:0.0', 'animal:0.0', 'fat:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('when', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.2071, device='cuda:0')), ('it', tensor(0.0866, device='cuda:0')), ('will', tensor(0.1056, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.1654, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('in', tensor(0.0784, device='cuda:0')), ('the', tensor(0.1654, device='cuda:0')), ('world', tensor(0., device='cuda:0')), ('to', tensor(0.0748, device='cuda:0')), ('produce', tensor(0., device='cuda:0')), ('diesel', tensor(0., device='cuda:0')), ('fuel', tensor(0., device='cuda:0')), ('from', tensor(0.1166, device='cuda:0')), ('renewable', tensor(0., device='cuda:0')), ('feedstock', tensor(0., device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('palm', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('animal', tensor(0., device='cuda:0')), ('fat', tensor(0., device='cuda:0'))],  word_scores_max: [('when', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.2071, device='cuda:0')), ('it', tensor(0.0866, device='cuda:0')), ('will', tensor(0.1056, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.1654, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('in', tensor(0.0784, device='cuda:0')), ('the', tensor(0.1654, device='cuda:0')), ('world', tensor(0., device='cuda:0')), ('to', tensor(0.0748, device='cuda:0')), ('produce', tensor(0., device='cuda:0')), ('diesel', tensor(0., device='cuda:0')), ('fuel', tensor(0., device='cuda:0')), ('from', tensor(0.1166, device='cuda:0')), ('renewable', tensor(0., device='cuda:0')), ('feedstock', tensor(0., device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('palm', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('animal', tensor(0., device='cuda:0')), ('fat', tensor(0., device='cuda:0'))]
idx: 134, example: Finnish Bank of +�land reports its operating profit rose to EUR 21.3 mn in the second quarter of 2009 from EUR 6.1 mn in the corresponding period in 2008 , prediction: 1, correct_label: 1, class_scores: [0.2070698  0.48746446 0.30546582], word_scores: ['finnish:0.0', 'bank:0.0', 'of:3.4365734791208524e-06', '+:0.0', 'land:0.0', 'reports:0.0', 'its:1.7191393908433383e-06', 'operating:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '21:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2009:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '6:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('its', tensor(0.0394, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0662, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('the', tensor(0.1463, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('from', tensor(0.1031, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('the', tensor(0.1463, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('its', tensor(0.0394, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0662, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('the', tensor(0.1463, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0788, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('from', tensor(0.1031, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('the', tensor(0.1463, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 135, example: Currently it operates a fleet of eight carriers , as well as nine pushers and barges , prediction: 2, correct_label: 2, class_scores: [0.1817501  0.39568308 0.42256686], word_scores: ['currently:0.0', 'it:3.3415778943890473e-06', 'operates:0.0', 'a:8.62785782373976e-06', 'fleet:0.0', 'of:3.4365734791208524e-06', 'eight:0.0', 'carriers:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'nine:0.0', 'push:0.0', '##ers:5.0093617574020755e-06', 'and:0.0', 'barges:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('currently', tensor(0., device='cuda:0')), ('it', tensor(0.1428, device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('a', tensor(0.3688, device='cuda:0')), ('fleet', tensor(0., device='cuda:0')), ('of', tensor(0.1469, device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('carriers', tensor(0., device='cuda:0')), (',', tensor(0.3414, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('pushers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('barges', tensor(0., device='cuda:0'))],  word_scores_max: [('currently', tensor(0., device='cuda:0')), ('it', tensor(0.1428, device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('a', tensor(0.3688, device='cuda:0')), ('fleet', tensor(0., device='cuda:0')), ('of', tensor(0.1469, device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('carriers', tensor(0., device='cuda:0')), (',', tensor(0.3414, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('pushers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('barges', tensor(0., device='cuda:0'))]
idx: 136, example: The order is related to renewing the network of the telecommunications operator , prediction: 2, correct_label: 2, class_scores: [0.18261154 0.36654285 0.4508456 ], word_scores: ['the:6.3806996877247e-06', 'order:0.0', 'is:0.0', 'related:0.0', 'to:2.886244146793615e-06', 'renew:0.0', '##ing:0.0', 'the:6.3806996877247e-06', 'network:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'telecommunications:0.0', 'operator:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2506, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('to', tensor(0.1133, device='cuda:0')), ('renewing', tensor(0., device='cuda:0')), ('the', tensor(0.2506, device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('of', tensor(0.1350, device='cuda:0')), ('the', tensor(0.2506, device='cuda:0')), ('telecommunications', tensor(0., device='cuda:0')), ('operator', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2506, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('to', tensor(0.1133, device='cuda:0')), ('renewing', tensor(0., device='cuda:0')), ('the', tensor(0.2506, device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('of', tensor(0.1350, device='cuda:0')), ('the', tensor(0.2506, device='cuda:0')), ('telecommunications', tensor(0., device='cuda:0')), ('operator', tensor(0., device='cuda:0'))]
idx: 137, example: The manager is critical of politicians ' failure to differentiate between beleaguered European financial institutions and Skandinavian banks , `` which sailed through the crisis without issues '' , prediction: 1, correct_label: 2, class_scores: [0.2074124  0.4394151  0.35317245], word_scores: ['the:6.3806996877247e-06', 'manager:0.0', 'is:0.0', 'critical:0.0', 'of:3.4365734791208524e-06', 'politicians:0.0', "':0.0", 'failure:0.0', 'to:2.886244146793615e-06', 'differentiate:0.0', 'between:0.0', 'bel:0.0', '##ea:0.0', '##gue:0.0', '##red:0.0', 'european:0.0', 'financial:0.0', 'institutions:0.0', 'and:0.0', 'ska:0.0', '##ndi:0.0', '##na:0.0', '##vian:0.0', 'banks:0.0', ',:7.986737728060689e-06', '`:0.0', '`:0.0', 'which:0.0', 'sailed:0.0', 'through:0.0', 'the:6.3806996877247e-06', 'crisis:0.0', 'without:0.0', 'issues:0.0', "':0.0", "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.6499, device='cuda:0')), ('manager', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('critical', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0'))],  word_scores_max: [('the', tensor(0.6499, device='cuda:0')), ('manager', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('critical', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0'))]
idx: 138, example: UPM-Kymmene www.upm-kymmene.com produces magazine papers and newsprint , as well as fine and specialty papers , converting materials and wood products , prediction: 2, correct_label: 2, class_scores: [0.19080295 0.2691896  0.5400075 ], word_scores: ['up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', 'www:0.0', '.:2.903296945078182e-06', 'up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', '.:2.903296945078182e-06', 'com:0.0', 'produces:0.0', 'magazine:0.0', 'papers:0.0', 'and:0.0', 'news:0.0', '##print:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'fine:0.0', 'and:0.0', 'specialty:0.0', 'papers:0.0', ',:7.986737728060689e-06', 'converting:0.0', 'materials:0.0', 'and:0.0', 'wood:0.0', 'products:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('upm', tensor(0.0435, device='cuda:0')), ('-', tensor(0.1401, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.0844, device='cuda:0')), ('upm', tensor(0.0435, device='cuda:0')), ('-', tensor(0.1401, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('.', tensor(0.0844, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('produces', tensor(0., device='cuda:0')), ('magazine', tensor(0., device='cuda:0')), ('papers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('newsprint', tensor(0., device='cuda:0')), (',', tensor(0.2321, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('fine', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('papers', tensor(0., device='cuda:0')), (',', tensor(0.2321, device='cuda:0')), ('converting', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))],  word_scores_max: [('upm', tensor(0.0435, device='cuda:0')), ('-', tensor(0.1401, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.0844, device='cuda:0')), ('upm', tensor(0.0435, device='cuda:0')), ('-', tensor(0.1401, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('.', tensor(0.0844, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('produces', tensor(0., device='cuda:0')), ('magazine', tensor(0., device='cuda:0')), ('papers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('newsprint', tensor(0., device='cuda:0')), (',', tensor(0.2321, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('fine', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('papers', tensor(0., device='cuda:0')), (',', tensor(0.2321, device='cuda:0')), ('converting', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))]
idx: 139, example: Currently , the plant operates on full capacity , prediction: 1, correct_label: 2, class_scores: [0.15184632 0.48222828 0.3659254 ], word_scores: ['currently:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'plant:0.0', 'operates:0.0', 'on:0.0', 'full:3.0938992949813837e-06', 'capacity:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('currently', tensor(0., device='cuda:0')), (',', tensor(0.4574, device='cuda:0')), ('the', tensor(0.3654, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('full', tensor(0.1772, device='cuda:0')), ('capacity', tensor(0., device='cuda:0'))],  word_scores_max: [('currently', tensor(0., device='cuda:0')), (',', tensor(0.4574, device='cuda:0')), ('the', tensor(0.3654, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('full', tensor(0.1772, device='cuda:0')), ('capacity', tensor(0., device='cuda:0'))]
idx: 140, example: Most recently , he founded Virent Energy Systems , Inc. , an 80 person catalytic biofuels company , where , as president and CEO , he led the company through multiple financings , defined the company 's market strategy , and secured the company 's first customers , prediction: 2, correct_label: 2, class_scores: [0.15298861 0.3957323  0.45127916], word_scores: ['most:0.0', 'recently:0.0', ',:7.986737728060689e-06', 'he:0.0', 'founded:0.0', 'vi:0.0', '##rent:0.0', 'energy:0.0', 'systems:0.0', ',:7.986737728060689e-06', 'inc:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'an:0.0', '80:0.0', 'person:0.0', 'catalytic:0.0', 'bio:0.0', '##fu:0.0', '##els:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'where:0.0', ',:7.986737728060689e-06', 'as:0.0', 'president:0.0', 'and:0.0', 'ceo:0.0', ',:7.986737728060689e-06', 'he:0.0', 'led:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'through:0.0', 'multiple:0.0', 'financing:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'defined:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'market:0.0', 'strategy:0.0', ',:7.986737728060689e-06', 'and:0.0', 'secured:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'first:0.0', 'customers:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('most', tensor(0., device='cuda:0')), ('recently', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('founded', tensor(0., device='cuda:0')), ('virent', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.0342, device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('person', tensor(0., device='cuda:0')), ('catalytic', tensor(0., device='cuda:0')), ('biofuels', tensor(0., device='cuda:0')), ('company', tensor(0.0788, device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('where', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('president', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('led', tensor(0., device='cuda:0')), ('the', tensor(0.0751, device='cuda:0')), ('company', tensor(0.0788, device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('multiple', tensor(0., device='cuda:0')), ('financings', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('defined', tensor(0., device='cuda:0')), ('the', tensor(0.0751, device='cuda:0'))],  word_scores_max: [('most', tensor(0., device='cuda:0')), ('recently', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('founded', tensor(0., device='cuda:0')), ('virent', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.0342, device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('person', tensor(0., device='cuda:0')), ('catalytic', tensor(0., device='cuda:0')), ('biofuels', tensor(0., device='cuda:0')), ('company', tensor(0.0788, device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('where', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('president', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('led', tensor(0., device='cuda:0')), ('the', tensor(0.0751, device='cuda:0')), ('company', tensor(0.0788, device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('multiple', tensor(0., device='cuda:0')), ('financings', tensor(0., device='cuda:0')), (',', tensor(0.0940, device='cuda:0')), ('defined', tensor(0., device='cuda:0')), ('the', tensor(0.0751, device='cuda:0'))]
idx: 141, example: BioTie North-American licensing partner Somaxon Pharmaceuticals started a phase II-III clinical study in patients suffering from pathological gambling and a pilot phase II study in nicotine addiction smoking cessation , prediction: 2, correct_label: 2, class_scores: [0.27355966 0.32583383 0.40060645], word_scores: ['bio:0.0', '##tie:0.0', 'north:0.0', '-:4.821180027647642e-06', 'american:0.0', 'licensing:0.0', 'partner:0.0', 'so:0.0', '##max:0.0', '##on:0.0', 'pharmaceuticals:0.0', 'started:0.0', 'a:8.62785782373976e-06', 'phase:0.0', 'ii:0.0', '-:4.821180027647642e-06', 'iii:0.0', 'clinical:0.0', 'study:0.0', 'in:3.0217122457543155e-06', 'patients:0.0', 'suffering:0.0', 'from:4.495178018260049e-06', 'path:0.0', '##ological:0.0', 'gambling:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'pilot:0.0', 'phase:0.0', 'ii:0.0', 'study:0.0', 'in:3.0217122457543155e-06', 'nico:0.0', '##tine:0.0', 'addiction:0.0', 'smoking:0.0', 'ce:0.0', '##ssa:0.0', '##tion:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('biotie', tensor(0., device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('-', tensor(0.1288, device='cuda:0')), ('american', tensor(0., device='cuda:0')), ('licensing', tensor(0., device='cuda:0')), ('partner', tensor(0., device='cuda:0')), ('somaxon', tensor(0., device='cuda:0')), ('pharmaceuticals', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('a', tensor(0.2305, device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('ii', tensor(0., device='cuda:0')), ('-', tensor(0.1288, device='cuda:0')), ('iii', tensor(0., device='cuda:0')), ('clinical', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('in', tensor(0.0807, device='cuda:0')), ('patients', tensor(0., device='cuda:0')), ('suffering', tensor(0., device='cuda:0')), ('from', tensor(0.1201, device='cuda:0')), ('pathological', tensor(0., device='cuda:0')), ('gambling', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.2305, device='cuda:0')), ('pilot', tensor(0., device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('ii', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('in', tensor(0.0807, device='cuda:0')), ('nicotine', tensor(0., device='cuda:0')), ('addiction', tensor(0., device='cuda:0')), ('smoking', tensor(0., device='cuda:0')), ('cessation', tensor(0., device='cuda:0'))],  word_scores_max: [('biotie', tensor(0., device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('-', tensor(0.1288, device='cuda:0')), ('american', tensor(0., device='cuda:0')), ('licensing', tensor(0., device='cuda:0')), ('partner', tensor(0., device='cuda:0')), ('somaxon', tensor(0., device='cuda:0')), ('pharmaceuticals', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('a', tensor(0.2305, device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('ii', tensor(0., device='cuda:0')), ('-', tensor(0.1288, device='cuda:0')), ('iii', tensor(0., device='cuda:0')), ('clinical', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('in', tensor(0.0807, device='cuda:0')), ('patients', tensor(0., device='cuda:0')), ('suffering', tensor(0., device='cuda:0')), ('from', tensor(0.1201, device='cuda:0')), ('pathological', tensor(0., device='cuda:0')), ('gambling', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.2305, device='cuda:0')), ('pilot', tensor(0., device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('ii', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('in', tensor(0.0807, device='cuda:0')), ('nicotine', tensor(0., device='cuda:0')), ('addiction', tensor(0., device='cuda:0')), ('smoking', tensor(0., device='cuda:0')), ('cessation', tensor(0., device='cuda:0'))]
idx: 142, example: The EBITDA was EUR116m compared to EUR115m , corresponding to an EBITDA margin of 33 % , prediction: 2, correct_label: 1, class_scores: [0.22072177 0.37375185 0.4055264 ], word_scores: ['the:6.3806996877247e-06', 'e:0.0', '##bit:0.0', '##da:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '##11:0.0', '##6:0.0', '##m:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##11:0.0', '##5:0.0', '##m:0.0', ',:7.986737728060689e-06', 'corresponding:0.0', 'to:2.886244146793615e-06', 'an:0.0', 'e:0.0', '##bit:0.0', '##da:0.0', 'margin:0.0', 'of:3.4365734791208524e-06', '33:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2706, device='cuda:0')), ('ebitda', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur116m', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.1224, device='cuda:0')), ('eur115m', tensor(0., device='cuda:0')), (',', tensor(0.3388, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('to', tensor(0.1224, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('ebitda', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('of', tensor(0.1458, device='cuda:0')), ('33', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2706, device='cuda:0')), ('ebitda', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur116m', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.1224, device='cuda:0')), ('eur115m', tensor(0., device='cuda:0')), (',', tensor(0.3388, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('to', tensor(0.1224, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('ebitda', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('of', tensor(0.1458, device='cuda:0')), ('33', tensor(0., device='cuda:0'))]
idx: 143, example: The event can be followed on-line via Orion 's Finnish homepage at www.orion.fi as well as via the Kauppalehti Live web service at www.kauppalehti.fi/live , prediction: 2, correct_label: 2, class_scores: [0.1582443  0.27070293 0.5710528 ], word_scores: ['the:6.3806996877247e-06', 'event:0.0', 'can:0.0', 'be:0.0', 'followed:0.0', 'on:0.0', '-:4.821180027647642e-06', 'line:0.0', 'via:0.0', 'orion:0.0', "':0.0", 's:0.0', 'finnish:0.0', 'home:0.0', '##page:0.0', 'at:0.0', 'www:0.0', '.:2.903296945078182e-06', 'orion:0.0', '.:2.903296945078182e-06', 'fi:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'via:0.0', 'the:6.3806996877247e-06', 'ka:0.0', '##up:0.0', '##pal:0.0', '##eh:0.0', '##ti:2.5915114747476764e-06', 'live:0.0', 'web:0.0', 'service:0.0', 'at:0.0', 'www:0.0', '.:2.903296945078182e-06', 'ka:0.0', '##up:0.0', '##pal:0.0', '##eh:0.0', '##ti:2.5915114747476764e-06', '.:2.903296945078182e-06', 'fi:0.0', '/:0.0', 'live:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.5696, device='cuda:0')), ('event', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('followed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.4304, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5696, device='cuda:0')), ('event', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('followed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.4304, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0'))]
idx: 144, example: Liora 's got a brand-new bag , prediction: 1, correct_label: 2, class_scores: [0.12522395 0.5305978  0.34417826], word_scores: ['li:0.0', '##ora:0.0', "':0.0", 's:0.0', 'got:0.0', 'a:8.62785782373976e-06', 'brand:0.0', '-:4.821180027647642e-06', 'new:2.798587502184091e-06', 'bag:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 145, example: A corresponding increase of 85,432.50 euros in Ahlstrom 's share capital has been entered in the Trade Register today , prediction: 2, correct_label: 2, class_scores: [0.17182405 0.31801778 0.51015824], word_scores: ['a:8.62785782373976e-06', 'corresponding:0.0', 'increase:0.0', 'of:3.4365734791208524e-06', '85:0.0', ',:7.986737728060689e-06', '43:0.0', '##2:0.0', '.:2.903296945078182e-06', '50:0.0', 'euros:0.0', 'in:3.0217122457543155e-06', 'ahl:0.0', '##strom:0.0', "':0.0", 's:0.0', 'share:0.0', 'capital:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'entered:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'trade:0.0', 'register:0.0', 'today:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.3321, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('of', tensor(0.1323, device='cuda:0')), ('85', tensor(0., device='cuda:0')), (',', tensor(0.3075, device='cuda:0')), ('432', tensor(0., device='cuda:0')), ('.', tensor(0.1118, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.1163, device='cuda:0'))],  word_scores_max: [('a', tensor(0.3321, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('of', tensor(0.1323, device='cuda:0')), ('85', tensor(0., device='cuda:0')), (',', tensor(0.3075, device='cuda:0')), ('432', tensor(0., device='cuda:0')), ('.', tensor(0.1118, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.1163, device='cuda:0'))]
idx: 146, example: The order is a follow-on to an 11 mln euro ( $ 16.1 mln ) deal made in July 2007 , prediction: 2, correct_label: 2, class_scores: [0.15603216 0.2635894  0.5803784 ], word_scores: ['the:6.3806996877247e-06', 'order:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'follow:0.0', '-:4.821180027647642e-06', 'on:0.0', 'to:2.886244146793615e-06', 'an:0.0', '11:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '(:0.0', '$:0.0', '16:0.0', '.:2.903296945078182e-06', '1:0.0', 'ml:0.0', '##n:0.0', '):0.0', 'deal:0.0', 'made:0.0', 'in:3.0217122457543155e-06', 'july:0.0', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2228, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.3012, device='cuda:0')), ('follow', tensor(0., device='cuda:0')), ('-', tensor(0.1683, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('to', tensor(0.1008, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.1014, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('in', tensor(0.1055, device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2228, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.3012, device='cuda:0')), ('follow', tensor(0., device='cuda:0')), ('-', tensor(0.1683, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('to', tensor(0.1008, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.1014, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('in', tensor(0.1055, device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 147, example: The value of the order is around EUR 100 million , prediction: 1, correct_label: 2, class_scores: [0.17486341 0.4944219  0.33071473], word_scores: ['the:6.3806996877247e-06', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'order:0.0', 'is:0.0', 'around:0.0', 'eu:0.0', '##r:0.0', '100:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2872, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1547, device='cuda:0')), ('the', tensor(0.2872, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('million', tensor(0.2709, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2872, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1547, device='cuda:0')), ('the', tensor(0.2872, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('million', tensor(0.2709, device='cuda:0'))]
idx: 148, example: The increase in capital stock has been registered in the Finnish Trade Register on 20 November 2006 , prediction: 2, correct_label: 1, class_scores: [0.1831144  0.36151674 0.45536885], word_scores: ['the:6.3806996877247e-06', 'increase:0.0', 'in:3.0217122457543155e-06', 'capital:0.0', 'stock:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'registered:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'trade:0.0', 'register:0.0', 'on:0.0', '20:0.0', 'november:0.0', '2006:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2581, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('in', tensor(0.1222, device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('has', tensor(0.2395, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('registered', tensor(0., device='cuda:0')), ('in', tensor(0.1222, device='cuda:0')), ('the', tensor(0.2581, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('register', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2581, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('in', tensor(0.1222, device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('has', tensor(0.2395, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('registered', tensor(0., device='cuda:0')), ('in', tensor(0.1222, device='cuda:0')), ('the', tensor(0.2581, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('register', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 149, example: Export accounts for about one tenth of the company 's annual turnover of one billion kroons , prediction: 2, correct_label: 2, class_scores: [0.25217307 0.3403908  0.40743613], word_scores: ['export:0.0', 'accounts:0.0', 'for:0.0', 'about:0.0', 'one:4.584404450724833e-06', 'tenth:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'annual:0.0', 'turnover:0.0', 'of:3.4365734791208524e-06', 'one:4.584404450724833e-06', 'billion:0.0', 'k:0.0', '##ro:0.0', '##ons:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('export', tensor(0., device='cuda:0')), ('accounts', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('one', tensor(0.3183, device='cuda:0')), ('tenth', tensor(0., device='cuda:0')), ('of', tensor(0.2386, device='cuda:0')), ('the', tensor(0.4431, device='cuda:0'))],  word_scores_max: [('export', tensor(0., device='cuda:0')), ('accounts', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('one', tensor(0.3183, device='cuda:0')), ('tenth', tensor(0., device='cuda:0')), ('of', tensor(0.2386, device='cuda:0')), ('the', tensor(0.4431, device='cuda:0'))]
idx: 150, example: One of the challenges in the oil production in the North Sea is scale formation that can plug pipelines and halt production , prediction: 1, correct_label: 0, class_scores: [0.12808138 0.47410327 0.39781538], word_scores: ['one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'challenges:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'oil:0.0', 'production:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'north:0.0', 'sea:0.0', 'is:0.0', 'scale:0.0', 'formation:0.0', 'that:1.5133816759771435e-06', 'can:0.0', 'plug:0.0', 'pipeline:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'halt:0.0', 'production:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('one', tensor(0.1320, device='cuda:0')), ('of', tensor(0.0990, device='cuda:0')), ('the', tensor(0.1838, device='cuda:0')), ('challenges', tensor(0., device='cuda:0')), ('in', tensor(0.0870, device='cuda:0')), ('the', tensor(0.1838, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.0870, device='cuda:0')), ('the', tensor(0.1838, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('sea', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scale', tensor(0., device='cuda:0')), ('formation', tensor(0., device='cuda:0')), ('that', tensor(0.0436, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('plug', tensor(0., device='cuda:0')), ('pipelines', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('halt', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0'))],  word_scores_max: [('one', tensor(0.1320, device='cuda:0')), ('of', tensor(0.0990, device='cuda:0')), ('the', tensor(0.1838, device='cuda:0')), ('challenges', tensor(0., device='cuda:0')), ('in', tensor(0.0870, device='cuda:0')), ('the', tensor(0.1838, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.0870, device='cuda:0')), ('the', tensor(0.1838, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('sea', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scale', tensor(0., device='cuda:0')), ('formation', tensor(0., device='cuda:0')), ('that', tensor(0.0436, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('plug', tensor(0., device='cuda:0')), ('pipelines', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('halt', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0'))]
idx: 151, example: Danish company FLSmidth has acknowledged that it has violated a patent held by Finnish Metso , prediction: 1, correct_label: 0, class_scores: [0.19872534 0.4286103  0.3726644 ], word_scores: ['danish:0.0', 'company:6.695386673527537e-06', 'fl:0.0', '##sm:0.0', '##id:0.0', '##th:0.0', 'has:5.9214244174654596e-06', 'acknowledged:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'violated:0.0', 'a:8.62785782373976e-06', 'patent:0.0', 'held:0.0', 'by:0.0', 'finnish:0.0', 'mets:0.0', '##o:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('danish', tensor(0., device='cuda:0')), ('company', tensor(0.2091, device='cuda:0')), ('flsmidth', tensor(0., device='cuda:0')), ('has', tensor(0.1849, device='cuda:0')), ('acknowledged', tensor(0., device='cuda:0')), ('that', tensor(0.0473, device='cuda:0')), ('it', tensor(0.1044, device='cuda:0')), ('has', tensor(0.1849, device='cuda:0')), ('violated', tensor(0., device='cuda:0')), ('a', tensor(0.2694, device='cuda:0')), ('patent', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('metso', tensor(0., device='cuda:0'))],  word_scores_max: [('danish', tensor(0., device='cuda:0')), ('company', tensor(0.2091, device='cuda:0')), ('flsmidth', tensor(0., device='cuda:0')), ('has', tensor(0.1849, device='cuda:0')), ('acknowledged', tensor(0., device='cuda:0')), ('that', tensor(0.0473, device='cuda:0')), ('it', tensor(0.1044, device='cuda:0')), ('has', tensor(0.1849, device='cuda:0')), ('violated', tensor(0., device='cuda:0')), ('a', tensor(0.2694, device='cuda:0')), ('patent', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('metso', tensor(0., device='cuda:0'))]
idx: 152, example: Net cash flow from operations is expected to remain positive , prediction: 1, correct_label: 1, class_scores: [0.20142582 0.40816617 0.390408  ], word_scores: ['net:0.0', 'cash:0.0', 'flow:0.0', 'from:4.495178018260049e-06', 'operations:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'remain:0.0', 'positive:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('net', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('from', tensor(0.6090, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.3910, device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('positive', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('from', tensor(0.6090, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.3910, device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('positive', tensor(0., device='cuda:0'))]
idx: 153, example: Oriola-KD is a spin-off of Finnish pharmaceutical group Orion Oyj 's wholesale division , prediction: 2, correct_label: 2, class_scores: [0.18705325 0.36237058 0.45057622], word_scores: ['or:0.0', '##iol:0.0', '##a:3.804580501309829e-06', '-:4.821180027647642e-06', 'k:0.0', '##d:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'spin:0.0', '-:4.821180027647642e-06', 'off:0.0', 'of:3.4365734791208524e-06', 'finnish:0.0', 'pharmaceutical:0.0', 'group:0.0', 'orion:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', "':0.0", 's:0.0', 'wholesale:0.0', 'division:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('oriola', tensor(0., device='cuda:0')), ('-', tensor(0.2221, device='cuda:0')), ('kd', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.3975, device='cuda:0')), ('spin', tensor(0., device='cuda:0')), ('-', tensor(0.2221, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('of', tensor(0.1583, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('pharmaceutical', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('orion', tensor(0., device='cuda:0'))],  word_scores_max: [('oriola', tensor(0., device='cuda:0')), ('-', tensor(0.2221, device='cuda:0')), ('kd', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.3975, device='cuda:0')), ('spin', tensor(0., device='cuda:0')), ('-', tensor(0.2221, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('of', tensor(0.1583, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('pharmaceutical', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('orion', tensor(0., device='cuda:0'))]
idx: 154, example: Terms were not disclosed , prediction: 2, correct_label: 2, class_scores: [0.16212937 0.40376705 0.43410364], word_scores: ['terms:0.0', 'were:0.0', 'not:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('terms', tensor(nan, device='cuda:0')), ('were', tensor(nan, device='cuda:0')), ('not', tensor(nan, device='cuda:0')), ('disclosed', tensor(nan, device='cuda:0'))],  word_scores_max: [('terms', tensor(nan, device='cuda:0')), ('were', tensor(nan, device='cuda:0')), ('not', tensor(nan, device='cuda:0')), ('disclosed', tensor(nan, device='cuda:0'))]
idx: 155, example: The ISO certification demonstrates that we are moving forward in our quality commitments to our customers . , prediction: 2, correct_label: 1, class_scores: [0.24600528 0.3480643  0.40593046], word_scores: ['the:6.3806996877247e-06', 'iso:0.0', 'certification:0.0', 'demonstrates:0.0', 'that:1.5133816759771435e-06', 'we:0.0', 'are:0.0', 'moving:0.0', 'forward:0.0', 'in:3.0217122457543155e-06', 'our:0.0', 'quality:0.0', 'commitments:0.0', 'to:2.886244146793615e-06', 'our:0.0', 'customers:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3820, device='cuda:0')), ('iso', tensor(0., device='cuda:0')), ('certification', tensor(0., device='cuda:0')), ('demonstrates', tensor(0., device='cuda:0')), ('that', tensor(0.0906, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('moving', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('in', tensor(0.1809, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('commitments', tensor(0., device='cuda:0')), ('to', tensor(0.1728, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('.', tensor(0.1738, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3820, device='cuda:0')), ('iso', tensor(0., device='cuda:0')), ('certification', tensor(0., device='cuda:0')), ('demonstrates', tensor(0., device='cuda:0')), ('that', tensor(0.0906, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('moving', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('in', tensor(0.1809, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('commitments', tensor(0., device='cuda:0')), ('to', tensor(0.1728, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('.', tensor(0.1738, device='cuda:0'))]
idx: 156, example: GeoSentric is acquiring extra financing by issuing a maximum of 220,000 new shares and a convertible bond with subscription rights for 880,000 shares , which have been fully subscribed , prediction: 2, correct_label: 2, class_scores: [0.20666398 0.33342394 0.45991203], word_scores: ['geo:0.0', '##sen:0.0', '##tric:0.0', 'is:0.0', 'acquiring:0.0', 'extra:0.0', 'financing:0.0', 'by:0.0', 'issuing:0.0', 'a:8.62785782373976e-06', 'maximum:0.0', 'of:3.4365734791208524e-06', '220:0.0', ',:7.986737728060689e-06', '000:0.0', 'new:2.798587502184091e-06', 'shares:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'convertible:0.0', 'bond:0.0', 'with:4.733654350275174e-06', 'subscription:0.0', 'rights:0.0', 'for:0.0', '880:0.0', ',:7.986737728060689e-06', '000:0.0', 'shares:0.0', ',:7.986737728060689e-06', 'which:0.0', 'have:2.910326429628185e-06', 'been:0.0', 'fully:0.0', 'sub:0.0', '##scribe:0.0', '##d:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('geosentric', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('extra', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('issuing', tensor(0., device='cuda:0')), ('a', tensor(0.1566, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0624, device='cuda:0')), ('220', tensor(0., device='cuda:0')), (',', tensor(0.1450, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('new', tensor(0.0508, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.1566, device='cuda:0')), ('convertible', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('with', tensor(0.0859, device='cuda:0')), ('subscription', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('880', tensor(0., device='cuda:0')), (',', tensor(0.1450, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), (',', tensor(0.1450, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('have', tensor(0.0528, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0'))],  word_scores_max: [('geosentric', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('extra', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('issuing', tensor(0., device='cuda:0')), ('a', tensor(0.1566, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0624, device='cuda:0')), ('220', tensor(0., device='cuda:0')), (',', tensor(0.1450, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('new', tensor(0.0508, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.1566, device='cuda:0')), ('convertible', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('with', tensor(0.0859, device='cuda:0')), ('subscription', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('880', tensor(0., device='cuda:0')), (',', tensor(0.1450, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), (',', tensor(0.1450, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('have', tensor(0.0528, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0'))]
idx: 157, example: ( ADP News ) - Oct 31 , 2008 - Finnish food company Raisio Oyj ( OMX : RAIVV ) said today that its net profit jumped to EUR 16.4 million ( USD 20.9 m ) for the first nine months of 2008 from EUR 1.1 million for the same period of , prediction: 2, correct_label: 1, class_scores: [0.18930507 0.28291348 0.52778155], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', 'news:0.0', '):0.0', '-:4.821180027647642e-06', 'oct:4.3818322410515975e-06', '31:0.0', ',:7.986737728060689e-06', '2008:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'food:0.0', 'company:6.695386673527537e-06', 'rai:0.0', '##v:0.0', '##v:0.0', '):0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'jumped:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '16:0.0', '.:2.903296945078182e-06', '4:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '20:0.0', '.:2.903296945078182e-06', '9:0.0', 'm:0.0', '):0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'nine:0.0', 'months:0.0', 'of:3.4365734791208524e-06', '2008:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '1:0.0', 'million:6.018835847498849e-06', 'for:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'of:3.4365734791208524e-06', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0605, device='cuda:0')), ('oct', tensor(0.0550, device='cuda:0')), ('31', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('-', tensor(0.0605, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('company', tensor(0.0840, device='cuda:0')), ('raivv', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0190, device='cuda:0')), ('its', tensor(0.0216, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('jumped', tensor(0., device='cuda:0')), ('to', tensor(0.0362, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.0364, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.0755, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.0364, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0801, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0564, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0364, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.0755, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0801, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0'))],  word_scores_max: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0605, device='cuda:0')), ('oct', tensor(0.0550, device='cuda:0')), ('31', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('-', tensor(0.0605, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('company', tensor(0.0840, device='cuda:0')), ('raivv', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0190, device='cuda:0')), ('its', tensor(0.0216, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('jumped', tensor(0., device='cuda:0')), ('to', tensor(0.0362, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.0364, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.0755, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.0364, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0801, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0564, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0364, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.0755, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0801, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0'))]
idx: 158, example: The contract is worth some EUR 1 million , prediction: 2, correct_label: 2, class_scores: [0.22771977 0.32488042 0.44739982], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'is:0.0', 'worth:0.0', 'some:0.0', 'eu:0.0', '##r:0.0', '1:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3258, device='cuda:0')), ('contract', tensor(0.3669, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.3073, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3258, device='cuda:0')), ('contract', tensor(0.3669, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.3073, device='cuda:0'))]
idx: 159, example: E 's building system service had revenue of EUR 355 mln in 2007 , prediction: 2, correct_label: 2, class_scores: [0.1743165  0.39805827 0.42762524], word_scores: ['e:0.0', "':0.0", 's:0.0', 'building:0.0', 'system:2.472523192409426e-06', 'service:0.0', 'had:0.0', 'revenue:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '355:0.0', 'ml:0.0', '##n:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 160, example: The equipment will be made at Vaahto 's plant in Hollola in Finland , and delivery is scheduled for the first quarter of 2009 , prediction: 1, correct_label: 2, class_scores: [0.21922064 0.40508422 0.37569514], word_scores: ['the:6.3806996877247e-06', 'equipment:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'made:0.0', 'at:0.0', 'va:2.3812995095795486e-06', '##ah:0.0', '##to:0.0', "':0.0", 's:0.0', 'plant:0.0', 'in:3.0217122457543155e-06', 'ho:0.0', '##llo:0.0', '##la:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'and:0.0', 'delivery:0.0', 'is:0.0', 'scheduled:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.6104, device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6104, device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))]
idx: 161, example: The record date for dividend distribution is March 14 , 2008 , prediction: 2, correct_label: 2, class_scores: [0.15906835 0.33845332 0.5024783 ], word_scores: ['the:6.3806996877247e-06', 'record:0.0', 'date:0.0', 'for:0.0', 'divide:0.0', '##nd:0.0', 'distribution:0.0', 'is:0.0', 'march:0.0', '14:0.0', ',:7.986737728060689e-06', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4441, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('date', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4441, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('date', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 162, example: We have made long-term investments in developing the system 's implementation model , prediction: 2, correct_label: 2, class_scores: [0.26908842 0.30552712 0.42538446], word_scores: ['we:0.0', 'have:2.910326429628185e-06', 'made:0.0', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'investments:0.0', 'in:3.0217122457543155e-06', 'developing:0.0', 'the:6.3806996877247e-06', 'system:2.472523192409426e-06', "':0.0", 's:0.0', 'implementation:0.0', 'model:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('we', tensor(0., device='cuda:0')), ('have', tensor(0.1699, device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.2814, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('investments', tensor(0., device='cuda:0')), ('in', tensor(0.1764, device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('the', tensor(0.3724, device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('have', tensor(0.1699, device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.2814, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('investments', tensor(0., device='cuda:0')), ('in', tensor(0.1764, device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('the', tensor(0.3724, device='cuda:0'))]
idx: 163, example: Last year , the firm also acquired Realprojekti Oy , a real estate development company , to advise CapMan on its property activities , prediction: 2, correct_label: 2, class_scores: [0.19056025 0.38003168 0.42940804], word_scores: ['last:0.0', 'year:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'firm:0.0', 'also:0.0', 'acquired:0.0', 'real:0.0', '##pro:0.0', '##je:0.0', '##kti:0.0', 'o:0.0', '##y:1.832826342251792e-06', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'real:0.0', 'estate:0.0', 'development:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'advise:0.0', 'cap:0.0', '##man:0.0', 'on:0.0', 'its:1.7191393908433383e-06', 'property:0.0', 'activities:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.1589, device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('realprojekti', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), (',', tensor(0.1589, device='cuda:0')), ('a', tensor(0.1716, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('company', tensor(0.1332, device='cuda:0')), (',', tensor(0.1589, device='cuda:0')), ('to', tensor(0.0574, device='cuda:0')), ('advise', tensor(0., device='cuda:0')), ('capman', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('its', tensor(0.0342, device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0'))],  word_scores_max: [('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.1589, device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('realprojekti', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), (',', tensor(0.1589, device='cuda:0')), ('a', tensor(0.1716, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('company', tensor(0.1332, device='cuda:0')), (',', tensor(0.1589, device='cuda:0')), ('to', tensor(0.0574, device='cuda:0')), ('advise', tensor(0., device='cuda:0')), ('capman', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('its', tensor(0.0342, device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0'))]
idx: 164, example: Thanks to the internet , consumers compare products more than previously and Finnish companies are not competitive , prediction: 2, correct_label: 0, class_scores: [0.16760214 0.3909277  0.44147015], word_scores: ['thanks:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'internet:0.0', ',:7.986737728060689e-06', 'consumers:0.0', 'compare:0.0', 'products:0.0', 'more:0.0', 'than:0.0', 'previously:0.0', 'and:0.0', 'finnish:0.0', 'companies:0.0', 'are:0.0', 'not:0.0', 'competitive:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('thanks', tensor(0., device='cuda:0')), ('to', tensor(0.1673, device='cuda:0')), ('the', tensor(0.3698, device='cuda:0')), ('internet', tensor(0., device='cuda:0')), (',', tensor(0.4629, device='cuda:0')), ('consumers', tensor(0., device='cuda:0')), ('compare', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('competitive', tensor(0., device='cuda:0'))],  word_scores_max: [('thanks', tensor(0., device='cuda:0')), ('to', tensor(0.1673, device='cuda:0')), ('the', tensor(0.3698, device='cuda:0')), ('internet', tensor(0., device='cuda:0')), (',', tensor(0.4629, device='cuda:0')), ('consumers', tensor(0., device='cuda:0')), ('compare', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('competitive', tensor(0., device='cuda:0'))]
idx: 165, example: The Annual Report will be sent automatically to shareholders holding at least 2,000 Sampo plc shares , prediction: 2, correct_label: 2, class_scores: [0.12224017 0.37820917 0.49955064], word_scores: ['the:6.3806996877247e-06', 'annual:0.0', 'report:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'sent:0.0', 'automatically:0.0', 'to:2.886244146793615e-06', 'shareholders:0.0', 'holding:0.0', 'at:0.0', 'least:0.0', '2:0.0', ',:7.986737728060689e-06', '000:0.0', 'sam:0.0', '##po:0.0', 'plc:0.0', 'shares:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2992, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('will', tensor(0.1910, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('sent', tensor(0., device='cuda:0')), ('automatically', tensor(0., device='cuda:0')), ('to', tensor(0.1353, device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('least', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.3745, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2992, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('will', tensor(0.1910, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('sent', tensor(0., device='cuda:0')), ('automatically', tensor(0., device='cuda:0')), ('to', tensor(0.1353, device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('least', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.3745, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0'))]
idx: 166, example: Incap Furniture is presently negotiating staff cuts , prediction: 2, correct_label: 0, class_scores: [0.20132145 0.3673247  0.43135384], word_scores: ['inca:0.0', '##p:0.0', 'furniture:0.0', 'is:0.0', 'presently:0.0', 'negotiating:0.0', 'staff:0.0', 'cuts:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('incap', tensor(nan, device='cuda:0')), ('furniture', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('presently', tensor(nan, device='cuda:0')), ('negotiating', tensor(nan, device='cuda:0')), ('staff', tensor(nan, device='cuda:0')), ('cuts', tensor(nan, device='cuda:0'))],  word_scores_max: [('incap', tensor(nan, device='cuda:0')), ('furniture', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('presently', tensor(nan, device='cuda:0')), ('negotiating', tensor(nan, device='cuda:0')), ('staff', tensor(nan, device='cuda:0')), ('cuts', tensor(nan, device='cuda:0'))]
idx: 167, example: Earnings per share ( EPS ) dropped to EUR 0.21 from EUR 0.31 , prediction: 2, correct_label: 0, class_scores: [0.24425277 0.30329672 0.4524505 ], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', '(:0.0', 'eps:0.0', '):0.0', 'dropped:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '21:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '31:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('dropped', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('31', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('dropped', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('31', tensor(0., device='cuda:0'))]
idx: 168, example: One of the installed elevators will be a double-deck elevator , which enables more efficient use of the building 's core space , prediction: 1, correct_label: 1, class_scores: [0.18492734 0.42295024 0.39212245], word_scores: ['one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'installed:0.0', 'elevators:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'a:8.62785782373976e-06', 'double:0.0', '-:4.821180027647642e-06', 'deck:0.0', 'elevator:0.0', ',:7.986737728060689e-06', 'which:0.0', 'enables:0.0', 'more:0.0', 'efficient:0.0', 'use:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'building:0.0', "':0.0", 's:0.0', 'core:0.0', 'space:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('one', tensor(0.0922, device='cuda:0')), ('of', tensor(0.0691, device='cuda:0')), ('the', tensor(0.1283, device='cuda:0')), ('installed', tensor(0., device='cuda:0')), ('elevators', tensor(0., device='cuda:0')), ('will', tensor(0.0819, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1735, device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('-', tensor(0.0970, device='cuda:0')), ('deck', tensor(0., device='cuda:0')), ('elevator', tensor(0., device='cuda:0')), (',', tensor(0.1606, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('of', tensor(0.0691, device='cuda:0')), ('the', tensor(0.1283, device='cuda:0'))],  word_scores_max: [('one', tensor(0.0922, device='cuda:0')), ('of', tensor(0.0691, device='cuda:0')), ('the', tensor(0.1283, device='cuda:0')), ('installed', tensor(0., device='cuda:0')), ('elevators', tensor(0., device='cuda:0')), ('will', tensor(0.0819, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1735, device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('-', tensor(0.0970, device='cuda:0')), ('deck', tensor(0., device='cuda:0')), ('elevator', tensor(0., device='cuda:0')), (',', tensor(0.1606, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('of', tensor(0.0691, device='cuda:0')), ('the', tensor(0.1283, device='cuda:0'))]
idx: 169, example: The companies have agreed on long-term cooperation to mechanise harvesting in Stora Enso 's eucalyptus plantations in Southern China , prediction: 2, correct_label: 1, class_scores: [0.27693695 0.34791064 0.37515238], word_scores: ['the:6.3806996877247e-06', 'companies:0.0', 'have:2.910326429628185e-06', 'agreed:0.0', 'on:0.0', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'cooperation:0.0', 'to:2.886244146793615e-06', 'me:0.0', '##chan:0.0', '##ise:0.0', 'harvesting:0.0', 'in:3.0217122457543155e-06', 'st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', "':0.0", 's:0.0', 'eucalyptus:0.0', 'plantations:0.0', 'in:3.0217122457543155e-06', 'southern:0.0', 'china:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3187, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('have', tensor(0.1454, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.2408, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('to', tensor(0.1442, device='cuda:0')), ('mechanise', tensor(0., device='cuda:0')), ('harvesting', tensor(0., device='cuda:0')), ('in', tensor(0.1509, device='cuda:0')), ('stora', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3187, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('have', tensor(0.1454, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.2408, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('to', tensor(0.1442, device='cuda:0')), ('mechanise', tensor(0., device='cuda:0')), ('harvesting', tensor(0., device='cuda:0')), ('in', tensor(0.1509, device='cuda:0')), ('stora', tensor(0., device='cuda:0'))]
idx: 170, example: The proposal by the Board of Directors on the issuance of option rights will otherwise correspond to the proposal by the Board of Directors in the Notice to the General Meeting , prediction: 2, correct_label: 2, class_scores: [0.22955476 0.3549752  0.41547   ], word_scores: ['the:6.3806996877247e-06', 'proposal:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'iss:0.0', '##uance:0.0', 'of:3.4365734791208524e-06', 'option:0.0', 'rights:0.0', 'will:4.073096533829812e-06', 'otherwise:0.0', 'correspond:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'proposal:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'notice:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'general:0.0', 'meeting:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0941, device='cuda:0')), ('proposal', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('issuance', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('will', tensor(0.0600, device='cuda:0')), ('otherwise', tensor(0., device='cuda:0')), ('correspond', tensor(0., device='cuda:0')), ('to', tensor(0.0425, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('proposal', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('in', tensor(0.0445, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('notice', tensor(0., device='cuda:0')), ('to', tensor(0.0425, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0941, device='cuda:0')), ('proposal', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('issuance', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('will', tensor(0.0600, device='cuda:0')), ('otherwise', tensor(0., device='cuda:0')), ('correspond', tensor(0., device='cuda:0')), ('to', tensor(0.0425, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('proposal', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0507, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('in', tensor(0.0445, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('notice', tensor(0., device='cuda:0')), ('to', tensor(0.0425, device='cuda:0')), ('the', tensor(0.0941, device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0'))]
idx: 171, example: The businesses to be divested offer dairy , edible fats , ready-meal and ice-cream packaging to multinational and local customers , prediction: 2, correct_label: 2, class_scores: [0.22171612 0.26552922 0.5127547 ], word_scores: ['the:6.3806996877247e-06', 'businesses:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'dive:0.0', '##sted:0.0', 'offer:0.0', 'dairy:0.0', ',:7.986737728060689e-06', 'edible:0.0', 'fat:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'ready:0.0', '-:4.821180027647642e-06', 'meal:0.0', 'and:0.0', 'ice:0.0', '-:4.821180027647642e-06', 'cream:0.0', 'packaging:0.0', 'to:2.886244146793615e-06', 'multinational:0.0', 'and:0.0', 'local:0.0', 'customers:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1689, device='cuda:0')), ('businesses', tensor(0., device='cuda:0')), ('to', tensor(0.0764, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('divested', tensor(0., device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('dairy', tensor(0., device='cuda:0')), (',', tensor(0.2115, device='cuda:0')), ('edible', tensor(0., device='cuda:0')), ('fats', tensor(0., device='cuda:0')), (',', tensor(0.2115, device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('meal', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ice', tensor(0., device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('cream', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), ('to', tensor(0.0764, device='cuda:0')), ('multinational', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1689, device='cuda:0')), ('businesses', tensor(0., device='cuda:0')), ('to', tensor(0.0764, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('divested', tensor(0., device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('dairy', tensor(0., device='cuda:0')), (',', tensor(0.2115, device='cuda:0')), ('edible', tensor(0., device='cuda:0')), ('fats', tensor(0., device='cuda:0')), (',', tensor(0.2115, device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('meal', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ice', tensor(0., device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('cream', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), ('to', tensor(0.0764, device='cuda:0')), ('multinational', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0'))]
idx: 172, example: Finnish Suominen Flexible Packaging is cutting 48 jobs in its unit in Tampere and two in Nastola , in Finland , prediction: 2, correct_label: 0, class_scores: [0.20866981 0.23091991 0.5604103 ], word_scores: ['finnish:0.0', 'su:0.0', '##omi:0.0', '##nen:0.0', 'flexible:0.0', 'packaging:0.0', 'is:0.0', 'cutting:0.0', '48:0.0', 'jobs:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'unit:0.0', 'in:3.0217122457543155e-06', 'tam:0.0', '##per:0.0', '##e:0.0', 'and:0.0', 'two:0.0', 'in:3.0217122457543155e-06', 'nas:0.0', '##to:0.0', '##la:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('suominen', tensor(0., device='cuda:0')), ('flexible', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('its', tensor(0.0664, device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('tampere', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('nastola', tensor(0., device='cuda:0')), (',', tensor(0.3085, device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('finland', tensor(0.1582, device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('suominen', tensor(0., device='cuda:0')), ('flexible', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('its', tensor(0.0664, device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('tampere', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('nastola', tensor(0., device='cuda:0')), (',', tensor(0.3085, device='cuda:0')), ('in', tensor(0.1167, device='cuda:0')), ('finland', tensor(0.1582, device='cuda:0'))]
idx: 173, example: `` Korean consumers are tech-savvy and leading the pack in terms of design , '' Gill Hyun-chang , president of Motorola Korea Inc. , told Dow Jones Newswires in an interview , prediction: 2, correct_label: 2, class_scores: [0.22667748 0.3420117  0.4313108 ], word_scores: ['`:0.0', '`:0.0', 'korean:0.0', 'consumers:0.0', 'are:0.0', 'tech:0.0', '-:4.821180027647642e-06', 'sa:0.0', '##v:0.0', '##vy:0.0', 'and:0.0', 'leading:0.0', 'the:6.3806996877247e-06', 'pack:0.0', 'in:3.0217122457543155e-06', 'terms:0.0', 'of:3.4365734791208524e-06', 'design:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'gill:0.0', 'hyun:0.0', '-:4.821180027647642e-06', 'chang:0.0', ',:7.986737728060689e-06', 'president:0.0', 'of:3.4365734791208524e-06', 'motorola:0.0', 'korea:0.0', 'inc:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'told:0.0', 'dow:0.0', 'jones:0.0', 'news:0.0', '##wire:0.0', '##s:4.601175078278175e-06', 'in:3.0217122457543155e-06', 'an:0.0', 'interview:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('korean', tensor(0., device='cuda:0')), ('consumers', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('tech', tensor(0., device='cuda:0')), ('-', tensor(0.1880, device='cuda:0')), ('savvy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('the', tensor(0.2488, device='cuda:0')), ('pack', tensor(0., device='cuda:0')), ('in', tensor(0.1178, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.1340, device='cuda:0')), ('design', tensor(0., device='cuda:0')), (',', tensor(0.3114, device='cuda:0'))],  word_scores_max: [('korean', tensor(0., device='cuda:0')), ('consumers', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('tech', tensor(0., device='cuda:0')), ('-', tensor(0.1880, device='cuda:0')), ('savvy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('the', tensor(0.2488, device='cuda:0')), ('pack', tensor(0., device='cuda:0')), ('in', tensor(0.1178, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.1340, device='cuda:0')), ('design', tensor(0., device='cuda:0')), (',', tensor(0.3114, device='cuda:0'))]
idx: 174, example: The serial bond is part of the plan to refinance the short-term credit facility , prediction: 2, correct_label: 2, class_scores: [0.25559747 0.3098311  0.43457144], word_scores: ['the:6.3806996877247e-06', 'serial:0.0', 'bond:0.0', 'is:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'plan:0.0', 'to:2.886244146793615e-06', 'ref:0.0', '##ina:0.0', '##nce:0.0', 'the:6.3806996877247e-06', 'short:0.0', '-:4.821180027647642e-06', 'term:0.0', 'credit:0.0', 'facility:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2107, device='cuda:0')), ('serial', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1135, device='cuda:0')), ('the', tensor(0.2107, device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('to', tensor(0.0953, device='cuda:0')), ('refinance', tensor(0., device='cuda:0')), ('the', tensor(0.2107, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('-', tensor(0.1592, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2107, device='cuda:0')), ('serial', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1135, device='cuda:0')), ('the', tensor(0.2107, device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('to', tensor(0.0953, device='cuda:0')), ('refinance', tensor(0., device='cuda:0')), ('the', tensor(0.2107, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('-', tensor(0.1592, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0'))]
idx: 175, example: Finnish Bank of +�land +�landsbanken has issued a profit warning , prediction: 2, correct_label: 0, class_scores: [0.18903904 0.401722   0.40923887], word_scores: ['finnish:0.0', 'bank:0.0', 'of:3.4365734791208524e-06', '+:0.0', 'land:0.0', '+:0.0', 'lands:0.0', '##bank:0.0', '##en:0.0', 'has:5.9214244174654596e-06', 'issued:0.0', 'a:8.62785782373976e-06', 'profit:0.0', 'warning:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.1911, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('landsbanken', tensor(0., device='cuda:0')), ('has', tensor(0.3292, device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('a', tensor(0.4797, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('warning', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.1911, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('landsbanken', tensor(0., device='cuda:0')), ('has', tensor(0.3292, device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('a', tensor(0.4797, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('warning', tensor(0., device='cuda:0'))]
idx: 176, example: Sukhraj Dulai , of the 2900 block of Boni Sue Court , a cul-de-sac on the city 's north side , started the vehicle and went inside his house about 8 a.m. Tuesday , leaving the garage door open , prediction: 1, correct_label: 2, class_scores: [0.25175616 0.3779132  0.3703307 ], word_scores: ['su:0.0', '##kh:0.0', '##raj:0.0', 'du:0.0', '##lai:0.0', ',:7.986737728060689e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', '290:0.0', '##0:0.0', 'block:0.0', 'of:3.4365734791208524e-06', 'bon:0.0', '##i:0.0', 'sue:0.0', 'court:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'cu:0.0', '##l:0.0', '-:4.821180027647642e-06', 'de:0.0', '-:4.821180027647642e-06', 'sac:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'city:0.0', "':0.0", 's:0.0', 'north:0.0', 'side:0.0', ',:7.986737728060689e-06', 'started:0.0', 'the:6.3806996877247e-06', 'vehicle:0.0', 'and:0.0', 'went:0.0', 'inside:0.0', 'his:0.0', 'house:0.0', 'about:0.0', '8:0.0', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', 'm:0.0', '.:2.903296945078182e-06', 'tuesday:0.0', ',:7.986737728060689e-06', 'leaving:0.0', 'the:6.3806996877247e-06', 'garage:0.0', 'door:0.0', 'open:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sukhraj', tensor(0., device='cuda:0')), ('dulai', tensor(0., device='cuda:0')), (',', tensor(0.1482, device='cuda:0')), ('of', tensor(0.0638, device='cuda:0')), ('the', tensor(0.1184, device='cuda:0')), ('2900', tensor(0., device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('of', tensor(0.0638, device='cuda:0')), ('boni', tensor(0., device='cuda:0')), ('sue', tensor(0., device='cuda:0')), ('court', tensor(0., device='cuda:0')), (',', tensor(0.1482, device='cuda:0')), ('a', tensor(0.1601, device='cuda:0')), ('cul', tensor(0., device='cuda:0')), ('-', tensor(0.0895, device='cuda:0')), ('de', tensor(0., device='cuda:0')), ('-', tensor(0.0895, device='cuda:0')), ('sac', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1184, device='cuda:0'))],  word_scores_max: [('sukhraj', tensor(0., device='cuda:0')), ('dulai', tensor(0., device='cuda:0')), (',', tensor(0.1482, device='cuda:0')), ('of', tensor(0.0638, device='cuda:0')), ('the', tensor(0.1184, device='cuda:0')), ('2900', tensor(0., device='cuda:0')), ('block', tensor(0., device='cuda:0')), ('of', tensor(0.0638, device='cuda:0')), ('boni', tensor(0., device='cuda:0')), ('sue', tensor(0., device='cuda:0')), ('court', tensor(0., device='cuda:0')), (',', tensor(0.1482, device='cuda:0')), ('a', tensor(0.1601, device='cuda:0')), ('cul', tensor(0., device='cuda:0')), ('-', tensor(0.0895, device='cuda:0')), ('de', tensor(0., device='cuda:0')), ('-', tensor(0.0895, device='cuda:0')), ('sac', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1184, device='cuda:0'))]
idx: 177, example: The Lemminkainen Group , headquartered in Helsinki , Finland , operates in all sectors of the construction industry : civil engineering , building contracting , technical building services and the building materials industry , prediction: 1, correct_label: 2, class_scores: [0.24602947 0.40065223 0.35331833], word_scores: ['the:6.3806996877247e-06', 'le:0.0', '##mm:0.0', '##ink:0.0', '##aine:0.0', '##n:0.0', 'group:0.0', ',:7.986737728060689e-06', 'headquartered:0.0', 'in:3.0217122457543155e-06', 'helsinki:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'operates:0.0', 'in:3.0217122457543155e-06', 'all:0.0', 'sectors:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'construction:0.0', 'industry:0.0', '::0.0', 'civil:0.0', 'engineering:0.0', ',:7.986737728060689e-06', 'building:0.0', 'contracting:0.0', ',:7.986737728060689e-06', 'technical:0.0', 'building:0.0', 'services:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'building:0.0', 'materials:0.0', 'industry:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0878, device='cuda:0')), ('lemminkainen', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('finland', tensor(0.0564, device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('sectors', tensor(0., device='cuda:0')), ('of', tensor(0.0473, device='cuda:0')), ('the', tensor(0.0878, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('civil', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('contracting', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0878, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0878, device='cuda:0')), ('lemminkainen', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('finland', tensor(0.0564, device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('sectors', tensor(0., device='cuda:0')), ('of', tensor(0.0473, device='cuda:0')), ('the', tensor(0.0878, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('civil', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('contracting', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0878, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0'))]
idx: 178, example: The acquisition price was not disclosed , prediction: 1, correct_label: 2, class_scores: [0.21026768 0.39754584 0.39218646], word_scores: ['the:6.3806996877247e-06', 'acquisition:0.0', 'price:0.0', 'was:0.0', 'not:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))]
idx: 179, example: `` The flex is a small price to pay for happy lenders . ', prediction: 2, correct_label: 2, class_scores: [0.18216564 0.3966364  0.42119795], word_scores: ['`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'flex:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'small:0.0', 'price:0.0', 'to:2.886244146793615e-06', 'pay:0.0', 'for:0.0', 'happy:0.0', 'lend:0.0', '##ers:5.0093617574020755e-06', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3068, device='cuda:0')), ('flex', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.4148, device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('to', tensor(0.1388, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('happy', tensor(0., device='cuda:0')), ('lenders', tensor(0., device='cuda:0')), ('.', tensor(0.1396, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3068, device='cuda:0')), ('flex', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.4148, device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('to', tensor(0.1388, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('happy', tensor(0., device='cuda:0')), ('lenders', tensor(0., device='cuda:0')), ('.', tensor(0.1396, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 180, example: Metso will supply the equipment for two process lines at Northland Resources ' new Kaunisvaara iron ore project in Sweden which exploits Tapuli and Sahavaara iron ore deposits , prediction: 2, correct_label: 1, class_scores: [0.17919086 0.320387   0.5004222 ], word_scores: ['mets:0.0', '##o:0.0', 'will:4.073096533829812e-06', 'supply:6.221108833415201e-06', 'the:6.3806996877247e-06', 'equipment:0.0', 'for:0.0', 'two:0.0', 'process:0.0', 'lines:0.0', 'at:0.0', 'north:0.0', '##land:0.0', 'resources:3.8971406866039615e-06', "':0.0", 'new:2.798587502184091e-06', 'ka:0.0', '##uni:0.0', '##s:4.601175078278175e-06', '##va:0.0', '##ara:0.0', 'iron:0.0', 'ore:0.0', 'project:0.0', 'in:3.0217122457543155e-06', 'sweden:0.0', 'which:0.0', 'exploits:0.0', 'tap:0.0', '##uli:0.0', 'and:0.0', 'sa:0.0', '##ha:0.0', '##va:0.0', '##ara:0.0', 'iron:0.0', 'ore:0.0', 'deposits:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('metso', tensor(0., device='cuda:0')), ('will', tensor(0.2443, device='cuda:0')), ('supply', tensor(0.3731, device='cuda:0')), ('the', tensor(0.3827, device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('northland', tensor(0., device='cuda:0'))],  word_scores_max: [('metso', tensor(0., device='cuda:0')), ('will', tensor(0.2443, device='cuda:0')), ('supply', tensor(0.3731, device='cuda:0')), ('the', tensor(0.3827, device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('northland', tensor(0., device='cuda:0'))]
idx: 181, example: In the Czech Republic , the profiling unit at Ostrava will be closed and the machinery will be relocated to Ruukki 's bigger plants in Hungary , Poland and Romania by the end of the first quarter of 2009 , prediction: 2, correct_label: 2, class_scores: [0.1695643  0.35904455 0.47139114], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'czech:0.0', 'republic:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'prof:0.0', '##iling:0.0', 'unit:0.0', 'at:0.0', 'os:0.0', '##tra:0.0', '##va:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'closed:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'machinery:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'relocated:0.0', 'to:2.886244146793615e-06', 'ru:0.0', '##uk:0.0', '##ki:0.0', "':0.0", 's:0.0', 'bigger:0.0', 'plants:0.0', 'in:3.0217122457543155e-06', 'hungary:0.0', ',:7.986737728060689e-06', 'poland:0.0', 'and:0.0', 'romania:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0734, device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('czech', tensor(0., device='cuda:0')), ('republic', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('profiling', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('ostrava', tensor(0., device='cuda:0')), ('will', tensor(0.0989, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('closed', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('will', tensor(0.0989, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('relocated', tensor(0., device='cuda:0')), ('to', tensor(0.0701, device='cuda:0'))],  word_scores_max: [('in', tensor(0.0734, device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('czech', tensor(0., device='cuda:0')), ('republic', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('profiling', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('ostrava', tensor(0., device='cuda:0')), ('will', tensor(0.0989, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('closed', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('will', tensor(0.0989, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('relocated', tensor(0., device='cuda:0')), ('to', tensor(0.0701, device='cuda:0'))]
idx: 182, example: At the end of the review period , Nordic Aluminium 's order book stood at EUR 8.77 mn compared to EUR 7.04 in 2005 , prediction: 2, correct_label: 1, class_scores: [0.21582215 0.3544272  0.42975068], word_scores: ['at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'review:0.0', 'period:0.0', ',:7.986737728060689e-06', 'nordic:0.0', 'aluminium:0.0', "':0.0", 's:0.0', 'order:0.0', 'book:0.0', 'stood:0.0', 'at:0.0', 'eu:0.0', '##r:0.0', '8:0.0', '.:2.903296945078182e-06', '77:0.0', 'mn:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '7:0.0', '.:2.903296945078182e-06', '04:0.0', 'in:3.0217122457543155e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('at', tensor(0., device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1421, device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('review', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), (',', tensor(0.3302, device='cuda:0')), ('nordic', tensor(0., device='cuda:0'))],  word_scores_max: [('at', tensor(0., device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1421, device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('review', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), (',', tensor(0.3302, device='cuda:0')), ('nordic', tensor(0., device='cuda:0'))]
idx: 183, example: Helsinki on October 22 , 2008 SSH COMMUNICATIONS SECURITY CORP Board of Directors For further information , please contact : Tomi Laamanen , Chairman , tel. +358 0 400 609 544 Distribution : NASDAQ OMX Helsinki Ltd. , prediction: 2, correct_label: 2, class_scores: [0.28267315 0.29899776 0.41832912], word_scores: ['helsinki:0.0', 'on:0.0', 'october:0.0', '22:0.0', ',:7.986737728060689e-06', '2008:0.0', 'ss:0.0', '##h:0.0', 'communications:0.0', 'security:0.0', 'corp:0.0', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'for:0.0', 'further:0.0', 'information:0.0', ',:7.986737728060689e-06', 'please:0.0', 'contact:0.0', '::0.0', 'tom:0.0', '##i:0.0', 'la:0.0', '##aman:0.0', '##en:0.0', ',:7.986737728060689e-06', 'chairman:3.5376444884605007e-06', ',:7.986737728060689e-06', 'tel:0.0', '.:2.903296945078182e-06', '+:0.0', '35:0.0', '##8:0.0', '0:0.0', '400:0.0', '60:0.0', '##9:0.0', '54:0.0', '##4:0.0', 'distribution:0.0', '::0.0', 'nas:0.0', '##da:0.0', '##q:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', 'ltd:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('helsinki', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('ssh', tensor(0., device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0768, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('please', tensor(0., device='cuda:0')), ('contact', tensor(0., device='cuda:0')), ('tomi', tensor(0., device='cuda:0')), ('laamanen', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('chairman', tensor(0.0791, device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('tel', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('358', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('400', tensor(0., device='cuda:0')), ('609', tensor(0., device='cuda:0')), ('544', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('nasdaq', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0'))],  word_scores_max: [('helsinki', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('ssh', tensor(0., device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0768, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('please', tensor(0., device='cuda:0')), ('contact', tensor(0., device='cuda:0')), ('tomi', tensor(0., device='cuda:0')), ('laamanen', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('chairman', tensor(0.0791, device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('tel', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('358', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('400', tensor(0., device='cuda:0')), ('609', tensor(0., device='cuda:0')), ('544', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('nasdaq', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0'))]
idx: 184, example: Finnish Kemira Group 's CEO , Lasse Kurkilahti , says the Group 's structural reorganisation will continue for at least a year , prediction: 2, correct_label: 2, class_scores: [0.15819836 0.39007556 0.45172605], word_scores: ['finnish:0.0', 'ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', 'group:0.0', "':0.0", 's:0.0', 'ceo:0.0', ',:7.986737728060689e-06', 'lass:0.0', '##e:0.0', 'ku:0.0', '##rk:0.0', '##ila:0.0', '##ht:0.0', '##i:0.0', ',:7.986737728060689e-06', 'says:0.0', 'the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'structural:0.0', 'reorganisation:0.0', 'will:4.073096533829812e-06', 'continue:0.0', 'for:0.0', 'at:0.0', 'least:0.0', 'a:8.62785782373976e-06', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(nan, device='cuda:0')), ('kemira', tensor(nan, device='cuda:0'))],  word_scores_max: [('finnish', tensor(nan, device='cuda:0')), ('kemira', tensor(nan, device='cuda:0'))]
idx: 185, example: There have been 15 initial public offerings announced in Sweden this year , compared with two during the same period a year earlier , Bloomberg data shows , prediction: 2, correct_label: 2, class_scores: [0.26256806 0.3345177  0.40291423], word_scores: ['there:0.0', 'have:2.910326429628185e-06', 'been:0.0', '15:0.0', 'initial:0.0', 'public:0.0', 'offerings:0.0', 'announced:0.0', 'in:3.0217122457543155e-06', 'sweden:0.0', 'this:0.0', 'year:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'with:4.733654350275174e-06', 'two:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', ',:7.986737728060689e-06', 'bloomberg:0.0', 'data:0.0', 'shows:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('there', tensor(0., device='cuda:0')), ('have', tensor(0.0699, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('initial', tensor(0., device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('offerings', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('in', tensor(0.0726, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.1918, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.1137, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1532, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.2072, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), (',', tensor(0.1918, device='cuda:0')), ('bloomberg', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('shows', tensor(0., device='cuda:0'))],  word_scores_max: [('there', tensor(0., device='cuda:0')), ('have', tensor(0.0699, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('initial', tensor(0., device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('offerings', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('in', tensor(0.0726, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.1918, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.1137, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1532, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.2072, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), (',', tensor(0.1918, device='cuda:0')), ('bloomberg', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('shows', tensor(0., device='cuda:0'))]
idx: 186, example: Singapore in May 2011 1 July 2010 - Finnish air carrier Finnair Oyj ( HEL : FIA1S ) said today it will open a daily route to Singapore on 30 May 2011 as part of its growth strategy in Asia , prediction: 1, correct_label: 1, class_scores: [0.2432556  0.4046577  0.35208672], word_scores: ['singapore:0.0', 'in:3.0217122457543155e-06', 'may:0.0', '2011:0.0', '1:0.0', 'july:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'air:0.0', 'carrier:0.0', 'finn:0.0', '##air:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'fia:0.0', '##1:0.0', '##s:4.601175078278175e-06', '):0.0', 'said:0.0', 'today:0.0', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'open:0.0', 'a:8.62785782373976e-06', 'daily:0.0', 'route:0.0', 'to:2.886244146793615e-06', 'singapore:0.0', 'on:0.0', '30:0.0', 'may:0.0', '2011:0.0', 'as:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'growth:0.0', 'strategy:0.0', 'in:3.0217122457543155e-06', 'asia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('singapore', tensor(0., device='cuda:0')), ('in', tensor(0.0822, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.1311, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('carrier', tensor(0., device='cuda:0')), ('finnair', tensor(0., device='cuda:0')), ('oyj', tensor(0.0498, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fia1s', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0908, device='cuda:0')), ('will', tensor(0.1107, device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('a', tensor(0.2346, device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('route', tensor(0., device='cuda:0')), ('to', tensor(0.0785, device='cuda:0')), ('singapore', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0934, device='cuda:0')), ('its', tensor(0.0467, device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('in', tensor(0.0822, device='cuda:0')), ('asia', tensor(0., device='cuda:0'))],  word_scores_max: [('singapore', tensor(0., device='cuda:0')), ('in', tensor(0.0822, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.1311, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('carrier', tensor(0., device='cuda:0')), ('finnair', tensor(0., device='cuda:0')), ('oyj', tensor(0.0498, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fia1s', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0908, device='cuda:0')), ('will', tensor(0.1107, device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('a', tensor(0.2346, device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('route', tensor(0., device='cuda:0')), ('to', tensor(0.0785, device='cuda:0')), ('singapore', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0934, device='cuda:0')), ('its', tensor(0.0467, device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('in', tensor(0.0822, device='cuda:0')), ('asia', tensor(0., device='cuda:0'))]
idx: 187, example: Harold W. Young is an independent broker working closely with several retailers including Ahold USA , Market Basket , CVS , BJ 's Wholesale Club , Hannaford and Cumberland Farms , prediction: 2, correct_label: 2, class_scores: [0.15616219 0.41558626 0.42825156], word_scores: ['harold:0.0', 'w:0.0', '.:2.903296945078182e-06', 'young:0.0', 'is:0.0', 'an:0.0', 'independent:0.0', 'broker:0.0', 'working:0.0', 'closely:0.0', 'with:4.733654350275174e-06', 'several:0.0', 'retailers:0.0', 'including:0.0', 'ah:0.0', '##old:0.0', 'usa:0.0', ',:7.986737728060689e-06', 'market:0.0', 'basket:0.0', ',:7.986737728060689e-06', 'cv:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'b:0.0', '##j:0.0', "':0.0", 's:0.0', 'wholesale:0.0', 'club:0.0', ',:7.986737728060689e-06', 'hanna:0.0', '##ford:0.0', 'and:0.0', 'cumberland:0.0', 'farms:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('harold', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('young', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('independent', tensor(0., device='cuda:0')), ('broker', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('closely', tensor(0., device='cuda:0')), ('with', tensor(0.1498, device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('retailers', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('ahold', tensor(0., device='cuda:0')), ('usa', tensor(0., device='cuda:0')), (',', tensor(0.2528, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('basket', tensor(0., device='cuda:0')), (',', tensor(0.2528, device='cuda:0')), ('cvs', tensor(0., device='cuda:0')), (',', tensor(0.2528, device='cuda:0'))],  word_scores_max: [('harold', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('young', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('independent', tensor(0., device='cuda:0')), ('broker', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('closely', tensor(0., device='cuda:0')), ('with', tensor(0.1498, device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('retailers', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('ahold', tensor(0., device='cuda:0')), ('usa', tensor(0., device='cuda:0')), (',', tensor(0.2528, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('basket', tensor(0., device='cuda:0')), (',', tensor(0.2528, device='cuda:0')), ('cvs', tensor(0., device='cuda:0')), (',', tensor(0.2528, device='cuda:0'))]
idx: 188, example: The estimated value of the contract is EUR12 .4 m. Vaisala , headquartered in Helsinki in Finland , develops and manufactures electronic measurement systems for meteorology , environmental sciences , traffic and industry , prediction: 1, correct_label: 2, class_scores: [0.16556765 0.44326475 0.39116764], word_scores: ['the:6.3806996877247e-06', 'estimated:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'is:0.0', 'eu:0.0', '##r:0.0', '##12:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', '.:2.903296945078182e-06', 'va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', ',:7.986737728060689e-06', 'headquartered:0.0', 'in:3.0217122457543155e-06', 'helsinki:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'develops:0.0', 'and:0.0', 'manufactures:0.0', 'electronic:0.0', 'measurement:0.0', 'systems:0.0', 'for:0.0', 'meteor:0.0', '##ology:0.0', ',:7.986737728060689e-06', 'environmental:0.0', 'sciences:0.0', ',:7.986737728060689e-06', 'traffic:0.0', 'and:0.0', 'industry:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0866, device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.0467, device='cuda:0')), ('the', tensor(0.0866, device='cuda:0')), ('contract', tensor(0.0976, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur12', tensor(0., device='cuda:0')), ('.', tensor(0.0394, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0394, device='cuda:0')), ('vaisala', tensor(0.0323, device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0410, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('in', tensor(0.0410, device='cuda:0')), ('finland', tensor(0.0556, device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('develops', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('manufactures', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('meteorology', tensor(0., device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('sciences', tensor(0., device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0866, device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.0467, device='cuda:0')), ('the', tensor(0.0866, device='cuda:0')), ('contract', tensor(0.0976, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur12', tensor(0., device='cuda:0')), ('.', tensor(0.0394, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0394, device='cuda:0')), ('vaisala', tensor(0.0323, device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0410, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('in', tensor(0.0410, device='cuda:0')), ('finland', tensor(0.0556, device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('develops', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('manufactures', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('meteorology', tensor(0., device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('sciences', tensor(0., device='cuda:0')), (',', tensor(0.1084, device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0'))]
idx: 189, example: The order was valued at over EUR15m , prediction: 2, correct_label: 2, class_scores: [0.23821598 0.2817911  0.47999287], word_scores: ['the:6.3806996877247e-06', 'order:0.0', 'was:0.0', 'valued:0.0', 'at:0.0', 'over:0.0', 'eu:0.0', '##r:0.0', '##15:0.0', '##m:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('valued', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('eur15m', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('valued', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('eur15m', tensor(0., device='cuda:0'))]
idx: 190, example: Under the agreement , TietoEnator will provide Blyk with extended application and business process management services and an IT infrastructure , prediction: 2, correct_label: 1, class_scores: [0.17858224 0.38882887 0.4325888 ], word_scores: ['under:0.0', 'the:6.3806996877247e-06', 'agreement:0.0', ',:7.986737728060689e-06', 'tie:0.0', '##to:0.0', '##ena:0.0', '##tor:0.0', 'will:4.073096533829812e-06', 'provide:0.0', 'b:0.0', '##ly:0.0', '##k:0.0', 'with:4.733654350275174e-06', 'extended:0.0', 'application:0.0', 'and:0.0', 'business:0.0', 'process:0.0', 'management:0.0', 'services:0.0', 'and:0.0', 'an:0.0', 'it:3.3415778943890473e-06', 'infrastructure:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('under', tensor(0., device='cuda:0')), ('the', tensor(0.2406, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.3012, device='cuda:0')), ('tietoenator', tensor(0., device='cuda:0')), ('will', tensor(0.1536, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('blyk', tensor(0., device='cuda:0')), ('with', tensor(0.1785, device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('application', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('it', tensor(0.1260, device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0'))],  word_scores_max: [('under', tensor(0., device='cuda:0')), ('the', tensor(0.2406, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.3012, device='cuda:0')), ('tietoenator', tensor(0., device='cuda:0')), ('will', tensor(0.1536, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('blyk', tensor(0., device='cuda:0')), ('with', tensor(0.1785, device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('application', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('it', tensor(0.1260, device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0'))]
idx: 191, example: The dual-fuel engines of the vessel can operate on liquefied natural gas LNG with low emissions , prediction: 2, correct_label: 2, class_scores: [0.23157391 0.20926344 0.5591626 ], word_scores: ['the:6.3806996877247e-06', 'dual:0.0', '-:4.821180027647642e-06', 'fuel:0.0', 'engines:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'vessel:0.0', 'can:0.0', 'operate:0.0', 'on:0.0', 'li:0.0', '##que:0.0', '##fied:0.0', 'natural:0.0', 'gas:0.0', 'l:0.0', '##ng:0.0', 'with:4.733654350275174e-06', 'low:0.0', 'emissions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2478, device='cuda:0')), ('dual', tensor(0., device='cuda:0')), ('-', tensor(0.1872, device='cuda:0')), ('fuel', tensor(0., device='cuda:0')), ('engines', tensor(0., device='cuda:0')), ('of', tensor(0.1334, device='cuda:0')), ('the', tensor(0.2478, device='cuda:0')), ('vessel', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('liquefied', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('lng', tensor(0., device='cuda:0')), ('with', tensor(0.1838, device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2478, device='cuda:0')), ('dual', tensor(0., device='cuda:0')), ('-', tensor(0.1872, device='cuda:0')), ('fuel', tensor(0., device='cuda:0')), ('engines', tensor(0., device='cuda:0')), ('of', tensor(0.1334, device='cuda:0')), ('the', tensor(0.2478, device='cuda:0')), ('vessel', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('liquefied', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('lng', tensor(0., device='cuda:0')), ('with', tensor(0.1838, device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0'))]
idx: 192, example: `` The implementation of these programs has had , and will have , negative impacts on 2006 and 2007 earnings , '' Mr Meiklejohn said , prediction: 2, correct_label: 0, class_scores: [0.22528075 0.32849988 0.44621935], word_scores: ['`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'implementation:0.0', 'of:3.4365734791208524e-06', 'these:0.0', 'programs:0.0', 'has:5.9214244174654596e-06', 'had:0.0', ',:7.986737728060689e-06', 'and:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', ',:7.986737728060689e-06', 'negative:0.0', 'impacts:0.0', 'on:0.0', '2006:0.0', 'and:0.0', '2007:0.0', 'earnings:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'mr:0.0', 'mei:0.0', '##kle:0.0', '##jo:0.0', '##hn:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1367, device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('of', tensor(0.0736, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('programs', tensor(0., device='cuda:0')), ('has', tensor(0.1268, device='cuda:0')), ('had', tensor(0., device='cuda:0')), (',', tensor(0.1711, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.0873, device='cuda:0')), ('have', tensor(0.0623, device='cuda:0')), (',', tensor(0.1711, device='cuda:0')), ('negative', tensor(0., device='cuda:0')), ('impacts', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), (',', tensor(0.1711, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1367, device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('of', tensor(0.0736, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('programs', tensor(0., device='cuda:0')), ('has', tensor(0.1268, device='cuda:0')), ('had', tensor(0., device='cuda:0')), (',', tensor(0.1711, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.0873, device='cuda:0')), ('have', tensor(0.0623, device='cuda:0')), (',', tensor(0.1711, device='cuda:0')), ('negative', tensor(0., device='cuda:0')), ('impacts', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), (',', tensor(0.1711, device='cuda:0'))]
idx: 193, example: The net sales of the whole fiscal year 2008 will be lower than in 2007 and operating profit is estimated to be negative , prediction: 2, correct_label: 0, class_scores: [0.16470446 0.3660315  0.4692641 ], word_scores: ['the:6.3806996877247e-06', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'whole:0.0', 'fiscal:0.0', 'year:0.0', '2008:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'lower:0.0', 'than:0.0', 'in:3.0217122457543155e-06', '2007:0.0', 'and:0.0', 'operating:0.0', 'profit:0.0', 'is:0.0', 'estimated:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'negative:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2437, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1313, device='cuda:0')), ('the', tensor(0.2437, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('fiscal', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('will', tensor(0.1556, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('in', tensor(0.1154, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('to', tensor(0.1103, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('negative', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2437, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1313, device='cuda:0')), ('the', tensor(0.2437, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('fiscal', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('will', tensor(0.1556, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('in', tensor(0.1154, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('to', tensor(0.1103, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('negative', tensor(0., device='cuda:0'))]
idx: 194, example: ` It is a testament to the quality of our LTE solution and our commitment to the Japanese market ' , he added , prediction: 2, correct_label: 2, class_scores: [0.24757595 0.3495392  0.4028848 ], word_scores: ['`:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'a:8.62785782373976e-06', 'testament:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'quality:0.0', 'of:3.4365734791208524e-06', 'our:0.0', 'lt:0.0', '##e:0.0', 'solution:0.0', 'and:0.0', 'our:0.0', 'commitment:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'japanese:0.0', 'market:0.0', "':0.0", ',:7.986737728060689e-06', 'he:0.0', 'added:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.0797, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2058, device='cuda:0')), ('testament', tensor(0., device='cuda:0')), ('to', tensor(0.0688, device='cuda:0')), ('the', tensor(0.1522, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('of', tensor(0.0820, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('lte', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0')), ('to', tensor(0.0688, device='cuda:0')), ('the', tensor(0.1522, device='cuda:0')), ('japanese', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ("'", tensor(0., device='cuda:0')), (',', tensor(0.1905, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.0797, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2058, device='cuda:0')), ('testament', tensor(0., device='cuda:0')), ('to', tensor(0.0688, device='cuda:0')), ('the', tensor(0.1522, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('of', tensor(0.0820, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('lte', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0')), ('to', tensor(0.0688, device='cuda:0')), ('the', tensor(0.1522, device='cuda:0')), ('japanese', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ("'", tensor(0., device='cuda:0')), (',', tensor(0.1905, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0'))]
idx: 195, example: The new factory working model and reorganisations would decrease Nokian Tyres ' costs in the factory by EUR 30 million ( USD 38.7 m ) , prediction: 2, correct_label: 1, class_scores: [0.27164155 0.30850276 0.4198557 ], word_scores: ['the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'factory:0.0', 'working:0.0', 'model:0.0', 'and:0.0', 'reorganisation:0.0', '##s:4.601175078278175e-06', 'would:2.0953068542439723e-06', 'decrease:0.0', 'nokia:0.0', '##n:0.0', 'tyres:0.0', "':0.0", 'costs:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'factory:0.0', 'by:0.0', 'eu:0.0', '##r:0.0', '30:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '38:0.0', '.:2.903296945078182e-06', '7:0.0', 'm:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.5659, device='cuda:0')), ('new', tensor(0.2482, device='cuda:0')), ('factory', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reorganisations', tensor(0., device='cuda:0')), ('would', tensor(0.1858, device='cuda:0')), ('decrease', tensor(0., device='cuda:0')), ('nokian', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5659, device='cuda:0')), ('new', tensor(0.2482, device='cuda:0')), ('factory', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reorganisations', tensor(0., device='cuda:0')), ('would', tensor(0.1858, device='cuda:0')), ('decrease', tensor(0., device='cuda:0')), ('nokian', tensor(0., device='cuda:0'))]
idx: 196, example: Finnair 's Tallinn-based subsidiary , Aero AS , carried 23,335 passengers , a decline of 60.8 % , on routes between Helsinki and the Baltic capitals and within Southern Finland , prediction: 2, correct_label: 0, class_scores: [0.16910236 0.3478278  0.48306984], word_scores: ['finn:0.0', '##air:0.0', "':0.0", 's:0.0', 'tallinn:0.0', '-:4.821180027647642e-06', 'based:0.0', 'subsidiary:0.0', ',:7.986737728060689e-06', 'aero:0.0', 'as:0.0', ',:7.986737728060689e-06', 'carried:0.0', '23:3.2229838780040154e-06', ',:7.986737728060689e-06', '335:0.0', 'passengers:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'decline:0.0', 'of:3.4365734791208524e-06', '60:0.0', '.:2.903296945078182e-06', '8:0.0', '%:0.0', ',:7.986737728060689e-06', 'on:0.0', 'routes:0.0', 'between:0.0', 'helsinki:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'baltic:0.0', 'capitals:0.0', 'and:0.0', 'within:0.0', 'southern:0.0', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 197, example: The company 's US subsidiary Vaisala Inc. acquires Aviation Systems Maintenance , Inc ASMI , a Kansas , U.S. based airport service company with over 2.6 million USD net sales in 2008 , prediction: 1, correct_label: 2, class_scores: [0.20947346 0.39771584 0.3928108 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'us:0.0', 'subsidiary:0.0', 'va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', 'inc:0.0', '.:2.903296945078182e-06', 'acquire:0.0', '##s:4.601175078278175e-06', 'aviation:0.0', 'systems:0.0', 'maintenance:0.0', ',:7.986737728060689e-06', 'inc:0.0', 'as:0.0', '##mi:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'kansas:0.0', ',:7.986737728060689e-06', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'based:0.0', 'airport:0.0', 'service:0.0', 'company:6.695386673527537e-06', 'with:4.733654350275174e-06', 'over:0.0', '2:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'usd:0.0', 'net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 198, example: By combining its existing solutions into a single platform , Comptel said that it has reduced the cost of deployment , prediction: 2, correct_label: 1, class_scores: [0.22327209 0.3689539  0.40777403], word_scores: ['by:0.0', 'combining:0.0', 'its:1.7191393908433383e-06', 'existing:0.0', 'solutions:0.0', 'into:0.0', 'a:8.62785782373976e-06', 'single:0.0', 'platform:0.0', ',:7.986737728060689e-06', 'com:0.0', '##pt:0.0', '##el:0.0', 'said:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'reduced:0.0', 'the:6.3806996877247e-06', 'cost:0.0', 'of:3.4365734791208524e-06', 'deployment:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('by', tensor(0., device='cuda:0')), ('combining', tensor(0., device='cuda:0')), ('its', tensor(0.0442, device='cuda:0')), ('existing', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('a', tensor(0.2216, device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('platform', tensor(0., device='cuda:0')), (',', tensor(0.2052, device='cuda:0')), ('comptel', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0389, device='cuda:0')), ('it', tensor(0.0858, device='cuda:0')), ('has', tensor(0.1521, device='cuda:0')), ('reduced', tensor(0., device='cuda:0')), ('the', tensor(0.1639, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('of', tensor(0.0883, device='cuda:0')), ('deployment', tensor(0., device='cuda:0'))],  word_scores_max: [('by', tensor(0., device='cuda:0')), ('combining', tensor(0., device='cuda:0')), ('its', tensor(0.0442, device='cuda:0')), ('existing', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('a', tensor(0.2216, device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('platform', tensor(0., device='cuda:0')), (',', tensor(0.2052, device='cuda:0')), ('comptel', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0389, device='cuda:0')), ('it', tensor(0.0858, device='cuda:0')), ('has', tensor(0.1521, device='cuda:0')), ('reduced', tensor(0., device='cuda:0')), ('the', tensor(0.1639, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('of', tensor(0.0883, device='cuda:0')), ('deployment', tensor(0., device='cuda:0'))]
idx: 199, example: The company then said it will focus its resources on clinical research , prediction: 2, correct_label: 2, class_scores: [0.19795954 0.32596308 0.47607744], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'then:0.0', 'said:0.0', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'focus:0.0', 'its:1.7191393908433383e-06', 'resources:3.8971406866039615e-06', 'on:0.0', 'clinical:0.0', 'research:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2444, device='cuda:0')), ('company', tensor(0.2565, device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.1280, device='cuda:0')), ('will', tensor(0.1560, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('its', tensor(0.0658, device='cuda:0')), ('resources', tensor(0.1493, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('clinical', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2444, device='cuda:0')), ('company', tensor(0.2565, device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.1280, device='cuda:0')), ('will', tensor(0.1560, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('its', tensor(0.0658, device='cuda:0')), ('resources', tensor(0.1493, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('clinical', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0'))]
idx: 200, example: In the video above Marimekko 's design manager , Noora Niiininoski , explains that the brands are a natural fit for each other because they both have a timeless style , prediction: 1, correct_label: 2, class_scores: [0.16169508 0.42817888 0.41012606], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'video:0.0', 'above:0.0', 'mari:0.0', '##me:0.0', '##kko:0.0', "':0.0", 's:0.0', 'design:0.0', 'manager:0.0', ',:7.986737728060689e-06', 'no:0.0', '##ora:0.0', 'ni:0.0', '##ii:0.0', '##nin:0.0', '##os:0.0', '##ki:0.0', ',:7.986737728060689e-06', 'explains:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'brands:0.0', 'are:0.0', 'a:8.62785782373976e-06', 'natural:0.0', 'fit:0.0', 'for:0.0', 'each:0.0', 'other:0.0', 'because:0.0', 'they:0.0', 'both:0.0', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'timeless:0.0', 'style:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.3214, device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.3214, device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0'))]
idx: 201, example: Sales by Seppala diminished by 6 per cent , prediction: 1, correct_label: 0, class_scores: [0.18391258 0.42771634 0.38837114], word_scores: ['sales:0.0', 'by:0.0', 'sep:0.0', '##pala:0.0', 'diminished:0.0', 'by:0.0', '6:0.0', 'per:0.0', 'cent:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sales', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('seppala', tensor(nan, device='cuda:0')), ('diminished', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('6', tensor(nan, device='cuda:0')), ('per', tensor(nan, device='cuda:0')), ('cent', tensor(nan, device='cuda:0'))],  word_scores_max: [('sales', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('seppala', tensor(nan, device='cuda:0')), ('diminished', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('6', tensor(nan, device='cuda:0')), ('per', tensor(nan, device='cuda:0')), ('cent', tensor(nan, device='cuda:0'))]
idx: 202, example: The closing of such transaction took place today , prediction: 1, correct_label: 2, class_scores: [0.22988656 0.3895701  0.38054332], word_scores: ['the:6.3806996877247e-06', 'closing:0.0', 'of:3.4365734791208524e-06', 'such:0.0', 'transaction:0.0', 'took:0.0', 'place:0.0', 'today:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6499, device='cuda:0')), ('closing', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('took', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6499, device='cuda:0')), ('closing', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('took', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0'))]
idx: 203, example: In 2007 , Huhtamaki will continue to invest in organic growth , prediction: 1, correct_label: 2, class_scores: [0.217887   0.43357402 0.34853894], word_scores: ['in:3.0217122457543155e-06', '2007:0.0', ',:7.986737728060689e-06', 'huh:0.0', '##tama:0.0', '##ki:0.0', 'will:4.073096533829812e-06', 'continue:0.0', 'to:2.886244146793615e-06', 'invest:0.0', 'in:3.0217122457543155e-06', 'organic:0.0', 'growth:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.1440, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.3805, device='cuda:0')), ('huhtamaki', tensor(0., device='cuda:0')), ('will', tensor(0.1941, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1375, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('in', tensor(0.1440, device='cuda:0')), ('organic', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.1440, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.3805, device='cuda:0')), ('huhtamaki', tensor(0., device='cuda:0')), ('will', tensor(0.1941, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1375, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('in', tensor(0.1440, device='cuda:0')), ('organic', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0'))]
idx: 204, example: Section : Regional News - The demand in Finnair 's Asian traffic , measured in passenger kilometers , was up 34.9 % in August compare to last year , prediction: 2, correct_label: 1, class_scores: [0.16749616 0.3904317  0.44207218], word_scores: ['section:0.0', '::0.0', 'regional:0.0', 'news:0.0', '-:4.821180027647642e-06', 'the:6.3806996877247e-06', 'demand:0.0', 'in:3.0217122457543155e-06', 'finn:0.0', '##air:0.0', "':0.0", 's:0.0', 'asian:0.0', 'traffic:0.0', ',:7.986737728060689e-06', 'measured:0.0', 'in:3.0217122457543155e-06', 'passenger:0.0', 'kilometers:0.0', ',:7.986737728060689e-06', 'was:0.0', 'up:1.4959460941099678e-06', '34:0.0', '.:2.903296945078182e-06', '9:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'august:0.0', 'compare:0.0', 'to:2.886244146793615e-06', 'last:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('section', tensor(0., device='cuda:0')), ('regional', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.3390, device='cuda:0')), ('the', tensor(0.4486, device='cuda:0')), ('demand', tensor(0., device='cuda:0')), ('in', tensor(0.2124, device='cuda:0'))],  word_scores_max: [('section', tensor(0., device='cuda:0')), ('regional', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.3390, device='cuda:0')), ('the', tensor(0.4486, device='cuda:0')), ('demand', tensor(0., device='cuda:0')), ('in', tensor(0.2124, device='cuda:0'))]
idx: 205, example: The company will use the money for product development and research activities through 2013 in its key markets Finland , Germany , Italy and France , prediction: 2, correct_label: 2, class_scores: [0.14442484 0.30247444 0.5531007 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'use:0.0', 'the:6.3806996877247e-06', 'money:0.0', 'for:0.0', 'product:0.0', 'development:0.0', 'and:0.0', 'research:0.0', 'activities:0.0', 'through:0.0', '2013:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'key:0.0', 'markets:0.0', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'germany:0.0', ',:7.986737728060689e-06', 'italy:0.0', 'and:0.0', 'france:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1320, device='cuda:0')), ('company', tensor(0.1385, device='cuda:0')), ('will', tensor(0.0843, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('the', tensor(0.1320, device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('2013', tensor(0., device='cuda:0')), ('in', tensor(0.0625, device='cuda:0')), ('its', tensor(0.0356, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('finland', tensor(0.0847, device='cuda:0')), (',', tensor(0.1652, device='cuda:0')), ('germany', tensor(0., device='cuda:0')), (',', tensor(0.1652, device='cuda:0')), ('italy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('france', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1320, device='cuda:0')), ('company', tensor(0.1385, device='cuda:0')), ('will', tensor(0.0843, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('the', tensor(0.1320, device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('2013', tensor(0., device='cuda:0')), ('in', tensor(0.0625, device='cuda:0')), ('its', tensor(0.0356, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('finland', tensor(0.0847, device='cuda:0')), (',', tensor(0.1652, device='cuda:0')), ('germany', tensor(0., device='cuda:0')), (',', tensor(0.1652, device='cuda:0')), ('italy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('france', tensor(0., device='cuda:0'))]
idx: 206, example: Olvi , which controls a 94 percent stake in Ragutis through A. Le Coq , said in its annual report published earlier this year that the Lithuanian brewery 's sales reached 15.04 million euros last year , a rise of 20.4 percent from 12.49 million euros in 2004 , prediction: 1, correct_label: 1, class_scores: [0.16521756 0.448548   0.38623446], word_scores: ['ol:0.0', '##vi:0.0', ',:7.986737728060689e-06', 'which:0.0', 'controls:0.0', 'a:8.62785782373976e-06', '94:0.0', 'percent:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'rag:0.0', '##uti:0.0', '##s:4.601175078278175e-06', 'through:0.0', 'le:0.0', 'co:0.0', '##q:0.0', ',:7.986737728060689e-06', 'said:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'annual:0.0', 'report:0.0', 'published:0.0', 'earlier:0.0', 'this:0.0', 'year:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'lithuanian:0.0', 'brewery:0.0', "':0.0", 's:0.0', 'sales:0.0', 'reached:0.0', '15:0.0', '.:2.903296945078182e-06', '04:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'last:0.0', 'year:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'rise:0.0', 'of:3.4365734791208524e-06', '20:0.0', '.:2.903296945078182e-06', '4:0.0', 'percent:0.0', 'from:4.495178018260049e-06', '12:0.0', '.:2.903296945078182e-06', '49:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'in:3.0217122457543155e-06', '2004:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('olvi', tensor(0., device='cuda:0')), (',', tensor(0.1984, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('controls', tensor(0., device='cuda:0')), ('a', tensor(0.2143, device='cuda:0')), ('94', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0751, device='cuda:0')), ('ragutis', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('le', tensor(0., device='cuda:0')), ('coq', tensor(0., device='cuda:0')), (',', tensor(0.1984, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0751, device='cuda:0')), ('its', tensor(0.0427, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('published', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('that', tensor(0.0376, device='cuda:0')), ('the', tensor(0.1585, device='cuda:0')), ('lithuanian', tensor(0., device='cuda:0'))],  word_scores_max: [('olvi', tensor(0., device='cuda:0')), (',', tensor(0.1984, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('controls', tensor(0., device='cuda:0')), ('a', tensor(0.2143, device='cuda:0')), ('94', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0751, device='cuda:0')), ('ragutis', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('le', tensor(0., device='cuda:0')), ('coq', tensor(0., device='cuda:0')), (',', tensor(0.1984, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0751, device='cuda:0')), ('its', tensor(0.0427, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('published', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('that', tensor(0.0376, device='cuda:0')), ('the', tensor(0.1585, device='cuda:0')), ('lithuanian', tensor(0., device='cuda:0'))]
idx: 207, example: YIT acquired investment rights to a 10,000 square metre residential project in Yaroslavl and to a 16,400 square metre project in Moscow , prediction: 2, correct_label: 2, class_scores: [0.19824816 0.3295448  0.47220698], word_scores: ['yi:0.0', '##t:0.0', 'acquired:0.0', 'investment:0.0', 'rights:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', '10:0.0', ',:7.986737728060689e-06', '000:0.0', 'square:0.0', 'metre:0.0', 'residential:0.0', 'project:0.0', 'in:3.0217122457543155e-06', 'ya:0.0', '##ros:0.0', '##lav:0.0', '##l:0.0', 'and:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', '16:0.0', ',:7.986737728060689e-06', '400:0.0', 'square:0.0', 'metre:0.0', 'project:0.0', 'in:3.0217122457543155e-06', 'moscow:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('yit', tensor(0., device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('to', tensor(0.0641, device='cuda:0')), ('a', tensor(0.1915, device='cuda:0')), ('10', tensor(0., device='cuda:0')), (',', tensor(0.1773, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metre', tensor(0., device='cuda:0')), ('residential', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0671, device='cuda:0')), ('yaroslavl', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0641, device='cuda:0')), ('a', tensor(0.1915, device='cuda:0')), ('16', tensor(0., device='cuda:0')), (',', tensor(0.1773, device='cuda:0')), ('400', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metre', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0671, device='cuda:0')), ('moscow', tensor(0., device='cuda:0'))],  word_scores_max: [('yit', tensor(0., device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('to', tensor(0.0641, device='cuda:0')), ('a', tensor(0.1915, device='cuda:0')), ('10', tensor(0., device='cuda:0')), (',', tensor(0.1773, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metre', tensor(0., device='cuda:0')), ('residential', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0671, device='cuda:0')), ('yaroslavl', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0641, device='cuda:0')), ('a', tensor(0.1915, device='cuda:0')), ('16', tensor(0., device='cuda:0')), (',', tensor(0.1773, device='cuda:0')), ('400', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metre', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0671, device='cuda:0')), ('moscow', tensor(0., device='cuda:0'))]
idx: 208, example: 128,538 shares can still be subscribed for with Series E share options , max , prediction: 2, correct_label: 2, class_scores: [0.28021336 0.26064333 0.45914337], word_scores: ['128:0.0', ',:7.986737728060689e-06', '53:0.0', '##8:0.0', 'shares:0.0', 'can:0.0', 'still:0.0', 'be:0.0', 'sub:0.0', '##scribe:0.0', '##d:0.0', 'for:0.0', 'with:4.733654350275174e-06', 'series:0.0', 'e:0.0', 'share:0.0', 'options:0.0', ',:7.986737728060689e-06', 'max:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('128', tensor(0., device='cuda:0')), (',', tensor(0.3857, device='cuda:0')), ('538', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('with', tensor(0.2286, device='cuda:0')), ('series', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), (',', tensor(0.3857, device='cuda:0')), ('max', tensor(0., device='cuda:0'))],  word_scores_max: [('128', tensor(0., device='cuda:0')), (',', tensor(0.3857, device='cuda:0')), ('538', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('with', tensor(0.2286, device='cuda:0')), ('series', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), (',', tensor(0.3857, device='cuda:0')), ('max', tensor(0., device='cuda:0'))]
idx: 209, example: Karppinen expects the consolidation trend to continue in the Finnish market , prediction: 2, correct_label: 2, class_scores: [0.23186627 0.27750075 0.49063304], word_scores: ['ka:0.0', '##rp:0.0', '##pine:0.0', '##n:0.0', 'expects:0.0', 'the:6.3806996877247e-06', 'consolidation:0.0', 'trend:0.0', 'to:2.886244146793615e-06', 'continue:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'market:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('karppinen', tensor(0., device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('the', tensor(0.3418, device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('to', tensor(0.1546, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('in', tensor(0.1619, device='cuda:0')), ('the', tensor(0.3418, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))],  word_scores_max: [('karppinen', tensor(0., device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('the', tensor(0.3418, device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('to', tensor(0.1546, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('in', tensor(0.1619, device='cuda:0')), ('the', tensor(0.3418, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))]
idx: 210, example: Talvivaara Mining Company Plc Talvivaara Mining Company is an internationally significant base metals producer with its primary focus on nickel and zinc using a technology known as bioheapleaching to extract metals out of ore , prediction: 2, correct_label: 2, class_scores: [0.2384962  0.3748928  0.38661098], word_scores: ['tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', 'mining:0.0', 'company:6.695386673527537e-06', 'plc:0.0', 'tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', 'mining:0.0', 'company:6.695386673527537e-06', 'is:0.0', 'an:0.0', 'internationally:0.0', 'significant:0.0', 'base:0.0', 'metals:0.0', 'producer:0.0', 'with:4.733654350275174e-06', 'its:1.7191393908433383e-06', 'primary:0.0', 'focus:0.0', 'on:0.0', 'nickel:0.0', 'and:0.0', 'zinc:0.0', 'using:0.0', 'a:8.62785782373976e-06', 'technology:0.0', 'known:0.0', 'as:0.0', 'bio:0.0', '##hea:0.0', '##ple:0.0', '##achi:0.0', '##ng:0.0', 'to:2.886244146793615e-06', 'extract:0.0', 'metals:0.0', 'out:0.0', 'of:3.4365734791208524e-06', 'ore:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('company', tensor(0.1924, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('company', tensor(0.1924, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('internationally', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), ('with', tensor(0.1360, device='cuda:0')), ('its', tensor(0.0494, device='cuda:0')), ('primary', tensor(0., device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('using', tensor(0., device='cuda:0')), ('a', tensor(0.2480, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('known', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bioheapleaching', tensor(0., device='cuda:0')), ('to', tensor(0.0830, device='cuda:0')), ('extract', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('of', tensor(0.0988, device='cuda:0')), ('ore', tensor(0., device='cuda:0'))],  word_scores_max: [('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('company', tensor(0.1924, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('company', tensor(0.1924, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('internationally', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), ('with', tensor(0.1360, device='cuda:0')), ('its', tensor(0.0494, device='cuda:0')), ('primary', tensor(0., device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('using', tensor(0., device='cuda:0')), ('a', tensor(0.2480, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('known', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bioheapleaching', tensor(0., device='cuda:0')), ('to', tensor(0.0830, device='cuda:0')), ('extract', tensor(0., device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('of', tensor(0.0988, device='cuda:0')), ('ore', tensor(0., device='cuda:0'))]
idx: 211, example: Ahlstrom Corporation STOCK EXCHANGE RELEASE 13.02.2008 Ahlstrom , a global leader in high performance fiber-based materials , today announced the completion of the acquisition of Friend Group Inc. , which consists of West Carrollton Parchment Company and West Carrollton Converting Company , prediction: 2, correct_label: 2, class_scores: [0.26912394 0.2878292  0.44304693], word_scores: ['ahl:0.0', '##strom:0.0', 'corporation:0.0', 'stock:0.0', 'exchange:0.0', 'release:0.0', '13:0.0', '.:2.903296945078182e-06', '02:0.0', '.:2.903296945078182e-06', '2008:0.0', 'ahl:0.0', '##strom:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'global:0.0', 'leader:0.0', 'in:3.0217122457543155e-06', 'high:0.0', 'performance:0.0', 'fiber:0.0', '-:4.821180027647642e-06', 'based:0.0', 'materials:0.0', ',:7.986737728060689e-06', 'today:0.0', 'announced:0.0', 'the:6.3806996877247e-06', 'completion:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'acquisition:0.0', 'of:3.4365734791208524e-06', 'friend:0.0', 'group:0.0', 'inc:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'which:0.0', 'consists:0.0', 'of:3.4365734791208524e-06', 'west:0.0', 'carroll:0.0', '##ton:0.0', 'parchment:0.0', 'company:6.695386673527537e-06', 'and:0.0', 'west:0.0', 'carroll:0.0', '##ton:0.0', 'converting:0.0', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ahlstrom', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.0339, device='cuda:0')), ('02', tensor(0., device='cuda:0')), ('.', tensor(0.0339, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('ahlstrom', tensor(0., device='cuda:0')), (',', tensor(0.0933, device='cuda:0')), ('a', tensor(0.1008, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('leader', tensor(0., device='cuda:0')), ('in', tensor(0.0353, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('performance', tensor(0., device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('-', tensor(0.0563, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), (',', tensor(0.0933, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('the', tensor(0.0745, device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('of', tensor(0.0401, device='cuda:0')), ('the', tensor(0.0745, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('of', tensor(0.0401, device='cuda:0')), ('friend', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.0339, device='cuda:0')), (',', tensor(0.0933, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('consists', tensor(0., device='cuda:0')), ('of', tensor(0.0401, device='cuda:0')), ('west', tensor(0., device='cuda:0')), ('carrollton', tensor(0., device='cuda:0')), ('parchment', tensor(0., device='cuda:0')), ('company', tensor(0.0782, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('west', tensor(0., device='cuda:0')), ('carrollton', tensor(0., device='cuda:0')), ('converting', tensor(0., device='cuda:0')), ('company', tensor(0.0782, device='cuda:0'))],  word_scores_max: [('ahlstrom', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.0339, device='cuda:0')), ('02', tensor(0., device='cuda:0')), ('.', tensor(0.0339, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('ahlstrom', tensor(0., device='cuda:0')), (',', tensor(0.0933, device='cuda:0')), ('a', tensor(0.1008, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('leader', tensor(0., device='cuda:0')), ('in', tensor(0.0353, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('performance', tensor(0., device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('-', tensor(0.0563, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), (',', tensor(0.0933, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('the', tensor(0.0745, device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('of', tensor(0.0401, device='cuda:0')), ('the', tensor(0.0745, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('of', tensor(0.0401, device='cuda:0')), ('friend', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.0339, device='cuda:0')), (',', tensor(0.0933, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('consists', tensor(0., device='cuda:0')), ('of', tensor(0.0401, device='cuda:0')), ('west', tensor(0., device='cuda:0')), ('carrollton', tensor(0., device='cuda:0')), ('parchment', tensor(0., device='cuda:0')), ('company', tensor(0.0782, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('west', tensor(0., device='cuda:0')), ('carrollton', tensor(0., device='cuda:0')), ('converting', tensor(0., device='cuda:0')), ('company', tensor(0.0782, device='cuda:0'))]
idx: 212, example: Nordea Bank Estonia is part of the largest financial group in the Nordic countries , prediction: 2, correct_label: 2, class_scores: [0.17345065 0.2649489  0.5616004 ], word_scores: ['nord:0.0', '##ea:0.0', 'bank:0.0', 'estonia:0.0', 'is:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'largest:0.0', 'financial:0.0', 'group:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'nordic:0.0', 'countries:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nordea', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('estonia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1788, device='cuda:0')), ('the', tensor(0.3320, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('in', tensor(0.1572, device='cuda:0')), ('the', tensor(0.3320, device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('nordea', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('estonia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1788, device='cuda:0')), ('the', tensor(0.3320, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('in', tensor(0.1572, device='cuda:0')), ('the', tensor(0.3320, device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 213, example: ( ADP News ) - Sep 30 , 2008 - Finnish security and privacy software solutions developer Stonesoft Oyj said today that it won a USD 1.9 million ( EUR 1.3 m ) order to deliver its StoneGate network security products to an unnamed Russian t, prediction: 2, correct_label: 1, class_scores: [0.22093543 0.3783568  0.40070772], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', 'news:0.0', '):0.0', '-:4.821180027647642e-06', 'sep:0.0', '30:0.0', ',:7.986737728060689e-06', '2008:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'security:0.0', 'and:0.0', 'privacy:0.0', 'software:0.0', 'solutions:0.0', 'developer:0.0', 'stones:0.0', '##oft:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'won:0.0', 'a:8.62785782373976e-06', 'usd:0.0', '1:0.0', '.:2.903296945078182e-06', '9:0.0', 'million:6.018835847498849e-06', '(:0.0', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '3:0.0', 'm:0.0', '):0.0', 'order:0.0', 'to:2.886244146793615e-06', 'deliver:0.0', 'its:1.7191393908433383e-06', 'stone:0.0', '##gate:0.0', 'network:0.0', 'security:0.0', 'products:0.0', 'to:2.886244146793615e-06', 'an:0.0', 'unnamed:0.0', 'russian:0.0', 't:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0923, device='cuda:0')), ('sep', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1528, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('-', tensor(0.0923, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('privacy', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('stonesoft', tensor(0., device='cuda:0')), ('oyj', tensor(0.0351, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0290, device='cuda:0')), ('it', tensor(0.0639, device='cuda:0')), ('won', tensor(0., device='cuda:0')), ('a', tensor(0.1651, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0556, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1152, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0556, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('to', tensor(0.0552, device='cuda:0')), ('deliver', tensor(0., device='cuda:0')), ('its', tensor(0.0329, device='cuda:0')), ('stonegate', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('to', tensor(0.0552, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('unnamed', tensor(0., device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0'))],  word_scores_max: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0923, device='cuda:0')), ('sep', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1528, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('-', tensor(0.0923, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('privacy', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('stonesoft', tensor(0., device='cuda:0')), ('oyj', tensor(0.0351, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0290, device='cuda:0')), ('it', tensor(0.0639, device='cuda:0')), ('won', tensor(0., device='cuda:0')), ('a', tensor(0.1651, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0556, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1152, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0556, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('to', tensor(0.0552, device='cuda:0')), ('deliver', tensor(0., device='cuda:0')), ('its', tensor(0.0329, device='cuda:0')), ('stonegate', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('to', tensor(0.0552, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('unnamed', tensor(0., device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0'))]
idx: 214, example: The cooperation will involve Arena Partners buying a 35 % share of the new joint venture company , operating in Alma Media 's home sales , vehicle and consumer advertising marketplace businesses , prediction: 2, correct_label: 2, class_scores: [0.22377403 0.31620675 0.46001917], word_scores: ['the:6.3806996877247e-06', 'cooperation:0.0', 'will:4.073096533829812e-06', 'involve:0.0', 'arena:0.0', 'partners:0.0', 'buying:0.0', 'a:8.62785782373976e-06', '35:0.0', '%:0.0', 'share:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'joint:0.0', 'venture:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'operating:0.0', 'in:3.0217122457543155e-06', 'alma:0.0', 'media:0.0', "':0.0", 's:0.0', 'home:0.0', 'sales:0.0', ',:7.986737728060689e-06', 'vehicle:0.0', 'and:0.0', 'consumer:0.0', 'advertising:0.0', 'marketplace:0.0', 'businesses:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1292, device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('will', tensor(0.0824, device='cuda:0')), ('involve', tensor(0., device='cuda:0')), ('arena', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('a', tensor(0.1746, device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.0696, device='cuda:0')), ('the', tensor(0.1292, device='cuda:0')), ('new', tensor(0.0567, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.1355, device='cuda:0')), (',', tensor(0.1617, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('in', tensor(0.0612, device='cuda:0')), ('alma', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1292, device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('will', tensor(0.0824, device='cuda:0')), ('involve', tensor(0., device='cuda:0')), ('arena', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('a', tensor(0.1746, device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.0696, device='cuda:0')), ('the', tensor(0.1292, device='cuda:0')), ('new', tensor(0.0567, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.1355, device='cuda:0')), (',', tensor(0.1617, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('in', tensor(0.0612, device='cuda:0')), ('alma', tensor(0., device='cuda:0'))]
idx: 215, example: At the same time profit of the company increased by 10 % in H1 and reached Ls 79,000 , prediction: 2, correct_label: 1, class_scores: [0.21531434 0.3599787  0.42470697], word_scores: ['at:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'time:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'increased:0.0', 'by:0.0', '10:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'h:0.0', '##1:0.0', 'and:0.0', 'reached:0.0', 'l:0.0', '##s:4.601175078278175e-06', '79:0.0', ',:7.986737728060689e-06', '000:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('at', tensor(0., device='cuda:0')), ('the', tensor(0.1882, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.1014, device='cuda:0')), ('the', tensor(0.1882, device='cuda:0')), ('company', tensor(0.1975, device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('in', tensor(0.0891, device='cuda:0')), ('h1', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reached', tensor(0., device='cuda:0')), ('ls', tensor(0., device='cuda:0')), ('79', tensor(0., device='cuda:0')), (',', tensor(0.2356, device='cuda:0')), ('000', tensor(0., device='cuda:0'))],  word_scores_max: [('at', tensor(0., device='cuda:0')), ('the', tensor(0.1882, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.1014, device='cuda:0')), ('the', tensor(0.1882, device='cuda:0')), ('company', tensor(0.1975, device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('in', tensor(0.0891, device='cuda:0')), ('h1', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reached', tensor(0., device='cuda:0')), ('ls', tensor(0., device='cuda:0')), ('79', tensor(0., device='cuda:0')), (',', tensor(0.2356, device='cuda:0')), ('000', tensor(0., device='cuda:0'))]
idx: 216, example: The company reports a loss for the period of EUR 0.4 mn compared to a loss of EUR 1.9 mn in the corresponding period in 2005 , prediction: 2, correct_label: 1, class_scores: [0.21524654 0.36117974 0.4235736 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'reports:0.0', 'a:8.62785782373976e-06', 'loss:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'period:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '9:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0986, device='cuda:0')), ('company', tensor(0.1035, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('a', tensor(0.1333, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0986, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0531, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0449, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0446, device='cuda:0')), ('a', tensor(0.1333, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0531, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0449, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0467, device='cuda:0')), ('the', tensor(0.0986, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0467, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0986, device='cuda:0')), ('company', tensor(0.1035, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('a', tensor(0.1333, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0986, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0531, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0449, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0446, device='cuda:0')), ('a', tensor(0.1333, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0531, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0449, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0467, device='cuda:0')), ('the', tensor(0.0986, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0467, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))]
idx: 217, example: STX Finland Oy signed a a preliminary agreement for the building of an environmentally friendly , new generation cruise ferry for Viking Line to manage on between Turku , Finland , and Stockholm , Sweden withViking Line ABP , prediction: 2, correct_label: 1, class_scores: [0.23426567 0.3236901  0.4420443 ], word_scores: ['st:0.0', '##x:0.0', 'finland:4.096111752005527e-06', 'o:0.0', '##y:1.832826342251792e-06', 'signed:0.0', 'a:8.62785782373976e-06', 'a:8.62785782373976e-06', 'preliminary:0.0', 'agreement:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'building:0.0', 'of:3.4365734791208524e-06', 'an:0.0', 'environmentally:0.0', 'friendly:0.0', ',:7.986737728060689e-06', 'new:2.798587502184091e-06', 'generation:0.0', 'cruise:0.0', 'ferry:0.0', 'for:0.0', 'viking:0.0', 'line:0.0', 'to:2.886244146793615e-06', 'manage:0.0', 'on:0.0', 'between:0.0', 'turk:0.0', '##u:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'and:0.0', 'stockholm:0.0', ',:7.986737728060689e-06', 'sweden:0.0', 'with:4.733654350275174e-06', '##vik:0.0', '##ing:0.0', 'line:0.0', 'ab:0.0', '##p:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stx', tensor(0., device='cuda:0')), ('finland', tensor(0.0528, device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1111, device='cuda:0')), ('a', tensor(0.1111, device='cuda:0')), ('preliminary', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0822, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('of', tensor(0.0443, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('environmentally', tensor(0., device='cuda:0')), ('friendly', tensor(0., device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('new', tensor(0.0361, device='cuda:0')), ('generation', tensor(0., device='cuda:0')), ('cruise', tensor(0., device='cuda:0')), ('ferry', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('viking', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('to', tensor(0.0372, device='cuda:0')), ('manage', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('turku', tensor(0., device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('finland', tensor(0.0528, device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('withviking', tensor(0.0610, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('abp', tensor(0., device='cuda:0'))],  word_scores_max: [('stx', tensor(0., device='cuda:0')), ('finland', tensor(0.0528, device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1111, device='cuda:0')), ('a', tensor(0.1111, device='cuda:0')), ('preliminary', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0822, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('of', tensor(0.0443, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('environmentally', tensor(0., device='cuda:0')), ('friendly', tensor(0., device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('new', tensor(0.0361, device='cuda:0')), ('generation', tensor(0., device='cuda:0')), ('cruise', tensor(0., device='cuda:0')), ('ferry', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('viking', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('to', tensor(0.0372, device='cuda:0')), ('manage', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('turku', tensor(0., device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('finland', tensor(0.0528, device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), (',', tensor(0.1029, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('withviking', tensor(0.0610, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('abp', tensor(0., device='cuda:0'))]
idx: 218, example: Glaston 's well-known brands are Bavelloni , in pre-processing machines and tools , Tamglass and Uniglass in safety glass machines and Albat + Wirsam in software solutions , prediction: 2, correct_label: 2, class_scores: [0.26731303 0.3277753  0.4049117 ], word_scores: ['g:0.0', '##las:0.0', '##ton:0.0', "':0.0", 's:0.0', 'well:0.0', '-:4.821180027647642e-06', 'known:0.0', 'brands:0.0', 'are:0.0', 'ba:0.0', '##vel:0.0', '##lon:0.0', '##i:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'pre:0.0', '-:4.821180027647642e-06', 'processing:0.0', 'machines:0.0', 'and:0.0', 'tools:0.0', ',:7.986737728060689e-06', 'tam:0.0', '##glass:0.0', 'and:0.0', 'un:0.0', '##ig:0.0', '##lass:0.0', 'in:3.0217122457543155e-06', 'safety:0.0', 'glass:0.0', 'machines:0.0', 'and:0.0', 'alba:0.0', '##t:0.0', '+:0.0', 'wi:0.0', '##rsa:0.0', '##m:0.0', 'in:3.0217122457543155e-06', 'software:0.0', 'solutions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 219, example: At present , the trade mark Pit-Produkt is little-known outside the North-West of Russia , prediction: 2, correct_label: 0, class_scores: [0.17146666 0.41055894 0.41797444], word_scores: ['at:0.0', 'present:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'trade:0.0', 'mark:0.0', 'pit:0.0', '-:4.821180027647642e-06', 'pro:0.0', '##duk:0.0', '##t:0.0', 'is:0.0', 'little:0.0', '-:4.821180027647642e-06', 'known:0.0', 'outside:0.0', 'the:6.3806996877247e-06', 'north:0.0', '-:4.821180027647642e-06', 'west:0.0', 'of:3.4365734791208524e-06', 'russia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('at', tensor(0., device='cuda:0')), ('present', tensor(0., device='cuda:0')), (',', tensor(0.2067, device='cuda:0')), ('the', tensor(0.1651, device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('mark', tensor(0., device='cuda:0')), ('pit', tensor(0., device='cuda:0')), ('-', tensor(0.1247, device='cuda:0')), ('produkt', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('-', tensor(0.1247, device='cuda:0')), ('known', tensor(0., device='cuda:0')), ('outside', tensor(0., device='cuda:0')), ('the', tensor(0.1651, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('-', tensor(0.1247, device='cuda:0')), ('west', tensor(0., device='cuda:0')), ('of', tensor(0.0889, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('at', tensor(0., device='cuda:0')), ('present', tensor(0., device='cuda:0')), (',', tensor(0.2067, device='cuda:0')), ('the', tensor(0.1651, device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('mark', tensor(0., device='cuda:0')), ('pit', tensor(0., device='cuda:0')), ('-', tensor(0.1247, device='cuda:0')), ('produkt', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('-', tensor(0.1247, device='cuda:0')), ('known', tensor(0., device='cuda:0')), ('outside', tensor(0., device='cuda:0')), ('the', tensor(0.1651, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('-', tensor(0.1247, device='cuda:0')), ('west', tensor(0., device='cuda:0')), ('of', tensor(0.0889, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 220, example: Net sales surged by 30 % to EUR 36 million , prediction: 2, correct_label: 1, class_scores: [0.16550438 0.31267995 0.5218157 ], word_scores: ['net:0.0', 'sales:0.0', 'surged:0.0', 'by:0.0', '30:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '36:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('surged', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('to', tensor(0.3241, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('million', tensor(0.6759, device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('surged', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('to', tensor(0.3241, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('million', tensor(0.6759, device='cuda:0'))]
idx: 221, example: New Chairman of the Board of Directors , Mr Chaim Katzman , will give a presentation and answer questions , prediction: 2, correct_label: 2, class_scores: [0.19513379 0.24816851 0.55669767], word_scores: ['new:2.798587502184091e-06', 'chairman:3.5376444884605007e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', ',:7.986737728060689e-06', 'mr:0.0', 'cha:0.0', '##im:0.0', 'katz:0.0', '##man:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'give:0.0', 'a:8.62785782373976e-06', 'presentation:0.0', 'and:0.0', 'answer:0.0', 'questions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('new', tensor(0.0580, device='cuda:0')), ('chairman', tensor(0.0733, device='cuda:0')), ('of', tensor(0.0712, device='cuda:0')), ('the', tensor(0.1322, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0712, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), (',', tensor(0.1655, device='cuda:0')), ('mr', tensor(0., device='cuda:0')), ('chaim', tensor(0., device='cuda:0')), ('katzman', tensor(0., device='cuda:0')), (',', tensor(0.1655, device='cuda:0')), ('will', tensor(0.0844, device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('a', tensor(0.1788, device='cuda:0')), ('presentation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('answer', tensor(0., device='cuda:0')), ('questions', tensor(0., device='cuda:0'))],  word_scores_max: [('new', tensor(0.0580, device='cuda:0')), ('chairman', tensor(0.0733, device='cuda:0')), ('of', tensor(0.0712, device='cuda:0')), ('the', tensor(0.1322, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0712, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), (',', tensor(0.1655, device='cuda:0')), ('mr', tensor(0., device='cuda:0')), ('chaim', tensor(0., device='cuda:0')), ('katzman', tensor(0., device='cuda:0')), (',', tensor(0.1655, device='cuda:0')), ('will', tensor(0.0844, device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('a', tensor(0.1788, device='cuda:0')), ('presentation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('answer', tensor(0., device='cuda:0')), ('questions', tensor(0., device='cuda:0'))]
idx: 222, example: The Remote Radio head module will be available at 4W power for 2.5 GHz and 3.5 GHz TDD frequency bands , prediction: 1, correct_label: 2, class_scores: [0.18957683 0.47600237 0.33442077], word_scores: ['the:6.3806996877247e-06', 'remote:3.999933596787741e-06', 'radio:2.7861385660798987e-06', 'head:0.0', 'module:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'available:0.0', 'at:0.0', '4:0.0', '##w:0.0', 'power:0.0', 'for:0.0', '2:0.0', '.:2.903296945078182e-06', '5:0.0', 'ghz:0.0', 'and:0.0', '3:0.0', '.:2.903296945078182e-06', '5:0.0', 'ghz:0.0', 'td:0.0', '##d:0.0', 'frequency:0.0', 'bands:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2769, device='cuda:0')), ('remote', tensor(0.1736, device='cuda:0')), ('radio', tensor(0.1209, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('module', tensor(0., device='cuda:0')), ('will', tensor(0.1767, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('4w', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1260, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('ghz', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.1260, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('ghz', tensor(0., device='cuda:0')), ('tdd', tensor(0., device='cuda:0')), ('frequency', tensor(0., device='cuda:0')), ('bands', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2769, device='cuda:0')), ('remote', tensor(0.1736, device='cuda:0')), ('radio', tensor(0.1209, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('module', tensor(0., device='cuda:0')), ('will', tensor(0.1767, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('4w', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1260, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('ghz', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.1260, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('ghz', tensor(0., device='cuda:0')), ('tdd', tensor(0., device='cuda:0')), ('frequency', tensor(0., device='cuda:0')), ('bands', tensor(0., device='cuda:0'))]
idx: 223, example: The subsidiary will be responsible for filter sales , local assembly of filters and after market services in China , prediction: 2, correct_label: 2, class_scores: [0.22486526 0.26846218 0.50667256], word_scores: ['the:6.3806996877247e-06', 'subsidiary:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'responsible:0.0', 'for:0.0', 'filter:0.0', 'sales:0.0', ',:7.986737728060689e-06', 'local:0.0', 'assembly:0.0', 'of:3.4365734791208524e-06', 'filters:0.0', 'and:0.0', 'after:0.0', 'market:0.0', 'services:0.0', 'in:3.0217122457543155e-06', 'china:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2563, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('will', tensor(0.1636, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('filter', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), (',', tensor(0.3208, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('assembly', tensor(0., device='cuda:0')), ('of', tensor(0.1380, device='cuda:0')), ('filters', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('in', tensor(0.1214, device='cuda:0')), ('china', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2563, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('will', tensor(0.1636, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('filter', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), (',', tensor(0.3208, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('assembly', tensor(0., device='cuda:0')), ('of', tensor(0.1380, device='cuda:0')), ('filters', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('in', tensor(0.1214, device='cuda:0')), ('china', tensor(0., device='cuda:0'))]
idx: 224, example: EMSA Deputy Chairman of the Board Juri Lember told BNS on Wednesday that this was the first time he heard about the strike as the Swedish side had not informed the Estonian union yet , prediction: 2, correct_label: 0, class_scores: [0.26138762 0.33156666 0.40704572], word_scores: ['ems:0.0', '##a:3.804580501309829e-06', 'deputy:0.0', 'chairman:3.5376444884605007e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'board:0.0', 'ju:0.0', '##ri:0.0', 'le:0.0', '##mber:0.0', 'told:0.0', 'bn:0.0', '##s:4.601175078278175e-06', 'on:0.0', 'wednesday:0.0', 'that:1.5133816759771435e-06', 'this:0.0', 'was:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'time:0.0', 'he:0.0', 'heard:0.0', 'about:0.0', 'the:6.3806996877247e-06', 'strike:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'swedish:0.0', 'side:0.0', 'had:0.0', 'not:0.0', 'informed:0.0', 'the:6.3806996877247e-06', 'estonian:0.0', 'union:0.0', 'yet:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('emsa', tensor(0., device='cuda:0')), ('deputy', tensor(0., device='cuda:0')), ('chairman', tensor(0.0876, device='cuda:0')), ('of', tensor(0.0851, device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('juri', tensor(0., device='cuda:0')), ('lember', tensor(0., device='cuda:0')), ('told', tensor(0., device='cuda:0')), ('bns', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('wednesday', tensor(0., device='cuda:0')), ('that', tensor(0.0375, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('heard', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('strike', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('side', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('informed', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('estonian', tensor(0., device='cuda:0')), ('union', tensor(0., device='cuda:0')), ('yet', tensor(0., device='cuda:0'))],  word_scores_max: [('emsa', tensor(0., device='cuda:0')), ('deputy', tensor(0., device='cuda:0')), ('chairman', tensor(0.0876, device='cuda:0')), ('of', tensor(0.0851, device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('juri', tensor(0., device='cuda:0')), ('lember', tensor(0., device='cuda:0')), ('told', tensor(0., device='cuda:0')), ('bns', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('wednesday', tensor(0., device='cuda:0')), ('that', tensor(0.0375, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('heard', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('strike', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('side', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('informed', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('estonian', tensor(0., device='cuda:0')), ('union', tensor(0., device='cuda:0')), ('yet', tensor(0., device='cuda:0'))]
idx: 225, example: Upon completion of these transactions , Metso 's stake will amount to more than 60 % , prediction: 2, correct_label: 2, class_scores: [0.1665887  0.36279285 0.47061843], word_scores: ['upon:0.0', 'completion:0.0', 'of:3.4365734791208524e-06', 'these:0.0', 'transactions:0.0', ',:7.986737728060689e-06', 'mets:0.0', '##o:0.0', "':0.0", 's:0.0', 'stake:0.0', 'will:4.073096533829812e-06', 'amount:0.0', 'to:2.886244146793615e-06', 'more:0.0', 'than:0.0', '60:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('upon', tensor(0., device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('transactions', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0'))],  word_scores_max: [('upon', tensor(0., device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('transactions', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0'))]
idx: 226, example: Ruukki 's delivery includes steel structures , including installation , for Krakeroy bascule bridge and steel piles for the bridge foundations , prediction: 1, correct_label: 2, class_scores: [0.30654952 0.37240246 0.321048  ], word_scores: ['ru:0.0', '##uk:0.0', '##ki:0.0', "':0.0", 's:0.0', 'delivery:0.0', 'includes:0.0', 'steel:0.0', 'structures:0.0', ',:7.986737728060689e-06', 'including:0.0', 'installation:0.0', ',:7.986737728060689e-06', 'for:0.0', 'k:0.0', '##rak:0.0', '##ero:0.0', '##y:1.832826342251792e-06', 'bas:0.0', '##cule:0.0', 'bridge:0.0', 'and:0.0', 'steel:0.0', 'piles:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'bridge:0.0', 'foundations:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 227, example: Aspo 's Group structure and business operations are continually developed without any predefined schedules , prediction: 2, correct_label: 2, class_scores: [0.16317476 0.4021132  0.434712  ], word_scores: ['as:0.0', '##po:0.0', "':0.0", 's:0.0', 'group:0.0', 'structure:0.0', 'and:0.0', 'business:0.0', 'operations:0.0', 'are:0.0', 'continually:0.0', 'developed:2.488632617314579e-06', 'without:0.0', 'any:0.0', 'pre:0.0', '##de:0.0', '##fine:0.0', '##d:0.0', 'schedules:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 228, example: Scanfil , a systems supplier and contract manufacturer to the communications sector , will give notice to 20 productional employees , and temporarily lay off 15 employees at the company 's plant in Sievi , in Finland , prediction: 2, correct_label: 0, class_scores: [0.20697004 0.33186996 0.46115997], word_scores: ['scan:0.0', '##fi:0.0', '##l:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'systems:0.0', 'supplier:0.0', 'and:0.0', 'contract:7.1864019446366e-06', 'manufacturer:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'communications:0.0', 'sector:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'give:0.0', 'notice:0.0', 'to:2.886244146793615e-06', '20:0.0', 'production:0.0', '##al:0.0', 'employees:0.0', ',:7.986737728060689e-06', 'and:0.0', 'temporarily:0.0', 'lay:0.0', 'off:0.0', '15:0.0', 'employees:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'plant:0.0', 'in:3.0217122457543155e-06', 'si:0.0', '##ev:0.0', '##i:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('scanfil', tensor(0., device='cuda:0')), (',', tensor(0.1280, device='cuda:0')), ('a', tensor(0.1383, device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('contract', tensor(0.1152, device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('to', tensor(0.0463, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), (',', tensor(0.1280, device='cuda:0')), ('will', tensor(0.0653, device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('notice', tensor(0., device='cuda:0')), ('to', tensor(0.0463, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('productional', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), (',', tensor(0.1280, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1023, device='cuda:0'))],  word_scores_max: [('scanfil', tensor(0., device='cuda:0')), (',', tensor(0.1280, device='cuda:0')), ('a', tensor(0.1383, device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('contract', tensor(0.1152, device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('to', tensor(0.0463, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), (',', tensor(0.1280, device='cuda:0')), ('will', tensor(0.0653, device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('notice', tensor(0., device='cuda:0')), ('to', tensor(0.0463, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('productional', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), (',', tensor(0.1280, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1023, device='cuda:0'))]
idx: 229, example: 21 October 2010 - Finnish fishing tackle company Rapala VMC Corp ( HEL : RAP1V ) said today its net profit rose to EUR18 .9 m for the first nine months of 2010 from EUR15 .1 m for the same period a year earlier , prediction: 2, correct_label: 1, class_scores: [0.2841894  0.35534593 0.36046466], word_scores: ['21:0.0', 'october:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'fishing:0.0', 'tackle:0.0', 'company:6.695386673527537e-06', 'rap:0.0', '##ala:0.0', 'v:0.0', '##mc:0.0', 'corp:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'rap:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##18:0.0', '.:2.903296945078182e-06', '9:0.0', 'm:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'nine:0.0', 'months:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##15:0.0', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('21', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0941, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('fishing', tensor(0., device='cuda:0')), ('tackle', tensor(0., device='cuda:0')), ('company', tensor(0.1306, device='cuda:0')), ('rapala', tensor(0., device='cuda:0')), ('vmc', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('rap1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0335, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0563, device='cuda:0')), ('eur18', tensor(0., device='cuda:0')), ('.', tensor(0.0567, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1245, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0671, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0877, device='cuda:0')), ('eur15', tensor(0., device='cuda:0')), ('.', tensor(0.0567, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1245, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1683, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('21', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0941, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('fishing', tensor(0., device='cuda:0')), ('tackle', tensor(0., device='cuda:0')), ('company', tensor(0.1306, device='cuda:0')), ('rapala', tensor(0., device='cuda:0')), ('vmc', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('rap1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0335, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0563, device='cuda:0')), ('eur18', tensor(0., device='cuda:0')), ('.', tensor(0.0567, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1245, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0671, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0877, device='cuda:0')), ('eur15', tensor(0., device='cuda:0')), ('.', tensor(0.0567, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1245, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1683, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 230, example: The maximum grade of the veneer yield is calculated , based on the dimensions and grades of the veneer products , as well as by iterating the places of the peeling axes and simulating the peeling process , prediction: 1, correct_label: 2, class_scores: [0.19222054 0.40685767 0.40092173], word_scores: ['the:6.3806996877247e-06', 'maximum:0.0', 'grade:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 've:0.0', '##neer:0.0', 'yield:0.0', 'is:0.0', 'calculated:0.0', ',:7.986737728060689e-06', 'based:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'dimensions:0.0', 'and:0.0', 'grades:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 've:0.0', '##neer:0.0', 'products:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'by:0.0', 'it:3.3415778943890473e-06', '##era:0.0', '##ting:0.0', 'the:6.3806996877247e-06', 'places:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'peeling:0.0', 'axes:0.0', 'and:0.0', 'sim:0.0', '##ulating:0.0', 'the:6.3806996877247e-06', 'peeling:0.0', 'process:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0859, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('grade', tensor(0., device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('veneer', tensor(0., device='cuda:0')), ('yield', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('calculated', tensor(0., device='cuda:0')), (',', tensor(0.1075, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('dimensions', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grades', tensor(0., device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('veneer', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), (',', tensor(0.1075, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('iterating', tensor(0.0450, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('places', tensor(0., device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('peeling', tensor(0., device='cuda:0')), ('axes', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('simulating', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('peeling', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0859, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('grade', tensor(0., device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('veneer', tensor(0., device='cuda:0')), ('yield', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('calculated', tensor(0., device='cuda:0')), (',', tensor(0.1075, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('dimensions', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grades', tensor(0., device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('veneer', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), (',', tensor(0.1075, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('iterating', tensor(0.0450, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('places', tensor(0., device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('peeling', tensor(0., device='cuda:0')), ('axes', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('simulating', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('peeling', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0'))]
idx: 231, example: Niklas Skogster has been employed by the ABB Group in various positions concerning the development of operations , prediction: 2, correct_label: 2, class_scores: [0.225706   0.2789321  0.49536183], word_scores: ['nik:0.0', '##las:0.0', 'sk:0.0', '##og:0.0', '##ster:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'employed:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'ab:0.0', '##b:0.0', 'group:0.0', 'in:3.0217122457543155e-06', 'various:0.0', 'positions:0.0', 'concerning:0.0', 'the:6.3806996877247e-06', 'development:0.0', 'of:3.4365734791208524e-06', 'operations:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('niklas', tensor(0., device='cuda:0')), ('skogster', tensor(0., device='cuda:0')), ('has', tensor(0.2355, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('employed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.2538, device='cuda:0')), ('abb', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('in', tensor(0.1202, device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('the', tensor(0.2538, device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('of', tensor(0.1367, device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('niklas', tensor(0., device='cuda:0')), ('skogster', tensor(0., device='cuda:0')), ('has', tensor(0.2355, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('employed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.2538, device='cuda:0')), ('abb', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('in', tensor(0.1202, device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('the', tensor(0.2538, device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('of', tensor(0.1367, device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 232, example: Curators have divided their material into eight themes , prediction: 2, correct_label: 2, class_scores: [0.23048612 0.32042307 0.44909084], word_scores: ['curator:0.0', '##s:4.601175078278175e-06', 'have:2.910326429628185e-06', 'divided:0.0', 'their:0.0', 'material:0.0', 'into:0.0', 'eight:0.0', 'themes:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('curators', tensor(0., device='cuda:0')), ('have', tensor(1., device='cuda:0')), ('divided', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('themes', tensor(0., device='cuda:0'))],  word_scores_max: [('curators', tensor(0., device='cuda:0')), ('have', tensor(1., device='cuda:0')), ('divided', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('themes', tensor(0., device='cuda:0'))]
idx: 233, example: The value of the orders is about EUR 25mn , prediction: 2, correct_label: 2, class_scores: [0.22744738 0.3502634  0.42228922], word_scores: ['the:6.3806996877247e-06', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'orders:0.0', 'is:0.0', 'about:0.0', 'eu:0.0', '##r:0.0', '25:0.0', '##m:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('25mn', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('25mn', tensor(0., device='cuda:0'))]
idx: 234, example: Kirsi Rantanen was previously development director for HK Ruokatalo 's poultry business , prediction: 2, correct_label: 2, class_scores: [0.17154086 0.37238222 0.45607692], word_scores: ['ki:0.0', '##rs:0.0', '##i:0.0', 'ran:0.0', '##tan:0.0', '##en:0.0', 'was:0.0', 'previously:0.0', 'development:0.0', 'director:0.0', 'for:0.0', 'hk:0.0', 'ru:0.0', '##oka:0.0', '##tal:0.0', '##o:0.0', "':0.0", 's:0.0', 'poultry:0.0', 'business:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('kirsi', tensor(nan, device='cuda:0')), ('rantanen', tensor(nan, device='cuda:0')), ('was', tensor(nan, device='cuda:0')), ('previously', tensor(nan, device='cuda:0')), ('development', tensor(nan, device='cuda:0')), ('director', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('hk', tensor(nan, device='cuda:0'))],  word_scores_max: [('kirsi', tensor(nan, device='cuda:0')), ('rantanen', tensor(nan, device='cuda:0')), ('was', tensor(nan, device='cuda:0')), ('previously', tensor(nan, device='cuda:0')), ('development', tensor(nan, device='cuda:0')), ('director', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('hk', tensor(nan, device='cuda:0'))]
idx: 235, example: The total value of these two contracts is over EUR 21 million , prediction: 1, correct_label: 2, class_scores: [0.21127789 0.40155384 0.38716835], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'these:0.0', 'two:0.0', 'contracts:0.0', 'is:0.0', 'over:0.0', 'eu:0.0', '##r:0.0', '21:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4029, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2170, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('million', tensor(0.3801, device='cuda:0'))],  word_scores_max: [('the', tensor(0.4029, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2170, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('million', tensor(0.3801, device='cuda:0'))]
idx: 236, example: The solvency capital ratio of both companies was 2.7 times the solvency limit , prediction: 2, correct_label: 2, class_scores: [0.22394502 0.30095604 0.475099  ], word_scores: ['the:6.3806996877247e-06', 'solve:0.0', '##ncy:0.0', 'capital:0.0', 'ratio:0.0', 'of:3.4365734791208524e-06', 'both:0.0', 'companies:0.0', 'was:0.0', '2:0.0', '.:2.903296945078182e-06', '7:0.0', 'times:0.0', 'the:6.3806996877247e-06', 'solve:0.0', '##ncy:0.0', 'limit:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3340, device='cuda:0')), ('solvency', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('ratio', tensor(0., device='cuda:0')), ('of', tensor(0.1799, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1520, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('times', tensor(0., device='cuda:0')), ('the', tensor(0.3340, device='cuda:0')), ('solvency', tensor(0., device='cuda:0')), ('limit', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3340, device='cuda:0')), ('solvency', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('ratio', tensor(0., device='cuda:0')), ('of', tensor(0.1799, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1520, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('times', tensor(0., device='cuda:0')), ('the', tensor(0.3340, device='cuda:0')), ('solvency', tensor(0., device='cuda:0')), ('limit', tensor(0., device='cuda:0'))]
idx: 237, example: The Annual Report contains the financial statements , the consolidated financial statements , the report by the Board of Directors and the auditor 's report , prediction: 2, correct_label: 2, class_scores: [0.2127082  0.28616676 0.50112504], word_scores: ['the:6.3806996877247e-06', 'annual:0.0', 'report:0.0', 'contains:0.0', 'the:6.3806996877247e-06', 'financial:0.0', 'statements:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'consolidated:0.0', 'financial:0.0', 'statements:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'report:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'auditor:0.0', "':0.0", 's:0.0', 'report:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1106, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('contains', tensor(0., device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('statements', tensor(0., device='cuda:0')), (',', tensor(0.1384, device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('consolidated', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('statements', tensor(0., device='cuda:0')), (',', tensor(0.1384, device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0596, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1106, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1106, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('contains', tensor(0., device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('statements', tensor(0., device='cuda:0')), (',', tensor(0.1384, device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('consolidated', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('statements', tensor(0., device='cuda:0')), (',', tensor(0.1384, device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1106, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0596, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1106, device='cuda:0'))]
idx: 238, example: After the signing , the total amount of Aspo 's revolving credit facility agreements is EUR 50 million , which replaces the formerly valid agreements of EUR 80 million , prediction: 2, correct_label: 2, class_scores: [0.17900433 0.39844292 0.42255273], word_scores: ['after:0.0', 'the:6.3806996877247e-06', 'signing:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'total:0.0', 'amount:0.0', 'of:3.4365734791208524e-06', 'as:0.0', '##po:0.0', "':0.0", 's:0.0', 'revolving:0.0', 'credit:0.0', 'facility:0.0', 'agreements:0.0', 'is:0.0', 'eu:0.0', '##r:0.0', '50:0.0', 'million:6.018835847498849e-06', ',:7.986737728060689e-06', 'which:0.0', 'replaces:0.0', 'the:6.3806996877247e-06', 'formerly:0.0', 'valid:0.0', 'agreements:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '80:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('signing', tensor(0., device='cuda:0')), (',', tensor(0.3302, device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('of', tensor(0.1421, device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('signing', tensor(0., device='cuda:0')), (',', tensor(0.3302, device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('of', tensor(0.1421, device='cuda:0'))]
idx: 239, example: Financial , strategic and operational factors are considered , prediction: 2, correct_label: 2, class_scores: [0.18688327 0.3433134  0.46980333], word_scores: ['financial:0.0', ',:7.986737728060689e-06', 'strategic:0.0', 'and:0.0', 'operational:0.0', 'factors:0.0', 'are:0.0', 'considered:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('financial', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('strategic', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('factors', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('considered', tensor(0., device='cuda:0'))],  word_scores_max: [('financial', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('strategic', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('factors', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('considered', tensor(0., device='cuda:0'))]
idx: 240, example: Tikkurila Powder Coatings has some 50 employees at its four paint plants , which generated revenues of EUR2 .4 m USD3 .3 m in 2010 , prediction: 2, correct_label: 2, class_scores: [0.26946664 0.29122216 0.4393112 ], word_scores: ['ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', 'powder:0.0', 'coating:0.0', '##s:4.601175078278175e-06', 'has:5.9214244174654596e-06', 'some:0.0', '50:0.0', 'employees:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'four:3.606506425057887e-06', 'paint:0.0', 'plants:0.0', ',:7.986737728060689e-06', 'which:0.0', 'generated:0.0', 'revenues:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##2:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', 'usd:0.0', '##3:0.0', '.:2.903296945078182e-06', '3:0.0', 'm:0.0', 'in:3.0217122457543155e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tikkurila', tensor(0., device='cuda:0')), ('powder', tensor(0., device='cuda:0')), ('coatings', tensor(0., device='cuda:0')), ('has', tensor(0.1880, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0546, device='cuda:0')), ('four', tensor(0.1145, device='cuda:0')), ('paint', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), (',', tensor(0.2536, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0')), ('of', tensor(0.1091, device='cuda:0')), ('eur2', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('usd3', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0959, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('tikkurila', tensor(0., device='cuda:0')), ('powder', tensor(0., device='cuda:0')), ('coatings', tensor(0., device='cuda:0')), ('has', tensor(0.1880, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0546, device='cuda:0')), ('four', tensor(0.1145, device='cuda:0')), ('paint', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), (',', tensor(0.2536, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0')), ('of', tensor(0.1091, device='cuda:0')), ('eur2', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('usd3', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0959, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 241, example: The program included operational improvements and reductions in personnel , mainly in the Netherlands , prediction: 2, correct_label: 2, class_scores: [0.16834803 0.347837   0.48381495], word_scores: ['the:6.3806996877247e-06', 'program:0.0', 'included:0.0', 'operational:0.0', 'improvements:0.0', 'and:0.0', 'reductions:0.0', 'in:3.0217122457543155e-06', 'personnel:0.0', ',:7.986737728060689e-06', 'mainly:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'netherlands:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2382, device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('included', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('improvements', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('in', tensor(0.1128, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), (',', tensor(0.2981, device='cuda:0')), ('mainly', tensor(0., device='cuda:0')), ('in', tensor(0.1128, device='cuda:0')), ('the', tensor(0.2382, device='cuda:0')), ('netherlands', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2382, device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('included', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('improvements', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('in', tensor(0.1128, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), (',', tensor(0.2981, device='cuda:0')), ('mainly', tensor(0., device='cuda:0')), ('in', tensor(0.1128, device='cuda:0')), ('the', tensor(0.2382, device='cuda:0')), ('netherlands', tensor(0., device='cuda:0'))]
idx: 242, example: The order includes 48 ship cranes that will be delivered for 12 container feeders to be built at Wenchong shipyard in China , prediction: 2, correct_label: 2, class_scores: [0.1418342  0.38837364 0.46979222], word_scores: ['the:6.3806996877247e-06', 'order:0.0', 'includes:0.0', '48:0.0', 'ship:0.0', 'cranes:0.0', 'that:1.5133816759771435e-06', 'will:4.073096533829812e-06', 'be:0.0', 'delivered:0.0', 'for:0.0', '12:0.0', 'container:0.0', 'feeder:0.0', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', 'be:0.0', 'built:0.0', 'at:0.0', 'wen:0.0', '##chon:0.0', '##g:0.0', 'shipyard:0.0', 'in:3.0217122457543155e-06', 'china:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3570, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), ('cranes', tensor(0., device='cuda:0')), ('that', tensor(0.0847, device='cuda:0')), ('will', tensor(0.2279, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('container', tensor(0., device='cuda:0')), ('feeders', tensor(0., device='cuda:0')), ('to', tensor(0.1615, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('wenchong', tensor(0., device='cuda:0')), ('shipyard', tensor(0., device='cuda:0')), ('in', tensor(0.1690, device='cuda:0')), ('china', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3570, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), ('cranes', tensor(0., device='cuda:0')), ('that', tensor(0.0847, device='cuda:0')), ('will', tensor(0.2279, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('container', tensor(0., device='cuda:0')), ('feeders', tensor(0., device='cuda:0')), ('to', tensor(0.1615, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('wenchong', tensor(0., device='cuda:0')), ('shipyard', tensor(0., device='cuda:0')), ('in', tensor(0.1690, device='cuda:0')), ('china', tensor(0., device='cuda:0'))]
idx: 243, example: Recently the company decided to build a second identical plant at the same site due to be commissioned toward the end of 2008 , prediction: 2, correct_label: 2, class_scores: [0.23725376 0.34362605 0.41912025], word_scores: ['recently:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'decided:0.0', 'to:2.886244146793615e-06', 'build:0.0', 'a:8.62785782373976e-06', 'second:0.0', 'identical:0.0', 'plant:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'site:0.0', 'due:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'commissioned:0.0', 'toward:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('recently', tensor(0., device='cuda:0')), ('the', tensor(0.1461, device='cuda:0')), ('company', tensor(0.1533, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0661, device='cuda:0')), ('build', tensor(0., device='cuda:0')), ('a', tensor(0.1975, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('identical', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1461, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.0661, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('commissioned', tensor(0., device='cuda:0')), ('toward', tensor(0., device='cuda:0')), ('the', tensor(0.1461, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0787, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('recently', tensor(0., device='cuda:0')), ('the', tensor(0.1461, device='cuda:0')), ('company', tensor(0.1533, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0661, device='cuda:0')), ('build', tensor(0., device='cuda:0')), ('a', tensor(0.1975, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('identical', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1461, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.0661, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('commissioned', tensor(0., device='cuda:0')), ('toward', tensor(0., device='cuda:0')), ('the', tensor(0.1461, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0787, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 244, example: In a media advisory , the NTSB said that after subsequent testing , `` the train detection system intermittently failed . ', prediction: 1, correct_label: 0, class_scores: [0.16244146 0.4637692  0.37378937], word_scores: ['in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'media:0.0', 'advisory:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'nt:0.0', '##sb:0.0', 'said:0.0', 'that:1.5133816759771435e-06', 'after:0.0', 'subsequent:0.0', 'testing:0.0', ',:7.986737728060689e-06', '`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'train:0.0', 'detection:0.0', 'system:2.472523192409426e-06', 'intermittent:0.0', '##ly:0.0', 'failed:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0639, device='cuda:0')), ('a', tensor(0.1825, device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('advisory', tensor(0., device='cuda:0')), (',', tensor(0.1689, device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('ntsb', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0320, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('subsequent', tensor(0., device='cuda:0')), ('testing', tensor(0., device='cuda:0')), (',', tensor(0.1689, device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('train', tensor(0., device='cuda:0')), ('detection', tensor(0., device='cuda:0')), ('system', tensor(0.0523, device='cuda:0')), ('intermittently', tensor(0., device='cuda:0')), ('failed', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0639, device='cuda:0')), ('a', tensor(0.1825, device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('advisory', tensor(0., device='cuda:0')), (',', tensor(0.1689, device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('ntsb', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0320, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('subsequent', tensor(0., device='cuda:0')), ('testing', tensor(0., device='cuda:0')), (',', tensor(0.1689, device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('train', tensor(0., device='cuda:0')), ('detection', tensor(0., device='cuda:0')), ('system', tensor(0.0523, device='cuda:0')), ('intermittently', tensor(0., device='cuda:0')), ('failed', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 245, example: Two of these contracts are for turntable anode vibrocompactors that will be delivered to Gansu Hualu Aluminum Co Ltd and another unnamed costumer , prediction: 2, correct_label: 2, class_scores: [0.16189742 0.3632896  0.47481295], word_scores: ['two:0.0', 'of:3.4365734791208524e-06', 'these:0.0', 'contracts:0.0', 'are:0.0', 'for:0.0', 'turn:0.0', '##table:0.0', 'an:0.0', '##ode:0.0', 'vi:0.0', '##bro:0.0', '##com:0.0', '##pac:0.0', '##tors:0.0', 'that:1.5133816759771435e-06', 'will:4.073096533829812e-06', 'be:0.0', 'delivered:0.0', 'to:2.886244146793615e-06', 'gan:0.0', '##su:0.0', 'hua:0.0', '##lu:0.0', 'aluminum:0.0', 'co:0.0', 'ltd:0.0', 'and:0.0', 'another:0.0', 'unnamed:0.0', 'costume:0.0', '##r:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('two', tensor(0., device='cuda:0')), ('of', tensor(0.2886, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('turntable', tensor(0., device='cuda:0')), ('anode', tensor(0., device='cuda:0')), ('vibrocompactors', tensor(0., device='cuda:0')), ('that', tensor(0.1271, device='cuda:0')), ('will', tensor(0.3420, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('to', tensor(0.2424, device='cuda:0')), ('gansu', tensor(0., device='cuda:0')), ('hualu', tensor(0., device='cuda:0')), ('aluminum', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('unnamed', tensor(0., device='cuda:0')), ('costumer', tensor(0., device='cuda:0'))],  word_scores_max: [('two', tensor(0., device='cuda:0')), ('of', tensor(0.2886, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('turntable', tensor(0., device='cuda:0')), ('anode', tensor(0., device='cuda:0')), ('vibrocompactors', tensor(0., device='cuda:0')), ('that', tensor(0.1271, device='cuda:0')), ('will', tensor(0.3420, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('to', tensor(0.2424, device='cuda:0')), ('gansu', tensor(0., device='cuda:0')), ('hualu', tensor(0., device='cuda:0')), ('aluminum', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('unnamed', tensor(0., device='cuda:0')), ('costumer', tensor(0., device='cuda:0'))]
idx: 246, example: The company is well positioned in Brazil and Uruguay , prediction: 2, correct_label: 1, class_scores: [0.23139523 0.3558455  0.41275927], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'well:0.0', 'positioned:0.0', 'in:3.0217122457543155e-06', 'brazil:0.0', 'and:0.0', 'uruguay:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3964, device='cuda:0')), ('company', tensor(0.4159, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('positioned', tensor(0., device='cuda:0')), ('in', tensor(0.1877, device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('uruguay', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3964, device='cuda:0')), ('company', tensor(0.4159, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('positioned', tensor(0., device='cuda:0')), ('in', tensor(0.1877, device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('uruguay', tensor(0., device='cuda:0'))]
idx: 247, example: The company had hoped the new plant would be on stream by the end of 2008 , prediction: 2, correct_label: 2, class_scores: [0.21626215 0.31887403 0.46486387], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'had:0.0', 'hoped:0.0', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'plant:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'on:0.0', 'stream:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1867, device='cuda:0')), ('company', tensor(0.1960, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('hoped', tensor(0., device='cuda:0')), ('the', tensor(0.1867, device='cuda:0')), ('new', tensor(0.0819, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('would', tensor(0.0613, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('stream', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1867, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1006, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1867, device='cuda:0')), ('company', tensor(0.1960, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('hoped', tensor(0., device='cuda:0')), ('the', tensor(0.1867, device='cuda:0')), ('new', tensor(0.0819, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('would', tensor(0.0613, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('stream', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1867, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1006, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 248, example: A downloadable instruction sheet , instructional video , and project ideas for the award-winning Everywhere Punch TM Window System can be found at www.fiskars.com , prediction: 1, correct_label: 2, class_scores: [0.20533724 0.42342722 0.37123564], word_scores: ['a:8.62785782373976e-06', 'downloadable:0.0', 'instruction:0.0', 'sheet:0.0', ',:7.986737728060689e-06', 'instructional:0.0', 'video:0.0', ',:7.986737728060689e-06', 'and:0.0', 'project:0.0', 'ideas:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'award:0.0', '-:4.821180027647642e-06', 'winning:0.0', 'everywhere:0.0', 'punch:0.0', 't:0.0', '##m:0.0', 'window:0.0', 'system:2.472523192409426e-06', 'can:0.0', 'be:0.0', 'found:0.0', 'at:0.0', 'www:0.0', '.:2.903296945078182e-06', 'fis:0.0', '##kar:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', 'com:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1957, device='cuda:0')), ('downloadable', tensor(0., device='cuda:0')), ('instruction', tensor(0., device='cuda:0')), ('sheet', tensor(0., device='cuda:0')), (',', tensor(0.1812, device='cuda:0')), ('instructional', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), (',', tensor(0.1812, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('ideas', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('award', tensor(0., device='cuda:0')), ('-', tensor(0.1094, device='cuda:0')), ('winning', tensor(0., device='cuda:0')), ('everywhere', tensor(0., device='cuda:0')), ('punch', tensor(0., device='cuda:0')), ('tm', tensor(0., device='cuda:0')), ('window', tensor(0., device='cuda:0')), ('system', tensor(0.0561, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('found', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.0659, device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('.', tensor(0.0659, device='cuda:0')), ('com', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.1957, device='cuda:0')), ('downloadable', tensor(0., device='cuda:0')), ('instruction', tensor(0., device='cuda:0')), ('sheet', tensor(0., device='cuda:0')), (',', tensor(0.1812, device='cuda:0')), ('instructional', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), (',', tensor(0.1812, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('ideas', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('award', tensor(0., device='cuda:0')), ('-', tensor(0.1094, device='cuda:0')), ('winning', tensor(0., device='cuda:0')), ('everywhere', tensor(0., device='cuda:0')), ('punch', tensor(0., device='cuda:0')), ('tm', tensor(0., device='cuda:0')), ('window', tensor(0., device='cuda:0')), ('system', tensor(0.0561, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('found', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.0659, device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('.', tensor(0.0659, device='cuda:0')), ('com', tensor(0., device='cuda:0'))]
idx: 249, example: The social plan negotiations were part of the three year turn-around program which is expected to ensure Salomon 's future competitiveness , prediction: 2, correct_label: 1, class_scores: [0.19795394 0.35637772 0.44566843], word_scores: ['the:6.3806996877247e-06', 'social:0.0', 'plan:0.0', 'negotiations:0.0', 'were:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'three:0.0', 'year:0.0', 'turn:0.0', '-:4.821180027647642e-06', 'around:0.0', 'program:0.0', 'which:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'ensure:0.0', 'sal:0.0', '##omo:0.0', '##n:0.0', "':0.0", 's:0.0', 'future:0.0', 'competitive:0.0', '##ness:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2669, device='cuda:0')), ('social', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1438, device='cuda:0')), ('the', tensor(0.2669, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('-', tensor(0.2017, device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1207, device='cuda:0')), ('ensure', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2669, device='cuda:0')), ('social', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1438, device='cuda:0')), ('the', tensor(0.2669, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('-', tensor(0.2017, device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1207, device='cuda:0')), ('ensure', tensor(0., device='cuda:0'))]
idx: 250, example: Finnish cutlery and hand tools maker Fiskars Oyj Abp ( HEL : FISAS ) said today its net profit rose to EUR 24.1 million ( USD 33.6 m ) in the third quarter of 2010 from EUR 17.9 million a year earlier , prediction: 1, correct_label: 1, class_scores: [0.15984641 0.43380815 0.40634546], word_scores: ['finnish:0.0', 'cutler:0.0', '##y:1.832826342251792e-06', 'and:0.0', 'hand:0.0', 'tools:0.0', 'maker:0.0', 'fis:0.0', '##kar:0.0', '##s:4.601175078278175e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'ab:0.0', '##p:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'fis:0.0', '##as:0.0', '):0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '24:0.0', '.:2.903296945078182e-06', '1:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '33:0.0', '.:2.903296945078182e-06', '6:0.0', 'm:0.0', '):0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '17:0.0', '.:2.903296945078182e-06', '9:0.0', 'million:6.018835847498849e-06', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('cutlery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hand', tensor(0., device='cuda:0')), ('tools', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('oyj', tensor(0.0345, device='cuda:0')), ('abp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fisas', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0323, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0543, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(0.0546, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.1132, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('.', tensor(0.0546, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0569, device='cuda:0')), ('the', tensor(0.1201, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0647, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0846, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('.', tensor(0.0546, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1132, device='cuda:0')), ('a', tensor(0.1623, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('cutlery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hand', tensor(0., device='cuda:0')), ('tools', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('oyj', tensor(0.0345, device='cuda:0')), ('abp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fisas', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0323, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0543, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(0.0546, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.1132, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('.', tensor(0.0546, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0569, device='cuda:0')), ('the', tensor(0.1201, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0647, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0846, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('.', tensor(0.0546, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1132, device='cuda:0')), ('a', tensor(0.1623, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 251, example: Its 168 asset management experts manage assets worth over EUR 35 billion , prediction: 1, correct_label: 2, class_scores: [0.2015884  0.40884292 0.3895687 ], word_scores: ['its:1.7191393908433383e-06', '168:0.0', 'asset:0.0', 'management:0.0', 'experts:0.0', 'manage:0.0', 'assets:0.0', 'worth:0.0', 'over:0.0', 'eu:0.0', '##r:0.0', '35:0.0', 'billion:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('its', tensor(1., device='cuda:0')), ('168', tensor(0., device='cuda:0')), ('asset', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('experts', tensor(0., device='cuda:0')), ('manage', tensor(0., device='cuda:0')), ('assets', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0'))],  word_scores_max: [('its', tensor(1., device='cuda:0')), ('168', tensor(0., device='cuda:0')), ('asset', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('experts', tensor(0., device='cuda:0')), ('manage', tensor(0., device='cuda:0')), ('assets', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0'))]
idx: 252, example: The situation of coated magazine printing paper will continue to be weak , prediction: 2, correct_label: 0, class_scores: [0.20057082 0.32692304 0.47250617], word_scores: ['the:6.3806996877247e-06', 'situation:0.0', 'of:3.4365734791208524e-06', 'coated:0.0', 'magazine:0.0', 'printing:0.0', 'paper:2.697490344871767e-06', 'will:4.073096533829812e-06', 'continue:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'weak:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3277, device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('of', tensor(0.1765, device='cuda:0')), ('coated', tensor(0., device='cuda:0')), ('magazine', tensor(0., device='cuda:0')), ('printing', tensor(0., device='cuda:0')), ('paper', tensor(0.1385, device='cuda:0')), ('will', tensor(0.2092, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1482, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('weak', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3277, device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('of', tensor(0.1765, device='cuda:0')), ('coated', tensor(0., device='cuda:0')), ('magazine', tensor(0., device='cuda:0')), ('printing', tensor(0., device='cuda:0')), ('paper', tensor(0.1385, device='cuda:0')), ('will', tensor(0.2092, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1482, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('weak', tensor(0., device='cuda:0'))]
idx: 253, example: The contract covers installation , training and start-up services , prediction: 1, correct_label: 2, class_scores: [0.19784258 0.4198295  0.382328  ], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'covers:0.0', 'installation:0.0', ',:7.986737728060689e-06', 'training:0.0', 'and:0.0', 'start:0.0', '-:4.821180027647642e-06', 'up:1.4959460941099678e-06', 'services:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2289, device='cuda:0')), ('contract', tensor(0.2578, device='cuda:0')), ('covers', tensor(0., device='cuda:0')), ('installation', tensor(0., device='cuda:0')), (',', tensor(0.2866, device='cuda:0')), ('training', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('-', tensor(0.1730, device='cuda:0')), ('up', tensor(0.0537, device='cuda:0')), ('services', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2289, device='cuda:0')), ('contract', tensor(0.2578, device='cuda:0')), ('covers', tensor(0., device='cuda:0')), ('installation', tensor(0., device='cuda:0')), (',', tensor(0.2866, device='cuda:0')), ('training', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('-', tensor(0.1730, device='cuda:0')), ('up', tensor(0.0537, device='cuda:0')), ('services', tensor(0., device='cuda:0'))]
idx: 254, example: Nevertheless , its market share rose to 49.14 percent from 48.51 percent a year earlier , prediction: 1, correct_label: 1, class_scores: [0.22524835 0.4161669  0.3585848 ], word_scores: ['nevertheless:0.0', ',:7.986737728060689e-06', 'its:1.7191393908433383e-06', 'market:0.0', 'share:0.0', 'rose:0.0', 'to:2.886244146793615e-06', '49:0.0', '.:2.903296945078182e-06', '14:0.0', 'percent:0.0', 'from:4.495178018260049e-06', '48:0.0', '.:2.903296945078182e-06', '51:0.0', 'percent:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nevertheless', tensor(0., device='cuda:0')), (',', tensor(0.2534, device='cuda:0')), ('its', tensor(0.0545, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0916, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('.', tensor(0.0921, device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('from', tensor(0.1426, device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('.', tensor(0.0921, device='cuda:0')), ('51', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('a', tensor(0.2737, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('nevertheless', tensor(0., device='cuda:0')), (',', tensor(0.2534, device='cuda:0')), ('its', tensor(0.0545, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0916, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('.', tensor(0.0921, device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('from', tensor(0.1426, device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('.', tensor(0.0921, device='cuda:0')), ('51', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('a', tensor(0.2737, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 255, example: It will combine and renew the contents and functionality of the current systems for funding and online service as well as their maintenance , prediction: 1, correct_label: 1, class_scores: [0.14672199 0.44168767 0.4115904 ], word_scores: ['it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'combine:0.0', 'and:0.0', 'renew:0.0', 'the:6.3806996877247e-06', 'contents:0.0', 'and:0.0', 'functionality:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'current:0.0', 'systems:0.0', 'for:0.0', 'funding:0.0', 'and:0.0', 'online:0.0', 'service:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'their:0.0', 'maintenance:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.1415, device='cuda:0')), ('will', tensor(0.1725, device='cuda:0')), ('combine', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('renew', tensor(0., device='cuda:0')), ('the', tensor(0.2702, device='cuda:0')), ('contents', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('functionality', tensor(0., device='cuda:0')), ('of', tensor(0.1455, device='cuda:0')), ('the', tensor(0.2702, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('funding', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.1415, device='cuda:0')), ('will', tensor(0.1725, device='cuda:0')), ('combine', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('renew', tensor(0., device='cuda:0')), ('the', tensor(0.2702, device='cuda:0')), ('contents', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('functionality', tensor(0., device='cuda:0')), ('of', tensor(0.1455, device='cuda:0')), ('the', tensor(0.2702, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('funding', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0'))]
idx: 256, example: This truly takes efficiency to new heights , '' Mr. Metso adds , prediction: 2, correct_label: 1, class_scores: [0.18780203 0.33413622 0.47806177], word_scores: ['this:0.0', 'truly:0.0', 'takes:0.0', 'efficiency:0.0', 'to:2.886244146793615e-06', 'new:2.798587502184091e-06', 'heights:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'mr:0.0', '.:2.903296945078182e-06', 'mets:0.0', '##o:0.0', 'adds:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('this', tensor(0., device='cuda:0')), ('truly', tensor(0., device='cuda:0')), ('takes', tensor(0., device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('to', tensor(0.2111, device='cuda:0')), ('new', tensor(0.2047, device='cuda:0')), ('heights', tensor(0., device='cuda:0')), (',', tensor(0.5842, device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('truly', tensor(0., device='cuda:0')), ('takes', tensor(0., device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('to', tensor(0.2111, device='cuda:0')), ('new', tensor(0.2047, device='cuda:0')), ('heights', tensor(0., device='cuda:0')), (',', tensor(0.5842, device='cuda:0'))]
idx: 257, example: After Chuck Smith was laid off on May 30 from his $ 90,000 housing consultant job , he and his wife had to cut spending in half for their family of six , having to rely on his wife 's income -- about the same as his -- alone , prediction: 2, correct_label: 0, class_scores: [0.15949377 0.36590406 0.47460213], word_scores: ['after:0.0', 'chuck:0.0', 'smith:0.0', 'was:0.0', 'laid:0.0', 'off:0.0', 'on:0.0', 'may:0.0', '30:0.0', 'from:4.495178018260049e-06', 'his:0.0', '$:0.0', '90:0.0', ',:7.986737728060689e-06', '000:0.0', 'housing:0.0', 'consultant:0.0', 'job:0.0', ',:7.986737728060689e-06', 'he:0.0', 'and:0.0', 'his:0.0', 'wife:0.0', 'had:0.0', 'to:2.886244146793615e-06', 'cut:0.0', 'spending:0.0', 'in:3.0217122457543155e-06', 'half:0.0', 'for:0.0', 'their:0.0', 'family:0.0', 'of:3.4365734791208524e-06', 'six:0.0', ',:7.986737728060689e-06', 'having:0.0', 'to:2.886244146793615e-06', 'rely:0.0', 'on:0.0', 'his:0.0', 'wife:0.0', "':0.0", 's:0.0', 'income:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'about:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'as:0.0', 'his:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'alone:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('chuck', tensor(0., device='cuda:0')), ('smith', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('from', tensor(0.1105, device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), (',', tensor(0.1963, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('housing', tensor(0., device='cuda:0')), ('consultant', tensor(0., device='cuda:0')), ('job', tensor(0., device='cuda:0')), (',', tensor(0.1963, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('wife', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('to', tensor(0.0709, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('spending', tensor(0., device='cuda:0')), ('in', tensor(0.0743, device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('family', tensor(0., device='cuda:0')), ('of', tensor(0.0845, device='cuda:0')), ('six', tensor(0., device='cuda:0')), (',', tensor(0.1963, device='cuda:0')), ('having', tensor(0., device='cuda:0')), ('to', tensor(0.0709, device='cuda:0')), ('rely', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('chuck', tensor(0., device='cuda:0')), ('smith', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('from', tensor(0.1105, device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), (',', tensor(0.1963, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('housing', tensor(0., device='cuda:0')), ('consultant', tensor(0., device='cuda:0')), ('job', tensor(0., device='cuda:0')), (',', tensor(0.1963, device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('wife', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('to', tensor(0.0709, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('spending', tensor(0., device='cuda:0')), ('in', tensor(0.0743, device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('family', tensor(0., device='cuda:0')), ('of', tensor(0.0845, device='cuda:0')), ('six', tensor(0., device='cuda:0')), (',', tensor(0.1963, device='cuda:0')), ('having', tensor(0., device='cuda:0')), ('to', tensor(0.0709, device='cuda:0')), ('rely', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0'))]
idx: 258, example: Vacon 's cash flow from operations grew to EUR 37.1 mn from EUR 21.9 mn a year ago , prediction: 2, correct_label: 1, class_scores: [0.26056483 0.29736674 0.44206846], word_scores: ['va:2.3812995095795486e-06', '##con:0.0', "':0.0", 's:0.0', 'cash:0.0', 'flow:0.0', 'from:4.495178018260049e-06', 'operations:0.0', 'grew:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '37:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '21:0.0', '.:2.903296945078182e-06', '9:0.0', 'mn:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 259, example: Salcomp Manufacturing Oy will pay EUR 35 million in cash to Salcomp in connection with the implementation of the sale and transfer of the Business , prediction: 2, correct_label: 2, class_scores: [0.13578865 0.31046948 0.5537419 ], word_scores: ['sal:0.0', '##com:0.0', '##p:0.0', 'manufacturing:0.0', 'o:0.0', '##y:1.832826342251792e-06', 'will:4.073096533829812e-06', 'pay:0.0', 'eu:0.0', '##r:0.0', '35:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', 'cash:0.0', 'to:2.886244146793615e-06', 'sal:0.0', '##com:0.0', '##p:0.0', 'in:3.0217122457543155e-06', 'connection:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'implementation:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'sale:0.0', 'and:0.0', 'transfer:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'business:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('salcomp', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('will', tensor(0.0818, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('million', tensor(0.1209, device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('salcomp', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('connection', tensor(0., device='cuda:0')), ('with', tensor(0.0951, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('of', tensor(0.0690, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('of', tensor(0.0690, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('salcomp', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('will', tensor(0.0818, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('million', tensor(0.1209, device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('salcomp', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('connection', tensor(0., device='cuda:0')), ('with', tensor(0.0951, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('of', tensor(0.0690, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('of', tensor(0.0690, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 260, example: Okmetic Board of Directors has also decided on a new share ownership program directed to the company 's top management , prediction: 2, correct_label: 2, class_scores: [0.26735052 0.3279051  0.40474433], word_scores: ['ok:0.0', '##met:0.0', '##ic:0.0', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'has:5.9214244174654596e-06', 'also:0.0', 'decided:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'share:0.0', 'ownership:0.0', 'program:0.0', 'directed:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'top:0.0', 'management:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('okmetic', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.1144, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('has', tensor(0.1970, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2871, device='cuda:0')), ('new', tensor(0.0931, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('ownership', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('to', tensor(0.0960, device='cuda:0')), ('the', tensor(0.2123, device='cuda:0'))],  word_scores_max: [('okmetic', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.1144, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('has', tensor(0.1970, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2871, device='cuda:0')), ('new', tensor(0.0931, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('ownership', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('to', tensor(0.0960, device='cuda:0')), ('the', tensor(0.2123, device='cuda:0'))]
idx: 261, example: The broad-based WIG index ended Thursday 's session 0.1 pct up at 65,003.34 pts , while the blue-chip WIG20 was 1.13 down at 3,687.15 pts , prediction: 2, correct_label: 2, class_scores: [0.20412117 0.2789045  0.5169744 ], word_scores: ['the:6.3806996877247e-06', 'broad:0.0', '-:4.821180027647642e-06', 'based:0.0', 'wig:0.0', 'index:0.0', 'ended:0.0', 'thursday:0.0', "':0.0", 's:0.0', 'session:0.0', '0:0.0', '.:2.903296945078182e-06', '1:0.0', 'pc:0.0', '##t:0.0', 'up:1.4959460941099678e-06', 'at:0.0', '65:0.0', ',:7.986737728060689e-06', '00:0.0', '##3:0.0', '.:2.903296945078182e-06', '34:0.0', 'pts:0.0', ',:7.986737728060689e-06', 'while:0.0', 'the:6.3806996877247e-06', 'blue:0.0', '-:4.821180027647642e-06', 'chip:0.0', 'wig:0.0', '##20:0.0', 'was:0.0', '1:0.0', '.:2.903296945078182e-06', '13:0.0', 'down:0.0', 'at:0.0', '3:0.0', ',:7.986737728060689e-06', '68:0.0', '##7:0.0', '.:2.903296945078182e-06', '15:0.0', 'pts:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.5696, device='cuda:0')), ('broad', tensor(0., device='cuda:0')), ('-', tensor(0.4304, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('wig', tensor(0., device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('ended', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5696, device='cuda:0')), ('broad', tensor(0., device='cuda:0')), ('-', tensor(0.4304, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('wig', tensor(0., device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('ended', tensor(0., device='cuda:0'))]
idx: 262, example: Sales have risen in other export markets , prediction: 2, correct_label: 1, class_scores: [0.20478588 0.28889352 0.50632066], word_scores: ['sales:0.0', 'have:2.910326429628185e-06', 'risen:0.0', 'in:3.0217122457543155e-06', 'other:0.0', 'export:0.0', 'markets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sales', tensor(0., device='cuda:0')), ('have', tensor(0.4906, device='cuda:0')), ('risen', tensor(0., device='cuda:0')), ('in', tensor(0.5094, device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('export', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('have', tensor(0.4906, device='cuda:0')), ('risen', tensor(0., device='cuda:0')), ('in', tensor(0.5094, device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('export', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))]
idx: 263, example: Headquartered in this city , the company is nearly 75 years old and focuses on science-based innovation and technology for environmental measurement , prediction: 2, correct_label: 2, class_scores: [0.26073855 0.2995598  0.43970165], word_scores: ['headquartered:0.0', 'in:3.0217122457543155e-06', 'this:0.0', 'city:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'nearly:0.0', '75:0.0', 'years:0.0', 'old:0.0', 'and:0.0', 'focuses:0.0', 'on:0.0', 'science:0.0', '-:4.821180027647642e-06', 'based:0.0', 'innovation:0.0', 'and:0.0', 'technology:0.0', 'for:0.0', 'environmental:0.0', 'measurement:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.1045, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('city', tensor(0., device='cuda:0')), (',', tensor(0.2763, device='cuda:0')), ('the', tensor(0.2207, device='cuda:0')), ('company', tensor(0.2316, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('nearly', tensor(0., device='cuda:0')), ('75', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('focuses', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('science', tensor(0., device='cuda:0')), ('-', tensor(0.1668, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('innovation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0'))],  word_scores_max: [('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.1045, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('city', tensor(0., device='cuda:0')), (',', tensor(0.2763, device='cuda:0')), ('the', tensor(0.2207, device='cuda:0')), ('company', tensor(0.2316, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('nearly', tensor(0., device='cuda:0')), ('75', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('focuses', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('science', tensor(0., device='cuda:0')), ('-', tensor(0.1668, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('innovation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0'))]
idx: 264, example: Russia 's top container shipping group , Fesco , and Finnish logistics company Nurminen Logistics have started a pilot project offering clients direct intermodal transportation service from Finland to Asia Pacific countries , Fesco said in a statement , prediction: 1, correct_label: 1, class_scores: [0.17318587 0.41675287 0.4100612 ], word_scores: ['russia:0.0', "':0.0", 's:0.0', 'top:0.0', 'container:0.0', 'shipping:0.0', 'group:0.0', ',:7.986737728060689e-06', 'fe:0.0', '##sco:0.0', ',:7.986737728060689e-06', 'and:0.0', 'finnish:0.0', 'logistics:0.0', 'company:6.695386673527537e-06', 'nur:0.0', '##mine:0.0', '##n:0.0', 'logistics:0.0', 'have:2.910326429628185e-06', 'started:0.0', 'a:8.62785782373976e-06', 'pilot:0.0', 'project:0.0', 'offering:0.0', 'clients:0.0', 'direct:0.0', 'inter:0.0', '##mo:0.0', '##dal:0.0', 'transportation:0.0', 'service:0.0', 'from:4.495178018260049e-06', 'finland:4.096111752005527e-06', 'to:2.886244146793615e-06', 'asia:0.0', 'pacific:0.0', 'countries:0.0', ',:7.986737728060689e-06', 'fe:0.0', '##sco:0.0', 'said:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'statement:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 265, example: Earnings per share ( EPS ) were EUR0 .03 , up from the loss of EUR0 .083 , prediction: 1, correct_label: 1, class_scores: [0.23869446 0.44041845 0.32088715], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', '(:0.0', 'eps:0.0', '):0.0', 'were:0.0', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '03:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '08:0.0', '##3:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0981, device='cuda:0')), ('03', tensor(0., device='cuda:0')), (',', tensor(0.2698, device='cuda:0')), ('up', tensor(0.0505, device='cuda:0')), ('from', tensor(0.1519, device='cuda:0')), ('the', tensor(0.2156, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1161, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0981, device='cuda:0')), ('083', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0981, device='cuda:0')), ('03', tensor(0., device='cuda:0')), (',', tensor(0.2698, device='cuda:0')), ('up', tensor(0.0505, device='cuda:0')), ('from', tensor(0.1519, device='cuda:0')), ('the', tensor(0.2156, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1161, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0981, device='cuda:0')), ('083', tensor(0., device='cuda:0'))]
idx: 266, example: Having a China based operation will not only enable us to fully leverage our resources and expertise in wireless solutions , but also strengthen our capability to offer industry-leading products for our customers in China . ', prediction: 2, correct_label: 1, class_scores: [0.18292959 0.33415338 0.48291704], word_scores: ['having:0.0', 'a:8.62785782373976e-06', 'china:0.0', 'based:0.0', 'operation:0.0', 'will:4.073096533829812e-06', 'not:0.0', 'only:0.0', 'enable:0.0', 'us:0.0', 'to:2.886244146793615e-06', 'fully:0.0', 'leverage:0.0', 'our:0.0', 'resources:3.8971406866039615e-06', 'and:0.0', 'expertise:0.0', 'in:3.0217122457543155e-06', 'wireless:0.0', 'solutions:0.0', ',:7.986737728060689e-06', 'but:0.0', 'also:0.0', 'strengthen:0.0', 'our:0.0', 'capability:0.0', 'to:2.886244146793615e-06', 'offer:0.0', 'industry:0.0', '-:4.821180027647642e-06', 'leading:0.0', 'products:0.0', 'for:0.0', 'our:0.0', 'customers:0.0', 'in:3.0217122457543155e-06', 'china:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('having', tensor(0., device='cuda:0')), ('a', tensor(0.1955, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('operation', tensor(0., device='cuda:0')), ('will', tensor(0.0923, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('enable', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('to', tensor(0.0654, device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('leverage', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('resources', tensor(0.0883, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('in', tensor(0.0685, device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), (',', tensor(0.1810, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('strengthen', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('capability', tensor(0., device='cuda:0')), ('to', tensor(0.0654, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('-', tensor(0.1093, device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('in', tensor(0.0685, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('.', tensor(0.0658, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('having', tensor(0., device='cuda:0')), ('a', tensor(0.1955, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('operation', tensor(0., device='cuda:0')), ('will', tensor(0.0923, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('enable', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('to', tensor(0.0654, device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('leverage', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('resources', tensor(0.0883, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('in', tensor(0.0685, device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), (',', tensor(0.1810, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('strengthen', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('capability', tensor(0., device='cuda:0')), ('to', tensor(0.0654, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('-', tensor(0.1093, device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('in', tensor(0.0685, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('.', tensor(0.0658, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 267, example: Price talk is in the mid-market swaps plus 105 bps area and the leads are Barclays , BNPP , UBS and CBA , prediction: 1, correct_label: 2, class_scores: [0.19201177 0.49986157 0.30812666], word_scores: ['price:0.0', 'talk:0.0', 'is:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'mid:0.0', '-:4.821180027647642e-06', 'market:0.0', 'swap:0.0', '##s:4.601175078278175e-06', 'plus:0.0', '105:0.0', 'bp:0.0', '##s:4.601175078278175e-06', 'area:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'leads:0.0', 'are:0.0', 'barclay:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'bn:0.0', '##pp:0.0', ',:7.986737728060689e-06', 'u:0.0', '##bs:0.0', 'and:0.0', 'cb:0.0', '##a:3.804580501309829e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('price', tensor(0., device='cuda:0')), ('talk', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0826, device='cuda:0')), ('the', tensor(0.1744, device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.1318, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('swaps', tensor(0., device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('105', tensor(0., device='cuda:0')), ('bps', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1744, device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), (',', tensor(0.2183, device='cuda:0')), ('bnpp', tensor(0., device='cuda:0')), (',', tensor(0.2183, device='cuda:0')), ('ubs', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('cba', tensor(0., device='cuda:0'))],  word_scores_max: [('price', tensor(0., device='cuda:0')), ('talk', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0826, device='cuda:0')), ('the', tensor(0.1744, device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.1318, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('swaps', tensor(0., device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('105', tensor(0., device='cuda:0')), ('bps', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1744, device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), (',', tensor(0.2183, device='cuda:0')), ('bnpp', tensor(0., device='cuda:0')), (',', tensor(0.2183, device='cuda:0')), ('ubs', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('cba', tensor(0., device='cuda:0'))]
idx: 268, example: The company 's net profit rose 11.4 % on the year to 82.2 million euros in 2005 on sales of 686.5 million euros , 13.8 % up on the year , the company said earlier , prediction: 2, correct_label: 1, class_scores: [0.2743106  0.32932842 0.396361  ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'net:0.0', 'profit:0.0', 'rose:0.0', '11:0.0', '.:2.903296945078182e-06', '4:0.0', '%:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'year:0.0', 'to:2.886244146793615e-06', '82:0.0', '.:2.903296945078182e-06', '2:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'in:3.0217122457543155e-06', '2005:0.0', 'on:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', '68:0.0', '##6:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', 'euros:0.0', ',:7.986737728060689e-06', '13:0.0', '.:2.903296945078182e-06', '8:0.0', '%:0.0', 'up:1.4959460941099678e-06', 'on:0.0', 'the:6.3806996877247e-06', 'year:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 269, example: According to him , construction work will start in spring 2007 , and the facility is to be commissioned in spring 2008 , prediction: 2, correct_label: 2, class_scores: [0.20452699 0.33449873 0.46097422], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'him:0.0', ',:7.986737728060689e-06', 'construction:0.0', 'work:0.0', 'will:4.073096533829812e-06', 'start:0.0', 'in:3.0217122457543155e-06', 'spring:0.0', '2007:0.0', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'facility:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'commissioned:0.0', 'in:3.0217122457543155e-06', 'spring:0.0', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.0755, device='cuda:0')), ('him', tensor(0., device='cuda:0')), (',', tensor(0.2088, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('will', tensor(0.1065, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('in', tensor(0.0790, device='cuda:0')), ('spring', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.2088, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1668, device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0755, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('commissioned', tensor(0., device='cuda:0')), ('in', tensor(0.0790, device='cuda:0')), ('spring', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.0755, device='cuda:0')), ('him', tensor(0., device='cuda:0')), (',', tensor(0.2088, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('will', tensor(0.1065, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('in', tensor(0.0790, device='cuda:0')), ('spring', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.2088, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1668, device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0755, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('commissioned', tensor(0., device='cuda:0')), ('in', tensor(0.0790, device='cuda:0')), ('spring', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 270, example: The Board of Directors has proposed the Extraordinary General Meeting to authorise the Board to decide on the issuance of a maximum of 30mn new shares in one or more share issues , prediction: 2, correct_label: 2, class_scores: [0.17259766 0.38356364 0.4438387 ], word_scores: ['the:6.3806996877247e-06', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'has:5.9214244174654596e-06', 'proposed:0.0', 'the:6.3806996877247e-06', 'extraordinary:0.0', 'general:0.0', 'meeting:0.0', 'to:2.886244146793615e-06', 'author:0.0', '##ise:0.0', 'the:6.3806996877247e-06', 'board:0.0', 'to:2.886244146793615e-06', 'decide:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'iss:0.0', '##uance:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'maximum:0.0', 'of:3.4365734791208524e-06', '30:0.0', '##m:0.0', '##n:0.0', 'new:2.798587502184091e-06', 'shares:0.0', 'in:3.0217122457543155e-06', 'one:4.584404450724833e-06', 'or:0.0', 'more:0.0', 'share:0.0', 'issues:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0959, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('has', tensor(0.0890, device='cuda:0')), ('proposed', tensor(0., device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('extraordinary', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('to', tensor(0.0434, device='cuda:0')), ('authorise', tensor(0., device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('to', tensor(0.0434, device='cuda:0')), ('decide', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('issuance', tensor(0., device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('a', tensor(0.1296, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('30mn', tensor(0., device='cuda:0')), ('new', tensor(0.0420, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0454, device='cuda:0')), ('one', tensor(0.0689, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0959, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('has', tensor(0.0890, device='cuda:0')), ('proposed', tensor(0., device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('extraordinary', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('to', tensor(0.0434, device='cuda:0')), ('authorise', tensor(0., device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('to', tensor(0.0434, device='cuda:0')), ('decide', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0959, device='cuda:0')), ('issuance', tensor(0., device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('a', tensor(0.1296, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0516, device='cuda:0')), ('30mn', tensor(0., device='cuda:0')), ('new', tensor(0.0420, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0454, device='cuda:0')), ('one', tensor(0.0689, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0'))]
idx: 271, example: Kazgiprotsvetmet and Outotec Finland have signed an agreement on strategic cooperation in the marketing and providing of minerals processing and metallurgical plants and related services in Kazakhstan and the surrounding countries , prediction: 2, correct_label: 1, class_scores: [0.196258   0.3798547  0.42388728], word_scores: ['ka:0.0', '##z:0.0', '##gi:0.0', '##pro:0.0', '##ts:0.0', '##vet:0.0', '##met:0.0', 'and:0.0', 'out:0.0', '##ote:0.0', '##c:0.0', 'finland:4.096111752005527e-06', 'have:2.910326429628185e-06', 'signed:0.0', 'an:0.0', 'agreement:0.0', 'on:0.0', 'strategic:0.0', 'cooperation:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'marketing:0.0', 'and:0.0', 'providing:0.0', 'of:3.4365734791208524e-06', 'minerals:0.0', 'processing:0.0', 'and:0.0', 'metal:0.0', '##lu:0.0', '##rg:0.0', '##ical:0.0', 'plants:0.0', 'and:0.0', 'related:0.0', 'services:0.0', 'in:3.0217122457543155e-06', 'kazakhstan:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'surrounding:0.0', 'countries:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kazgiprotsvetmet', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('outotec', tensor(0., device='cuda:0')), ('finland', tensor(0.1400, device='cuda:0')), ('have', tensor(0.0995, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('strategic', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('in', tensor(0.1033, device='cuda:0')), ('the', tensor(0.2182, device='cuda:0')), ('marketing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('of', tensor(0.1175, device='cuda:0')), ('minerals', tensor(0., device='cuda:0')), ('processing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('metallurgical', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('in', tensor(0.1033, device='cuda:0')), ('kazakhstan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2182, device='cuda:0')), ('surrounding', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('kazgiprotsvetmet', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('outotec', tensor(0., device='cuda:0')), ('finland', tensor(0.1400, device='cuda:0')), ('have', tensor(0.0995, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('strategic', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('in', tensor(0.1033, device='cuda:0')), ('the', tensor(0.2182, device='cuda:0')), ('marketing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('of', tensor(0.1175, device='cuda:0')), ('minerals', tensor(0., device='cuda:0')), ('processing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('metallurgical', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('in', tensor(0.1033, device='cuda:0')), ('kazakhstan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2182, device='cuda:0')), ('surrounding', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 272, example: The companies will divest to UPM Fray Bentos pulp mill and Forestal Oriental , a company specialising in eucalyptus cultivation , prediction: 2, correct_label: 2, class_scores: [0.26770964 0.35025975 0.3820306 ], word_scores: ['the:6.3806996877247e-06', 'companies:0.0', 'will:4.073096533829812e-06', 'dive:0.0', '##st:0.0', 'to:2.886244146793615e-06', 'up:1.4959460941099678e-06', '##m:0.0', 'fray:0.0', 'bent:0.0', '##os:0.0', 'pulp:0.0', 'mill:2.6564571271592285e-06', 'and:0.0', 'forest:0.0', '##al:0.0', 'oriental:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'company:6.695386673527537e-06', 'specialising:0.0', 'in:3.0217122457543155e-06', 'eucalyptus:0.0', 'cultivation:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1456, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('will', tensor(0.0929, device='cuda:0')), ('divest', tensor(0., device='cuda:0')), ('to', tensor(0.0659, device='cuda:0')), ('upm', tensor(0.0341, device='cuda:0')), ('fray', tensor(0., device='cuda:0')), ('bentos', tensor(0., device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('mill', tensor(0.0606, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('forestal', tensor(0., device='cuda:0')), ('oriental', tensor(0., device='cuda:0')), (',', tensor(0.1822, device='cuda:0')), ('a', tensor(0.1969, device='cuda:0')), ('company', tensor(0.1528, device='cuda:0')), ('specialising', tensor(0., device='cuda:0')), ('in', tensor(0.0690, device='cuda:0')), ('eucalyptus', tensor(0., device='cuda:0')), ('cultivation', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1456, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('will', tensor(0.0929, device='cuda:0')), ('divest', tensor(0., device='cuda:0')), ('to', tensor(0.0659, device='cuda:0')), ('upm', tensor(0.0341, device='cuda:0')), ('fray', tensor(0., device='cuda:0')), ('bentos', tensor(0., device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('mill', tensor(0.0606, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('forestal', tensor(0., device='cuda:0')), ('oriental', tensor(0., device='cuda:0')), (',', tensor(0.1822, device='cuda:0')), ('a', tensor(0.1969, device='cuda:0')), ('company', tensor(0.1528, device='cuda:0')), ('specialising', tensor(0., device='cuda:0')), ('in', tensor(0.0690, device='cuda:0')), ('eucalyptus', tensor(0., device='cuda:0')), ('cultivation', tensor(0., device='cuda:0'))]
idx: 273, example: Productional situation has now improved , prediction: 1, correct_label: 1, class_scores: [0.22397965 0.39380628 0.3822141 ], word_scores: ['production:0.0', '##al:0.0', 'situation:0.0', 'has:5.9214244174654596e-06', 'now:0.0', 'improved:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('productional', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('has', tensor(1., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0'))],  word_scores_max: [('productional', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('has', tensor(1., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0'))]
idx: 274, example: Of the sales price , a sales gain of some 3.1 mln euro ( $ 4.5 mln ) will be recognized in Incap 's earnings for 2007 , prediction: 2, correct_label: 1, class_scores: [0.24583368 0.32809702 0.4260693 ], word_scores: ['of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'sales:0.0', 'price:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'sales:0.0', 'gain:0.0', 'of:3.4365734791208524e-06', 'some:0.0', '3:0.0', '.:2.903296945078182e-06', '1:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '(:0.0', '$:0.0', '4:0.0', '.:2.903296945078182e-06', '5:0.0', 'ml:0.0', '##n:0.0', '):0.0', 'will:4.073096533829812e-06', 'be:0.0', 'recognized:0.0', 'in:3.0217122457543155e-06', 'inca:0.0', '##p:0.0', "':0.0", 's:0.0', 'earnings:0.0', 'for:0.0', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('of', tensor(0.0804, device='cuda:0')), ('the', tensor(0.1492, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), (',', tensor(0.1867, device='cuda:0')), ('a', tensor(0.2017, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('gain', tensor(0., device='cuda:0')), ('of', tensor(0.0804, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0679, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0679, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('will', tensor(0.0952, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('recognized', tensor(0., device='cuda:0')), ('in', tensor(0.0707, device='cuda:0'))],  word_scores_max: [('of', tensor(0.0804, device='cuda:0')), ('the', tensor(0.1492, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), (',', tensor(0.1867, device='cuda:0')), ('a', tensor(0.2017, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('gain', tensor(0., device='cuda:0')), ('of', tensor(0.0804, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0679, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0679, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('will', tensor(0.0952, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('recognized', tensor(0., device='cuda:0')), ('in', tensor(0.0707, device='cuda:0'))]
idx: 275, example: Finnish food industry company L+�nnen Tehtaat is planning changes to its fish product business , prediction: 2, correct_label: 2, class_scores: [0.21200989 0.3737617  0.4142284 ], word_scores: ['finnish:0.0', 'food:0.0', 'industry:0.0', 'company:6.695386673527537e-06', 'l:0.0', '+:0.0', 'n:0.0', '##nen:0.0', 'te:0.0', '##hta:0.0', '##at:0.0', 'is:0.0', 'planning:0.0', 'changes:0.0', 'to:2.886244146793615e-06', 'its:1.7191393908433383e-06', 'fish:0.0', 'product:0.0', 'business:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('company', tensor(0.5925, device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nnen', tensor(0., device='cuda:0')), ('tehtaat', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('to', tensor(0.2554, device='cuda:0')), ('its', tensor(0.1521, device='cuda:0')), ('fish', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('company', tensor(0.5925, device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nnen', tensor(0., device='cuda:0')), ('tehtaat', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('to', tensor(0.2554, device='cuda:0')), ('its', tensor(0.1521, device='cuda:0')), ('fish', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 276, example: The program 's target is structural cost reductions of about EUR 30mn in 2009 , prediction: 1, correct_label: 1, class_scores: [0.18993366 0.4428715  0.36719492], word_scores: ['the:6.3806996877247e-06', 'program:0.0', "':0.0", 's:0.0', 'target:0.0', 'is:0.0', 'structural:0.0', 'cost:0.0', 'reductions:0.0', 'of:3.4365734791208524e-06', 'about:0.0', 'eu:0.0', '##r:0.0', '30:0.0', '##m:0.0', '##n:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 277, example: 2010 16 July 2010 - Finnish steel maker Rautaruukki Oyj HEL : RTRKS , or Ruukki , said today it turned to a net profit of EUR20m in the second quarter of 2010 from a net loss of EUR94m in the corresponding period last year , prediction: 2, correct_label: 1, class_scores: [0.22914493 0.35397348 0.41688153], word_scores: ['2010:0.0', '16:0.0', 'july:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'steel:0.0', 'maker:0.0', 'ra:0.0', '##uta:0.0', '##ru:0.0', '##uk:0.0', '##ki:0.0', 'o:0.0', '::0.0', 'rt:0.0', '##rks:0.0', ',:7.986737728060689e-06', 'or:0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', ',:7.986737728060689e-06', 'said:0.0', 'today:0.0', 'it:3.3415778943890473e-06', 'turned:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'net:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##20:0.0', '##m:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'a:8.62785782373976e-06', 'net:0.0', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##9:0.0', '##4:0.0', '##m:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'last:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('2010', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0619, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('rautaruukki', tensor(0., device='cuda:0')), ('o', tensor(0., device='cuda:0')), ('rtrks', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0429, device='cuda:0')), ('turned', tensor(0., device='cuda:0')), ('to', tensor(0.0371, device='cuda:0')), ('a', tensor(0.1108, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('eur20m', tensor(0., device='cuda:0')), ('in', tensor(0.0388, device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0577, device='cuda:0')), ('a', tensor(0.1108, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('eur94m', tensor(0., device='cuda:0')), ('in', tensor(0.0388, device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('2010', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0619, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('rautaruukki', tensor(0., device='cuda:0')), ('o', tensor(0., device='cuda:0')), ('rtrks', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), (',', tensor(0.1025, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0429, device='cuda:0')), ('turned', tensor(0., device='cuda:0')), ('to', tensor(0.0371, device='cuda:0')), ('a', tensor(0.1108, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('eur20m', tensor(0., device='cuda:0')), ('in', tensor(0.0388, device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0577, device='cuda:0')), ('a', tensor(0.1108, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0441, device='cuda:0')), ('eur94m', tensor(0., device='cuda:0')), ('in', tensor(0.0388, device='cuda:0')), ('the', tensor(0.0819, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 278, example: Forestries were also higher , driven by yesterday 's bullish analyst comment on Stora Enso in Dagens Industri , dealers said , prediction: 2, correct_label: 1, class_scores: [0.18509346 0.40243727 0.41246933], word_scores: ['forest:0.0', '##ries:0.0', 'were:0.0', 'also:0.0', 'higher:0.0', ',:7.986737728060689e-06', 'driven:0.0', 'by:0.0', 'yesterday:0.0', "':0.0", 's:0.0', 'bull:0.0', '##ish:0.0', 'analyst:0.0', 'comment:0.0', 'on:0.0', 'st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'in:3.0217122457543155e-06', 'da:0.0', '##gens:0.0', 'indus:0.0', '##tri:0.0', ',:7.986737728060689e-06', 'dealers:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('forestries', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('driven', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))],  word_scores_max: [('forestries', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('driven', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))]
idx: 279, example: The Estonian beverages maker A. Le Coq today brought to the market a new premium class beer , A. Le Coq Special , investing 6 million kroons EUR 383,000 into its development and planning to sell three million liters of the beer during the next year , prediction: 2, correct_label: 2, class_scores: [0.15979584 0.38456225 0.4556419 ], word_scores: ['the:6.3806996877247e-06', 'estonian:0.0', 'beverages:0.0', 'maker:0.0', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', 'le:0.0', 'co:0.0', '##q:0.0', 'today:0.0', 'brought:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'market:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'premium:0.0', 'class:0.0', 'beer:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', 'le:0.0', 'co:0.0', '##q:0.0', 'special:0.0', ',:7.986737728060689e-06', 'investing:0.0', '6:0.0', 'million:6.018835847498849e-06', 'k:0.0', '##ro:0.0', '##ons:0.0', 'eu:0.0', '##r:0.0', '38:0.0', '##3:0.0', ',:7.986737728060689e-06', '000:0.0', 'into:0.0', 'its:1.7191393908433383e-06', 'development:0.0', 'and:0.0', 'planning:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'three:0.0', 'million:6.018835847498849e-06', 'liter:0.0', '##s:4.601175078278175e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'beer:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'next:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0597, device='cuda:0')), ('estonian', tensor(0., device='cuda:0')), ('beverages', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('a', tensor(0.0807, device='cuda:0')), ('.', tensor(0.0271, device='cuda:0')), ('le', tensor(0., device='cuda:0')), ('coq', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('brought', tensor(0., device='cuda:0')), ('to', tensor(0.0270, device='cuda:0')), ('the', tensor(0.0597, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('a', tensor(0.0807, device='cuda:0')), ('new', tensor(0.0262, device='cuda:0')), ('premium', tensor(0., device='cuda:0')), ('class', tensor(0., device='cuda:0')), ('beer', tensor(0., device='cuda:0')), (',', tensor(0.0747, device='cuda:0')), ('a', tensor(0.0807, device='cuda:0')), ('.', tensor(0.0271, device='cuda:0')), ('le', tensor(0., device='cuda:0')), ('coq', tensor(0., device='cuda:0')), ('special', tensor(0., device='cuda:0')), (',', tensor(0.0747, device='cuda:0')), ('investing', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.0563, device='cuda:0')), ('kroons', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('383', tensor(0., device='cuda:0')), (',', tensor(0.0747, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('its', tensor(0.0161, device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('to', tensor(0.0270, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('million', tensor(0.0563, device='cuda:0')), ('liters', tensor(0., device='cuda:0')), ('of', tensor(0.0321, device='cuda:0')), ('the', tensor(0.0597, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.0597, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0597, device='cuda:0')), ('estonian', tensor(0., device='cuda:0')), ('beverages', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('a', tensor(0.0807, device='cuda:0')), ('.', tensor(0.0271, device='cuda:0')), ('le', tensor(0., device='cuda:0')), ('coq', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('brought', tensor(0., device='cuda:0')), ('to', tensor(0.0270, device='cuda:0')), ('the', tensor(0.0597, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('a', tensor(0.0807, device='cuda:0')), ('new', tensor(0.0262, device='cuda:0')), ('premium', tensor(0., device='cuda:0')), ('class', tensor(0., device='cuda:0')), ('beer', tensor(0., device='cuda:0')), (',', tensor(0.0747, device='cuda:0')), ('a', tensor(0.0807, device='cuda:0')), ('.', tensor(0.0271, device='cuda:0')), ('le', tensor(0., device='cuda:0')), ('coq', tensor(0., device='cuda:0')), ('special', tensor(0., device='cuda:0')), (',', tensor(0.0747, device='cuda:0')), ('investing', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.0563, device='cuda:0')), ('kroons', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('383', tensor(0., device='cuda:0')), (',', tensor(0.0747, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('its', tensor(0.0161, device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('to', tensor(0.0270, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('million', tensor(0.0563, device='cuda:0')), ('liters', tensor(0., device='cuda:0')), ('of', tensor(0.0321, device='cuda:0')), ('the', tensor(0.0597, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.0597, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 280, example: No other ev3 devices were involved in this action , prediction: 2, correct_label: 2, class_scores: [0.1871828  0.36425787 0.4485593 ], word_scores: ['no:0.0', 'other:0.0', 'ev:0.0', '##3:0.0', 'devices:0.0', 'were:0.0', 'involved:0.0', 'in:3.0217122457543155e-06', 'this:0.0', 'action:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('no', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('ev3', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('involved', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0'))],  word_scores_max: [('no', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('ev3', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('involved', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0'))]
idx: 281, example: Finnish paints and coatings company Tikkurila Oyj ( HEL : TIK1V ) announced today the launch of Tikkurila ProHouse method for protection of wooden surfaces via treatment with Ultra Pro waterborne products , prediction: 2, correct_label: 2, class_scores: [0.15685196 0.2950334  0.5481146 ], word_scores: ['finnish:0.0', 'paints:0.0', 'and:0.0', 'coating:0.0', '##s:4.601175078278175e-06', 'company:6.695386673527537e-06', 'ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ti:0.0', '##k:0.0', '##1:0.0', '##v:0.0', '):0.0', 'announced:0.0', 'today:0.0', 'the:6.3806996877247e-06', 'launch:0.0', 'of:3.4365734791208524e-06', 'ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', 'pro:0.0', '##house:0.0', 'method:2.380315208938555e-06', 'for:0.0', 'protection:0.0', 'of:3.4365734791208524e-06', 'wooden:0.0', 'surfaces:0.0', 'via:0.0', 'treatment:0.0', 'with:4.733654350275174e-06', 'ultra:0.0', 'pro:0.0', 'water:0.0', '##borne:0.0', 'products:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('paints', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('coatings', tensor(0., device='cuda:0')), ('company', tensor(0.2317, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('oyj', tensor(0.0634, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('tik1v', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('the', tensor(0.2208, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('of', tensor(0.1189, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('prohouse', tensor(0., device='cuda:0')), ('method', tensor(0.0824, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('protection', tensor(0., device='cuda:0')), ('of', tensor(0.1189, device='cuda:0')), ('wooden', tensor(0., device='cuda:0')), ('surfaces', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('with', tensor(0.1638, device='cuda:0')), ('ultra', tensor(0., device='cuda:0')), ('pro', tensor(0., device='cuda:0')), ('waterborne', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('paints', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('coatings', tensor(0., device='cuda:0')), ('company', tensor(0.2317, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('oyj', tensor(0.0634, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('tik1v', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('the', tensor(0.2208, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('of', tensor(0.1189, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('prohouse', tensor(0., device='cuda:0')), ('method', tensor(0.0824, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('protection', tensor(0., device='cuda:0')), ('of', tensor(0.1189, device='cuda:0')), ('wooden', tensor(0., device='cuda:0')), ('surfaces', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('with', tensor(0.1638, device='cuda:0')), ('ultra', tensor(0., device='cuda:0')), ('pro', tensor(0., device='cuda:0')), ('waterborne', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))]
idx: 282, example: Finnish food industry companies are interested in the opportunities provided by Ukraine , prediction: 2, correct_label: 2, class_scores: [0.17541556 0.34587273 0.47871166], word_scores: ['finnish:0.0', 'food:0.0', 'industry:0.0', 'companies:0.0', 'are:0.0', 'interested:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'opportunities:0.0', 'provided:0.0', 'by:0.0', 'ukraine:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('interested', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('opportunities', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ukraine', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('interested', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('opportunities', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ukraine', tensor(0., device='cuda:0'))]
idx: 283, example: Handelsbanken ranked before Local Cooperative Banks and Aktia in customer loyalty this time too , however , prediction: 2, correct_label: 1, class_scores: [0.22390567 0.35948607 0.4166082 ], word_scores: ['handel:0.0', '##sb:0.0', '##an:0.0', '##ken:0.0', 'ranked:0.0', 'before:0.0', 'local:0.0', 'cooperative:0.0', 'banks:0.0', 'and:0.0', 'ak:0.0', '##tia:0.0', 'in:3.0217122457543155e-06', 'customer:0.0', 'loyalty:0.0', 'this:0.0', 'time:0.0', 'too:0.0', ',:7.986737728060689e-06', 'however:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('handelsbanken', tensor(0., device='cuda:0')), ('ranked', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('cooperative', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('aktia', tensor(0., device='cuda:0')), ('in', tensor(0.2745, device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('loyalty', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('too', tensor(0., device='cuda:0')), (',', tensor(0.7255, device='cuda:0')), ('however', tensor(0., device='cuda:0'))],  word_scores_max: [('handelsbanken', tensor(0., device='cuda:0')), ('ranked', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('cooperative', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('aktia', tensor(0., device='cuda:0')), ('in', tensor(0.2745, device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('loyalty', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('too', tensor(0., device='cuda:0')), (',', tensor(0.7255, device='cuda:0')), ('however', tensor(0., device='cuda:0'))]
idx: 284, example: The effect of the savings will be noticeable from the beginning of 2010 , prediction: 2, correct_label: 2, class_scores: [0.26451248 0.32553077 0.40995678], word_scores: ['the:6.3806996877247e-06', 'effect:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'savings:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'noticeable:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'beginning:0.0', 'of:3.4365734791208524e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1845, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('of', tensor(0.0994, device='cuda:0')), ('the', tensor(0.1845, device='cuda:0')), ('savings', tensor(0., device='cuda:0')), ('will', tensor(0.1178, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('noticeable', tensor(0., device='cuda:0')), ('from', tensor(0.1300, device='cuda:0')), ('the', tensor(0.1845, device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('of', tensor(0.0994, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1845, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('of', tensor(0.0994, device='cuda:0')), ('the', tensor(0.1845, device='cuda:0')), ('savings', tensor(0., device='cuda:0')), ('will', tensor(0.1178, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('noticeable', tensor(0., device='cuda:0')), ('from', tensor(0.1300, device='cuda:0')), ('the', tensor(0.1845, device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('of', tensor(0.0994, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 285, example: The previously concluded adaptation measures , concerning other staff , were adequate for the time being , and the planning operations continue as before at the plant , the company said , prediction: 2, correct_label: 1, class_scores: [0.13951255 0.29008245 0.57040495], word_scores: ['the:6.3806996877247e-06', 'previously:0.0', 'concluded:0.0', 'adaptation:0.0', 'measures:0.0', ',:7.986737728060689e-06', 'concerning:0.0', 'other:0.0', 'staff:0.0', ',:7.986737728060689e-06', 'were:0.0', 'adequate:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'time:0.0', 'being:0.0', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'planning:0.0', 'operations:0.0', 'continue:0.0', 'as:0.0', 'before:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'plant:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0904, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('concluded', tensor(0., device='cuda:0')), ('adaptation', tensor(0., device='cuda:0')), ('measures', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('adequate', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('company', tensor(0.0949, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0904, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('concluded', tensor(0., device='cuda:0')), ('adaptation', tensor(0., device='cuda:0')), ('measures', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('adequate', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1132, device='cuda:0')), ('the', tensor(0.0904, device='cuda:0')), ('company', tensor(0.0949, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 286, example: Net profit in the period in 2009 was ( EURO ) 29 million , prediction: 2, correct_label: 2, class_scores: [0.16506396 0.3796241  0.4553119 ], word_scores: ['net:0.0', 'profit:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'period:0.0', 'in:3.0217122457543155e-06', '2009:0.0', 'was:0.0', '(:0.0', 'euro:0.0', '):0.0', '29:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('in', tensor(0.1638, device='cuda:0')), ('the', tensor(0.3460, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1638, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('million', tensor(0.3263, device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('in', tensor(0.1638, device='cuda:0')), ('the', tensor(0.3460, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1638, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('million', tensor(0.3263, device='cuda:0'))]
idx: 287, example: Foodservice and consumer goods markets are served by approximately 13,000 people in 54 manufacturing units and several sales offices in 33 countries , prediction: 2, correct_label: 2, class_scores: [0.22632346 0.33354566 0.4401309 ], word_scores: ['foods:0.0', '##er:0.0', '##vic:0.0', '##e:0.0', 'and:0.0', 'consumer:0.0', 'goods:0.0', 'markets:0.0', 'are:0.0', 'served:0.0', 'by:0.0', 'approximately:0.0', '13:0.0', ',:7.986737728060689e-06', '000:0.0', 'people:0.0', 'in:3.0217122457543155e-06', '54:0.0', 'manufacturing:0.0', 'units:2.8638919502554927e-06', 'and:0.0', 'several:0.0', 'sales:0.0', 'offices:0.0', 'in:3.0217122457543155e-06', '33:0.0', 'countries:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('foodservice', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('served', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), (',', tensor(0.4728, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('in', tensor(0.1789, device='cuda:0')), ('54', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('units', tensor(0.1695, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('offices', tensor(0., device='cuda:0')), ('in', tensor(0.1789, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('foodservice', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('served', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), (',', tensor(0.4728, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('in', tensor(0.1789, device='cuda:0')), ('54', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('units', tensor(0.1695, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('offices', tensor(0., device='cuda:0')), ('in', tensor(0.1789, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 288, example: Cathay Forest 's strategy is to develop sustainable , regenerative forest assets , prediction: 1, correct_label: 2, class_scores: [0.18562113 0.46784413 0.34653476], word_scores: ['cat:0.0', '##hay:0.0', 'forest:0.0', "':0.0", 's:0.0', 'strategy:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'develop:0.0', 'sustainable:0.0', ',:7.986737728060689e-06', 'reg:0.0', '##ener:0.0', '##ative:0.0', 'forest:0.0', 'assets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('cathay', tensor(nan, device='cuda:0'))],  word_scores_max: [('cathay', tensor(nan, device='cuda:0'))]
idx: 289, example: Budapest , August 10 MTI - Finnish electronics maker Elcoteq will lay off 700 workers at its plants in Pecs S Hungary at the end of September because of falling orders , communications director for Elcoteq 's local unit , Zoltan Krippl told MTI on Monday , prediction: 2, correct_label: 0, class_scores: [0.25770667 0.34272438 0.39956886], word_scores: ['budapest:0.0', ',:7.986737728060689e-06', 'august:0.0', '10:0.0', 'mt:0.0', '##i:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'electronics:0.0', 'maker:0.0', 'el:0.0', '##cote:0.0', '##q:0.0', 'will:4.073096533829812e-06', 'lay:0.0', 'off:0.0', '700:0.0', 'workers:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'plants:0.0', 'in:3.0217122457543155e-06', 'pe:0.0', '##cs:0.0', 's:0.0', 'hungary:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', 'september:0.0', 'because:0.0', 'of:3.4365734791208524e-06', 'falling:0.0', 'orders:0.0', ',:7.986737728060689e-06', 'communications:0.0', 'director:0.0', 'for:0.0', 'el:0.0', '##cote:0.0', '##q:0.0', "':0.0", 's:0.0', 'local:0.0', 'unit:0.0', ',:7.986737728060689e-06', 'z:0.0', '##olt:0.0', '##an:0.0', 'k:0.0', '##rip:0.0', '##pl:0.0', 'told:0.0', 'mt:0.0', '##i:0.0', 'on:0.0', 'monday:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('budapest', tensor(0., device='cuda:0')), (',', tensor(0.1863, device='cuda:0')), ('august', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('mti', tensor(0., device='cuda:0')), ('-', tensor(0.1125, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('will', tensor(0.0950, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('workers', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0401, device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('in', tensor(0.0705, device='cuda:0')), ('pecs', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('hungary', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1489, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0802, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('because', tensor(0., device='cuda:0')), ('of', tensor(0.0802, device='cuda:0')), ('falling', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), (',', tensor(0.1863, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0'))],  word_scores_max: [('budapest', tensor(0., device='cuda:0')), (',', tensor(0.1863, device='cuda:0')), ('august', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('mti', tensor(0., device='cuda:0')), ('-', tensor(0.1125, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('will', tensor(0.0950, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('workers', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0401, device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('in', tensor(0.0705, device='cuda:0')), ('pecs', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('hungary', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1489, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0802, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('because', tensor(0., device='cuda:0')), ('of', tensor(0.0802, device='cuda:0')), ('falling', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), (',', tensor(0.1863, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0'))]
idx: 290, example: Ruukki 's delivery volumes and selling prices showed favourable development and the company 's comparable net sales grew by 50 % year-on-year to EUR647m , CEO Sakari Tamminen said , prediction: 1, correct_label: 1, class_scores: [0.17226298 0.4419671  0.38576996], word_scores: ['ru:0.0', '##uk:0.0', '##ki:0.0', "':0.0", 's:0.0', 'delivery:0.0', 'volumes:0.0', 'and:0.0', 'selling:0.0', 'prices:0.0', 'showed:0.0', 'favourable:0.0', 'development:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'comparable:0.0', 'net:0.0', 'sales:0.0', 'grew:0.0', 'by:0.0', '50:0.0', '%:0.0', 'year:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'year:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##64:0.0', '##7:0.0', '##m:0.0', ',:7.986737728060689e-06', 'ceo:0.0', 'sa:0.0', '##kari:0.0', 'tam:0.0', '##mine:0.0', '##n:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 291, example: The company 's plant in Russia will continue to make tyres for its near markets , while the plant in Nokia in Finland will manufacture tyres for other markets , prediction: 2, correct_label: 2, class_scores: [0.21245693 0.32754767 0.45999542], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'plant:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', 'will:4.073096533829812e-06', 'continue:0.0', 'to:2.886244146793615e-06', 'make:0.0', 'tyres:0.0', 'for:0.0', 'its:1.7191393908433383e-06', 'near:0.0', 'markets:0.0', ',:7.986737728060689e-06', 'while:0.0', 'the:6.3806996877247e-06', 'plant:0.0', 'in:3.0217122457543155e-06', 'nokia:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', 'will:4.073096533829812e-06', 'manufacture:0.0', 'tyres:0.0', 'for:0.0', 'other:0.0', 'markets:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 292, example: The world 's biggest magazine paper maker said the program to improve efficiency will include closing several of its least competitive mills and would cover all the company 's operations resulting in annual savings of some euro200 million US$ 240 million , prediction: 1, correct_label: 1, class_scores: [0.17797802 0.4267116  0.3953104 ], word_scores: ['the:6.3806996877247e-06', 'world:0.0', "':0.0", 's:0.0', 'biggest:0.0', 'magazine:0.0', 'paper:2.697490344871767e-06', 'maker:0.0', 'said:0.0', 'the:6.3806996877247e-06', 'program:0.0', 'to:2.886244146793615e-06', 'improve:0.0', 'efficiency:0.0', 'will:4.073096533829812e-06', 'include:0.0', 'closing:0.0', 'several:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'least:0.0', 'competitive:0.0', 'mills:0.0', 'and:0.0', 'would:2.0953068542439723e-06', 'cover:0.0', 'all:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'operations:0.0', 'resulting:0.0', 'in:3.0217122457543155e-06', 'annual:0.0', 'savings:0.0', 'of:3.4365734791208524e-06', 'some:0.0', 'euro:0.0', '##200:0.0', 'million:6.018835847498849e-06', 'us:0.0', '$:0.0', '240:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 293, example: It is the most awkward thing to use if you 're holding the phone with one hand , prediction: 2, correct_label: 0, class_scores: [0.19277388 0.39187196 0.41535416], word_scores: ['it:3.3415778943890473e-06', 'is:0.0', 'the:6.3806996877247e-06', 'most:0.0', 'awkward:0.0', 'thing:0.0', 'to:2.886244146793615e-06', 'use:0.0', 'if:0.0', 'you:0.0', "':0.0", 're:0.0', 'holding:0.0', 'the:6.3806996877247e-06', 'phone:0.0', 'with:4.733654350275174e-06', 'one:4.584404450724833e-06', 'hand:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.2650, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.5061, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('awkward', tensor(0., device='cuda:0')), ('thing', tensor(0., device='cuda:0')), ('to', tensor(0.2289, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.2650, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.5061, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('awkward', tensor(0., device='cuda:0')), ('thing', tensor(0., device='cuda:0')), ('to', tensor(0.2289, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0'))]
idx: 294, example: According to A-Rehu 's Managing Director , Jouko Lahtinen , the project will stabilise costs and improve supply security , prediction: 2, correct_label: 1, class_scores: [0.19421579 0.3109588  0.49482548], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', '-:4.821180027647642e-06', 're:0.0', '##hu:0.0', "':0.0", 's:0.0', 'managing:0.0', 'director:0.0', ',:7.986737728060689e-06', 'jo:0.0', '##uk:0.0', '##o:0.0', 'la:0.0', '##ht:0.0', '##inen:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'project:0.0', 'will:4.073096533829812e-06', 'stab:0.0', '##ilis:0.0', '##e:0.0', 'costs:0.0', 'and:0.0', 'improve:0.0', 'supply:6.221108833415201e-06', 'security:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.1767, device='cuda:0')), ('a', tensor(0.5282, device='cuda:0')), ('-', tensor(0.2951, device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.1767, device='cuda:0')), ('a', tensor(0.5282, device='cuda:0')), ('-', tensor(0.2951, device='cuda:0'))]
idx: 295, example: This action follows personnel negotiations concerning Elcoteq SE , Finnish Branch , Elcoteq Finland Oy and Elcoteq Design Center Oy , prediction: 2, correct_label: 2, class_scores: [0.25207102 0.29224253 0.45568645], word_scores: ['this:0.0', 'action:0.0', 'follows:0.0', 'personnel:0.0', 'negotiations:0.0', 'concerning:0.0', 'el:0.0', '##cote:0.0', '##q:0.0', 'se:0.0', ',:7.986737728060689e-06', 'finnish:0.0', 'branch:0.0', ',:7.986737728060689e-06', 'el:0.0', '##cote:0.0', '##q:0.0', 'finland:4.096111752005527e-06', 'o:0.0', '##y:1.832826342251792e-06', 'and:0.0', 'el:0.0', '##cote:0.0', '##q:0.0', 'design:0.0', 'center:0.0', 'o:0.0', '##y:1.832826342251792e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('this', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('follows', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('se', tensor(0., device='cuda:0')), (',', tensor(0.3980, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('branch', tensor(0., device='cuda:0')), (',', tensor(0.3980, device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('finland', tensor(0.2041, device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('follows', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('se', tensor(0., device='cuda:0')), (',', tensor(0.3980, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('branch', tensor(0., device='cuda:0')), (',', tensor(0.3980, device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('finland', tensor(0.2041, device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('elcoteq', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0'))]
idx: 296, example: Tecnomen 's solution can be used for prepaid and post-paid billing , for charging and rating of voice and video calls , data traffic and any kind of content services in both mobile and fixed networks , prediction: 1, correct_label: 2, class_scores: [0.21715796 0.41571578 0.36712626], word_scores: ['te:0.0', '##c:0.0', '##no:0.0', '##men:0.0', "':0.0", 's:0.0', 'solution:0.0', 'can:0.0', 'be:0.0', 'used:0.0', 'for:0.0', 'prep:0.0', '##aid:0.0', 'and:0.0', 'post:0.0', '-:4.821180027647642e-06', 'paid:0.0', 'billing:0.0', ',:7.986737728060689e-06', 'for:0.0', 'charging:0.0', 'and:0.0', 'rating:0.0', 'of:3.4365734791208524e-06', 'voice:0.0', 'and:0.0', 'video:0.0', 'calls:0.0', ',:7.986737728060689e-06', 'data:0.0', 'traffic:0.0', 'and:0.0', 'any:0.0', 'kind:0.0', 'of:3.4365734791208524e-06', 'content:0.0', 'services:0.0', 'in:3.0217122457543155e-06', 'both:0.0', 'mobile:0.0', 'and:0.0', 'fixed:0.0', 'networks:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 297, example: Finnish property investment company Citycon will expand and refurbish +�kersberga shopping center in Stockholm , in Sweden , prediction: 2, correct_label: 2, class_scores: [0.17716002 0.35931504 0.46352497], word_scores: ['finnish:0.0', 'property:0.0', 'investment:0.0', 'company:6.695386673527537e-06', 'city:0.0', '##con:0.0', 'will:4.073096533829812e-06', 'expand:0.0', 'and:0.0', 'ref:0.0', '##ur:0.0', '##bis:0.0', '##h:0.0', '+:0.0', 'ke:0.0', '##rs:0.0', '##berg:0.0', '##a:3.804580501309829e-06', 'shopping:0.0', 'center:0.0', 'in:3.0217122457543155e-06', 'stockholm:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'sweden:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.2700, device='cuda:0')), ('citycon', tensor(0., device='cuda:0')), ('will', tensor(0.1642, device='cuda:0')), ('expand', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('refurbish', tensor(0., device='cuda:0')), ('kersberga', tensor(0., device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('in', tensor(0.1218, device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), (',', tensor(0.3221, device='cuda:0')), ('in', tensor(0.1218, device='cuda:0')), ('sweden', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.2700, device='cuda:0')), ('citycon', tensor(0., device='cuda:0')), ('will', tensor(0.1642, device='cuda:0')), ('expand', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('refurbish', tensor(0., device='cuda:0')), ('kersberga', tensor(0., device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('in', tensor(0.1218, device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), (',', tensor(0.3221, device='cuda:0')), ('in', tensor(0.1218, device='cuda:0')), ('sweden', tensor(0., device='cuda:0'))]
idx: 298, example: Vaahto , which has entered the deal via its subsidiary Vaahto Pulp & Paper Machinery , will supply two of the units in the end of 2010 , while the remaining ones are expected for delivery in the beginning of 2011 , prediction: 2, correct_label: 1, class_scores: [0.16077086 0.37090793 0.4683212 ], word_scores: ['va:2.3812995095795486e-06', '##ah:0.0', '##to:0.0', ',:7.986737728060689e-06', 'which:0.0', 'has:5.9214244174654596e-06', 'entered:0.0', 'the:6.3806996877247e-06', 'deal:0.0', 'via:0.0', 'its:1.7191393908433383e-06', 'subsidiary:0.0', 'va:2.3812995095795486e-06', '##ah:0.0', '##to:0.0', 'pulp:0.0', '&:0.0', 'paper:2.697490344871767e-06', 'machinery:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'supply:6.221108833415201e-06', 'two:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'units:2.8638919502554927e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'while:0.0', 'the:6.3806996877247e-06', 'remaining:0.0', 'ones:0.0', 'are:0.0', 'expected:0.0', 'for:0.0', 'delivery:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'beginning:0.0', 'of:3.4365734791208524e-06', '2011:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vaahto', tensor(0.0237, device='cuda:0')), (',', tensor(0.0795, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('has', tensor(0.0589, device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('its', tensor(0.0171, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('vaahto', tensor(0.0237, device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('paper', tensor(0.0268, device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), (',', tensor(0.0795, device='cuda:0')), ('will', tensor(0.0405, device='cuda:0')), ('supply', tensor(0.0619, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('of', tensor(0.0342, device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('units', tensor(0.0285, device='cuda:0')), ('in', tensor(0.0301, device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0342, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.0795, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('ones', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('delivery', tensor(0., device='cuda:0')), ('in', tensor(0.0301, device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('of', tensor(0.0342, device='cuda:0')), ('2011', tensor(0., device='cuda:0'))],  word_scores_max: [('vaahto', tensor(0.0237, device='cuda:0')), (',', tensor(0.0795, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('has', tensor(0.0589, device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('its', tensor(0.0171, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('vaahto', tensor(0.0237, device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('paper', tensor(0.0268, device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), (',', tensor(0.0795, device='cuda:0')), ('will', tensor(0.0405, device='cuda:0')), ('supply', tensor(0.0619, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('of', tensor(0.0342, device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('units', tensor(0.0285, device='cuda:0')), ('in', tensor(0.0301, device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0342, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.0795, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('ones', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('delivery', tensor(0., device='cuda:0')), ('in', tensor(0.0301, device='cuda:0')), ('the', tensor(0.0635, device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('of', tensor(0.0342, device='cuda:0')), ('2011', tensor(0., device='cuda:0'))]
idx: 299, example: Catalysts segment includes refinery catalysts and polyolefin catalysts product categories , prediction: 2, correct_label: 2, class_scores: [0.1439598  0.39500466 0.46103555], word_scores: ['catalyst:0.0', '##s:4.601175078278175e-06', 'segment:0.0', 'includes:0.0', 'refinery:0.0', 'catalyst:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'poly:0.0', '##ole:0.0', '##fin:0.0', 'catalyst:0.0', '##s:4.601175078278175e-06', 'product:0.0', 'categories:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('catalysts', tensor(nan, device='cuda:0')), ('segment', tensor(nan, device='cuda:0')), ('includes', tensor(nan, device='cuda:0')), ('refinery', tensor(nan, device='cuda:0')), ('catalysts', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('polyolefin', tensor(nan, device='cuda:0')), ('catalysts', tensor(nan, device='cuda:0')), ('product', tensor(nan, device='cuda:0')), ('categories', tensor(nan, device='cuda:0'))],  word_scores_max: [('catalysts', tensor(nan, device='cuda:0')), ('segment', tensor(nan, device='cuda:0')), ('includes', tensor(nan, device='cuda:0')), ('refinery', tensor(nan, device='cuda:0')), ('catalysts', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('polyolefin', tensor(nan, device='cuda:0')), ('catalysts', tensor(nan, device='cuda:0')), ('product', tensor(nan, device='cuda:0')), ('categories', tensor(nan, device='cuda:0'))]
idx: 300, example: Rapala aims to move the distribution unit Ragot from Loudeac in Bretagne and the distribution unit Waterqueen and the fishing line supplier Tortue from Saint Marcel in Central France to Morvillars , prediction: 2, correct_label: 2, class_scores: [0.15529373 0.3762485  0.46845773], word_scores: ['rap:0.0', '##ala:0.0', 'aims:0.0', 'to:2.886244146793615e-06', 'move:0.0', 'the:6.3806996877247e-06', 'distribution:0.0', 'unit:0.0', 'rag:0.0', '##ot:0.0', 'from:4.495178018260049e-06', 'loud:0.0', '##ea:0.0', '##c:0.0', 'in:3.0217122457543155e-06', 'bret:0.0', '##agne:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'distribution:0.0', 'unit:0.0', 'water:0.0', '##que:0.0', '##en:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'fishing:0.0', 'line:0.0', 'supplier:0.0', 'tor:0.0', '##tu:0.0', '##e:0.0', 'from:4.495178018260049e-06', 'saint:0.0', 'marcel:0.0', 'in:3.0217122457543155e-06', 'central:1.9185144992661662e-06', 'france:0.0', 'to:2.886244146793615e-06', 'mor:0.0', '##vill:0.0', '##ars:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rapala', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.0689, device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('the', tensor(0.1524, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('ragot', tensor(0., device='cuda:0')), ('from', tensor(0.1074, device='cuda:0')), ('loudeac', tensor(0., device='cuda:0')), ('in', tensor(0.0722, device='cuda:0')), ('bretagne', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1524, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('waterqueen', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1524, device='cuda:0')), ('fishing', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('tortue', tensor(0., device='cuda:0')), ('from', tensor(0.1074, device='cuda:0')), ('saint', tensor(0., device='cuda:0')), ('marcel', tensor(0., device='cuda:0')), ('in', tensor(0.0722, device='cuda:0')), ('central', tensor(0.0458, device='cuda:0')), ('france', tensor(0., device='cuda:0')), ('to', tensor(0.0689, device='cuda:0')), ('morvillars', tensor(0., device='cuda:0'))],  word_scores_max: [('rapala', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.0689, device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('the', tensor(0.1524, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('ragot', tensor(0., device='cuda:0')), ('from', tensor(0.1074, device='cuda:0')), ('loudeac', tensor(0., device='cuda:0')), ('in', tensor(0.0722, device='cuda:0')), ('bretagne', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1524, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('waterqueen', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1524, device='cuda:0')), ('fishing', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('tortue', tensor(0., device='cuda:0')), ('from', tensor(0.1074, device='cuda:0')), ('saint', tensor(0., device='cuda:0')), ('marcel', tensor(0., device='cuda:0')), ('in', tensor(0.0722, device='cuda:0')), ('central', tensor(0.0458, device='cuda:0')), ('france', tensor(0., device='cuda:0')), ('to', tensor(0.0689, device='cuda:0')), ('morvillars', tensor(0., device='cuda:0'))]
idx: 301, example: The volume of investments in the two phases of the project is estimated at USD 300mn ( EUR 215.03 mn ) , prediction: 2, correct_label: 2, class_scores: [0.21874328 0.33311424 0.4481425 ], word_scores: ['the:6.3806996877247e-06', 'volume:0.0', 'of:3.4365734791208524e-06', 'investments:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'two:0.0', 'phases:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'project:0.0', 'is:0.0', 'estimated:0.0', 'at:0.0', 'usd:0.0', '300:0.0', '##m:0.0', '##n:0.0', '(:0.0', 'eu:0.0', '##r:0.0', '215:0.0', '.:2.903296945078182e-06', '03:0.0', 'mn:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1998, device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('of', tensor(0.1076, device='cuda:0')), ('investments', tensor(0., device='cuda:0')), ('in', tensor(0.0946, device='cuda:0')), ('the', tensor(0.1998, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('phases', tensor(0., device='cuda:0')), ('of', tensor(0.1076, device='cuda:0')), ('the', tensor(0.1998, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('300mn', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('215', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1998, device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('of', tensor(0.1076, device='cuda:0')), ('investments', tensor(0., device='cuda:0')), ('in', tensor(0.0946, device='cuda:0')), ('the', tensor(0.1998, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('phases', tensor(0., device='cuda:0')), ('of', tensor(0.1076, device='cuda:0')), ('the', tensor(0.1998, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('300mn', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('215', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 302, example: The service also enables users to watch e-mails in HTML format en is enhanced with 23 addition languages to choose from , prediction: 1, correct_label: 2, class_scores: [0.23984586 0.38632938 0.37382472], word_scores: ['the:6.3806996877247e-06', 'service:0.0', 'also:0.0', 'enables:0.0', 'users:0.0', 'to:2.886244146793615e-06', 'watch:0.0', 'e:0.0', '-:4.821180027647642e-06', 'mail:0.0', '##s:4.601175078278175e-06', 'in:3.0217122457543155e-06', 'html:0.0', 'format:0.0', 'en:2.1442599518195493e-06', 'is:0.0', 'enhanced:0.0', 'with:4.733654350275174e-06', '23:3.2229838780040154e-06', 'addition:0.0', 'languages:0.0', 'to:2.886244146793615e-06', 'choose:0.0', 'from:4.495178018260049e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1845, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('to', tensor(0.0834, device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.1394, device='cuda:0')), ('mails', tensor(0., device='cuda:0')), ('in', tensor(0.0874, device='cuda:0')), ('html', tensor(0., device='cuda:0')), ('format', tensor(0., device='cuda:0')), ('en', tensor(0.0620, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('enhanced', tensor(0., device='cuda:0')), ('with', tensor(0.1368, device='cuda:0')), ('23', tensor(0.0932, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), ('languages', tensor(0., device='cuda:0')), ('to', tensor(0.0834, device='cuda:0')), ('choose', tensor(0., device='cuda:0')), ('from', tensor(0.1299, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1845, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('to', tensor(0.0834, device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.1394, device='cuda:0')), ('mails', tensor(0., device='cuda:0')), ('in', tensor(0.0874, device='cuda:0')), ('html', tensor(0., device='cuda:0')), ('format', tensor(0., device='cuda:0')), ('en', tensor(0.0620, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('enhanced', tensor(0., device='cuda:0')), ('with', tensor(0.1368, device='cuda:0')), ('23', tensor(0.0932, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), ('languages', tensor(0., device='cuda:0')), ('to', tensor(0.0834, device='cuda:0')), ('choose', tensor(0., device='cuda:0')), ('from', tensor(0.1299, device='cuda:0'))]
idx: 303, example: Production levels have been agreed with producers a long time ago , so a fall in consumption will lead to losses , prediction: 2, correct_label: 0, class_scores: [0.22470275 0.31742856 0.45786867], word_scores: ['production:0.0', 'levels:0.0', 'have:2.910326429628185e-06', 'been:0.0', 'agreed:0.0', 'with:4.733654350275174e-06', 'producers:0.0', 'a:8.62785782373976e-06', 'long:0.0', 'time:0.0', 'ago:0.0', ',:7.986737728060689e-06', 'so:0.0', 'a:8.62785782373976e-06', 'fall:0.0', 'in:3.0217122457543155e-06', 'consumption:0.0', 'will:4.073096533829812e-06', 'lead:0.0', 'to:2.886244146793615e-06', 'losses:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('production', tensor(0., device='cuda:0')), ('levels', tensor(0., device='cuda:0')), ('have', tensor(0.0679, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('with', tensor(0.1104, device='cuda:0')), ('producers', tensor(0., device='cuda:0')), ('a', tensor(0.2013, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0')), (',', tensor(0.1863, device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('a', tensor(0.2013, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.0705, device='cuda:0')), ('consumption', tensor(0., device='cuda:0')), ('will', tensor(0.0950, device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('to', tensor(0.0673, device='cuda:0')), ('losses', tensor(0., device='cuda:0'))],  word_scores_max: [('production', tensor(0., device='cuda:0')), ('levels', tensor(0., device='cuda:0')), ('have', tensor(0.0679, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('with', tensor(0.1104, device='cuda:0')), ('producers', tensor(0., device='cuda:0')), ('a', tensor(0.2013, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0')), (',', tensor(0.1863, device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('a', tensor(0.2013, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.0705, device='cuda:0')), ('consumption', tensor(0., device='cuda:0')), ('will', tensor(0.0950, device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('to', tensor(0.0673, device='cuda:0')), ('losses', tensor(0., device='cuda:0'))]
idx: 304, example: The expansion aims to attract new customers both in Finland and abroad , prediction: 2, correct_label: 1, class_scores: [0.19762416 0.3494101  0.45296583], word_scores: ['the:6.3806996877247e-06', 'expansion:0.0', 'aims:0.0', 'to:2.886244146793615e-06', 'attract:0.0', 'new:2.798587502184091e-06', 'customers:0.0', 'both:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', 'and:0.0', 'abroad:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3326, device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.1505, device='cuda:0')), ('attract', tensor(0., device='cuda:0')), ('new', tensor(0.1459, device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('in', tensor(0.1575, device='cuda:0')), ('finland', tensor(0.2135, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('abroad', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3326, device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.1505, device='cuda:0')), ('attract', tensor(0., device='cuda:0')), ('new', tensor(0.1459, device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('in', tensor(0.1575, device='cuda:0')), ('finland', tensor(0.2135, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('abroad', tensor(0., device='cuda:0'))]
idx: 305, example: As part of the transaction , M-real and Sappi have also signed a long-term agreement on the supply of pulp and BCTMP and other smaller services and supplies , prediction: 2, correct_label: 1, class_scores: [0.12858146 0.38627478 0.48514375], word_scores: ['as:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'transaction:0.0', ',:7.986737728060689e-06', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', 'and:0.0', 'sap:0.0', '##pi:0.0', 'have:2.910326429628185e-06', 'also:0.0', 'signed:0.0', 'a:8.62785782373976e-06', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'agreement:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'supply:6.221108833415201e-06', 'of:3.4365734791208524e-06', 'pulp:0.0', 'and:0.0', 'bc:0.0', '##tm:0.0', '##p:0.0', 'and:0.0', 'other:0.0', 'smaller:0.0', 'services:0.0', 'and:0.0', 'supplies:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1452, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0876, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sappi', tensor(0., device='cuda:0')), ('have', tensor(0.0529, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1568, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.0876, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('supply', tensor(0.1131, device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bctmp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('smaller', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('supplies', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1452, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0876, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sappi', tensor(0., device='cuda:0')), ('have', tensor(0.0529, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1568, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.0876, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('supply', tensor(0.1131, device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bctmp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('smaller', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('supplies', tensor(0., device='cuda:0'))]
idx: 306, example: Stora Enso Oyj said its second-quarter result would fall by half compared with the same period in 2007 , prediction: 2, correct_label: 0, class_scores: [0.19403611 0.3618191  0.4441448 ], word_scores: ['st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'said:0.0', 'its:1.7191393908433383e-06', 'second:0.0', '-:4.821180027647642e-06', 'quarter:0.0', 'result:0.0', 'would:2.0953068542439723e-06', 'fall:0.0', 'by:0.0', 'half:0.0', 'compared:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0802, device='cuda:0')), ('oyj', tensor(0.0685, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0643, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('-', tensor(0.1802, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('would', tensor(0.0783, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.1770, device='cuda:0')), ('the', tensor(0.2385, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0802, device='cuda:0')), ('oyj', tensor(0.0685, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0643, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('-', tensor(0.1802, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('would', tensor(0.0783, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.1770, device='cuda:0')), ('the', tensor(0.2385, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 307, example: The move is aimed at boosting sales , cost-efficiency and market share in Finland , prediction: 1, correct_label: 1, class_scores: [0.23492905 0.39356342 0.37150756], word_scores: ['the:6.3806996877247e-06', 'move:0.0', 'is:0.0', 'aimed:0.0', 'at:0.0', 'boost:0.0', '##ing:0.0', 'sales:0.0', ',:7.986737728060689e-06', 'cost:0.0', '-:4.821180027647642e-06', 'efficiency:0.0', 'and:0.0', 'market:0.0', 'share:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2426, device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('boosting', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), (',', tensor(0.3036, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('-', tensor(0.1833, device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('in', tensor(0.1149, device='cuda:0')), ('finland', tensor(0.1557, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2426, device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('boosting', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), (',', tensor(0.3036, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('-', tensor(0.1833, device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('in', tensor(0.1149, device='cuda:0')), ('finland', tensor(0.1557, device='cuda:0'))]
idx: 308, example: Cash flow from operations in January-December 2008 was a negative EUR 18.1 mn compared to EUR 39.0 mn in the corresponding period in 2007 , prediction: 2, correct_label: 0, class_scores: [0.20379002 0.3504803  0.4457297 ], word_scores: ['cash:0.0', 'flow:0.0', 'from:4.495178018260049e-06', 'operations:0.0', 'in:3.0217122457543155e-06', 'january:0.0', '-:4.821180027647642e-06', 'december:0.0', '2008:0.0', 'was:0.0', 'a:8.62785782373976e-06', 'negative:0.0', 'eu:0.0', '##r:0.0', '18:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '39:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cash', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('from', tensor(0.1068, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.1146, device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('a', tensor(0.2050, device='cuda:0')), ('negative', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0690, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0686, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('39', tensor(0., device='cuda:0')), ('.', tensor(0.0690, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('the', tensor(0.1516, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('cash', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('from', tensor(0.1068, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.1146, device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('a', tensor(0.2050, device='cuda:0')), ('negative', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0690, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0686, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('39', tensor(0., device='cuda:0')), ('.', tensor(0.0690, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('the', tensor(0.1516, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 309, example: The terms of the transactions remained undisclosed , prediction: 2, correct_label: 2, class_scores: [0.16037023 0.35595012 0.48367965], word_scores: ['the:6.3806996877247e-06', 'terms:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'transactions:0.0', 'remained:0.0', 'undisclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('transactions', tensor(0., device='cuda:0')), ('remained', tensor(0., device='cuda:0')), ('undisclosed', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('transactions', tensor(0., device='cuda:0')), ('remained', tensor(0., device='cuda:0')), ('undisclosed', tensor(0., device='cuda:0'))]
idx: 310, example: National sponsors for The Big Read include National Endowment for the Arts in cooperation with the Institute of Museum and Library Services and Arts Midwest , prediction: 2, correct_label: 2, class_scores: [0.20200497 0.36905897 0.42893615], word_scores: ['national:0.0', 'sponsors:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'big:0.0', 'read:0.0', 'include:0.0', 'national:0.0', 'endowment:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'arts:0.0', 'in:3.0217122457543155e-06', 'cooperation:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'institute:0.0', 'of:3.4365734791208524e-06', 'museum:0.0', 'and:0.0', 'library:0.0', 'services:0.0', 'and:0.0', 'arts:0.0', 'midwest:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('national', tensor(0., device='cuda:0')), ('sponsors', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2103, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('read', tensor(0., device='cuda:0')), ('include', tensor(0., device='cuda:0')), ('national', tensor(0., device='cuda:0')), ('endowment', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2103, device='cuda:0')), ('arts', tensor(0., device='cuda:0')), ('in', tensor(0.0996, device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('with', tensor(0.1561, device='cuda:0')), ('the', tensor(0.2103, device='cuda:0')), ('institute', tensor(0., device='cuda:0')), ('of', tensor(0.1133, device='cuda:0')), ('museum', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('library', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('arts', tensor(0., device='cuda:0')), ('midwest', tensor(0., device='cuda:0'))],  word_scores_max: [('national', tensor(0., device='cuda:0')), ('sponsors', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2103, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('read', tensor(0., device='cuda:0')), ('include', tensor(0., device='cuda:0')), ('national', tensor(0., device='cuda:0')), ('endowment', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2103, device='cuda:0')), ('arts', tensor(0., device='cuda:0')), ('in', tensor(0.0996, device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('with', tensor(0.1561, device='cuda:0')), ('the', tensor(0.2103, device='cuda:0')), ('institute', tensor(0., device='cuda:0')), ('of', tensor(0.1133, device='cuda:0')), ('museum', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('library', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('arts', tensor(0., device='cuda:0')), ('midwest', tensor(0., device='cuda:0'))]
idx: 311, example: `` We can say that the number of deals has become normalized by the moment , and therefore we have decided to devalue our apartments now on sale , '' he added , prediction: 2, correct_label: 0, class_scores: [0.20206597 0.3415816  0.4563524 ], word_scores: ['`:0.0', '`:0.0', 'we:0.0', 'can:0.0', 'say:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'deals:0.0', 'has:5.9214244174654596e-06', 'become:0.0', 'normal:0.0', '##ized:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'moment:0.0', ',:7.986737728060689e-06', 'and:0.0', 'therefore:0.0', 'we:0.0', 'have:2.910326429628185e-06', 'decided:0.0', 'to:2.886244146793615e-06', 'dev:0.0', '##al:0.0', '##ue:0.0', 'our:0.0', 'apartments:0.0', 'now:0.0', 'on:0.0', 'sale:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'he:0.0', 'added:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('say', tensor(0., device='cuda:0')), ('that', tensor(0.0333, device='cuda:0')), ('the', tensor(0.1405, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0757, device='cuda:0')), ('deals', tensor(0., device='cuda:0')), ('has', tensor(0.1304, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('normalized', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1405, device='cuda:0')), ('moment', tensor(0., device='cuda:0')), (',', tensor(0.1759, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('therefore', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.0641, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0636, device='cuda:0')), ('devalue', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('apartments', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), (',', tensor(0.1759, device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('say', tensor(0., device='cuda:0')), ('that', tensor(0.0333, device='cuda:0')), ('the', tensor(0.1405, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0757, device='cuda:0')), ('deals', tensor(0., device='cuda:0')), ('has', tensor(0.1304, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('normalized', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1405, device='cuda:0')), ('moment', tensor(0., device='cuda:0')), (',', tensor(0.1759, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('therefore', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.0641, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0636, device='cuda:0')), ('devalue', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('apartments', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), (',', tensor(0.1759, device='cuda:0'))]
idx: 312, example: According to the Act , universities can now acquire private funding , prediction: 2, correct_label: 2, class_scores: [0.23640631 0.33779734 0.4257964 ], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'act:0.0', ',:7.986737728060689e-06', 'universities:0.0', 'can:0.0', 'now:0.0', 'acquire:0.0', 'private:3.393340421098401e-06', 'funding:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.1398, device='cuda:0')), ('the', tensor(0.3090, device='cuda:0')), ('act', tensor(0., device='cuda:0')), (',', tensor(0.3868, device='cuda:0')), ('universities', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('acquire', tensor(0., device='cuda:0')), ('private', tensor(0.1644, device='cuda:0')), ('funding', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.1398, device='cuda:0')), ('the', tensor(0.3090, device='cuda:0')), ('act', tensor(0., device='cuda:0')), (',', tensor(0.3868, device='cuda:0')), ('universities', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('acquire', tensor(0., device='cuda:0')), ('private', tensor(0.1644, device='cuda:0')), ('funding', tensor(0., device='cuda:0'))]
idx: 313, example: Following the increase the company+�EUR TM s capital totals 5.5 mln Romanian lei $ 1.98 mln-1 .56 mln euro , prediction: 1, correct_label: 2, class_scores: [0.15640175 0.43479443 0.40880385], word_scores: ['following:0.0', 'the:6.3806996877247e-06', 'increase:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '+:0.0', 'eu:0.0', '##r:0.0', 't:0.0', '##m:0.0', 's:0.0', 'capital:0.0', 'totals:0.0', '5:0.0', '.:2.903296945078182e-06', '5:0.0', 'ml:0.0', '##n:0.0', 'romanian:0.0', 'lei:0.0', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '98:0.0', 'ml:0.0', '##n:0.0', '-:4.821180027647642e-06', '1:0.0', '.:2.903296945078182e-06', '56:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('following', tensor(0., device='cuda:0')), ('the', tensor(0.1934, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('the', tensor(0.1934, device='cuda:0')), ('company', tensor(0.2030, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('tm', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('totals', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0880, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('romanian', tensor(0., device='cuda:0')), ('lei', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0880, device='cuda:0')), ('98', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('-', tensor(0.1462, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0880, device='cuda:0')), ('56', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0'))],  word_scores_max: [('following', tensor(0., device='cuda:0')), ('the', tensor(0.1934, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('the', tensor(0.1934, device='cuda:0')), ('company', tensor(0.2030, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('tm', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('totals', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0880, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('romanian', tensor(0., device='cuda:0')), ('lei', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0880, device='cuda:0')), ('98', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('-', tensor(0.1462, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0880, device='cuda:0')), ('56', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0'))]
idx: 314, example: In Q1 of 2010 , Bank of +�land 's net interest income increased from EUR 9.1 mn to EUR 9.7 mn , prediction: 2, correct_label: 1, class_scores: [0.21396033 0.38498595 0.40105373], word_scores: ['in:3.0217122457543155e-06', 'q:0.0', '##1:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'bank:0.0', 'of:3.4365734791208524e-06', '+:0.0', 'land:0.0', "':0.0", 's:0.0', 'net:0.0', 'interest:0.0', 'income:0.0', 'increased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '9:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '9:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1690, device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('of', tensor(0.1922, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.4466, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.1922, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1690, device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('of', tensor(0.1922, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.4466, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.1922, device='cuda:0'))]
idx: 315, example: `` The summer collection 2008 will be joyfully fresh like a vitamin injection , '' said H&M 's head of design Margareta van den Bosch , prediction: 2, correct_label: 2, class_scores: [0.16652532 0.2376765  0.59579813], word_scores: ['`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'summer:0.0', 'collection:0.0', '2008:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'joy:0.0', '##fully:0.0', 'fresh:0.0', 'like:0.0', 'a:8.62785782373976e-06', 'vitamin:0.0', 'injection:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'said:0.0', 'h:0.0', '&:0.0', 'm:0.0', "':0.0", 's:0.0', 'head:0.0', 'of:3.4365734791208524e-06', 'design:0.0', 'margaret:0.0', '##a:3.804580501309829e-06', 'van:0.0', 'den:0.0', 'bosch:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2357, device='cuda:0')), ('summer', tensor(0., device='cuda:0')), ('collection', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('will', tensor(0.1505, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('joyfully', tensor(0., device='cuda:0')), ('fresh', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('a', tensor(0.3187, device='cuda:0')), ('vitamin', tensor(0., device='cuda:0')), ('injection', tensor(0., device='cuda:0')), (',', tensor(0.2951, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2357, device='cuda:0')), ('summer', tensor(0., device='cuda:0')), ('collection', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('will', tensor(0.1505, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('joyfully', tensor(0., device='cuda:0')), ('fresh', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('a', tensor(0.3187, device='cuda:0')), ('vitamin', tensor(0., device='cuda:0')), ('injection', tensor(0., device='cuda:0')), (',', tensor(0.2951, device='cuda:0'))]
idx: 316, example: The company has established a 3G base station at about 17,000 feet at the foot of Mount Everest that will enable mountain climbers at the 29,035-foot summit to surf the Internet and even send videos of their exploits , prediction: 2, correct_label: 1, class_scores: [0.2265132  0.32422656 0.44926023], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'established:0.0', 'a:8.62785782373976e-06', '3:0.0', '##g:0.0', 'base:0.0', 'station:0.0', 'at:0.0', 'about:0.0', '17:0.0', ',:7.986737728060689e-06', '000:0.0', 'feet:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'foot:0.0', 'of:3.4365734791208524e-06', 'mount:0.0', 'everest:0.0', 'that:1.5133816759771435e-06', 'will:4.073096533829812e-06', 'enable:0.0', 'mountain:0.0', 'climb:0.0', '##ers:5.0093617574020755e-06', 'at:0.0', 'the:6.3806996877247e-06', '29:0.0', ',:7.986737728060689e-06', '03:0.0', '##5:0.0', '-:4.821180027647642e-06', 'foot:0.0', 'summit:0.0', 'to:2.886244146793615e-06', 'surf:0.0', 'the:6.3806996877247e-06', 'internet:0.0', 'and:0.0', 'even:0.0', 'send:0.0', 'videos:0.0', 'of:3.4365734791208524e-06', 'their:0.0', 'exploits:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0770, device='cuda:0')), ('company', tensor(0.0808, device='cuda:0')), ('has', tensor(0.0714, device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('a', tensor(0.1041, device='cuda:0')), ('3g', tensor(0., device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('station', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.0963, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('feet', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0770, device='cuda:0')), ('foot', tensor(0., device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('mount', tensor(0., device='cuda:0')), ('everest', tensor(0., device='cuda:0')), ('that', tensor(0.0183, device='cuda:0')), ('will', tensor(0.0491, device='cuda:0')), ('enable', tensor(0., device='cuda:0')), ('mountain', tensor(0., device='cuda:0')), ('climbers', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0770, device='cuda:0')), ('29', tensor(0., device='cuda:0')), (',', tensor(0.0963, device='cuda:0')), ('035', tensor(0., device='cuda:0')), ('-', tensor(0.0582, device='cuda:0')), ('foot', tensor(0., device='cuda:0')), ('summit', tensor(0., device='cuda:0')), ('to', tensor(0.0348, device='cuda:0')), ('surf', tensor(0., device='cuda:0')), ('the', tensor(0.0770, device='cuda:0')), ('internet', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('even', tensor(0., device='cuda:0')), ('send', tensor(0., device='cuda:0')), ('videos', tensor(0., device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('exploits', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0770, device='cuda:0')), ('company', tensor(0.0808, device='cuda:0')), ('has', tensor(0.0714, device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('a', tensor(0.1041, device='cuda:0')), ('3g', tensor(0., device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('station', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.0963, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('feet', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0770, device='cuda:0')), ('foot', tensor(0., device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('mount', tensor(0., device='cuda:0')), ('everest', tensor(0., device='cuda:0')), ('that', tensor(0.0183, device='cuda:0')), ('will', tensor(0.0491, device='cuda:0')), ('enable', tensor(0., device='cuda:0')), ('mountain', tensor(0., device='cuda:0')), ('climbers', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.0770, device='cuda:0')), ('29', tensor(0., device='cuda:0')), (',', tensor(0.0963, device='cuda:0')), ('035', tensor(0., device='cuda:0')), ('-', tensor(0.0582, device='cuda:0')), ('foot', tensor(0., device='cuda:0')), ('summit', tensor(0., device='cuda:0')), ('to', tensor(0.0348, device='cuda:0')), ('surf', tensor(0., device='cuda:0')), ('the', tensor(0.0770, device='cuda:0')), ('internet', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('even', tensor(0., device='cuda:0')), ('send', tensor(0., device='cuda:0')), ('videos', tensor(0., device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('exploits', tensor(0., device='cuda:0'))]
idx: 317, example: Also Ruukki Construction , Rautaruukki 's construction division , is initiating employer-employee negotiations at its sites in Alaj+�rvi , Vimpeli and Per+�sein+�joki in Finland , prediction: 2, correct_label: 2, class_scores: [0.19719577 0.29701647 0.5057878 ], word_scores: ['also:0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', 'construction:0.0', ',:7.986737728060689e-06', 'ra:0.0', '##uta:0.0', '##ru:0.0', '##uk:0.0', '##ki:0.0', "':0.0", 's:0.0', 'construction:0.0', 'division:0.0', ',:7.986737728060689e-06', 'is:0.0', 'initiating:0.0', 'employer:0.0', '-:4.821180027647642e-06', 'employee:0.0', 'negotiations:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'sites:0.0', 'in:3.0217122457543155e-06', 'ala:0.0', '##j:0.0', '+:0.0', 'rv:0.0', '##i:0.0', ',:7.986737728060689e-06', 'vi:0.0', '##mp:0.0', '##eli:0.0', 'and:0.0', 'per:0.0', '+:0.0', 'se:0.0', '##in:0.0', '+:0.0', 'jo:0.0', '##ki:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('also', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('also', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 318, example: As a part of the agreement 10 employees from the John Deere Forestry documentation functions will transfer to DokuMentori Oy , prediction: 2, correct_label: 2, class_scores: [0.16654135 0.38233304 0.45112562], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'agreement:0.0', '10:0.0', 'employees:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'john:0.0', 'deer:0.0', '##e:0.0', 'forestry:0.0', 'documentation:0.0', 'functions:0.0', 'will:4.073096533829812e-06', 'transfer:0.0', 'to:2.886244146793615e-06', 'do:0.0', '##ku:0.0', '##mento:0.0', '##ri:0.0', 'o:0.0', '##y:1.832826342251792e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.2378, device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0947, device='cuda:0')), ('the', tensor(0.1759, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('from', tensor(0.1239, device='cuda:0')), ('the', tensor(0.1759, device='cuda:0')), ('john', tensor(0., device='cuda:0')), ('deere', tensor(0., device='cuda:0')), ('forestry', tensor(0., device='cuda:0')), ('documentation', tensor(0., device='cuda:0')), ('functions', tensor(0., device='cuda:0')), ('will', tensor(0.1123, device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('to', tensor(0.0796, device='cuda:0')), ('dokumentori', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.2378, device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0947, device='cuda:0')), ('the', tensor(0.1759, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('from', tensor(0.1239, device='cuda:0')), ('the', tensor(0.1759, device='cuda:0')), ('john', tensor(0., device='cuda:0')), ('deere', tensor(0., device='cuda:0')), ('forestry', tensor(0., device='cuda:0')), ('documentation', tensor(0., device='cuda:0')), ('functions', tensor(0., device='cuda:0')), ('will', tensor(0.1123, device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('to', tensor(0.0796, device='cuda:0')), ('dokumentori', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0'))]
idx: 319, example: Finnlines said that the deal is part of its strategy to focus on its core businesses , prediction: 2, correct_label: 2, class_scores: [0.12358615 0.31558573 0.56082803], word_scores: ['finn:0.0', '##lines:0.0', 'said:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'deal:0.0', 'is:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'strategy:0.0', 'to:2.886244146793615e-06', 'focus:0.0', 'on:0.0', 'its:1.7191393908433383e-06', 'core:0.0', 'businesses:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnlines', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0857, device='cuda:0')), ('the', tensor(0.3614, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1946, device='cuda:0')), ('its', tensor(0.0974, device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('to', tensor(0.1635, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('its', tensor(0.0974, device='cuda:0')), ('core', tensor(0., device='cuda:0')), ('businesses', tensor(0., device='cuda:0'))],  word_scores_max: [('finnlines', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0857, device='cuda:0')), ('the', tensor(0.3614, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1946, device='cuda:0')), ('its', tensor(0.0974, device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('to', tensor(0.1635, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('its', tensor(0.0974, device='cuda:0')), ('core', tensor(0., device='cuda:0')), ('businesses', tensor(0., device='cuda:0'))]
idx: 320, example: Net sales went up by 1 % year-on-year to EUR 29 million , affected by the business acquisitions , realized during the previous financial period , the effect of which was EUR 5.1 million on the review period , prediction: 2, correct_label: 1, class_scores: [0.16939484 0.38404116 0.446564  ], word_scores: ['net:0.0', 'sales:0.0', 'went:0.0', 'up:1.4959460941099678e-06', 'by:0.0', '1:0.0', '%:0.0', 'year:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'year:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '29:0.0', 'million:6.018835847498849e-06', ',:7.986737728060689e-06', 'affected:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'business:0.0', 'acquisitions:0.0', ',:7.986737728060689e-06', 'realized:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'previous:0.0', 'financial:0.0', 'period:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'effect:0.0', 'of:3.4365734791208524e-06', 'which:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '5:0.0', '.:2.903296945078182e-06', '1:0.0', 'million:6.018835847498849e-06', 'on:0.0', 'the:6.3806996877247e-06', 'review:0.0', 'period:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('up', tensor(0.0183, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0589, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0589, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0352, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('million', tensor(0.0735, device='cuda:0')), (',', tensor(0.0975, device='cuda:0')), ('affected', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0')), (',', tensor(0.0975, device='cuda:0')), ('realized', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('previous', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), (',', tensor(0.0975, device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('of', tensor(0.0420, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0355, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.0735, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('review', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('up', tensor(0.0183, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0589, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0589, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0352, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('million', tensor(0.0735, device='cuda:0')), (',', tensor(0.0975, device='cuda:0')), ('affected', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0')), (',', tensor(0.0975, device='cuda:0')), ('realized', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('previous', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), (',', tensor(0.0975, device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('of', tensor(0.0420, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0355, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.0735, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0779, device='cuda:0')), ('review', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0'))]
idx: 321, example: Earnings per share ( EPS ) amounted to a loss of to EUR0 .06 , prediction: 2, correct_label: 0, class_scores: [0.15149169 0.2959873  0.55252105], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', '(:0.0', 'eps:0.0', '):0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '06:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.1392, device='cuda:0')), ('a', tensor(0.4160, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1657, device='cuda:0')), ('to', tensor(0.1392, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1400, device='cuda:0')), ('06', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.1392, device='cuda:0')), ('a', tensor(0.4160, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1657, device='cuda:0')), ('to', tensor(0.1392, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1400, device='cuda:0')), ('06', tensor(0., device='cuda:0'))]
idx: 322, example: The exercise price of the option will be based on Safran Software Solutions ' license and maintenance sales as well as the result of the company , prediction: 2, correct_label: 2, class_scores: [0.21112286 0.37437865 0.41449854], word_scores: ['the:6.3806996877247e-06', 'exercise:0.0', 'price:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'option:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'based:0.0', 'on:0.0', 'sa:0.0', '##fra:0.0', '##n:0.0', 'software:0.0', 'solutions:0.0', "':0.0", 'license:0.0', 'and:0.0', 'maintenance:0.0', 'sales:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'result:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3148, device='cuda:0')), ('exercise', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('of', tensor(0.1695, device='cuda:0')), ('the', tensor(0.3148, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('will', tensor(0.2009, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('safran', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3148, device='cuda:0')), ('exercise', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('of', tensor(0.1695, device='cuda:0')), ('the', tensor(0.3148, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('will', tensor(0.2009, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('safran', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0'))]
idx: 323, example: As previously announced , GeoSentric Oyj entered into financing agreements with its lead investor on June 30 , 2010 enabling the Company to receive financing up to the aggregate amount of 6M , prediction: 1, correct_label: 2, class_scores: [0.2380026 0.3993428 0.3626546], word_scores: ['as:0.0', 'previously:0.0', 'announced:0.0', ',:7.986737728060689e-06', 'geo:0.0', '##sen:0.0', '##tric:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'entered:0.0', 'into:0.0', 'financing:0.0', 'agreements:0.0', 'with:4.733654350275174e-06', 'its:1.7191393908433383e-06', 'lead:0.0', 'investor:0.0', 'on:0.0', 'june:0.0', '30:0.0', ',:7.986737728060689e-06', '2010:0.0', 'enabling:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'to:2.886244146793615e-06', 'receive:0.0', 'financing:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'aggregate:0.0', 'amount:0.0', 'of:3.4365734791208524e-06', '6:0.0', '##m:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('geosentric', tensor(0., device='cuda:0')), ('oyj', tensor(0.0337, device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('agreements', tensor(0., device='cuda:0')), ('with', tensor(0.0870, device='cuda:0')), ('its', tensor(0.0316, device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('enabling', tensor(0., device='cuda:0')), ('the', tensor(0.1172, device='cuda:0')), ('company', tensor(0.1230, device='cuda:0')), ('to', tensor(0.0530, device='cuda:0')), ('receive', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('up', tensor(0.0275, device='cuda:0')), ('to', tensor(0.0530, device='cuda:0')), ('the', tensor(0.1172, device='cuda:0')), ('aggregate', tensor(0., device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('of', tensor(0.0631, device='cuda:0')), ('6m', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('geosentric', tensor(0., device='cuda:0')), ('oyj', tensor(0.0337, device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('agreements', tensor(0., device='cuda:0')), ('with', tensor(0.0870, device='cuda:0')), ('its', tensor(0.0316, device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('enabling', tensor(0., device='cuda:0')), ('the', tensor(0.1172, device='cuda:0')), ('company', tensor(0.1230, device='cuda:0')), ('to', tensor(0.0530, device='cuda:0')), ('receive', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('up', tensor(0.0275, device='cuda:0')), ('to', tensor(0.0530, device='cuda:0')), ('the', tensor(0.1172, device='cuda:0')), ('aggregate', tensor(0., device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('of', tensor(0.0631, device='cuda:0')), ('6m', tensor(0., device='cuda:0'))]
idx: 324, example: ( ADP News ) - Feb 11 , 2009 - Finnish wood products technology supplier Raute Oyj ( HEL : RUTAV ) said today its net profit decreased to EUR 4.7 million ( USD 6.1 m ) for 2008 from EUR 6.6 million for 2007 , prediction: 2, correct_label: 0, class_scores: [0.20079426 0.33177868 0.46742713], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', 'news:0.0', '):0.0', '-:4.821180027647642e-06', 'feb:0.0', '11:0.0', ',:7.986737728060689e-06', '2009:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'wood:0.0', 'products:0.0', 'ra:0.0', '##ute:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ru:0.0', '##ta:0.0', '##v:0.0', '):0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '4:0.0', '.:2.903296945078182e-06', '7:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '6:0.0', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', '):0.0', 'for:0.0', '2008:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '6:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'for:0.0', '2007:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0978, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), (',', tensor(0.1620, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0978, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('raute', tensor(0., device='cuda:0')), ('oyj', tensor(0.0372, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('rutav', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0349, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.0585, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0589, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.1221, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0589, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0912, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0589, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1221, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0978, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), (',', tensor(0.1620, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0978, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('raute', tensor(0., device='cuda:0')), ('oyj', tensor(0.0372, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('rutav', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0349, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.0585, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0589, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.1221, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0589, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0912, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0589, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1221, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 325, example: Apart from Nordea , also Ergo is competing for the position among the top three pension funds providers in Estonia , prediction: 2, correct_label: 2, class_scores: [0.16861233 0.2834076  0.54798007], word_scores: ['apart:0.0', 'from:4.495178018260049e-06', 'nord:0.0', '##ea:0.0', ',:7.986737728060689e-06', 'also:0.0', 'er:0.0', '##go:0.0', 'is:0.0', 'competing:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'position:0.0', 'among:0.0', 'the:6.3806996877247e-06', 'top:0.0', 'three:0.0', 'pension:0.0', 'funds:0.0', 'providers:0.0', 'in:3.0217122457543155e-06', 'estonia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('apart', tensor(0., device='cuda:0')), ('from', tensor(0.1590, device='cuda:0')), ('nordea', tensor(0., device='cuda:0')), (',', tensor(0.2826, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('ergo', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('competing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2257, device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('among', tensor(0., device='cuda:0')), ('the', tensor(0.2257, device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('pension', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('providers', tensor(0., device='cuda:0')), ('in', tensor(0.1069, device='cuda:0')), ('estonia', tensor(0., device='cuda:0'))],  word_scores_max: [('apart', tensor(0., device='cuda:0')), ('from', tensor(0.1590, device='cuda:0')), ('nordea', tensor(0., device='cuda:0')), (',', tensor(0.2826, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('ergo', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('competing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2257, device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('among', tensor(0., device='cuda:0')), ('the', tensor(0.2257, device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('pension', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('providers', tensor(0., device='cuda:0')), ('in', tensor(0.1069, device='cuda:0')), ('estonia', tensor(0., device='cuda:0'))]
idx: 326, example: The engine has an electrical output of 18,321 kW , making it the largest gas powered generating set in the world , prediction: 2, correct_label: 2, class_scores: [0.13415807 0.36312294 0.502719  ], word_scores: ['the:6.3806996877247e-06', 'engine:0.0', 'has:5.9214244174654596e-06', 'an:0.0', 'electrical:0.0', 'output:0.0', 'of:3.4365734791208524e-06', '18:0.0', ',:7.986737728060689e-06', '321:0.0', 'kw:0.0', ',:7.986737728060689e-06', 'making:0.0', 'it:3.3415778943890473e-06', 'the:6.3806996877247e-06', 'largest:0.0', 'gas:0.0', 'powered:0.0', 'generating:0.0', 'set:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'world:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1255, device='cuda:0')), ('engine', tensor(0., device='cuda:0')), ('has', tensor(0.1165, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('electrical', tensor(0., device='cuda:0')), ('output', tensor(0., device='cuda:0')), ('of', tensor(0.0676, device='cuda:0')), ('18', tensor(0., device='cuda:0')), (',', tensor(0.1571, device='cuda:0')), ('321', tensor(0., device='cuda:0')), ('kw', tensor(0., device='cuda:0')), (',', tensor(0.1571, device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('it', tensor(0.0657, device='cuda:0')), ('the', tensor(0.1255, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('powered', tensor(0., device='cuda:0')), ('generating', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('in', tensor(0.0594, device='cuda:0')), ('the', tensor(0.1255, device='cuda:0')), ('world', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1255, device='cuda:0')), ('engine', tensor(0., device='cuda:0')), ('has', tensor(0.1165, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('electrical', tensor(0., device='cuda:0')), ('output', tensor(0., device='cuda:0')), ('of', tensor(0.0676, device='cuda:0')), ('18', tensor(0., device='cuda:0')), (',', tensor(0.1571, device='cuda:0')), ('321', tensor(0., device='cuda:0')), ('kw', tensor(0., device='cuda:0')), (',', tensor(0.1571, device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('it', tensor(0.0657, device='cuda:0')), ('the', tensor(0.1255, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('powered', tensor(0., device='cuda:0')), ('generating', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('in', tensor(0.0594, device='cuda:0')), ('the', tensor(0.1255, device='cuda:0')), ('world', tensor(0., device='cuda:0'))]
idx: 327, example: The new agreement , which expands a long-established cooperation between the companies , involves the transfer of certain engineering and documentation functions from Larox to Etteplan , prediction: 2, correct_label: 1, class_scores: [0.20607944 0.351324   0.44259655], word_scores: ['the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'agreement:0.0', ',:7.986737728060689e-06', 'which:0.0', 'expands:0.0', 'a:8.62785782373976e-06', 'long:0.0', '-:4.821180027647642e-06', 'established:0.0', 'cooperation:0.0', 'between:0.0', 'the:6.3806996877247e-06', 'companies:0.0', ',:7.986737728060689e-06', 'involves:0.0', 'the:6.3806996877247e-06', 'transfer:0.0', 'of:3.4365734791208524e-06', 'certain:0.0', 'engineering:0.0', 'and:0.0', 'documentation:0.0', 'functions:0.0', 'from:4.495178018260049e-06', 'la:0.0', '##ro:0.0', '##x:0.0', 'to:2.886244146793615e-06', 'et:0.0', '##te:0.0', '##pl:0.0', '##an:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1026, device='cuda:0')), ('new', tensor(0.0450, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.1284, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('expands', tensor(0., device='cuda:0')), ('a', tensor(0.1388, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.0775, device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('the', tensor(0.1026, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), (',', tensor(0.1284, device='cuda:0')), ('involves', tensor(0., device='cuda:0')), ('the', tensor(0.1026, device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('of', tensor(0.0553, device='cuda:0')), ('certain', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('documentation', tensor(0., device='cuda:0')), ('functions', tensor(0., device='cuda:0')), ('from', tensor(0.0723, device='cuda:0')), ('larox', tensor(0., device='cuda:0')), ('to', tensor(0.0464, device='cuda:0')), ('etteplan', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1026, device='cuda:0')), ('new', tensor(0.0450, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.1284, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('expands', tensor(0., device='cuda:0')), ('a', tensor(0.1388, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.0775, device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('the', tensor(0.1026, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), (',', tensor(0.1284, device='cuda:0')), ('involves', tensor(0., device='cuda:0')), ('the', tensor(0.1026, device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('of', tensor(0.0553, device='cuda:0')), ('certain', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('documentation', tensor(0., device='cuda:0')), ('functions', tensor(0., device='cuda:0')), ('from', tensor(0.0723, device='cuda:0')), ('larox', tensor(0., device='cuda:0')), ('to', tensor(0.0464, device='cuda:0')), ('etteplan', tensor(0., device='cuda:0'))]
idx: 328, example: Operating profit excluding non-recurring items totaled EUR 5.4 mn compared to EUR 5.5 mn in the corresponding period in 2007 , prediction: 2, correct_label: 0, class_scores: [0.2497665  0.3301717  0.42006183], word_scores: ['operating:0.0', 'profit:0.0', 'excluding:0.0', 'non:0.0', '-:4.821180027647642e-06', 'recurring:0.0', 'items:0.0', 'totaled:0.0', 'eu:0.0', '##r:0.0', '5:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '5:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.1859, device='cuda:0')), ('recurring', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1119, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.1113, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1119, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1165, device='cuda:0')), ('the', tensor(0.2460, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1165, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.1859, device='cuda:0')), ('recurring', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1119, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.1113, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1119, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1165, device='cuda:0')), ('the', tensor(0.2460, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1165, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 329, example: OVA Press has a 60 % stake in the joint venture , while IMSM holds a 40 % stake , prediction: 2, correct_label: 2, class_scores: [0.26631564 0.28715092 0.4465334 ], word_scores: ['o:0.0', '##va:0.0', 'press:0.0', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', '60:0.0', '%:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'joint:0.0', 'venture:0.0', ',:7.986737728060689e-06', 'while:0.0', 'im:0.0', '##sm:0.0', 'holds:0.0', 'a:8.62785782373976e-06', '40:0.0', '%:0.0', 'stake:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ova', tensor(0., device='cuda:0')), ('press', tensor(0., device='cuda:0')), ('has', tensor(0.1460, device='cuda:0')), ('a', tensor(0.2127, device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0745, device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), (',', tensor(0.1969, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('imsm', tensor(0., device='cuda:0')), ('holds', tensor(0., device='cuda:0')), ('a', tensor(0.2127, device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0'))],  word_scores_max: [('ova', tensor(0., device='cuda:0')), ('press', tensor(0., device='cuda:0')), ('has', tensor(0.1460, device='cuda:0')), ('a', tensor(0.2127, device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0745, device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), (',', tensor(0.1969, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('imsm', tensor(0., device='cuda:0')), ('holds', tensor(0., device='cuda:0')), ('a', tensor(0.2127, device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0'))]
idx: 330, example: `` Our aim is to understand different traffic patterns based on the use of each building , prediction: 2, correct_label: 2, class_scores: [0.24454471 0.3376251  0.4178302 ], word_scores: ['`:0.0', '`:0.0', 'our:0.0', 'aim:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'understand:0.0', 'different:0.0', 'traffic:0.0', 'patterns:0.0', 'based:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'use:0.0', 'of:3.4365734791208524e-06', 'each:0.0', 'building:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('our', tensor(0., device='cuda:0')), ('aim', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.2272, device='cuda:0')), ('understand', tensor(0., device='cuda:0')), ('different', tensor(0., device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), ('patterns', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5023, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('of', tensor(0.2705, device='cuda:0')), ('each', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0'))],  word_scores_max: [('our', tensor(0., device='cuda:0')), ('aim', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.2272, device='cuda:0')), ('understand', tensor(0., device='cuda:0')), ('different', tensor(0., device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), ('patterns', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5023, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('of', tensor(0.2705, device='cuda:0')), ('each', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0'))]
idx: 331, example: The figure does not include food exports from Finland , prediction: 1, correct_label: 2, class_scores: [0.19126369 0.40603364 0.4027027 ], word_scores: ['the:6.3806996877247e-06', 'figure:0.0', 'does:0.0', 'not:0.0', 'include:0.0', 'food:0.0', 'exports:0.0', 'from:4.495178018260049e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4262, device='cuda:0')), ('figure', tensor(0., device='cuda:0')), ('does', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('include', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('exports', tensor(0., device='cuda:0')), ('from', tensor(0.3002, device='cuda:0')), ('finland', tensor(0.2736, device='cuda:0'))],  word_scores_max: [('the', tensor(0.4262, device='cuda:0')), ('figure', tensor(0., device='cuda:0')), ('does', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('include', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('exports', tensor(0., device='cuda:0')), ('from', tensor(0.3002, device='cuda:0')), ('finland', tensor(0.2736, device='cuda:0'))]
idx: 332, example: YIT says the acquisition is a part of its strategy for expansion in Central and Eastern European markets , prediction: 2, correct_label: 1, class_scores: [0.1986881  0.34856135 0.45275047], word_scores: ['yi:0.0', '##t:0.0', 'says:0.0', 'the:6.3806996877247e-06', 'acquisition:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'part:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'strategy:0.0', 'for:0.0', 'expansion:0.0', 'in:3.0217122457543155e-06', 'central:1.9185144992661662e-06', 'and:0.0', 'eastern:0.0', 'european:0.0', 'markets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('yit', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.2542, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.3437, device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1369, device='cuda:0')), ('its', tensor(0.0685, device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('in', tensor(0.1204, device='cuda:0')), ('central', tensor(0.0764, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eastern', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))],  word_scores_max: [('yit', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.2542, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.3437, device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1369, device='cuda:0')), ('its', tensor(0.0685, device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('in', tensor(0.1204, device='cuda:0')), ('central', tensor(0.0764, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eastern', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))]
idx: 333, example: Arena Partners Oy is a development company for electronic business , prediction: 1, correct_label: 2, class_scores: [0.2520301  0.39436132 0.35360855], word_scores: ['arena:0.0', 'partners:0.0', 'o:0.0', '##y:1.832826342251792e-06', 'is:0.0', 'a:8.62785782373976e-06', 'development:0.0', 'company:6.695386673527537e-06', 'for:0.0', 'electronic:0.0', 'business:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('arena', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5631, device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('company', tensor(0.4369, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('arena', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5631, device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('company', tensor(0.4369, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 334, example: And U.S. energy executives say high steel prices are threatening energy exploration , prediction: 1, correct_label: 0, class_scores: [0.12989542 0.45887953 0.41122505], word_scores: ['and:0.0', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'energy:0.0', 'executives:0.0', 'say:0.0', 'high:0.0', 'steel:0.0', 'prices:0.0', 'are:0.0', 'threatening:0.0', 'energy:0.0', 'exploration:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('and', tensor(0., device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('executives', tensor(0., device='cuda:0')), ('say', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('threatening', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('exploration', tensor(0., device='cuda:0'))],  word_scores_max: [('and', tensor(0., device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('executives', tensor(0., device='cuda:0')), ('say', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('threatening', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('exploration', tensor(0., device='cuda:0'))]
idx: 335, example: firm 28 October 2009 - Finnish lifting equipment maker Konecranes Oyj HEL : KCR1V said today it acquired US Machine Tool Solutions Unlimited in Cincinnati , Ohio , for an undisclosed sum , prediction: 2, correct_label: 1, class_scores: [0.20775937 0.29106942 0.5011712 ], word_scores: ['firm:0.0', '28:0.0', 'october:0.0', '2009:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'lifting:0.0', 'equipment:0.0', 'maker:0.0', 'ko:5.9404255807748996e-06', '##ne:8.183636964531615e-06', '##cr:6.230764483916573e-06', '##ane:6.42778195469873e-06', '##s:4.601175078278175e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'kc:0.0', '##r:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'today:0.0', 'it:3.3415778943890473e-06', 'acquired:0.0', 'us:0.0', 'machine:0.0', 'tool:0.0', 'solutions:0.0', 'unlimited:0.0', 'in:3.0217122457543155e-06', 'cincinnati:0.0', ',:7.986737728060689e-06', 'ohio:0.0', ',:7.986737728060689e-06', 'for:0.0', 'an:0.0', 'undisclosed:0.0', 'sum:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('firm', tensor(0., device='cuda:0')), ('28', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1297, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('lifting', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('konecranes', tensor(0.2201, device='cuda:0')), ('oyj', tensor(0.0493, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('kcr1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0899, device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('machine', tensor(0., device='cuda:0')), ('tool', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('unlimited', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('cincinnati', tensor(0., device='cuda:0')), (',', tensor(0.2148, device='cuda:0')), ('ohio', tensor(0., device='cuda:0')), (',', tensor(0.2148, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('undisclosed', tensor(0., device='cuda:0')), ('sum', tensor(0., device='cuda:0'))],  word_scores_max: [('firm', tensor(0., device='cuda:0')), ('28', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0864, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('lifting', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('konecranes', tensor(0.4802, device='cuda:0')), ('oyj', tensor(0.0329, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('kcr1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0599, device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('machine', tensor(0., device='cuda:0')), ('tool', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('unlimited', tensor(0., device='cuda:0')), ('in', tensor(0.0542, device='cuda:0')), ('cincinnati', tensor(0., device='cuda:0')), (',', tensor(0.1432, device='cuda:0')), ('ohio', tensor(0., device='cuda:0')), (',', tensor(0.1432, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('undisclosed', tensor(0., device='cuda:0')), ('sum', tensor(0., device='cuda:0'))]
idx: 336, example: Jon Risfelt has previously held operational executive positions in Europolitan , Ericsson , SAS , American Express card and travel divisions , as well as Nyman & Schultz ( CEO ) , Vodafone Sweden ( CEO ) , and Gambro Renal Products ( CEO ) , prediction: 2, correct_label: 2, class_scores: [0.18280388 0.29042238 0.52677375], word_scores: ['jon:0.0', 'ri:0.0', '##sf:0.0', '##elt:0.0', 'has:5.9214244174654596e-06', 'previously:0.0', 'held:0.0', 'operational:0.0', 'executive:0.0', 'positions:0.0', 'in:3.0217122457543155e-06', 'euro:0.0', '##pol:0.0', '##itan:0.0', ',:7.986737728060689e-06', 'eric:0.0', '##sson:0.0', ',:7.986737728060689e-06', 'sas:0.0', ',:7.986737728060689e-06', 'american:0.0', 'express:0.0', 'card:0.0', 'and:0.0', 'travel:0.0', 'divisions:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'ny:0.0', '##man:0.0', '&:0.0', 'schultz:0.0', '(:0.0', 'ceo:0.0', '):0.0', ',:7.986737728060689e-06', 'vo:0.0', '##da:0.0', '##fo:0.0', '##ne:8.183636964531615e-06', 'sweden:0.0', '(:0.0', 'ceo:0.0', '):0.0', ',:7.986737728060689e-06', 'and:0.0', 'ga:0.0', '##mb:0.0', '##ro:0.0', 'renal:0.0', 'products:0.0', '(:0.0', 'ceo:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('jon', tensor(0., device='cuda:0')), ('risfelt', tensor(0., device='cuda:0')), ('has', tensor(0.1041, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0')), ('in', tensor(0.0531, device='cuda:0')), ('europolitan', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('ericsson', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('sas', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('american', tensor(0., device='cuda:0')), ('express', tensor(0., device='cuda:0')), ('card', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('divisions', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('nyman', tensor(0., device='cuda:0')), ('schultz', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('vodafone', tensor(0., device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('gambro', tensor(0., device='cuda:0')), ('renal', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0'))],  word_scores_max: [('jon', tensor(0., device='cuda:0')), ('risfelt', tensor(0., device='cuda:0')), ('has', tensor(0.1041, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0')), ('in', tensor(0.0531, device='cuda:0')), ('europolitan', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('ericsson', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('sas', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('american', tensor(0., device='cuda:0')), ('express', tensor(0., device='cuda:0')), ('card', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('divisions', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('nyman', tensor(0., device='cuda:0')), ('schultz', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('vodafone', tensor(0., device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), (',', tensor(0.1405, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('gambro', tensor(0., device='cuda:0')), ('renal', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0'))]
idx: 337, example: The company operates power plants in the Tyumen and Chelyabinsk regions and in the Khanty-Mansi Autonomous District , prediction: 2, correct_label: 2, class_scores: [0.2309921 0.3141839 0.4548241], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'operates:0.0', 'power:0.0', 'plants:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'ty:0.0', '##umen:0.0', 'and:0.0', 'che:0.0', '##ly:0.0', '##abi:0.0', '##nsk:0.0', 'regions:0.0', 'and:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'khan:0.0', '##ty:0.0', '-:4.821180027647642e-06', 'mans:0.0', '##i:0.0', 'autonomous:0.0', 'district:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1739, device='cuda:0')), ('company', tensor(0.1824, device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('in', tensor(0.0823, device='cuda:0')), ('the', tensor(0.1739, device='cuda:0')), ('tyumen', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('chelyabinsk', tensor(0., device='cuda:0')), ('regions', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.0823, device='cuda:0')), ('the', tensor(0.1739, device='cuda:0')), ('khanty', tensor(0., device='cuda:0')), ('-', tensor(0.1314, device='cuda:0')), ('mansi', tensor(0., device='cuda:0')), ('autonomous', tensor(0., device='cuda:0')), ('district', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1739, device='cuda:0')), ('company', tensor(0.1824, device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('in', tensor(0.0823, device='cuda:0')), ('the', tensor(0.1739, device='cuda:0')), ('tyumen', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('chelyabinsk', tensor(0., device='cuda:0')), ('regions', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.0823, device='cuda:0')), ('the', tensor(0.1739, device='cuda:0')), ('khanty', tensor(0., device='cuda:0')), ('-', tensor(0.1314, device='cuda:0')), ('mansi', tensor(0., device='cuda:0')), ('autonomous', tensor(0., device='cuda:0')), ('district', tensor(0., device='cuda:0'))]
idx: 338, example: The Extraordinary General Meeting is expected to take place no later than 18 February 2011 , prediction: 2, correct_label: 2, class_scores: [0.22571641 0.31621596 0.4580677 ], word_scores: ['the:6.3806996877247e-06', 'extraordinary:0.0', 'general:0.0', 'meeting:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'take:2.0325496734585613e-06', 'place:0.0', 'no:0.0', 'later:0.0', 'than:0.0', '18:0.0', 'february:0.0', '2011:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.5647, device='cuda:0')), ('extraordinary', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.2554, device='cuda:0')), ('take', tensor(0.1799, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('later', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5647, device='cuda:0')), ('extraordinary', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.2554, device='cuda:0')), ('take', tensor(0.1799, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('later', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0'))]
idx: 339, example: The agreement is valid for four years , prediction: 1, correct_label: 2, class_scores: [0.29117903 0.35698593 0.35183507], word_scores: ['the:6.3806996877247e-06', 'agreement:0.0', 'is:0.0', 'valid:0.0', 'for:0.0', 'four:3.606506425057887e-06', 'years:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6389, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('valid', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('four', tensor(0.3611, device='cuda:0')), ('years', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6389, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('valid', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('four', tensor(0.3611, device='cuda:0')), ('years', tensor(0., device='cuda:0'))]
idx: 340, example: Tiimari , the Finnish retailer , reported to have geenrated quarterly revenues totalling EUR 1.3 mn in the 4th quarter 2009 , up from EUR 0.3 mn loss in 2008 , prediction: 2, correct_label: 1, class_scores: [0.14193083 0.3338925  0.52417666], word_scores: ['ti:0.0', '##ima:0.0', '##ri:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'retailer:0.0', ',:7.986737728060689e-06', 'reported:0.0', 'to:2.886244146793615e-06', 'have:2.910326429628185e-06', 'gee:0.0', '##nr:0.0', '##ated:0.0', 'quarterly:0.0', 'revenues:0.0', 'total:0.0', '##ling:0.0', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', '4th:0.0', 'quarter:0.0', '2009:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'loss:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tiimari', tensor(0., device='cuda:0')), (',', tensor(0.1323, device='cuda:0')), ('the', tensor(0.1057, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('retailer', tensor(0., device='cuda:0')), (',', tensor(0.1323, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('to', tensor(0.0478, device='cuda:0')), ('have', tensor(0.0482, device='cuda:0')), ('geenrated', tensor(0., device='cuda:0')), ('quarterly', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0')), ('totalling', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0481, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0501, device='cuda:0')), ('the', tensor(0.1057, device='cuda:0')), ('4th', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.1323, device='cuda:0')), ('up', tensor(0.0248, device='cuda:0')), ('from', tensor(0.0745, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0481, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('in', tensor(0.0501, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('tiimari', tensor(0., device='cuda:0')), (',', tensor(0.1323, device='cuda:0')), ('the', tensor(0.1057, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('retailer', tensor(0., device='cuda:0')), (',', tensor(0.1323, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('to', tensor(0.0478, device='cuda:0')), ('have', tensor(0.0482, device='cuda:0')), ('geenrated', tensor(0., device='cuda:0')), ('quarterly', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0')), ('totalling', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0481, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0501, device='cuda:0')), ('the', tensor(0.1057, device='cuda:0')), ('4th', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.1323, device='cuda:0')), ('up', tensor(0.0248, device='cuda:0')), ('from', tensor(0.0745, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0481, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('in', tensor(0.0501, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 341, example: We look forward to take part in the future development of the company , '' says Tomas Billing , President of Nordstjernan , prediction: 2, correct_label: 2, class_scores: [0.13777699 0.41406515 0.44815785], word_scores: ['we:0.0', 'look:0.0', 'forward:0.0', 'to:2.886244146793615e-06', 'take:2.0325496734585613e-06', 'part:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'future:0.0', 'development:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', "':0.0", "':0.0", 'says:0.0', 'tomas:0.0', 'billing:0.0', ',:7.986737728060689e-06', 'president:0.0', 'of:3.4365734791208524e-06', 'nord:0.0', '##st:0.0', '##jer:0.0', '##nan:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.0743, device='cuda:0')), ('take', tensor(0.0524, device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('in', tensor(0.0778, device='cuda:0')), ('the', tensor(0.1644, device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('of', tensor(0.0885, device='cuda:0')), ('the', tensor(0.1644, device='cuda:0')), ('company', tensor(0.1725, device='cuda:0')), (',', tensor(0.2057, device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.0743, device='cuda:0')), ('take', tensor(0.0524, device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('in', tensor(0.0778, device='cuda:0')), ('the', tensor(0.1644, device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('of', tensor(0.0885, device='cuda:0')), ('the', tensor(0.1644, device='cuda:0')), ('company', tensor(0.1725, device='cuda:0')), (',', tensor(0.2057, device='cuda:0'))]
idx: 342, example: Intellisync Wireless Email from Nokia is a full-featured wireless e-mail solution that connects users to their e-mail , calendar , contacts , notes and task lists while away from the office , according to the company , prediction: 1, correct_label: 2, class_scores: [0.24973357 0.4472746  0.30299187], word_scores: ['intel:0.0', '##lis:0.0', '##yn:0.0', '##c:0.0', 'wireless:0.0', 'email:0.0', 'from:4.495178018260049e-06', 'nokia:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'full:3.0938992949813837e-06', '-:4.821180027647642e-06', 'featured:0.0', 'wireless:0.0', 'e:0.0', '-:4.821180027647642e-06', 'mail:0.0', 'solution:0.0', 'that:1.5133816759771435e-06', 'connects:0.0', 'users:0.0', 'to:2.886244146793615e-06', 'their:0.0', 'e:0.0', '-:4.821180027647642e-06', 'mail:0.0', ',:7.986737728060689e-06', 'calendar:0.0', ',:7.986737728060689e-06', 'contacts:0.0', ',:7.986737728060689e-06', 'notes:0.0', 'and:0.0', 'task:0.0', 'lists:0.0', 'while:0.0', 'away:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'office:0.0', ',:7.986737728060689e-06', 'according:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('intellisync', tensor(0., device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('email', tensor(0., device='cuda:0')), ('from', tensor(0.0479, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.0919, device='cuda:0')), ('full', tensor(0.0330, device='cuda:0')), ('-', tensor(0.0514, device='cuda:0')), ('featured', tensor(0., device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.0514, device='cuda:0')), ('mail', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('that', tensor(0.0161, device='cuda:0')), ('connects', tensor(0., device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('to', tensor(0.0307, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.0514, device='cuda:0')), ('mail', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('calendar', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('contacts', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('notes', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('task', tensor(0., device='cuda:0')), ('lists', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('away', tensor(0., device='cuda:0')), ('from', tensor(0.0479, device='cuda:0')), ('the', tensor(0.0680, device='cuda:0')), ('office', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0307, device='cuda:0')), ('the', tensor(0.0680, device='cuda:0')), ('company', tensor(0.0713, device='cuda:0'))],  word_scores_max: [('intellisync', tensor(0., device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('email', tensor(0., device='cuda:0')), ('from', tensor(0.0479, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.0919, device='cuda:0')), ('full', tensor(0.0330, device='cuda:0')), ('-', tensor(0.0514, device='cuda:0')), ('featured', tensor(0., device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.0514, device='cuda:0')), ('mail', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('that', tensor(0.0161, device='cuda:0')), ('connects', tensor(0., device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('to', tensor(0.0307, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.0514, device='cuda:0')), ('mail', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('calendar', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('contacts', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('notes', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('task', tensor(0., device='cuda:0')), ('lists', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('away', tensor(0., device='cuda:0')), ('from', tensor(0.0479, device='cuda:0')), ('the', tensor(0.0680, device='cuda:0')), ('office', tensor(0., device='cuda:0')), (',', tensor(0.0851, device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0307, device='cuda:0')), ('the', tensor(0.0680, device='cuda:0')), ('company', tensor(0.0713, device='cuda:0'))]
idx: 343, example: The company said that the results of the third quarter do not include non-recurring items , prediction: 2, correct_label: 2, class_scores: [0.1985449  0.34935862 0.45209646], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'results:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'do:0.0', 'not:0.0', 'include:0.0', 'non:0.0', '-:4.821180027647642e-06', 'recurring:0.0', 'items:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2073, device='cuda:0')), ('company', tensor(0.2175, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0492, device='cuda:0')), ('the', tensor(0.2073, device='cuda:0')), ('results', tensor(0., device='cuda:0')), ('of', tensor(0.1116, device='cuda:0')), ('the', tensor(0.2073, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2073, device='cuda:0')), ('company', tensor(0.2175, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0492, device='cuda:0')), ('the', tensor(0.2073, device='cuda:0')), ('results', tensor(0., device='cuda:0')), ('of', tensor(0.1116, device='cuda:0')), ('the', tensor(0.2073, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0'))]
idx: 344, example: www.countryelements.co.uk Designed by Patricia Burt , this is just one of a selection of distinctive hooked rugs created with recycled materials and dyed natural dyes , prediction: 2, correct_label: 2, class_scores: [0.22402881 0.33445138 0.44151983], word_scores: ['www:0.0', '.:2.903296945078182e-06', 'country:0.0', '##ele:0.0', '##ments:0.0', '.:2.903296945078182e-06', 'co:0.0', '.:2.903296945078182e-06', 'uk:0.0', 'designed:0.0', 'by:0.0', 'patricia:0.0', 'burt:0.0', ',:7.986737728060689e-06', 'this:0.0', 'is:0.0', 'just:0.0', 'one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'selection:0.0', 'of:3.4365734791208524e-06', 'distinctive:0.0', 'hooked:0.0', 'rug:0.0', '##s:4.601175078278175e-06', 'created:0.0', 'with:4.733654350275174e-06', 'recycled:0.0', 'materials:0.0', 'and:0.0', 'dyed:0.0', 'natural:0.0', 'dye:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('www', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('countryelements', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('designed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('patricia', tensor(0., device='cuda:0')), ('burt', tensor(0., device='cuda:0')), (',', tensor(0.1924, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('one', tensor(0.1104, device='cuda:0')), ('of', tensor(0.0828, device='cuda:0')), ('a', tensor(0.2078, device='cuda:0')), ('selection', tensor(0., device='cuda:0')), ('of', tensor(0.0828, device='cuda:0')), ('distinctive', tensor(0., device='cuda:0')), ('hooked', tensor(0., device='cuda:0')), ('rugs', tensor(0., device='cuda:0')), ('created', tensor(0., device='cuda:0')), ('with', tensor(0.1140, device='cuda:0')), ('recycled', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dyed', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('dyes', tensor(0., device='cuda:0'))],  word_scores_max: [('www', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('countryelements', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('designed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('patricia', tensor(0., device='cuda:0')), ('burt', tensor(0., device='cuda:0')), (',', tensor(0.1924, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('one', tensor(0.1104, device='cuda:0')), ('of', tensor(0.0828, device='cuda:0')), ('a', tensor(0.2078, device='cuda:0')), ('selection', tensor(0., device='cuda:0')), ('of', tensor(0.0828, device='cuda:0')), ('distinctive', tensor(0., device='cuda:0')), ('hooked', tensor(0., device='cuda:0')), ('rugs', tensor(0., device='cuda:0')), ('created', tensor(0., device='cuda:0')), ('with', tensor(0.1140, device='cuda:0')), ('recycled', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dyed', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('dyes', tensor(0., device='cuda:0'))]
idx: 345, example: From 2003 on , the emphasis of Kyro 's strategy has been on Glaston 's growth , prediction: 2, correct_label: 2, class_scores: [0.24599016 0.26277155 0.49123836], word_scores: ['from:4.495178018260049e-06', '2003:0.0', 'on:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'emphasis:0.0', 'of:3.4365734791208524e-06', 'ky:0.0', '##ro:0.0', "':0.0", 's:0.0', 'strategy:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'on:0.0', 'g:0.0', '##las:0.0', '##ton:0.0', "':0.0", 's:0.0', 'growth:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('from', tensor(0.2016, device='cuda:0')), ('2003', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), (',', tensor(0.3582, device='cuda:0')), ('the', tensor(0.2861, device='cuda:0')), ('emphasis', tensor(0., device='cuda:0')), ('of', tensor(0.1541, device='cuda:0'))],  word_scores_max: [('from', tensor(0.2016, device='cuda:0')), ('2003', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), (',', tensor(0.3582, device='cuda:0')), ('the', tensor(0.2861, device='cuda:0')), ('emphasis', tensor(0., device='cuda:0')), ('of', tensor(0.1541, device='cuda:0'))]
idx: 346, example: Finnish component supplier Componenta Corporation OMX Helsinki : CTH1V said on Monday 16 June that it is changing its pricing cycle due to the increase of raw material prices , prediction: 2, correct_label: 2, class_scores: [0.1895332  0.29117072 0.51929605], word_scores: ['finnish:0.0', 'component:0.0', 'supplier:0.0', 'component:0.0', '##a:3.804580501309829e-06', 'corporation:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'ct:0.0', '##h:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'on:0.0', 'monday:0.0', '16:0.0', 'june:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'is:0.0', 'changing:0.0', 'its:1.7191393908433383e-06', 'pricing:0.0', 'cycle:0.0', 'due:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'increase:0.0', 'of:3.4365734791208524e-06', 'raw:0.0', 'material:0.0', 'prices:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('component', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('componenta', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('cth1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('that', tensor(0.0785, device='cuda:0')), ('it', tensor(0.1733, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('changing', tensor(0., device='cuda:0')), ('its', tensor(0.0892, device='cuda:0')), ('pricing', tensor(0., device='cuda:0')), ('cycle', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.1497, device='cuda:0')), ('the', tensor(0.3310, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('of', tensor(0.1783, device='cuda:0')), ('raw', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('component', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('componenta', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('cth1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('that', tensor(0.0785, device='cuda:0')), ('it', tensor(0.1733, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('changing', tensor(0., device='cuda:0')), ('its', tensor(0.0892, device='cuda:0')), ('pricing', tensor(0., device='cuda:0')), ('cycle', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.1497, device='cuda:0')), ('the', tensor(0.3310, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('of', tensor(0.1783, device='cuda:0')), ('raw', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0'))]
idx: 347, example: We make available the following brand-new market analyses : Cement - UK Cement - Poland Cement - Belgium These analyses give a clear overview of the actual situation and future outlook of the cement industry in some European countries , prediction: 2, correct_label: 2, class_scores: [0.22995894 0.38108766 0.38895333], word_scores: ['we:0.0', 'make:0.0', 'available:0.0', 'the:6.3806996877247e-06', 'following:0.0', 'brand:0.0', '-:4.821180027647642e-06', 'new:2.798587502184091e-06', 'market:0.0', 'analyses:0.0', '::0.0', 'cement:0.0', '-:4.821180027647642e-06', 'uk:0.0', 'cement:0.0', '-:4.821180027647642e-06', 'poland:0.0', 'cement:0.0', '-:4.821180027647642e-06', 'belgium:0.0', 'these:0.0', 'analyses:0.0', 'give:0.0', 'a:8.62785782373976e-06', 'clear:0.0', 'overview:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'actual:0.0', 'situation:0.0', 'and:0.0', 'future:0.0', 'outlook:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'cement:0.0', 'industry:0.0', 'in:3.0217122457543155e-06', 'some:0.0', 'european:0.0', 'countries:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('brand', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('new', tensor(0.0468, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('analyses', tensor(0., device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('poland', tensor(0., device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('belgium', tensor(0., device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('analyses', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('a', tensor(0.1444, device='cuda:0')), ('clear', tensor(0., device='cuda:0')), ('overview', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('actual', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('in', tensor(0.0506, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('brand', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('new', tensor(0.0468, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('analyses', tensor(0., device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('poland', tensor(0., device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('belgium', tensor(0., device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('analyses', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('a', tensor(0.1444, device='cuda:0')), ('clear', tensor(0., device='cuda:0')), ('overview', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('actual', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('cement', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('in', tensor(0.0506, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 348, example: HELSINKI ( AFX ) - Metso said it will upgrade one of UPM-Kymmene 's four paper machines at the latter 's mill in Jaemsaenkoski with a new coating color supply system , machine and process controls and quality measurements , prediction: 2, correct_label: 1, class_scores: [0.26592362 0.34644505 0.38763136], word_scores: ['helsinki:0.0', '(:0.0', 'af:0.0', '##x:0.0', '):0.0', '-:4.821180027647642e-06', 'mets:0.0', '##o:0.0', 'said:0.0', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'upgrade:0.0', 'one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', "':0.0", 's:0.0', 'four:3.606506425057887e-06', 'paper:2.697490344871767e-06', 'machines:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'latter:0.0', "':0.0", 's:0.0', 'mill:2.6564571271592285e-06', 'in:3.0217122457543155e-06', 'jae:0.0', '##ms:0.0', '##ae:0.0', '##nko:0.0', '##ski:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'coating:0.0', 'color:0.0', 'supply:6.221108833415201e-06', 'system:2.472523192409426e-06', ',:7.986737728060689e-06', 'machine:0.0', 'and:0.0', 'process:0.0', 'controls:0.0', 'and:0.0', 'quality:0.0', 'measurements:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('helsinki', tensor(0., device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('-', tensor(0.1814, device='cuda:0')), ('metso', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.1257, device='cuda:0')), ('will', tensor(0.1533, device='cuda:0')), ('upgrade', tensor(0., device='cuda:0')), ('one', tensor(0.1725, device='cuda:0')), ('of', tensor(0.1293, device='cuda:0')), ('upm', tensor(0.0563, device='cuda:0')), ('-', tensor(0.1814, device='cuda:0'))],  word_scores_max: [('helsinki', tensor(0., device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('-', tensor(0.1814, device='cuda:0')), ('metso', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.1257, device='cuda:0')), ('will', tensor(0.1533, device='cuda:0')), ('upgrade', tensor(0., device='cuda:0')), ('one', tensor(0.1725, device='cuda:0')), ('of', tensor(0.1293, device='cuda:0')), ('upm', tensor(0.0563, device='cuda:0')), ('-', tensor(0.1814, device='cuda:0'))]
idx: 349, example: The company 's operating income ( EBIT ) totalled EUR 0.0 mn , up from EUR -0.3 mn year-on-year , prediction: 2, correct_label: 1, class_scores: [0.17620355 0.3065113  0.51728517], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'operating:0.0', 'income:0.0', '(:0.0', 'e:0.0', '##bit:0.0', '):0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '-:4.821180027647642e-06', '0:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'year:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 350, example: The increase range will vary up to 10 % , prediction: 2, correct_label: 2, class_scores: [0.24566792 0.27129835 0.48303378], word_scores: ['the:6.3806996877247e-06', 'increase:0.0', 'range:0.0', 'will:4.073096533829812e-06', 'vary:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '10:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4301, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('will', tensor(0.2745, device='cuda:0')), ('vary', tensor(0., device='cuda:0')), ('up', tensor(0.1008, device='cuda:0')), ('to', tensor(0.1945, device='cuda:0')), ('10', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4301, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('will', tensor(0.2745, device='cuda:0')), ('vary', tensor(0., device='cuda:0')), ('up', tensor(0.1008, device='cuda:0')), ('to', tensor(0.1945, device='cuda:0')), ('10', tensor(0., device='cuda:0'))]
idx: 351, example: It moved into the No. 2 spot in 2000 when it merged steel operations with Avesta Sheffield to form AvestaPolarit , prediction: 2, correct_label: 2, class_scores: [0.2580486  0.29450583 0.4474456 ], word_scores: ['it:3.3415778943890473e-06', 'moved:0.0', 'into:0.0', 'the:6.3806996877247e-06', 'no:0.0', '.:2.903296945078182e-06', '2:0.0', 'spot:0.0', 'in:3.0217122457543155e-06', '2000:0.0', 'when:0.0', 'it:3.3415778943890473e-06', 'merged:0.0', 'steel:0.0', 'operations:0.0', 'with:4.733654350275174e-06', 'ave:0.0', '##sta:0.0', 'sheffield:0.0', 'to:2.886244146793615e-06', 'form:0.0', 'ave:0.0', '##sta:0.0', '##pol:0.0', '##ari:0.0', '##t:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.1256, device='cuda:0')), ('moved', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.2398, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('.', tensor(0.1091, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('spot', tensor(0., device='cuda:0')), ('in', tensor(0.1136, device='cuda:0')), ('2000', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('it', tensor(0.1256, device='cuda:0')), ('merged', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('with', tensor(0.1779, device='cuda:0')), ('avesta', tensor(0., device='cuda:0')), ('sheffield', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('avestapolarit', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.1256, device='cuda:0')), ('moved', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.2398, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('.', tensor(0.1091, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('spot', tensor(0., device='cuda:0')), ('in', tensor(0.1136, device='cuda:0')), ('2000', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('it', tensor(0.1256, device='cuda:0')), ('merged', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('with', tensor(0.1779, device='cuda:0')), ('avesta', tensor(0., device='cuda:0')), ('sheffield', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('avestapolarit', tensor(0., device='cuda:0'))]
idx: 352, example: A tinyurl link takes users to a scamming site promising that users can earn thousands of dollars by becoming a Google ( NASDAQ : GOOG ) Cash advertiser , prediction: 2, correct_label: 0, class_scores: [0.2789356  0.25688022 0.46418422], word_scores: ['a:8.62785782373976e-06', 'tiny:0.0', '##ur:0.0', '##l:0.0', 'link:0.0', 'takes:0.0', 'users:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'sc:1.3329485000213026e-06', '##am:0.0', '##ming:0.0', 'site:0.0', 'promising:0.0', 'that:1.5133816759771435e-06', 'users:0.0', 'can:0.0', 'earn:0.0', 'thousands:0.0', 'of:3.4365734791208524e-06', 'dollars:0.0', 'by:0.0', 'becoming:0.0', 'a:8.62785782373976e-06', 'google:0.0', '(:0.0', 'nas:0.0', '##da:0.0', '##q:0.0', '::0.0', 'goo:0.0', '##g:0.0', '):0.0', 'cash:0.0', 'ad:0.0', '##vert:0.0', '##iser:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.2461, device='cuda:0')), ('tinyurl', tensor(0., device='cuda:0')), ('link', tensor(0., device='cuda:0')), ('takes', tensor(0., device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('to', tensor(0.0823, device='cuda:0')), ('a', tensor(0.2461, device='cuda:0')), ('scamming', tensor(0.0380, device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('promising', tensor(0., device='cuda:0')), ('that', tensor(0.0432, device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('earn', tensor(0., device='cuda:0')), ('thousands', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('becoming', tensor(0., device='cuda:0')), ('a', tensor(0.2461, device='cuda:0')), ('google', tensor(0., device='cuda:0')), ('nasdaq', tensor(0., device='cuda:0')), ('goog', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('advertiser', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.2461, device='cuda:0')), ('tinyurl', tensor(0., device='cuda:0')), ('link', tensor(0., device='cuda:0')), ('takes', tensor(0., device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('to', tensor(0.0823, device='cuda:0')), ('a', tensor(0.2461, device='cuda:0')), ('scamming', tensor(0.0380, device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('promising', tensor(0., device='cuda:0')), ('that', tensor(0.0432, device='cuda:0')), ('users', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('earn', tensor(0., device='cuda:0')), ('thousands', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('becoming', tensor(0., device='cuda:0')), ('a', tensor(0.2461, device='cuda:0')), ('google', tensor(0., device='cuda:0')), ('nasdaq', tensor(0., device='cuda:0')), ('goog', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('advertiser', tensor(0., device='cuda:0'))]
idx: 353, example: The maximum number of new shares to be offered is 22 million , prediction: 2, correct_label: 2, class_scores: [0.20181671 0.332202   0.46598133], word_scores: ['the:6.3806996877247e-06', 'maximum:0.0', 'number:0.0', 'of:3.4365734791208524e-06', 'new:2.798587502184091e-06', 'shares:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'offered:0.0', 'is:0.0', '22:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2965, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.1597, device='cuda:0')), ('new', tensor(0.1300, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('to', tensor(0.1341, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('offered', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('million', tensor(0.2797, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2965, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.1597, device='cuda:0')), ('new', tensor(0.1300, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('to', tensor(0.1341, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('offered', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('million', tensor(0.2797, device='cuda:0'))]
idx: 354, example: Raute posted a net profit of 1.8 mln euro $ 2.6 mln for the third quarter of 2007 , compared to a net loss of 299,000 euro $ 430,000 for the corresponding period of 2006 , prediction: 2, correct_label: 1, class_scores: [0.12759404 0.3490532  0.52335274], word_scores: ['ra:0.0', '##ute:0.0', 'posted:0.0', 'a:8.62785782373976e-06', 'net:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', '1:0.0', '.:2.903296945078182e-06', '8:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '6:0.0', 'ml:0.0', '##n:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'net:0.0', 'loss:0.0', 'of:3.4365734791208524e-06', '299:0.0', ',:7.986737728060689e-06', '000:0.0', 'euro:0.0', '$:0.0', '430:0.0', ',:7.986737728060689e-06', '000:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'of:3.4365734791208524e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('raute', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1129, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0380, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0380, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0835, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1045, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0378, device='cuda:0')), ('a', tensor(0.1129, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('299', tensor(0., device='cuda:0')), (',', tensor(0.1045, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('430', tensor(0., device='cuda:0')), (',', tensor(0.1045, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0835, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('raute', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1129, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0380, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0380, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0835, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1045, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0378, device='cuda:0')), ('a', tensor(0.1129, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('299', tensor(0., device='cuda:0')), (',', tensor(0.1045, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('430', tensor(0., device='cuda:0')), (',', tensor(0.1045, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0835, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0450, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 355, example: Finnish W+�rtsil+� that provides power solutions for the marine and energy markets has opened a Service Centre in Murmansk , in Russia , prediction: 2, correct_label: 2, class_scores: [0.25454056 0.36639366 0.37906572], word_scores: ['finnish:0.0', 'w:0.0', '+:0.0', 'rt:0.0', '##sil:0.0', '+:0.0', 'that:1.5133816759771435e-06', 'provides:0.0', 'power:0.0', 'solutions:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'marine:0.0', 'and:0.0', 'energy:0.0', 'markets:0.0', 'has:5.9214244174654596e-06', 'opened:0.0', 'a:8.62785782373976e-06', 'service:0.0', 'centre:0.0', 'in:3.0217122457543155e-06', 'mu:0.0', '##rman:0.0', '##sk:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'russia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('rtsil', tensor(0., device='cuda:0')), ('that', tensor(0.0415, device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1749, device='cuda:0')), ('marine', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('has', tensor(0.1623, device='cuda:0')), ('opened', tensor(0., device='cuda:0')), ('a', tensor(0.2366, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('centre', tensor(0., device='cuda:0')), ('in', tensor(0.0828, device='cuda:0')), ('murmansk', tensor(0., device='cuda:0')), (',', tensor(0.2190, device='cuda:0')), ('in', tensor(0.0828, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('rtsil', tensor(0., device='cuda:0')), ('that', tensor(0.0415, device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1749, device='cuda:0')), ('marine', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('has', tensor(0.1623, device='cuda:0')), ('opened', tensor(0., device='cuda:0')), ('a', tensor(0.2366, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('centre', tensor(0., device='cuda:0')), ('in', tensor(0.0828, device='cuda:0')), ('murmansk', tensor(0., device='cuda:0')), (',', tensor(0.2190, device='cuda:0')), ('in', tensor(0.0828, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 356, example: The carrier said its Area travel agency is to sell most of its outlets to sister chain Suomen Matkatoimisto (SMT)and use its remaining bricks-and-mortar presence to primarily target business customers going forward , prediction: 2, correct_label: 2, class_scores: [0.28288445 0.27568617 0.4414293 ], word_scores: ['the:6.3806996877247e-06', 'carrier:0.0', 'said:0.0', 'its:1.7191393908433383e-06', 'area:0.0', 'travel:0.0', 'agency:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'most:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'outlets:0.0', 'to:2.886244146793615e-06', 'sister:0.0', 'chain:0.0', 'su:0.0', '##ome:0.0', '##n:0.0', 'mat:0.0', '##kato:0.0', '##imi:0.0', '##sto:0.0', '(:0.0', 'sm:0.0', '##t:0.0', '):0.0', 'and:0.0', 'use:0.0', 'its:1.7191393908433383e-06', 'remaining:0.0', 'bricks:0.0', '-:4.821180027647642e-06', 'and:0.0', '-:4.821180027647642e-06', 'mortar:0.0', 'presence:0.0', 'to:2.886244146793615e-06', 'primarily:0.0', 'target:0.0', 'business:0.0', 'customers:0.0', 'going:0.0', 'forward:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1918, device='cuda:0')), ('carrier', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('agency', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0867, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('of', tensor(0.1033, device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('outlets', tensor(0., device='cuda:0')), ('to', tensor(0.0867, device='cuda:0')), ('sister', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('suomen', tensor(0., device='cuda:0')), ('matkatoimisto', tensor(0., device='cuda:0')), ('smt', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('bricks', tensor(0., device='cuda:0')), ('-', tensor(0.1449, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('-', tensor(0.1449, device='cuda:0')), ('mortar', tensor(0., device='cuda:0')), ('presence', tensor(0., device='cuda:0')), ('to', tensor(0.0867, device='cuda:0')), ('primarily', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1918, device='cuda:0')), ('carrier', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('agency', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0867, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('of', tensor(0.1033, device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('outlets', tensor(0., device='cuda:0')), ('to', tensor(0.0867, device='cuda:0')), ('sister', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('suomen', tensor(0., device='cuda:0')), ('matkatoimisto', tensor(0., device='cuda:0')), ('smt', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('its', tensor(0.0517, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('bricks', tensor(0., device='cuda:0')), ('-', tensor(0.1449, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('-', tensor(0.1449, device='cuda:0')), ('mortar', tensor(0., device='cuda:0')), ('presence', tensor(0., device='cuda:0')), ('to', tensor(0.0867, device='cuda:0')), ('primarily', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0'))]
idx: 357, example: It delivers a different user experience and enables us to widen the market we can address . ', prediction: 2, correct_label: 1, class_scores: [0.20131174 0.28716794 0.5115203 ], word_scores: ['it:3.3415778943890473e-06', 'delivers:0.0', 'a:8.62785782373976e-06', 'different:0.0', 'user:0.0', 'experience:0.0', 'and:0.0', 'enables:0.0', 'us:0.0', 'to:2.886244146793615e-06', 'widen:0.0', 'the:6.3806996877247e-06', 'market:0.0', 'we:0.0', 'can:0.0', 'address:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('it', tensor(0.1384, device='cuda:0')), ('delivers', tensor(0., device='cuda:0')), ('a', tensor(0.3574, device='cuda:0')), ('different', tensor(0., device='cuda:0')), ('user', tensor(0., device='cuda:0')), ('experience', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('to', tensor(0.1196, device='cuda:0')), ('widen', tensor(0., device='cuda:0')), ('the', tensor(0.2643, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('address', tensor(0., device='cuda:0')), ('.', tensor(0.1203, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.1384, device='cuda:0')), ('delivers', tensor(0., device='cuda:0')), ('a', tensor(0.3574, device='cuda:0')), ('different', tensor(0., device='cuda:0')), ('user', tensor(0., device='cuda:0')), ('experience', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('enables', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('to', tensor(0.1196, device='cuda:0')), ('widen', tensor(0., device='cuda:0')), ('the', tensor(0.2643, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('address', tensor(0., device='cuda:0')), ('.', tensor(0.1203, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 358, example: `` They 've already allocated money for the inventory , prediction: 1, correct_label: 2, class_scores: [0.17188986 0.5267155  0.3013947 ], word_scores: ['`:0.0', '`:0.0', 'they:0.0', "':0.0", 've:0.0', 'already:0.0', 'allocated:0.0', 'money:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'inventory:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 359, example: Alfa group will have 43.9 % of voting stock in the new company and Telenor 35.4 % with a free float of 20.7 % , prediction: 2, correct_label: 2, class_scores: [0.18946369 0.32898766 0.48154876], word_scores: ['alfa:0.0', 'group:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', '43:0.0', '.:2.903296945078182e-06', '9:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'voting:0.0', 'stock:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'company:6.695386673527537e-06', 'and:0.0', 'tel:0.0', '##eno:0.0', '##r:0.0', '35:0.0', '.:2.903296945078182e-06', '4:0.0', '%:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'free:0.0', 'float:0.0', 'of:3.4365734791208524e-06', '20:0.0', '.:2.903296945078182e-06', '7:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('alfa', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('will', tensor(0.0743, device='cuda:0')), ('have', tensor(0.0531, device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('of', tensor(0.0627, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('in', tensor(0.0551, device='cuda:0')), ('the', tensor(0.1164, device='cuda:0')), ('new', tensor(0.0510, device='cuda:0')), ('company', tensor(0.1221, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('telenor', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('with', tensor(0.0863, device='cuda:0')), ('a', tensor(0.1574, device='cuda:0')), ('free', tensor(0., device='cuda:0')), ('float', tensor(0., device='cuda:0')), ('of', tensor(0.0627, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('7', tensor(0., device='cuda:0'))],  word_scores_max: [('alfa', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('will', tensor(0.0743, device='cuda:0')), ('have', tensor(0.0531, device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('of', tensor(0.0627, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('in', tensor(0.0551, device='cuda:0')), ('the', tensor(0.1164, device='cuda:0')), ('new', tensor(0.0510, device='cuda:0')), ('company', tensor(0.1221, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('telenor', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('with', tensor(0.0863, device='cuda:0')), ('a', tensor(0.1574, device='cuda:0')), ('free', tensor(0., device='cuda:0')), ('float', tensor(0., device='cuda:0')), ('of', tensor(0.0627, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('7', tensor(0., device='cuda:0'))]
idx: 360, example: As a result , it has started negotiations with the banks on provisional amendments concerning the covenants and other credit terms , prediction: 2, correct_label: 2, class_scores: [0.2094155  0.30008864 0.4904959 ], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'result:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'started:0.0', 'negotiations:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'banks:0.0', 'on:0.0', 'provisional:0.0', 'amendments:0.0', 'concerning:0.0', 'the:6.3806996877247e-06', 'covenant:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'other:0.0', 'credit:0.0', 'terms:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.1989, device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('it', tensor(0.0770, device='cuda:0')), ('has', tensor(0.1365, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('with', tensor(0.1091, device='cuda:0')), ('the', tensor(0.1471, device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('provisional', tensor(0., device='cuda:0')), ('amendments', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('the', tensor(0.1471, device='cuda:0')), ('covenants', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('terms', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.1989, device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1841, device='cuda:0')), ('it', tensor(0.0770, device='cuda:0')), ('has', tensor(0.1365, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('with', tensor(0.1091, device='cuda:0')), ('the', tensor(0.1471, device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('provisional', tensor(0., device='cuda:0')), ('amendments', tensor(0., device='cuda:0')), ('concerning', tensor(0., device='cuda:0')), ('the', tensor(0.1471, device='cuda:0')), ('covenants', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('terms', tensor(0., device='cuda:0'))]
idx: 361, example: Russian export duties will activate harvesting in Finland , and sales in Russia will increase also , prediction: 2, correct_label: 1, class_scores: [0.19319423 0.33103317 0.47577262], word_scores: ['russian:0.0', 'export:0.0', 'duties:0.0', 'will:4.073096533829812e-06', 'activate:0.0', 'harvesting:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'and:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', 'will:4.073096533829812e-06', 'increase:0.0', 'also:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('russian', tensor(0., device='cuda:0')), ('export', tensor(0., device='cuda:0')), ('duties', tensor(0., device='cuda:0')), ('will', tensor(0.1550, device='cuda:0')), ('activate', tensor(0., device='cuda:0')), ('harvesting', tensor(0., device='cuda:0')), ('in', tensor(0.1150, device='cuda:0')), ('finland', tensor(0.1559, device='cuda:0')), (',', tensor(0.3040, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1150, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('will', tensor(0.1550, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0'))],  word_scores_max: [('russian', tensor(0., device='cuda:0')), ('export', tensor(0., device='cuda:0')), ('duties', tensor(0., device='cuda:0')), ('will', tensor(0.1550, device='cuda:0')), ('activate', tensor(0., device='cuda:0')), ('harvesting', tensor(0., device='cuda:0')), ('in', tensor(0.1150, device='cuda:0')), ('finland', tensor(0.1559, device='cuda:0')), (',', tensor(0.3040, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1150, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('will', tensor(0.1550, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0'))]
idx: 362, example: Finnish and Swedish construction markets are still experiencing an estimated 4 % annual growth in 2008 , prediction: 2, correct_label: 1, class_scores: [0.19373026 0.39033616 0.41593355], word_scores: ['finnish:0.0', 'and:0.0', 'swedish:0.0', 'construction:0.0', 'markets:0.0', 'are:0.0', 'still:0.0', 'experiencing:0.0', 'an:0.0', 'estimated:0.0', '4:0.0', '%:0.0', 'annual:0.0', 'growth:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('experiencing', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('experiencing', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 363, example: The group 's 12-month operating profit grew 31 percent to 337.8 million euros , prediction: 1, correct_label: 1, class_scores: [0.19033267 0.42117202 0.38849536], word_scores: ['the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', '12:0.0', '-:4.821180027647642e-06', 'month:0.0', 'operating:0.0', 'profit:0.0', 'grew:0.0', '31:0.0', 'percent:0.0', 'to:2.886244146793615e-06', '337:0.0', '.:2.903296945078182e-06', '8:0.0', 'million:6.018835847498849e-06', 'euros:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 364, example: The contract incorporates a Convergent Charging rating solution for voice and data , which includes Internet , GPRS , SMS , MMS and WAP , prediction: 2, correct_label: 2, class_scores: [0.17764652 0.38787043 0.43448302], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'incorporates:0.0', 'a:8.62785782373976e-06', 'converge:0.0', '##nt:0.0', 'charging:0.0', 'rating:0.0', 'solution:0.0', 'for:0.0', 'voice:0.0', 'and:0.0', 'data:0.0', ',:7.986737728060689e-06', 'which:0.0', 'includes:0.0', 'internet:0.0', ',:7.986737728060689e-06', 'gp:0.0', '##rs:0.0', ',:7.986737728060689e-06', 'sms:0.0', ',:7.986737728060689e-06', 'mm:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'wa:0.0', '##p:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1179, device='cuda:0')), ('contract', tensor(0.1327, device='cuda:0')), ('incorporates', tensor(0., device='cuda:0')), ('a', tensor(0.1594, device='cuda:0')), ('convergent', tensor(0., device='cuda:0')), ('charging', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('internet', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('gprs', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('sms', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('mms', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('wap', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1179, device='cuda:0')), ('contract', tensor(0.1327, device='cuda:0')), ('incorporates', tensor(0., device='cuda:0')), ('a', tensor(0.1594, device='cuda:0')), ('convergent', tensor(0., device='cuda:0')), ('charging', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('internet', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('gprs', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('sms', tensor(0., device='cuda:0')), (',', tensor(0.1475, device='cuda:0')), ('mms', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('wap', tensor(0., device='cuda:0'))]
idx: 365, example: The commission said the hydrogen peroxide and PBS market was worth about 470 million euros in 2000 , prediction: 2, correct_label: 2, class_scores: [0.2426177  0.35424703 0.40313527], word_scores: ['the:6.3806996877247e-06', 'commission:0.0', 'said:0.0', 'the:6.3806996877247e-06', 'hydrogen:0.0', 'per:0.0', '##oxide:0.0', 'and:0.0', 'pbs:0.0', 'market:0.0', 'was:0.0', 'worth:0.0', 'about:0.0', '470:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'in:3.0217122457543155e-06', '2000:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2927, device='cuda:0')), ('commission', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('the', tensor(0.2927, device='cuda:0')), ('hydrogen', tensor(0., device='cuda:0')), ('peroxide', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pbs', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('470', tensor(0., device='cuda:0')), ('million', tensor(0.2761, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.1386, device='cuda:0')), ('2000', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2927, device='cuda:0')), ('commission', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('the', tensor(0.2927, device='cuda:0')), ('hydrogen', tensor(0., device='cuda:0')), ('peroxide', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pbs', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('470', tensor(0., device='cuda:0')), ('million', tensor(0.2761, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.1386, device='cuda:0')), ('2000', tensor(0., device='cuda:0'))]
idx: 366, example: In connection with the deal , Digia will employ 19 persons from Nokia in Oslo and in Silicon Valley in the USA , prediction: 2, correct_label: 2, class_scores: [0.20519052 0.35988793 0.43492156], word_scores: ['in:3.0217122457543155e-06', 'connection:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'deal:0.0', ',:7.986737728060689e-06', 'dig:0.0', '##ia:0.0', 'will:4.073096533829812e-06', 'employ:0.0', '19:0.0', 'persons:0.0', 'from:4.495178018260049e-06', 'nokia:0.0', 'in:3.0217122457543155e-06', 'oslo:0.0', 'and:0.0', 'in:3.0217122457543155e-06', 'silicon:0.0', 'valley:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'usa:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0655, device='cuda:0')), ('connection', tensor(0., device='cuda:0')), ('with', tensor(0.1026, device='cuda:0')), ('the', tensor(0.1383, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), (',', tensor(0.1731, device='cuda:0')), ('digia', tensor(0., device='cuda:0')), ('will', tensor(0.0883, device='cuda:0')), ('employ', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('persons', tensor(0., device='cuda:0')), ('from', tensor(0.0974, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('in', tensor(0.0655, device='cuda:0')), ('oslo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.0655, device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('valley', tensor(0., device='cuda:0')), ('in', tensor(0.0655, device='cuda:0')), ('the', tensor(0.1383, device='cuda:0')), ('usa', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0655, device='cuda:0')), ('connection', tensor(0., device='cuda:0')), ('with', tensor(0.1026, device='cuda:0')), ('the', tensor(0.1383, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), (',', tensor(0.1731, device='cuda:0')), ('digia', tensor(0., device='cuda:0')), ('will', tensor(0.0883, device='cuda:0')), ('employ', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('persons', tensor(0., device='cuda:0')), ('from', tensor(0.0974, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('in', tensor(0.0655, device='cuda:0')), ('oslo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.0655, device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('valley', tensor(0., device='cuda:0')), ('in', tensor(0.0655, device='cuda:0')), ('the', tensor(0.1383, device='cuda:0')), ('usa', tensor(0., device='cuda:0'))]
idx: 367, example: Salcomp 's charger manufacturing plant in India is located in the Nokia Telecom Park in the state of Tamil Nadu , in the eastern part of India , prediction: 1, correct_label: 2, class_scores: [0.24551813 0.3997637  0.35471812], word_scores: ['sal:0.0', '##com:0.0', '##p:0.0', "':0.0", 's:0.0', 'charge:0.0', '##r:0.0', 'manufacturing:0.0', 'plant:0.0', 'in:3.0217122457543155e-06', 'india:0.0', 'is:0.0', 'located:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'nokia:0.0', 'telecom:0.0', 'park:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'state:0.0', 'of:3.4365734791208524e-06', 'tamil:0.0', 'nadu:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'eastern:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'india:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 368, example: Other details were not provided , prediction: 2, correct_label: 2, class_scores: [0.15953979 0.38010114 0.4603591 ], word_scores: ['other:0.0', 'details:0.0', 'were:0.0', 'not:0.0', 'provided:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('other', tensor(nan, device='cuda:0')), ('details', tensor(nan, device='cuda:0')), ('were', tensor(nan, device='cuda:0')), ('not', tensor(nan, device='cuda:0')), ('provided', tensor(nan, device='cuda:0'))],  word_scores_max: [('other', tensor(nan, device='cuda:0')), ('details', tensor(nan, device='cuda:0')), ('were', tensor(nan, device='cuda:0')), ('not', tensor(nan, device='cuda:0')), ('provided', tensor(nan, device='cuda:0'))]
idx: 369, example: The scope of the project is to find the most cost-efficient method for phosphorous removal and to deliver the storing and dosing equipment , which can be used in continuous operation at the plants , prediction: 2, correct_label: 2, class_scores: [0.23794511 0.32685924 0.43519562], word_scores: ['the:6.3806996877247e-06', 'scope:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'project:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'find:0.0', 'the:6.3806996877247e-06', 'most:0.0', 'cost:0.0', '-:4.821180027647642e-06', 'efficient:0.0', 'method:2.380315208938555e-06', 'for:0.0', 'ph:0.0', '##os:0.0', '##ph:0.0', '##orous:0.0', 'removal:0.0', 'and:0.0', 'to:2.886244146793615e-06', 'deliver:0.0', 'the:6.3806996877247e-06', 'storing:0.0', 'and:0.0', 'dos:0.0', '##ing:0.0', 'equipment:0.0', ',:7.986737728060689e-06', 'which:0.0', 'can:0.0', 'be:0.0', 'used:0.0', 'in:3.0217122457543155e-06', 'continuous:0.0', 'operation:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'plants:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1076, device='cuda:0')), ('scope', tensor(0., device='cuda:0')), ('of', tensor(0.0579, device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0487, device='cuda:0')), ('find', tensor(0., device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('-', tensor(0.0813, device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('method', tensor(0.0401, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('phosphorous', tensor(0., device='cuda:0')), ('removal', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0487, device='cuda:0')), ('deliver', tensor(0., device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('storing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dosing', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('continuous', tensor(0., device='cuda:0')), ('operation', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('plants', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1076, device='cuda:0')), ('scope', tensor(0., device='cuda:0')), ('of', tensor(0.0579, device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0487, device='cuda:0')), ('find', tensor(0., device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('-', tensor(0.0813, device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('method', tensor(0.0401, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('phosphorous', tensor(0., device='cuda:0')), ('removal', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0487, device='cuda:0')), ('deliver', tensor(0., device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('storing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dosing', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('continuous', tensor(0., device='cuda:0')), ('operation', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1076, device='cuda:0')), ('plants', tensor(0., device='cuda:0'))]
idx: 370, example: Exel wants to serve its industrial customers with individual products , prediction: 2, correct_label: 2, class_scores: [0.24355133 0.28151748 0.47493118], word_scores: ['ex:0.0', '##el:0.0', 'wants:0.0', 'to:2.886244146793615e-06', 'serve:0.0', 'its:1.7191393908433383e-06', 'industrial:0.0', 'customers:0.0', 'with:4.733654350275174e-06', 'individual:0.0', 'products:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('exel', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('to', tensor(0.3091, device='cuda:0')), ('serve', tensor(0., device='cuda:0')), ('its', tensor(0.1841, device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('with', tensor(0.5069, device='cuda:0')), ('individual', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))],  word_scores_max: [('exel', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('to', tensor(0.3091, device='cuda:0')), ('serve', tensor(0., device='cuda:0')), ('its', tensor(0.1841, device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('with', tensor(0.5069, device='cuda:0')), ('individual', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))]
idx: 371, example: The mall will be financed on a parity basis by Pearl Plaza LLC , the joint venture company established by the Chinese investor Shanghai Industrial Investment Holdings Co Ltd , and SRV Group , prediction: 2, correct_label: 2, class_scores: [0.241552   0.31344026 0.4450077 ], word_scores: ['the:6.3806996877247e-06', 'mall:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'financed:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'par:0.0', '##ity:0.0', 'basis:0.0', 'by:0.0', 'pearl:0.0', 'plaza:0.0', 'llc:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'joint:0.0', 'venture:0.0', 'company:6.695386673527537e-06', 'established:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'chinese:0.0', 'investor:0.0', 'shanghai:0.0', 'industrial:0.0', 'investment:0.0', 'holdings:0.0', 'co:0.0', 'ltd:0.0', ',:7.986737728060689e-06', 'and:0.0', 'sr:0.0', '##v:0.0', 'group:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1171, device='cuda:0')), ('mall', tensor(0., device='cuda:0')), ('will', tensor(0.0747, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('financed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.1583, device='cuda:0')), ('parity', tensor(0., device='cuda:0')), ('basis', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('pearl', tensor(0., device='cuda:0')), ('plaza', tensor(0., device='cuda:0')), ('llc', tensor(0., device='cuda:0')), (',', tensor(0.1465, device='cuda:0')), ('the', tensor(0.1171, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.1228, device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1171, device='cuda:0')), ('chinese', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('shanghai', tensor(0., device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('holdings', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1465, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('srv', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1171, device='cuda:0')), ('mall', tensor(0., device='cuda:0')), ('will', tensor(0.0747, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('financed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.1583, device='cuda:0')), ('parity', tensor(0., device='cuda:0')), ('basis', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('pearl', tensor(0., device='cuda:0')), ('plaza', tensor(0., device='cuda:0')), ('llc', tensor(0., device='cuda:0')), (',', tensor(0.1465, device='cuda:0')), ('the', tensor(0.1171, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.1228, device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1171, device='cuda:0')), ('chinese', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('shanghai', tensor(0., device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('holdings', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1465, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('srv', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))]
idx: 372, example: The company anticipates its turnover for the whole 2010 to surpass that of the previous year when it was EUR 67.1 million , prediction: 1, correct_label: 1, class_scores: [0.163263   0.43945044 0.3972866 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'anti:0.0', '##ci:0.0', '##pate:0.0', '##s:4.601175078278175e-06', 'its:1.7191393908433383e-06', 'turnover:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'whole:0.0', '2010:0.0', 'to:2.886244146793615e-06', 'sur:0.0', '##pass:0.0', 'that:1.5133816759771435e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'previous:0.0', 'year:0.0', 'when:0.0', 'it:3.3415778943890473e-06', 'was:0.0', 'eu:0.0', '##r:0.0', '67:0.0', '.:2.903296945078182e-06', '1:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1339, device='cuda:0')), ('company', tensor(0.1405, device='cuda:0')), ('anticipates', tensor(0., device='cuda:0')), ('its', tensor(0.0361, device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1339, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('to', tensor(0.0606, device='cuda:0')), ('surpass', tensor(0., device='cuda:0')), ('that', tensor(0.0318, device='cuda:0')), ('of', tensor(0.0721, device='cuda:0')), ('the', tensor(0.1339, device='cuda:0')), ('previous', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('it', tensor(0.0701, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('67', tensor(0., device='cuda:0')), ('.', tensor(0.0609, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.1263, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1339, device='cuda:0')), ('company', tensor(0.1405, device='cuda:0')), ('anticipates', tensor(0., device='cuda:0')), ('its', tensor(0.0361, device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1339, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('to', tensor(0.0606, device='cuda:0')), ('surpass', tensor(0., device='cuda:0')), ('that', tensor(0.0318, device='cuda:0')), ('of', tensor(0.0721, device='cuda:0')), ('the', tensor(0.1339, device='cuda:0')), ('previous', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('it', tensor(0.0701, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('67', tensor(0., device='cuda:0')), ('.', tensor(0.0609, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('million', tensor(0.1263, device='cuda:0'))]
idx: 373, example: Last year , Lemminkainen completed the Kouvola K-supermarket contract , prediction: 2, correct_label: 1, class_scores: [0.28660673 0.3438005  0.36959273], word_scores: ['last:0.0', 'year:0.0', ',:7.986737728060689e-06', 'le:0.0', '##mm:0.0', '##ink:0.0', '##aine:0.0', '##n:0.0', 'completed:0.0', 'the:6.3806996877247e-06', 'ko:5.9404255807748996e-06', '##u:0.0', '##vo:0.0', '##la:0.0', 'k:0.0', '-:4.821180027647642e-06', 'supermarket:0.0', 'contract:7.1864019446366e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.2471, device='cuda:0')), ('lemminkainen', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('the', tensor(0.1975, device='cuda:0')), ('kouvola', tensor(0.1838, device='cuda:0')), ('k', tensor(0., device='cuda:0')), ('-', tensor(0.1492, device='cuda:0')), ('supermarket', tensor(0., device='cuda:0')), ('contract', tensor(0.2224, device='cuda:0'))],  word_scores_max: [('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.2471, device='cuda:0')), ('lemminkainen', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('the', tensor(0.1975, device='cuda:0')), ('kouvola', tensor(0.1838, device='cuda:0')), ('k', tensor(0., device='cuda:0')), ('-', tensor(0.1492, device='cuda:0')), ('supermarket', tensor(0., device='cuda:0')), ('contract', tensor(0.2224, device='cuda:0'))]
idx: 374, example: The negotiations concern 246 salaried and senior salaried employees and are scheduled to be completed in six weeks , prediction: 1, correct_label: 2, class_scores: [0.27440238 0.364235   0.36136258], word_scores: ['the:6.3806996877247e-06', 'negotiations:0.0', 'concern:0.0', '246:0.0', 'sal:0.0', '##ari:0.0', '##ed:0.0', 'and:0.0', 'senior:0.0', 'sal:0.0', '##ari:0.0', '##ed:0.0', 'employees:0.0', 'and:0.0', 'are:0.0', 'scheduled:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'completed:0.0', 'in:3.0217122457543155e-06', 'six:0.0', 'weeks:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.5192, device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('concern', tensor(0., device='cuda:0')), ('246', tensor(0., device='cuda:0')), ('salaried', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('senior', tensor(0., device='cuda:0')), ('salaried', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.2349, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.2459, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5192, device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('concern', tensor(0., device='cuda:0')), ('246', tensor(0., device='cuda:0')), ('salaried', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('senior', tensor(0., device='cuda:0')), ('salaried', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.2349, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.2459, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0'))]
idx: 375, example: Active shipping is essential for Finland , prediction: 2, correct_label: 2, class_scores: [0.20967023 0.382226   0.40810376], word_scores: ['active:0.0', 'shipping:0.0', 'is:0.0', 'essential:0.0', 'for:0.0', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('active', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('essential', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('finland', tensor(1., device='cuda:0'))],  word_scores_max: [('active', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('essential', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('finland', tensor(1., device='cuda:0'))]
idx: 376, example: The Group 's revenue in 2008 amounted to EUR 94 million and the company currently employs approximately 730 people , prediction: 2, correct_label: 2, class_scores: [0.15655504 0.41902754 0.42441738], word_scores: ['the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'revenue:0.0', 'in:3.0217122457543155e-06', '2008:0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '94:0.0', 'million:6.018835847498849e-06', 'and:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'currently:0.0', 'employs:0.0', 'approximately:0.0', '730:0.0', 'people:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 377, example: Nordea will coordinate the syndicated loan , prediction: 1, correct_label: 2, class_scores: [0.22116572 0.39073703 0.3880973 ], word_scores: ['nord:0.0', '##ea:0.0', 'will:4.073096533829812e-06', 'coordinate:0.0', 'the:6.3806996877247e-06', 'syndicated:0.0', 'loan:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nordea', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('coordinate', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('syndicated', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0'))],  word_scores_max: [('nordea', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('coordinate', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('syndicated', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0'))]
idx: 378, example: High winds also toppled three semi-trailers on I-15 north of Barstow , prediction: 1, correct_label: 2, class_scores: [0.15158214 0.48209426 0.3663236 ], word_scores: ['high:0.0', 'winds:0.0', 'also:0.0', 'toppled:0.0', 'three:0.0', 'semi:0.0', '-:4.821180027647642e-06', 'trailers:0.0', 'on:0.0', 'i:0.0', '-:4.821180027647642e-06', '15:0.0', 'north:0.0', 'of:3.4365734791208524e-06', 'bars:0.0', '##tow:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('high', tensor(0., device='cuda:0')), ('winds', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('toppled', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('semi', tensor(0., device='cuda:0')), ('-', tensor(0.3686, device='cuda:0')), ('trailers', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('-', tensor(0.3686, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('of', tensor(0.2628, device='cuda:0')), ('barstow', tensor(0., device='cuda:0'))],  word_scores_max: [('high', tensor(0., device='cuda:0')), ('winds', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('toppled', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('semi', tensor(0., device='cuda:0')), ('-', tensor(0.3686, device='cuda:0')), ('trailers', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('-', tensor(0.3686, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('of', tensor(0.2628, device='cuda:0')), ('barstow', tensor(0., device='cuda:0'))]
idx: 379, example: Operating profit was EUR 11.07 mn , up from EUR 8.65 mn , prediction: 2, correct_label: 1, class_scores: [0.21585655 0.32802057 0.45612288], word_scores: ['operating:0.0', 'profit:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '11:0.0', '.:2.903296945078182e-06', '07:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '8:0.0', '.:2.903296945078182e-06', '65:0.0', 'mn:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.1467, device='cuda:0')), ('07', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.4037, device='cuda:0')), ('up', tensor(0.0756, device='cuda:0')), ('from', tensor(0.2272, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('.', tensor(0.1467, device='cuda:0')), ('65', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.1467, device='cuda:0')), ('07', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.4037, device='cuda:0')), ('up', tensor(0.0756, device='cuda:0')), ('from', tensor(0.2272, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('.', tensor(0.1467, device='cuda:0')), ('65', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 380, example: In addition , the company is considering the start of production in Russia , prediction: 2, correct_label: 2, class_scores: [0.25149456 0.34517947 0.403326  ], word_scores: ['in:3.0217122457543155e-06', 'addition:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'considering:0.0', 'the:6.3806996877247e-06', 'start:0.0', 'of:3.4365734791208524e-06', 'production:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.0818, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.2163, device='cuda:0')), ('the', tensor(0.1728, device='cuda:0')), ('company', tensor(0.1813, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('considering', tensor(0., device='cuda:0')), ('the', tensor(0.1728, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('of', tensor(0.0931, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.0818, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0818, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.2163, device='cuda:0')), ('the', tensor(0.1728, device='cuda:0')), ('company', tensor(0.1813, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('considering', tensor(0., device='cuda:0')), ('the', tensor(0.1728, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('of', tensor(0.0931, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.0818, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 381, example: `` Tweeple should check who 's following them , and be cautious when clicking on URLs and tinyurls . ', prediction: 2, correct_label: 2, class_scores: [0.23993003 0.27668172 0.48338816], word_scores: ['`:0.0', '`:0.0', 't:0.0', '##wee:0.0', '##ple:0.0', 'should:0.0', 'check:0.0', 'who:0.0', "':0.0", 's:0.0', 'following:0.0', 'them:0.0', ',:7.986737728060689e-06', 'and:0.0', 'be:0.0', 'cautious:0.0', 'when:0.0', 'clicking:0.0', 'on:0.0', 'ur:0.0', '##ls:0.0', 'and:0.0', 'tiny:0.0', '##ur:0.0', '##ls:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tweeple', tensor(nan, device='cuda:0')), ('should', tensor(nan, device='cuda:0')), ('check', tensor(nan, device='cuda:0'))],  word_scores_max: [('tweeple', tensor(nan, device='cuda:0')), ('should', tensor(nan, device='cuda:0')), ('check', tensor(nan, device='cuda:0'))]
idx: 382, example: The gross area of eight houses will be 12,167 m2 , prediction: 1, correct_label: 2, class_scores: [0.15622063 0.49926266 0.34451672], word_scores: ['the:6.3806996877247e-06', 'gross:0.0', 'area:0.0', 'of:3.4365734791208524e-06', 'eight:0.0', 'houses:0.0', 'will:4.073096533829812e-06', 'be:0.0', '12:0.0', ',:7.986737728060689e-06', '167:0.0', 'm2:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2917, device='cuda:0')), ('gross', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.1571, device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('houses', tensor(0., device='cuda:0')), ('will', tensor(0.1862, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), (',', tensor(0.3651, device='cuda:0')), ('167', tensor(0., device='cuda:0')), ('m2', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2917, device='cuda:0')), ('gross', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.1571, device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('houses', tensor(0., device='cuda:0')), ('will', tensor(0.1862, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), (',', tensor(0.3651, device='cuda:0')), ('167', tensor(0., device='cuda:0')), ('m2', tensor(0., device='cuda:0'))]
idx: 383, example: The staff reduction will start immediately , Glaston added , prediction: 2, correct_label: 0, class_scores: [0.211879   0.31005988 0.47806105], word_scores: ['the:6.3806996877247e-06', 'staff:0.0', 'reduction:0.0', 'will:4.073096533829812e-06', 'start:0.0', 'immediately:0.0', ',:7.986737728060689e-06', 'g:0.0', '##las:0.0', '##ton:0.0', 'added:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3460, device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('reduction', tensor(0., device='cuda:0')), ('will', tensor(0.2209, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('immediately', tensor(0., device='cuda:0')), (',', tensor(0.4331, device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3460, device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('reduction', tensor(0., device='cuda:0')), ('will', tensor(0.2209, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('immediately', tensor(0., device='cuda:0')), (',', tensor(0.4331, device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0'))]
idx: 384, example: ABN : 59 087 901 620 now represent 5.10 % of the voting rights and share capital of Citycon Oyj , prediction: 1, correct_label: 2, class_scores: [0.1943214  0.44978493 0.35589355], word_scores: ['ab:0.0', '##n:0.0', '::0.0', '59:0.0', '08:0.0', '##7:0.0', '90:0.0', '##1:0.0', '620:0.0', 'now:0.0', 'represent:0.0', '5:0.0', '.:2.903296945078182e-06', '10:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'voting:0.0', 'rights:0.0', 'and:0.0', 'share:0.0', 'capital:0.0', 'of:3.4365734791208524e-06', 'city:0.0', '##con:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('abn', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), ('087', tensor(0., device='cuda:0')), ('901', tensor(0., device='cuda:0')), ('620', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('represent', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1614, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('of', tensor(0.1910, device='cuda:0')), ('the', tensor(0.3547, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('of', tensor(0.1910, device='cuda:0')), ('citycon', tensor(0., device='cuda:0')), ('oyj', tensor(0.1019, device='cuda:0'))],  word_scores_max: [('abn', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), ('087', tensor(0., device='cuda:0')), ('901', tensor(0., device='cuda:0')), ('620', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('represent', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1614, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('of', tensor(0.1910, device='cuda:0')), ('the', tensor(0.3547, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('of', tensor(0.1910, device='cuda:0')), ('citycon', tensor(0., device='cuda:0')), ('oyj', tensor(0.1019, device='cuda:0'))]
idx: 385, example: The antibody , administered at repeated doses of up to 8 mg-kg , was generally well tolerated , and the pharmacokinetic characteristics of BTT-1023 in psoriasis patients were consistent with those observed in a previously completed study in rheumatoid arthritis RA patients , prediction: 1, correct_label: 2, class_scores: [0.15887894 0.47560388 0.36551723], word_scores: ['the:6.3806996877247e-06', 'antibody:0.0', ',:7.986737728060689e-06', 'administered:0.0', 'at:0.0', 'repeated:0.0', 'doses:0.0', 'of:3.4365734791208524e-06', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '8:0.0', 'mg:0.0', '-:4.821180027647642e-06', 'kg:0.0', ',:7.986737728060689e-06', 'was:0.0', 'generally:0.0', 'well:0.0', 'tolerated:0.0', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'ph:0.0', '##arm:0.0', '##aco:0.0', '##kin:0.0', '##etic:0.0', 'characteristics:0.0', 'of:3.4365734791208524e-06', 'bt:0.0', '##t:0.0', '-:4.821180027647642e-06', '102:0.0', '##3:0.0', 'in:3.0217122457543155e-06', 'ps:0.0', '##oria:0.0', '##sis:0.0', 'patients:0.0', 'were:0.0', 'consistent:0.0', 'with:4.733654350275174e-06', 'those:0.0', 'observed:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'previously:0.0', 'completed:0.0', 'study:0.0', 'in:3.0217122457543155e-06', 'r:0.0', '##he:1.304545435232285e-06', '##uma:0.0', '##to:0.0', '##id:0.0', 'arthritis:0.0', 'ra:0.0', 'patients:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('the', tensor(0.0784, device='cuda:0')), ('antibody', tensor(0., device='cuda:0')), (',', tensor(0.0982, device='cuda:0')), ('administered', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('repeated', tensor(0., device='cuda:0')), ('doses', tensor(0., device='cuda:0')), ('of', tensor(0.0422, device='cuda:0')), ('up', tensor(0.0184, device='cuda:0')), ('to', tensor(0.0355, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mg', tensor(0., device='cuda:0')), ('-', tensor(0.0593, device='cuda:0')), ('kg', tensor(0., device='cuda:0')), (',', tensor(0.0982, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('generally', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('tolerated', tensor(0., device='cuda:0')), (',', tensor(0.0982, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('pharmacokinetic', tensor(0., device='cuda:0')), ('characteristics', tensor(0., device='cuda:0')), ('of', tensor(0.0422, device='cuda:0')), ('btt', tensor(0., device='cuda:0')), ('-', tensor(0.0593, device='cuda:0')), ('1023', tensor(0., device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('psoriasis', tensor(0., device='cuda:0')), ('patients', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('consistent', tensor(0., device='cuda:0')), ('with', tensor(0.0582, device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('observed', tensor(0., device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('a', tensor(0.1061, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('rheumatoid', tensor(0.0160, device='cuda:0')), ('arthritis', tensor(0., device='cuda:0')), ('ra', tensor(0., device='cuda:0')), ('patients', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0784, device='cuda:0')), ('antibody', tensor(0., device='cuda:0')), (',', tensor(0.0982, device='cuda:0')), ('administered', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('repeated', tensor(0., device='cuda:0')), ('doses', tensor(0., device='cuda:0')), ('of', tensor(0.0422, device='cuda:0')), ('up', tensor(0.0184, device='cuda:0')), ('to', tensor(0.0355, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mg', tensor(0., device='cuda:0')), ('-', tensor(0.0593, device='cuda:0')), ('kg', tensor(0., device='cuda:0')), (',', tensor(0.0982, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('generally', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('tolerated', tensor(0., device='cuda:0')), (',', tensor(0.0982, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('pharmacokinetic', tensor(0., device='cuda:0')), ('characteristics', tensor(0., device='cuda:0')), ('of', tensor(0.0422, device='cuda:0')), ('btt', tensor(0., device='cuda:0')), ('-', tensor(0.0593, device='cuda:0')), ('1023', tensor(0., device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('psoriasis', tensor(0., device='cuda:0')), ('patients', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('consistent', tensor(0., device='cuda:0')), ('with', tensor(0.0582, device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('observed', tensor(0., device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('a', tensor(0.1061, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('rheumatoid', tensor(0.0160, device='cuda:0')), ('arthritis', tensor(0., device='cuda:0')), ('ra', tensor(0., device='cuda:0')), ('patients', tensor(0., device='cuda:0'))]
idx: 386, example: Finnish financial group Aktia reports operating profit of EUR 44.4 mn in January-September 2009 , up from EUR 37.3 mn in the corresponding period in 2008 , prediction: 2, correct_label: 1, class_scores: [0.19853081 0.3991626  0.40230662], word_scores: ['finnish:0.0', 'financial:0.0', 'group:0.0', 'ak:0.0', '##tia:0.0', 'reports:0.0', 'operating:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '44:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'january:0.0', '-:4.821180027647642e-06', 'september:0.0', '2009:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '37:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('aktia', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0790, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('44', tensor(0., device='cuda:0')), ('.', tensor(0.0668, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0695, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.1109, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.1837, device='cuda:0')), ('up', tensor(0.0344, device='cuda:0')), ('from', tensor(0.1034, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('37', tensor(0., device='cuda:0')), ('.', tensor(0.0668, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0695, device='cuda:0')), ('the', tensor(0.1467, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0695, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('aktia', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0790, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('44', tensor(0., device='cuda:0')), ('.', tensor(0.0668, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0695, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.1109, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.1837, device='cuda:0')), ('up', tensor(0.0344, device='cuda:0')), ('from', tensor(0.1034, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('37', tensor(0., device='cuda:0')), ('.', tensor(0.0668, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0695, device='cuda:0')), ('the', tensor(0.1467, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0695, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 387, example: The transaction is in line with Aspo 's strategy to expand in the Baltic Sea region and in the eastern markets , prediction: 1, correct_label: 1, class_scores: [0.25367177 0.40008703 0.34624118], word_scores: ['the:6.3806996877247e-06', 'transaction:0.0', 'is:0.0', 'in:3.0217122457543155e-06', 'line:0.0', 'with:4.733654350275174e-06', 'as:0.0', '##po:0.0', "':0.0", 's:0.0', 'strategy:0.0', 'to:2.886244146793615e-06', 'expand:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'baltic:0.0', 'sea:0.0', 'region:0.0', 'and:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'eastern:0.0', 'markets:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.4514, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.2138, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('with', tensor(0.3349, device='cuda:0'))],  word_scores_max: [('the', tensor(0.4514, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.2138, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('with', tensor(0.3349, device='cuda:0'))]
idx: 388, example: In 2006 , 452 million tonnes CO2 of EUA ( EU Allowance ; emissions credit in EU ) was traded with an underlying market value approx , prediction: 2, correct_label: 2, class_scores: [0.21993013 0.29609287 0.48397696], word_scores: ['in:3.0217122457543155e-06', '2006:0.0', ',:7.986737728060689e-06', '45:4.878051640844205e-06', '##2:0.0', 'million:6.018835847498849e-06', 'tonnes:0.0', 'co:0.0', '##2:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##a:3.804580501309829e-06', '(:0.0', 'eu:0.0', 'allowance:0.0', ';:0.0', 'emissions:0.0', 'credit:0.0', 'in:3.0217122457543155e-06', 'eu:0.0', '):0.0', 'was:0.0', 'traded:0.0', 'with:4.733654350275174e-06', 'an:0.0', 'underlying:0.0', 'market:0.0', 'value:0.0', 'approx:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0913, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2413, device='cuda:0')), ('452', tensor(0.1474, device='cuda:0')), ('million', tensor(0.1819, device='cuda:0')), ('tonnes', tensor(0., device='cuda:0')), ('co2', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('eua', tensor(0., device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('allowance', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('in', tensor(0.0913, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('traded', tensor(0., device='cuda:0')), ('with', tensor(0.1430, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('underlying', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('approx', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0913, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2413, device='cuda:0')), ('452', tensor(0.1474, device='cuda:0')), ('million', tensor(0.1819, device='cuda:0')), ('tonnes', tensor(0., device='cuda:0')), ('co2', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('eua', tensor(0., device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('allowance', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('in', tensor(0.0913, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('traded', tensor(0., device='cuda:0')), ('with', tensor(0.1430, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('underlying', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('approx', tensor(0., device='cuda:0'))]
idx: 389, example: Finnish glass technology group Glaston Corporation ( OMX Helsinki : GLA1V ) reported on Thursday ( 14 August ) an operating profit of EUR6 .5 m on net sales of EUR201 .5 m for the period January-September 2008 , prediction: 2, correct_label: 2, class_scores: [0.21897256 0.29248336 0.48854405], word_scores: ['finnish:0.0', 'glass:0.0', 'technology:0.0', 'group:0.0', 'g:0.0', '##las:0.0', '##ton:0.0', 'corporation:0.0', '(:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'g:0.0', '##la:0.0', '##1:0.0', '##v:0.0', '):0.0', 'reported:0.0', 'on:0.0', 'thursday:0.0', '(:0.0', '14:0.0', 'august:0.0', '):0.0', 'an:0.0', 'operating:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##6:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', 'on:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##20:0.0', '##1:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'period:0.0', 'january:0.0', '-:4.821180027647642e-06', 'september:0.0', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('glass', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('gla1v', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursday', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('august', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.1439, device='cuda:0')), ('eur6', tensor(0., device='cuda:0')), ('.', tensor(0.1216, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1439, device='cuda:0')), ('eur201', tensor(0., device='cuda:0')), ('.', tensor(0.1216, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2672, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.2019, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('glass', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('gla1v', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursday', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('august', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.1439, device='cuda:0')), ('eur6', tensor(0., device='cuda:0')), ('.', tensor(0.1216, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1439, device='cuda:0')), ('eur201', tensor(0., device='cuda:0')), ('.', tensor(0.1216, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2672, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.2019, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 390, example: The joint venture is planning a quick timetable for negotiating the lease of the potential wind farm areas and for charting the feasibility of the wind farms , prediction: 2, correct_label: 2, class_scores: [0.21879476 0.36310372 0.41810152], word_scores: ['the:6.3806996877247e-06', 'joint:0.0', 'venture:0.0', 'is:0.0', 'planning:0.0', 'a:8.62785782373976e-06', 'quick:0.0', 'timetable:0.0', 'for:0.0', 'negotiating:0.0', 'the:6.3806996877247e-06', 'lease:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'potential:0.0', 'wind:0.0', 'farm:0.0', 'areas:0.0', 'and:0.0', 'for:0.0', 'charting:0.0', 'the:6.3806996877247e-06', 'feasibility:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'wind:0.0', 'farms:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1346, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('a', tensor(0.1820, device='cuda:0')), ('quick', tensor(0., device='cuda:0')), ('timetable', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('negotiating', tensor(0., device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('lease', tensor(0., device='cuda:0')), ('of', tensor(0.0725, device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('wind', tensor(0., device='cuda:0')), ('farm', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('charting', tensor(0., device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('feasibility', tensor(0., device='cuda:0')), ('of', tensor(0.0725, device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('wind', tensor(0., device='cuda:0')), ('farms', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1346, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('a', tensor(0.1820, device='cuda:0')), ('quick', tensor(0., device='cuda:0')), ('timetable', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('negotiating', tensor(0., device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('lease', tensor(0., device='cuda:0')), ('of', tensor(0.0725, device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('wind', tensor(0., device='cuda:0')), ('farm', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('charting', tensor(0., device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('feasibility', tensor(0., device='cuda:0')), ('of', tensor(0.0725, device='cuda:0')), ('the', tensor(0.1346, device='cuda:0')), ('wind', tensor(0., device='cuda:0')), ('farms', tensor(0., device='cuda:0'))]
idx: 391, example: Panostaja Oyj s ( Panostaja ) Board of Directors decided on 16 December 2010 on a new long-term incentive and commitment plan for members of the management team , prediction: 1, correct_label: 1, class_scores: [0.23522604 0.40259293 0.36218107], word_scores: ['pan:0.0', '##osta:0.0', '##ja:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 's:0.0', '(:0.0', 'pan:0.0', '##osta:0.0', '##ja:0.0', '):0.0', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'decided:0.0', 'on:0.0', '16:0.0', 'december:0.0', '2010:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'incentive:0.0', 'and:0.0', 'commitment:0.0', 'plan:0.0', 'for:0.0', 'members:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'management:0.0', 'team:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('panostaja', tensor(0., device='cuda:0')), ('oyj', tensor(0.0585, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('panostaja', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.1097, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2753, device='cuda:0')), ('new', tensor(0.0893, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.1539, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('incentive', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0')), ('of', tensor(0.1097, device='cuda:0')), ('the', tensor(0.2036, device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('team', tensor(0., device='cuda:0'))],  word_scores_max: [('panostaja', tensor(0., device='cuda:0')), ('oyj', tensor(0.0585, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('panostaja', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.1097, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2753, device='cuda:0')), ('new', tensor(0.0893, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.1539, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('incentive', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0')), ('of', tensor(0.1097, device='cuda:0')), ('the', tensor(0.2036, device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('team', tensor(0., device='cuda:0'))]
idx: 392, example: The pilot project proved that RIFD technology is ideal for our purposes '' , comments Olli Saarinen , Material Handling Supervisor at Yara , prediction: 1, correct_label: 1, class_scores: [0.19380051 0.42860302 0.37759644], word_scores: ['the:6.3806996877247e-06', 'pilot:0.0', 'project:0.0', 'proved:0.0', 'that:1.5133816759771435e-06', 'ri:0.0', '##f:0.0', '##d:0.0', 'technology:0.0', 'is:0.0', 'ideal:0.0', 'for:0.0', 'our:0.0', 'purposes:0.0', "':0.0", "':0.0", ',:7.986737728060689e-06', 'comments:0.0', 'ol:0.0', '##li:0.0', 'sa:0.0', '##ari:0.0', '##nen:0.0', ',:7.986737728060689e-06', 'material:0.0', 'handling:8.843817340675741e-06', 'supervisor:0.0', 'at:0.0', 'ya:0.0', '##ra:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.8083, device='cuda:0')), ('pilot', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('proved', tensor(0., device='cuda:0')), ('that', tensor(0.1917, device='cuda:0')), ('rifd', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('ideal', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.8083, device='cuda:0')), ('pilot', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('proved', tensor(0., device='cuda:0')), ('that', tensor(0.1917, device='cuda:0')), ('rifd', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('ideal', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0'))]
idx: 393, example: The plant is expected to start production in the first half of 2007 , prediction: 2, correct_label: 2, class_scores: [0.1648544  0.37509647 0.46004915], word_scores: ['the:6.3806996877247e-06', 'plant:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'start:0.0', 'production:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2007:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2886, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1306, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.1367, device='cuda:0')), ('the', tensor(0.2886, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.1555, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2886, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1306, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.1367, device='cuda:0')), ('the', tensor(0.2886, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.1555, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 394, example: Finnish dental care group Oral Hammaslaakarit Oyj posted a total net profit of 849,000 euro $ 1.1 mln in the first nine months of 2006 versus a net loss of 331,000 euro $ 421,000 in the same period of 2005 , prediction: 2, correct_label: 1, class_scores: [0.2741978  0.32353708 0.40226513], word_scores: ['finnish:0.0', 'dental:0.0', 'care:0.0', 'group:0.0', 'oral:0.0', 'ham:0.0', '##mas:0.0', '##la:0.0', '##aka:0.0', '##rit:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'posted:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'net:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', '84:0.0', '##9:0.0', ',:7.986737728060689e-06', '000:0.0', 'euro:0.0', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '1:0.0', 'ml:0.0', '##n:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'nine:0.0', 'months:0.0', 'of:3.4365734791208524e-06', '2006:0.0', 'versus:0.0', 'a:8.62785782373976e-06', 'net:0.0', 'loss:0.0', 'of:3.4365734791208524e-06', '331:0.0', ',:7.986737728060689e-06', '000:0.0', 'euro:0.0', '$:0.0', '421:0.0', ',:7.986737728060689e-06', '000:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'of:3.4365734791208524e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('dental', tensor(0., device='cuda:0')), ('care', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('oral', tensor(0., device='cuda:0')), ('hammaslaakarit', tensor(0., device='cuda:0')), ('oyj', tensor(0.0233, device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1099, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('849', tensor(0., device='cuda:0')), (',', tensor(0.1017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0370, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('in', tensor(0.0385, device='cuda:0')), ('the', tensor(0.0813, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('versus', tensor(0., device='cuda:0')), ('a', tensor(0.1099, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('331', tensor(0., device='cuda:0')), (',', tensor(0.1017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('421', tensor(0., device='cuda:0')), (',', tensor(0.1017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0385, device='cuda:0')), ('the', tensor(0.0813, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('dental', tensor(0., device='cuda:0')), ('care', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('oral', tensor(0., device='cuda:0')), ('hammaslaakarit', tensor(0., device='cuda:0')), ('oyj', tensor(0.0233, device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1099, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('849', tensor(0., device='cuda:0')), (',', tensor(0.1017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0370, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('in', tensor(0.0385, device='cuda:0')), ('the', tensor(0.0813, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('versus', tensor(0., device='cuda:0')), ('a', tensor(0.1099, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('331', tensor(0., device='cuda:0')), (',', tensor(0.1017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('421', tensor(0., device='cuda:0')), (',', tensor(0.1017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0385, device='cuda:0')), ('the', tensor(0.0813, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0438, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))]
idx: 395, example: Net sales of the Lehdentekijat unit was approximately EUR 14 million in 2007 and it had 70 employees , prediction: 2, correct_label: 2, class_scores: [0.18875515 0.3906694  0.42057547], word_scores: ['net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'le:0.0', '##hd:0.0', '##ente:0.0', '##ki:0.0', '##ja:0.0', '##t:0.0', 'unit:0.0', 'was:0.0', 'approximately:0.0', 'eu:0.0', '##r:0.0', '14:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', '2007:0.0', 'and:0.0', 'it:3.3415778943890473e-06', 'had:0.0', '70:0.0', 'employees:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1548, device='cuda:0')), ('the', tensor(0.2874, device='cuda:0')), ('lehdentekijat', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('million', tensor(0.2711, device='cuda:0')), ('in', tensor(0.1361, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.1505, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1548, device='cuda:0')), ('the', tensor(0.2874, device='cuda:0')), ('lehdentekijat', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('million', tensor(0.2711, device='cuda:0')), ('in', tensor(0.1361, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.1505, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0'))]
idx: 396, example: Operating profit for the six-month period decreased from EUR111 .9 m , while sales increased from EUR1 ,275 m , as compared to the corresponding period in 2006 , prediction: 2, correct_label: 2, class_scores: [0.14613537 0.32674265 0.527122  ], word_scores: ['operating:0.0', 'profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'six:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'decreased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##11:0.0', '##1:0.0', '.:2.903296945078182e-06', '9:0.0', 'm:0.0', ',:7.986737728060689e-06', 'while:0.0', 'sales:0.0', 'increased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##1:0.0', ',:7.986737728060689e-06', '275:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1075, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('-', tensor(0.0812, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('from', tensor(0.0757, device='cuda:0')), ('eur111', tensor(0., device='cuda:0')), ('.', tensor(0.0489, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.0757, device='cuda:0')), ('eur1', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('275', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0486, device='cuda:0')), ('the', tensor(0.1075, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1075, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('-', tensor(0.0812, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('from', tensor(0.0757, device='cuda:0')), ('eur111', tensor(0., device='cuda:0')), ('.', tensor(0.0489, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.0757, device='cuda:0')), ('eur1', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('275', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1346, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0486, device='cuda:0')), ('the', tensor(0.1075, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 397, example: Cencorp 's net sales in the first quarter is estimated to be EUR0.9-1 .2 m , as compared to EUR4 .5 m in the first quarter 2008 , prediction: 2, correct_label: 0, class_scores: [0.2551607  0.28055462 0.46428478], word_scores: ['ce:0.0', '##nco:0.0', '##rp:0.0', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'is:0.0', 'estimated:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '9:0.0', '-:4.821180027647642e-06', '1:0.0', '.:2.903296945078182e-06', '2:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##4:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 398, example: About 72 % of Evraz Group shares are owned by Lanebrook , whose beneficiaries , on the one hand , are Millhouse , the holding company for the assets of billionaire Roman Abramovich and his business partners 50 % ; and Evraz executives Alexander Abramov and Alexander Frolov 50 % , on the other , prediction: 2, correct_label: 2, class_scores: [0.18987563 0.37303036 0.43709397], word_scores: ['about:0.0', '72:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'ev:0.0', '##raz:0.0', 'group:0.0', 'shares:0.0', 'are:0.0', 'owned:0.0', 'by:0.0', 'lane:0.0', '##brook:0.0', ',:7.986737728060689e-06', 'hand:0.0', ',:7.986737728060689e-06', 'are:0.0', 'mill:2.6564571271592285e-06', '##house:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'holding:0.0', 'company:6.695386673527537e-06', 'for:0.0', 'the:6.3806996877247e-06', 'assets:0.0', 'of:3.4365734791208524e-06', 'billionaire:0.0', 'roman:0.0', 'ab:0.0', '##ram:0.0', '##ovich:0.0', 'and:0.0', 'his:0.0', 'business:0.0', 'partners:0.0', '50:0.0', '%:0.0', ';:0.0', 'and:0.0', 'ev:0.0', '##raz:0.0', 'executives:0.0', 'alexander:0.0', 'ab:0.0', '##ram:0.0', '##ov:0.0', 'and:0.0', 'alexander:0.0', 'fr:0.0', '##olo:0.0', '##v:0.0', '50:0.0', '%:0.0', ',:7.986737728060689e-06', 'on:0.0', 'the:6.3806996877247e-06', 'other:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('about', tensor(0., device='cuda:0')), ('72', tensor(0., device='cuda:0')), ('of', tensor(0.0511, device='cuda:0')), ('evraz', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lanebrook', tensor(0., device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('hand', tensor(0., device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('millhouse', tensor(0.0395, device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('the', tensor(0.0948, device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('company', tensor(0.0995, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0948, device='cuda:0')), ('assets', tensor(0., device='cuda:0')), ('of', tensor(0.0511, device='cuda:0')), ('billionaire', tensor(0., device='cuda:0')), ('roman', tensor(0., device='cuda:0')), ('abramovich', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('evraz', tensor(0., device='cuda:0')), ('executives', tensor(0., device='cuda:0')), ('alexander', tensor(0., device='cuda:0')), ('abramov', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('alexander', tensor(0., device='cuda:0')), ('frolov', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0948, device='cuda:0')), ('other', tensor(0., device='cuda:0'))],  word_scores_max: [('about', tensor(0., device='cuda:0')), ('72', tensor(0., device='cuda:0')), ('of', tensor(0.0511, device='cuda:0')), ('evraz', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lanebrook', tensor(0., device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('hand', tensor(0., device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('millhouse', tensor(0.0395, device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('the', tensor(0.0948, device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('company', tensor(0.0995, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0948, device='cuda:0')), ('assets', tensor(0., device='cuda:0')), ('of', tensor(0.0511, device='cuda:0')), ('billionaire', tensor(0., device='cuda:0')), ('roman', tensor(0., device='cuda:0')), ('abramovich', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('evraz', tensor(0., device='cuda:0')), ('executives', tensor(0., device='cuda:0')), ('alexander', tensor(0., device='cuda:0')), ('abramov', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('alexander', tensor(0., device='cuda:0')), ('frolov', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), (',', tensor(0.1186, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0948, device='cuda:0')), ('other', tensor(0., device='cuda:0'))]
idx: 399, example: The liquidity providing was interrupted on May 11 , 2007 when Aspocomp Group Oyj 's shares traded below 0.50 cent ( Aspocomp 's stock exchange release 11.5.2007 ) , prediction: 2, correct_label: 0, class_scores: [0.21752632 0.38098356 0.40149018], word_scores: ['the:6.3806996877247e-06', 'liquid:0.0', '##ity:0.0', 'providing:0.0', 'was:0.0', 'interrupted:0.0', 'on:0.0', 'may:0.0', '11:0.0', ',:7.986737728060689e-06', '2007:0.0', 'when:0.0', 'as:0.0', '##po:0.0', '##com:0.0', '##p:0.0', 'group:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', "':0.0", 's:0.0', 'shares:0.0', 'traded:0.0', 'below:0.0', '0:0.0', '.:2.903296945078182e-06', '50:0.0', 'cent:0.0', '(:0.0', 'as:0.0', '##po:0.0', '##com:0.0', '##p:0.0', "':0.0", 's:0.0', 'stock:0.0', 'exchange:0.0', 'release:0.0', '11:0.0', '.:2.903296945078182e-06', '5:0.0', '.:2.903296945078182e-06', '2007:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.4441, device='cuda:0')), ('liquidity', tensor(0., device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('interrupted', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('aspocomp', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4441, device='cuda:0')), ('liquidity', tensor(0., device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('interrupted', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('aspocomp', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))]
idx: 400, example: Pentik+�inen emphasises that the most of the internet contents media houses provide can not be free forever , prediction: 1, correct_label: 2, class_scores: [0.25647065 0.4102825  0.3332468 ], word_scores: ['pen:0.0', '##ti:2.5915114747476764e-06', '##k:0.0', '+:0.0', 'in:3.0217122457543155e-06', '##en:0.0', 'emphasis:0.0', '##es:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'most:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'internet:0.0', 'contents:0.0', 'media:0.0', 'houses:0.0', 'provide:0.0', 'can:0.0', 'not:0.0', 'be:0.0', 'free:0.0', 'forever:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pentik', tensor(0.1111, device='cuda:0')), ('inen', tensor(0.1296, device='cuda:0')), ('emphasises', tensor(0., device='cuda:0')), ('that', tensor(0.0649, device='cuda:0')), ('the', tensor(0.2736, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('of', tensor(0.1473, device='cuda:0')), ('the', tensor(0.2736, device='cuda:0')), ('internet', tensor(0., device='cuda:0')), ('contents', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('houses', tensor(0., device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('free', tensor(0., device='cuda:0')), ('forever', tensor(0., device='cuda:0'))],  word_scores_max: [('pentik', tensor(0.1111, device='cuda:0')), ('inen', tensor(0.1296, device='cuda:0')), ('emphasises', tensor(0., device='cuda:0')), ('that', tensor(0.0649, device='cuda:0')), ('the', tensor(0.2736, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('of', tensor(0.1473, device='cuda:0')), ('the', tensor(0.2736, device='cuda:0')), ('internet', tensor(0., device='cuda:0')), ('contents', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('houses', tensor(0., device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('free', tensor(0., device='cuda:0')), ('forever', tensor(0., device='cuda:0'))]
idx: 401, example: Galeria Podlaska , a shopping mall on Wysockiego Street in Bia ` ystok , is approximately 60-percent leased or reserved , prediction: 1, correct_label: 2, class_scores: [0.17222203 0.450797   0.376981  ], word_scores: ['gale:0.0', '##ria:0.0', 'pod:0.0', '##las:0.0', '##ka:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'shopping:0.0', 'mall:0.0', 'on:0.0', 'w:0.0', '##ys:0.0', '##ock:0.0', '##ieg:0.0', '##o:0.0', 'street:0.0', 'in:3.0217122457543155e-06', 'bi:0.0', '##a:3.804580501309829e-06', '`:0.0', 'y:0.0', '##sto:0.0', '##k:0.0', ',:7.986737728060689e-06', 'is:0.0', 'approximately:0.0', '60:0.0', '-:4.821180027647642e-06', 'percent:0.0', 'leased:0.0', 'or:0.0', 'reserved:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('galeria', tensor(0., device='cuda:0')), ('podlaska', tensor(0., device='cuda:0')), (',', tensor(0.2462, device='cuda:0')), ('a', tensor(0.2659, device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('mall', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('wysockiego', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('in', tensor(0.0931, device='cuda:0')), ('bia', tensor(0., device='cuda:0')), ('ystok', tensor(0., device='cuda:0')), (',', tensor(0.2462, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('-', tensor(0.1486, device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('leased', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('reserved', tensor(0., device='cuda:0'))],  word_scores_max: [('galeria', tensor(0., device='cuda:0')), ('podlaska', tensor(0., device='cuda:0')), (',', tensor(0.2462, device='cuda:0')), ('a', tensor(0.2659, device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('mall', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('wysockiego', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('in', tensor(0.0931, device='cuda:0')), ('bia', tensor(0., device='cuda:0')), ('ystok', tensor(0., device='cuda:0')), (',', tensor(0.2462, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('-', tensor(0.1486, device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('leased', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('reserved', tensor(0., device='cuda:0'))]
idx: 402, example: - Operating profit rose by 26.9 % to EUR 105.8 ( 83.4 ) million , prediction: 2, correct_label: 1, class_scores: [0.21109125 0.33808035 0.45082843], word_scores: ['-:4.821180027647642e-06', 'operating:0.0', 'profit:0.0', 'rose:0.0', 'by:0.0', '26:0.0', '.:2.903296945078182e-06', '9:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '105:0.0', '.:2.903296945078182e-06', '8:0.0', '(:0.0', '83:0.0', '.:2.903296945078182e-06', '4:0.0', '):0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('-', tensor(0.2149, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('to', tensor(0.1286, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('105', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('83', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.2683, device='cuda:0'))],  word_scores_max: [('-', tensor(0.2149, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('to', tensor(0.1286, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('105', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('83', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.2683, device='cuda:0'))]
idx: 403, example: Atria will also buy the shares of Kauhajoen Teurastamokiinteistot Oy (Kauhajoki slaughterhouse property)from Itikka Co-operative , prediction: 1, correct_label: 2, class_scores: [0.21735422 0.47111005 0.31153566], word_scores: ['at:0.0', '##ria:0.0', 'will:4.073096533829812e-06', 'also:0.0', 'buy:0.0', 'the:6.3806996877247e-06', 'shares:0.0', 'of:3.4365734791208524e-06', 'ka:0.0', '##uh:0.0', '##aj:0.0', '##oe:0.0', '##n:0.0', 'te:0.0', '##ura:0.0', '##sta:0.0', '##mo:0.0', '##ki:0.0', '##int:0.0', '##eis:0.0', '##to:0.0', '##t:0.0', 'o:0.0', '##y:1.832826342251792e-06', '(:0.0', 'ka:0.0', '##uh:0.0', '##aj:0.0', '##oki:0.0', 'slaughter:0.0', '##house:0.0', 'property:0.0', '):0.0', 'from:4.495178018260049e-06', 'it:3.3415778943890473e-06', '##ik:0.0', '##ka:0.0', 'co:0.0', '-:4.821180027647642e-06', 'operative:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('atria', tensor(0., device='cuda:0')), ('will', tensor(0.1534, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('the', tensor(0.2403, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('of', tensor(0.1294, device='cuda:0')), ('kauhajoen', tensor(0., device='cuda:0')), ('teurastamokiinteistot', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('kauhajoki', tensor(0., device='cuda:0')), ('slaughterhouse', tensor(0., device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('from', tensor(0.1693, device='cuda:0')), ('itikka', tensor(0.1259, device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('-', tensor(0.1816, device='cuda:0')), ('operative', tensor(0., device='cuda:0'))],  word_scores_max: [('atria', tensor(0., device='cuda:0')), ('will', tensor(0.1534, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('the', tensor(0.2403, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('of', tensor(0.1294, device='cuda:0')), ('kauhajoen', tensor(0., device='cuda:0')), ('teurastamokiinteistot', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('kauhajoki', tensor(0., device='cuda:0')), ('slaughterhouse', tensor(0., device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('from', tensor(0.1693, device='cuda:0')), ('itikka', tensor(0.1259, device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('-', tensor(0.1816, device='cuda:0')), ('operative', tensor(0., device='cuda:0'))]
idx: 404, example: `` Those uncertainties cloud the long-term outlook . ', prediction: 2, correct_label: 0, class_scores: [0.18871984 0.3933568  0.41792327], word_scores: ['`:0.0', '`:0.0', 'those:0.0', 'uncertain:0.0', '##ties:0.0', 'cloud:0.0', 'the:6.3806996877247e-06', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'outlook:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('those', tensor(0., device='cuda:0')), ('uncertainties', tensor(0., device='cuda:0')), ('cloud', tensor(0., device='cuda:0')), ('the', tensor(0.4524, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.3418, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('.', tensor(0.2058, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('those', tensor(0., device='cuda:0')), ('uncertainties', tensor(0., device='cuda:0')), ('cloud', tensor(0., device='cuda:0')), ('the', tensor(0.4524, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.3418, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('.', tensor(0.2058, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 405, example: Kesko Agro Eesti , the retailer and wholesaler of grain , agricultural and warehousing machinery and accessories , had net sales of 81 million euros in 2007 , an increase by one-tenth over the preceding year , prediction: 2, correct_label: 1, class_scores: [0.19656909 0.3431773  0.4602536 ], word_scores: ['ke:0.0', '##sko:0.0', 'ag:0.0', '##ro:0.0', 'ee:0.0', '##sti:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'retailer:0.0', 'and:0.0', 'wholesale:0.0', '##r:0.0', 'of:3.4365734791208524e-06', 'grain:0.0', ',:7.986737728060689e-06', 'agricultural:0.0', 'and:0.0', 'ware:0.0', '##ho:0.0', '##using:0.0', 'machinery:0.0', 'and:0.0', 'accessories:0.0', ',:7.986737728060689e-06', 'had:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', '81:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'in:3.0217122457543155e-06', '2007:0.0', ',:7.986737728060689e-06', 'an:0.0', 'increase:0.0', 'by:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'tenth:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'preceding:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kesko', tensor(0., device='cuda:0')), ('agro', tensor(0., device='cuda:0')), ('eesti', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('the', tensor(0.0911, device='cuda:0')), ('retailer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('wholesaler', tensor(0., device='cuda:0')), ('of', tensor(0.0491, device='cuda:0')), ('grain', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('agricultural', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('warehousing', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('accessories', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0491, device='cuda:0')), ('81', tensor(0., device='cuda:0')), ('million', tensor(0.0859, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.0432, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('one', tensor(0.0655, device='cuda:0')), ('-', tensor(0.0688, device='cuda:0')), ('tenth', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.0911, device='cuda:0')), ('preceding', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('kesko', tensor(0., device='cuda:0')), ('agro', tensor(0., device='cuda:0')), ('eesti', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('the', tensor(0.0911, device='cuda:0')), ('retailer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('wholesaler', tensor(0., device='cuda:0')), ('of', tensor(0.0491, device='cuda:0')), ('grain', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('agricultural', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('warehousing', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('accessories', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0491, device='cuda:0')), ('81', tensor(0., device='cuda:0')), ('million', tensor(0.0859, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.0432, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1141, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('one', tensor(0.0655, device='cuda:0')), ('-', tensor(0.0688, device='cuda:0')), ('tenth', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.0911, device='cuda:0')), ('preceding', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 406, example: In Finland , the launch of tie-in sales of 3G mobile phones did not cause a dramatic rush in mobile retail outlets during the first few days , prediction: 2, correct_label: 2, class_scores: [0.16114484 0.3821662  0.4566889 ], word_scores: ['in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'launch:0.0', 'of:3.4365734791208524e-06', 'tie:0.0', '-:4.821180027647642e-06', 'in:3.0217122457543155e-06', 'sales:0.0', 'of:3.4365734791208524e-06', '3:0.0', '##g:0.0', 'mobile:0.0', 'phones:0.0', 'did:0.0', 'not:0.0', 'cause:0.0', 'a:8.62785782373976e-06', 'dramatic:0.0', 'rush:0.0', 'in:3.0217122457543155e-06', 'mobile:0.0', 'retail:0.0', 'outlets:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'few:0.0', 'days:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0557, device='cuda:0')), ('finland', tensor(0.0755, device='cuda:0')), (',', tensor(0.1473, device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('of', tensor(0.0634, device='cuda:0')), ('tie', tensor(0., device='cuda:0')), ('-', tensor(0.0889, device='cuda:0')), ('in', tensor(0.0557, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0634, device='cuda:0')), ('3g', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phones', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('cause', tensor(0., device='cuda:0')), ('a', tensor(0.1591, device='cuda:0')), ('dramatic', tensor(0., device='cuda:0')), ('rush', tensor(0., device='cuda:0')), ('in', tensor(0.0557, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('outlets', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0557, device='cuda:0')), ('finland', tensor(0.0755, device='cuda:0')), (',', tensor(0.1473, device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('of', tensor(0.0634, device='cuda:0')), ('tie', tensor(0., device='cuda:0')), ('-', tensor(0.0889, device='cuda:0')), ('in', tensor(0.0557, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0634, device='cuda:0')), ('3g', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phones', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('cause', tensor(0., device='cuda:0')), ('a', tensor(0.1591, device='cuda:0')), ('dramatic', tensor(0., device='cuda:0')), ('rush', tensor(0., device='cuda:0')), ('in', tensor(0.0557, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('outlets', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0'))]
idx: 407, example: AUSTIN , Texas , Sept. 6 -- Texas Department Of Transportation awards contract for Teleste Video Compression and Distribution Equipment , prediction: 2, correct_label: 1, class_scores: [0.16312069 0.31474602 0.5221333 ], word_scores: ['austin:0.0', ',:7.986737728060689e-06', 'texas:0.0', ',:7.986737728060689e-06', 'sept:0.0', '.:2.903296945078182e-06', '6:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'texas:0.0', 'department:0.0', 'of:3.4365734791208524e-06', 'transportation:0.0', 'awards:0.0', 'contract:7.1864019446366e-06', 'for:0.0', 'tel:0.0', '##est:0.0', '##e:0.0', 'video:0.0', 'compression:0.0', 'and:0.0', 'distribution:0.0', 'equipment:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('austin', tensor(0., device='cuda:0')), (',', tensor(0.2040, device='cuda:0')), ('texas', tensor(0., device='cuda:0')), (',', tensor(0.2040, device='cuda:0')), ('sept', tensor(0., device='cuda:0')), ('.', tensor(0.0742, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('-', tensor(0.1232, device='cuda:0')), ('-', tensor(0.1232, device='cuda:0')), ('texas', tensor(0., device='cuda:0')), ('department', tensor(0., device='cuda:0')), ('of', tensor(0.0878, device='cuda:0')), ('transportation', tensor(0., device='cuda:0')), ('awards', tensor(0., device='cuda:0')), ('contract', tensor(0.1836, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('compression', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0'))],  word_scores_max: [('austin', tensor(0., device='cuda:0')), (',', tensor(0.2040, device='cuda:0')), ('texas', tensor(0., device='cuda:0')), (',', tensor(0.2040, device='cuda:0')), ('sept', tensor(0., device='cuda:0')), ('.', tensor(0.0742, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('-', tensor(0.1232, device='cuda:0')), ('-', tensor(0.1232, device='cuda:0')), ('texas', tensor(0., device='cuda:0')), ('department', tensor(0., device='cuda:0')), ('of', tensor(0.0878, device='cuda:0')), ('transportation', tensor(0., device='cuda:0')), ('awards', tensor(0., device='cuda:0')), ('contract', tensor(0.1836, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('compression', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0'))]
idx: 408, example: HUHTAMAKI OYJ STOCK EXCHANGE RELEASE , 16.9.2008 AT 13.32 Huhtamaki 's Capital Markets Day for institutional investors and analysts is held in Espoo , September 16 , 2008 starting at 13.30 pm Finnish time , prediction: 2, correct_label: 2, class_scores: [0.22810274 0.3764868  0.39541042], word_scores: ['huh:0.0', '##tama:0.0', '##ki:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'stock:0.0', 'exchange:0.0', 'release:0.0', ',:7.986737728060689e-06', '16:0.0', '.:2.903296945078182e-06', '9:0.0', '.:2.903296945078182e-06', '2008:0.0', 'at:0.0', '13:0.0', '.:2.903296945078182e-06', '32:0.0', 'huh:0.0', '##tama:0.0', '##ki:0.0', "':0.0", 's:0.0', 'capital:0.0', 'markets:0.0', 'day:0.0', 'for:0.0', 'institutional:0.0', 'investors:0.0', 'and:0.0', 'analysts:0.0', 'is:0.0', 'held:0.0', 'in:3.0217122457543155e-06', 'es:2.450917691021459e-06', '##poo:4.037954568048008e-06', ',:7.986737728060689e-06', 'september:0.0', '16:0.0', ',:7.986737728060689e-06', '2008:0.0', 'starting:0.0', 'at:0.0', '13:0.0', '.:2.903296945078182e-06', '30:0.0', 'pm:0.0', 'finnish:0.0', 'time:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('huhtamaki', tensor(0., device='cuda:0')), ('oyj', tensor(0.0989, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), (',', tensor(0.4310, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('32', tensor(0., device='cuda:0'))],  word_scores_max: [('huhtamaki', tensor(0., device='cuda:0')), ('oyj', tensor(0.0989, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), (',', tensor(0.4310, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('32', tensor(0., device='cuda:0'))]
idx: 409, example: Kemira will supply the additional volumes of iron coagulants from the company 's plant at Helsingborg , Sweden , prediction: 2, correct_label: 2, class_scores: [0.17637414 0.38547066 0.43815523], word_scores: ['ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', 'will:4.073096533829812e-06', 'supply:6.221108833415201e-06', 'the:6.3806996877247e-06', 'additional:0.0', 'volumes:0.0', 'of:3.4365734791208524e-06', 'iron:0.0', 'coa:0.0', '##gul:0.0', '##ants:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'plant:0.0', 'at:0.0', 'he:0.0', '##ls:0.0', '##ing:0.0', '##borg:0.0', ',:7.986737728060689e-06', 'sweden:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kemira', tensor(0., device='cuda:0')), ('will', tensor(0.1314, device='cuda:0')), ('supply', tensor(0.2008, device='cuda:0')), ('the', tensor(0.2059, device='cuda:0')), ('additional', tensor(0., device='cuda:0')), ('volumes', tensor(0., device='cuda:0')), ('of', tensor(0.1109, device='cuda:0')), ('iron', tensor(0., device='cuda:0')), ('coagulants', tensor(0., device='cuda:0')), ('from', tensor(0.1451, device='cuda:0')), ('the', tensor(0.2059, device='cuda:0'))],  word_scores_max: [('kemira', tensor(0., device='cuda:0')), ('will', tensor(0.1314, device='cuda:0')), ('supply', tensor(0.2008, device='cuda:0')), ('the', tensor(0.2059, device='cuda:0')), ('additional', tensor(0., device='cuda:0')), ('volumes', tensor(0., device='cuda:0')), ('of', tensor(0.1109, device='cuda:0')), ('iron', tensor(0., device='cuda:0')), ('coagulants', tensor(0., device='cuda:0')), ('from', tensor(0.1451, device='cuda:0')), ('the', tensor(0.2059, device='cuda:0'))]
idx: 410, example: UPM 's aim is to secure Botnia 's strategic development and investments , prediction: 2, correct_label: 2, class_scores: [0.19674446 0.33125117 0.4720044 ], word_scores: ['up:1.4959460941099678e-06', '##m:0.0', "':0.0", 's:0.0', 'aim:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'secure:0.0', 'bot:0.0', '##nia:0.0', "':0.0", 's:0.0', 'strategic:0.0', 'development:0.0', 'and:0.0', 'investments:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 411, example: This is due to the postponement of the decision-making of projects in the negotiation phase from the earlier estimation , prediction: 2, correct_label: 2, class_scores: [0.18011592 0.3705838  0.44930035], word_scores: ['this:0.0', 'is:0.0', 'due:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'post:0.0', '##pone:0.0', '##ment:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'decision:0.0', '-:4.821180027647642e-06', 'making:0.0', 'of:3.4365734791208524e-06', 'projects:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'negotiation:0.0', 'phase:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'earlier:0.0', 'estimation:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('this', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.0606, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('postponement', tensor(0., device='cuda:0')), ('of', tensor(0.0722, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('-', tensor(0.1012, device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('of', tensor(0.0722, device='cuda:0')), ('projects', tensor(0., device='cuda:0')), ('in', tensor(0.0635, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('negotiation', tensor(0., device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('from', tensor(0.0944, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('estimation', tensor(0., device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.0606, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('postponement', tensor(0., device='cuda:0')), ('of', tensor(0.0722, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('-', tensor(0.1012, device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('of', tensor(0.0722, device='cuda:0')), ('projects', tensor(0., device='cuda:0')), ('in', tensor(0.0635, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('negotiation', tensor(0., device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('from', tensor(0.0944, device='cuda:0')), ('the', tensor(0.1340, device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('estimation', tensor(0., device='cuda:0'))]
idx: 412, example: Due to market conditions , the company will also temporarily lay off about 3,200 people at different sites , prediction: 2, correct_label: 0, class_scores: [0.15173447 0.31180072 0.53646487], word_scores: ['due:0.0', 'to:2.886244146793615e-06', 'market:0.0', 'conditions:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'also:0.0', 'temporarily:0.0', 'lay:0.0', 'off:0.0', 'about:0.0', '3:0.0', ',:7.986737728060689e-06', '200:0.0', 'people:0.0', 'at:0.0', 'different:0.0', 'sites:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('due', tensor(0., device='cuda:0')), ('to', tensor(0.0802, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), (',', tensor(0.2218, device='cuda:0')), ('the', tensor(0.1772, device='cuda:0')), ('company', tensor(0.1859, device='cuda:0')), ('will', tensor(0.1131, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), (',', tensor(0.2218, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('different', tensor(0., device='cuda:0')), ('sites', tensor(0., device='cuda:0'))],  word_scores_max: [('due', tensor(0., device='cuda:0')), ('to', tensor(0.0802, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), (',', tensor(0.2218, device='cuda:0')), ('the', tensor(0.1772, device='cuda:0')), ('company', tensor(0.1859, device='cuda:0')), ('will', tensor(0.1131, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), (',', tensor(0.2218, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('different', tensor(0., device='cuda:0')), ('sites', tensor(0., device='cuda:0'))]
idx: 413, example: The share of the share capital of both above mentioned shareholders remains below 5 % , prediction: 2, correct_label: 2, class_scores: [0.2112485 0.2629171 0.5258343], word_scores: ['the:6.3806996877247e-06', 'share:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'share:0.0', 'capital:0.0', 'of:3.4365734791208524e-06', 'both:0.0', 'above:0.0', 'mentioned:0.0', 'shareholders:0.0', 'remains:0.0', 'below:0.0', '5:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3250, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.1750, device='cuda:0')), ('the', tensor(0.3250, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('of', tensor(0.1750, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('mentioned', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('remains', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3250, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.1750, device='cuda:0')), ('the', tensor(0.3250, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('of', tensor(0.1750, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('mentioned', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('remains', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0'))]
idx: 414, example: The Group , with net sales of EUR 235 million in 2009 , employs more than 2 000 people in 33 countries , prediction: 1, correct_label: 2, class_scores: [0.20656861 0.40995863 0.3834728 ], word_scores: ['the:6.3806996877247e-06', 'group:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '235:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', '2009:0.0', ',:7.986737728060689e-06', 'employs:0.0', 'more:0.0', 'than:0.0', '2:0.0', '000:0.0', 'people:0.0', 'in:3.0217122457543155e-06', '33:0.0', 'countries:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1498, device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1875, device='cuda:0')), ('with', tensor(0.1112, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0807, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('235', tensor(0., device='cuda:0')), ('million', tensor(0.1413, device='cuda:0')), ('in', tensor(0.0710, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.1875, device='cuda:0')), ('employs', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('in', tensor(0.0710, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1498, device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1875, device='cuda:0')), ('with', tensor(0.1112, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0807, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('235', tensor(0., device='cuda:0')), ('million', tensor(0.1413, device='cuda:0')), ('in', tensor(0.0710, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.1875, device='cuda:0')), ('employs', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('in', tensor(0.0710, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 415, example: Our purchase to pay solutions enable companies to gain visibility and control over business-critical financial processes , prediction: 2, correct_label: 2, class_scores: [0.20116168 0.3541294  0.44470894], word_scores: ['our:0.0', 'purchase:0.0', 'to:2.886244146793615e-06', 'pay:0.0', 'solutions:0.0', 'enable:0.0', 'companies:0.0', 'to:2.886244146793615e-06', 'gain:0.0', 'visibility:0.0', 'and:0.0', 'control:0.0', 'over:0.0', 'business:0.0', '-:4.821180027647642e-06', 'critical:0.0', 'financial:0.0', 'processes:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('our', tensor(0., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('to', tensor(0.2724, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('enable', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('to', tensor(0.2724, device='cuda:0')), ('gain', tensor(0., device='cuda:0')), ('visibility', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('-', tensor(0.4551, device='cuda:0')), ('critical', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0'))],  word_scores_max: [('our', tensor(0., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('to', tensor(0.2724, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('enable', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('to', tensor(0.2724, device='cuda:0')), ('gain', tensor(0., device='cuda:0')), ('visibility', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('-', tensor(0.4551, device='cuda:0')), ('critical', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0'))]
idx: 416, example: Based in Helsinki , Finland , Ramirent has branches in 13 Nordic , central and Eastern European countries , prediction: 2, correct_label: 2, class_scores: [0.13861893 0.42596298 0.43541813], word_scores: ['based:0.0', 'in:3.0217122457543155e-06', 'helsinki:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'ram:0.0', '##ire:0.0', '##nt:0.0', 'has:5.9214244174654596e-06', 'branches:0.0', 'in:3.0217122457543155e-06', '13:0.0', 'nordic:0.0', ',:7.986737728060689e-06', 'central:1.9185144992661662e-06', 'and:0.0', 'eastern:0.0', 'european:0.0', 'countries:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('based', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.1904, device='cuda:0')), ('finland', tensor(0.0977, device='cuda:0')), (',', tensor(0.1904, device='cuda:0')), ('ramirent', tensor(0., device='cuda:0')), ('has', tensor(0.1412, device='cuda:0')), ('branches', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), (',', tensor(0.1904, device='cuda:0')), ('central', tensor(0.0457, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eastern', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('based', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.1904, device='cuda:0')), ('finland', tensor(0.0977, device='cuda:0')), (',', tensor(0.1904, device='cuda:0')), ('ramirent', tensor(0., device='cuda:0')), ('has', tensor(0.1412, device='cuda:0')), ('branches', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), (',', tensor(0.1904, device='cuda:0')), ('central', tensor(0.0457, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eastern', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 417, example: Production at the plant will be based on Neste Oil 's proprietary technology that can use a flexible input of any vegetable oil or animal fat , prediction: 2, correct_label: 2, class_scores: [0.21616048 0.3538287  0.4300109 ], word_scores: ['production:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'plant:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'based:0.0', 'on:0.0', 'nest:0.0', '##e:0.0', 'oil:0.0', "':0.0", 's:0.0', 'proprietary:0.0', 'technology:0.0', 'that:1.5133816759771435e-06', 'can:0.0', 'use:0.0', 'a:8.62785782373976e-06', 'flexible:0.0', 'input:0.0', 'of:3.4365734791208524e-06', 'any:0.0', 'vegetable:0.0', 'oil:0.0', 'or:0.0', 'animal:0.0', 'fat:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('production', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('neste', tensor(0., device='cuda:0'))],  word_scores_max: [('production', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('neste', tensor(0., device='cuda:0'))]
idx: 418, example: It 's even a little bit higher than Yara 's multiples on itself , ' an analyst in Helsinki said , prediction: 1, correct_label: 2, class_scores: [0.24998672 0.3789011  0.37111214], word_scores: ['it:3.3415778943890473e-06', "':0.0", 's:0.0', 'even:0.0', 'a:8.62785782373976e-06', 'little:0.0', 'bit:0.0', 'higher:0.0', 'than:0.0', 'ya:0.0', '##ra:0.0', "':0.0", 's:0.0', 'multiple:0.0', '##s:4.601175078278175e-06', 'on:0.0', 'itself:0.0', ',:7.986737728060689e-06', "':0.0", 'an:0.0', 'analyst:0.0', 'in:3.0217122457543155e-06', 'helsinki:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 419, example: Cargotec Germany GmbH has been awarded a contract by Stadtverwaltung Mainz for chassis bodies under Open procedure , prediction: 2, correct_label: 1, class_scores: [0.19496797 0.28959236 0.5154397 ], word_scores: ['cargo:0.0', '##tec:0.0', 'germany:0.0', 'gmbh:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'awarded:0.0', 'a:8.62785782373976e-06', 'contract:7.1864019446366e-06', 'by:0.0', 'st:0.0', '##adt:0.0', '##ver:0.0', '##wal:0.0', '##tung:0.0', 'mainz:0.0', 'for:0.0', 'chassis:0.0', 'bodies:0.0', 'under:0.0', 'open:0.0', 'procedure:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cargotec', tensor(0., device='cuda:0')), ('germany', tensor(0., device='cuda:0')), ('gmbh', tensor(0., device='cuda:0')), ('has', tensor(0.2724, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('a', tensor(0.3969, device='cuda:0')), ('contract', tensor(0.3306, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('stadtverwaltung', tensor(0., device='cuda:0')), ('mainz', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('chassis', tensor(0., device='cuda:0')), ('bodies', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('procedure', tensor(0., device='cuda:0'))],  word_scores_max: [('cargotec', tensor(0., device='cuda:0')), ('germany', tensor(0., device='cuda:0')), ('gmbh', tensor(0., device='cuda:0')), ('has', tensor(0.2724, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('a', tensor(0.3969, device='cuda:0')), ('contract', tensor(0.3306, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('stadtverwaltung', tensor(0., device='cuda:0')), ('mainz', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('chassis', tensor(0., device='cuda:0')), ('bodies', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('procedure', tensor(0., device='cuda:0'))]
idx: 420, example: These companies will be able to keep their market positions , prediction: 2, correct_label: 1, class_scores: [0.15038219 0.4013593  0.44825852], word_scores: ['these:0.0', 'companies:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'able:0.0', 'to:2.886244146793615e-06', 'keep:0.0', 'their:0.0', 'market:0.0', 'positions:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('these', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('will', tensor(0.5853, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('able', tensor(0., device='cuda:0')), ('to', tensor(0.4147, device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0'))],  word_scores_max: [('these', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('will', tensor(0.5853, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('able', tensor(0., device='cuda:0')), ('to', tensor(0.4147, device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0'))]
idx: 421, example: The dividends payable annually shall be deducted from the share subscription price , prediction: 1, correct_label: 2, class_scores: [0.1847196  0.45418993 0.3610905 ], word_scores: ['the:6.3806996877247e-06', 'divide:0.0', '##nds:0.0', 'pay:0.0', '##able:0.0', 'annually:0.0', 'shall:0.0', 'be:0.0', 'de:0.0', '##ducted:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'share:0.0', 'subscription:0.0', 'price:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3698, device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), ('payable', tensor(0., device='cuda:0')), ('annually', tensor(0., device='cuda:0')), ('shall', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('deducted', tensor(0., device='cuda:0')), ('from', tensor(0.2605, device='cuda:0')), ('the', tensor(0.3698, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('subscription', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3698, device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), ('payable', tensor(0., device='cuda:0')), ('annually', tensor(0., device='cuda:0')), ('shall', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('deducted', tensor(0., device='cuda:0')), ('from', tensor(0.2605, device='cuda:0')), ('the', tensor(0.3698, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('subscription', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))]
idx: 422, example: A survey conducted by Taloustutkimus for Sampo Life shows that companies are badly prepared to losing key staff members , prediction: 2, correct_label: 0, class_scores: [0.17097227 0.38017407 0.4488537 ], word_scores: ['a:8.62785782373976e-06', 'survey:0.0', 'conducted:0.0', 'by:0.0', 'tal:0.0', '##ous:0.0', '##tu:0.0', '##t:0.0', '##kim:0.0', '##us:0.0', 'for:0.0', 'sam:0.0', '##po:0.0', 'life:0.0', 'shows:0.0', 'that:1.5133816759771435e-06', 'companies:0.0', 'are:0.0', 'badly:0.0', 'prepared:0.0', 'to:2.886244146793615e-06', 'losing:0.0', 'key:0.0', 'staff:0.0', 'members:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.6623, device='cuda:0')), ('survey', tensor(0., device='cuda:0')), ('conducted', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('taloustutkimus', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('shows', tensor(0., device='cuda:0')), ('that', tensor(0.1162, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('badly', tensor(0., device='cuda:0')), ('prepared', tensor(0., device='cuda:0')), ('to', tensor(0.2216, device='cuda:0')), ('losing', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.6623, device='cuda:0')), ('survey', tensor(0., device='cuda:0')), ('conducted', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('taloustutkimus', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('shows', tensor(0., device='cuda:0')), ('that', tensor(0.1162, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('badly', tensor(0., device='cuda:0')), ('prepared', tensor(0., device='cuda:0')), ('to', tensor(0.2216, device='cuda:0')), ('losing', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0'))]
idx: 423, example: Previously , the company had guided for EBIT and sales growth of 20 pct and 10 pct respectively for this year , prediction: 2, correct_label: 1, class_scores: [0.17341149 0.3919862  0.43460238], word_scores: ['previously:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'had:0.0', 'guided:0.0', 'for:0.0', 'e:0.0', '##bit:0.0', 'and:0.0', 'sales:0.0', 'growth:0.0', 'of:3.4365734791208524e-06', '20:0.0', 'pc:0.0', '##t:0.0', 'and:0.0', '10:0.0', 'pc:0.0', '##t:0.0', 'respectively:0.0', 'for:0.0', 'this:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('previously', tensor(0., device='cuda:0')), (',', tensor(0.3260, device='cuda:0')), ('the', tensor(0.2604, device='cuda:0')), ('company', tensor(0.2733, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('guided', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('ebit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('of', tensor(0.1403, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('previously', tensor(0., device='cuda:0')), (',', tensor(0.3260, device='cuda:0')), ('the', tensor(0.2604, device='cuda:0')), ('company', tensor(0.2733, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('guided', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('ebit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('of', tensor(0.1403, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 424, example: The net sales decreased to EUR 49.8 million from EUR 59.9 million , prediction: 2, correct_label: 0, class_scores: [0.17354316 0.27766794 0.5487889 ], word_scores: ['the:6.3806996877247e-06', 'net:0.0', 'sales:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '49:0.0', '.:2.903296945078182e-06', '8:0.0', 'million:6.018835847498849e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '59:0.0', '.:2.903296945078182e-06', '9:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2019, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.0913, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('million', tensor(0.1904, device='cuda:0')), ('from', tensor(0.1422, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1904, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2019, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.0913, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('million', tensor(0.1904, device='cuda:0')), ('from', tensor(0.1422, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.1904, device='cuda:0'))]
idx: 425, example: The port facilities ' throughput is 250,000 TEUs and 7.5 mln tons of general cargo , prediction: 2, correct_label: 2, class_scores: [0.18903244 0.30943266 0.50153494], word_scores: ['the:6.3806996877247e-06', 'port:5.874064754607389e-06', 'facilities:0.0', "':0.0", 'through:0.0', '##put:0.0', 'is:0.0', '250:0.0', ',:7.986737728060689e-06', '000:0.0', 'te:0.0', '##us:0.0', 'and:0.0', '7:0.0', '.:2.903296945078182e-06', '5:0.0', 'ml:0.0', '##n:0.0', 'tons:0.0', 'of:3.4365734791208524e-06', 'general:0.0', 'cargo:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.5207, device='cuda:0')), ('port', tensor(0.4793, device='cuda:0'))],  word_scores_max: [('the', tensor(0.5207, device='cuda:0')), ('port', tensor(0.4793, device='cuda:0'))]
idx: 426, example: However , the suspect stole his burgundy Nissan Altima , prediction: 1, correct_label: 0, class_scores: [0.20247735 0.40292606 0.39459652], word_scores: ['however:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'suspect:0.0', 'stole:0.0', 'his:0.0', 'burgundy:0.0', 'nissan:0.0', 'alt:0.0', '##ima:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('however', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('suspect', tensor(0., device='cuda:0')), ('stole', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('burgundy', tensor(0., device='cuda:0')), ('nissan', tensor(0., device='cuda:0')), ('altima', tensor(0., device='cuda:0'))],  word_scores_max: [('however', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('suspect', tensor(0., device='cuda:0')), ('stole', tensor(0., device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('burgundy', tensor(0., device='cuda:0')), ('nissan', tensor(0., device='cuda:0')), ('altima', tensor(0., device='cuda:0'))]
idx: 427, example: 9 September 2010 - Finnish stationery and gift retailer Tiimari HEL : TII1V said today its net sales rose by 2 % year-on-year to EUR5 .7 m in August 2010 , driven by growth in Finland , while demand in the Baltics remained weak , prediction: 2, correct_label: 1, class_scores: [0.19210897 0.3957163  0.41217473], word_scores: ['9:0.0', 'september:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'station:0.0', '##ery:0.0', 'and:0.0', 'gift:0.0', 'retailer:0.0', 'ti:0.0', '##ima:0.0', '##ri:0.0', 'he:0.0', '::0.0', 'ti:0.0', '##i:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'sales:0.0', 'rose:0.0', 'by:0.0', '2:0.0', '%:0.0', 'year:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'year:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##5:0.0', '.:2.903296945078182e-06', '7:0.0', 'm:0.0', 'in:3.0217122457543155e-06', 'august:0.0', '2010:0.0', ',:7.986737728060689e-06', 'driven:0.0', 'by:0.0', 'growth:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'while:0.0', 'demand:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'baltic:0.0', '##s:4.601175078278175e-06', 'remained:0.0', 'weak:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('9', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0839, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('stationery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('gift', tensor(0., device='cuda:0')), ('retailer', tensor(0., device='cuda:0')), ('tiimari', tensor(0., device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('tii1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0299, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0839, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0839, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0502, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.0505, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('august', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('driven', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('finland', tensor(0.0713, device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('the', tensor(0.1110, device='cuda:0')), ('baltics', tensor(0., device='cuda:0')), ('remained', tensor(0., device='cuda:0')), ('weak', tensor(0., device='cuda:0'))],  word_scores_max: [('9', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0839, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('stationery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('gift', tensor(0., device='cuda:0')), ('retailer', tensor(0., device='cuda:0')), ('tiimari', tensor(0., device='cuda:0')), ('he', tensor(0., device='cuda:0')), ('tii1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0299, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.0839, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0839, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0502, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.0505, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('august', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('driven', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('finland', tensor(0.0713, device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0')), ('in', tensor(0.0526, device='cuda:0')), ('the', tensor(0.1110, device='cuda:0')), ('baltics', tensor(0., device='cuda:0')), ('remained', tensor(0., device='cuda:0')), ('weak', tensor(0., device='cuda:0'))]
idx: 428, example: The growth in the activeness of Talentum 's customers , which started at the end of 2009 , continued during the reporting period , the company stated , prediction: 1, correct_label: 1, class_scores: [0.23591667 0.38871574 0.37536758], word_scores: ['the:6.3806996877247e-06', 'growth:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'active:0.0', '##ness:0.0', 'of:3.4365734791208524e-06', 'talent:0.0', '##um:0.0', "':0.0", 's:0.0', 'customers:0.0', ',:7.986737728060689e-06', 'which:0.0', 'started:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2009:0.0', ',:7.986737728060689e-06', 'continued:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'reporting:0.0', 'period:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'stated:3.03409819935041e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3320, device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.1572, device='cuda:0')), ('the', tensor(0.3320, device='cuda:0')), ('activeness', tensor(0., device='cuda:0')), ('of', tensor(0.1788, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3320, device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.1572, device='cuda:0')), ('the', tensor(0.3320, device='cuda:0')), ('activeness', tensor(0., device='cuda:0')), ('of', tensor(0.1788, device='cuda:0'))]
idx: 429, example: ABOUT MIDNIGHTTRADER : MidnightTrader is the premier source of extended-hours US equity trading analysis , news and forecasting for the retail and institutional investment community , prediction: 2, correct_label: 2, class_scores: [0.1645621  0.38444576 0.45099208], word_scores: ['about:0.0', 'midnight:0.0', '##tra:0.0', '##der:0.0', '::0.0', 'midnight:0.0', '##tra:0.0', '##der:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'premier:0.0', 'source:0.0', 'of:3.4365734791208524e-06', 'extended:0.0', '-:4.821180027647642e-06', 'hours:0.0', 'us:0.0', 'equity:0.0', 'trading:0.0', 'analysis:0.0', ',:7.986737728060689e-06', 'news:0.0', 'and:0.0', 'forecast:0.0', '##ing:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'retail:0.0', 'and:0.0', 'institutional:0.0', 'investment:0.0', 'community:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('about', tensor(0., device='cuda:0')), ('midnighttrader', tensor(0., device='cuda:0')), ('midnighttrader', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2200, device='cuda:0')), ('premier', tensor(0., device='cuda:0')), ('source', tensor(0., device='cuda:0')), ('of', tensor(0.1185, device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('-', tensor(0.1662, device='cuda:0')), ('hours', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('equity', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('analysis', tensor(0., device='cuda:0')), (',', tensor(0.2753, device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('forecasting', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2200, device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('institutional', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('community', tensor(0., device='cuda:0'))],  word_scores_max: [('about', tensor(0., device='cuda:0')), ('midnighttrader', tensor(0., device='cuda:0')), ('midnighttrader', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2200, device='cuda:0')), ('premier', tensor(0., device='cuda:0')), ('source', tensor(0., device='cuda:0')), ('of', tensor(0.1185, device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('-', tensor(0.1662, device='cuda:0')), ('hours', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('equity', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('analysis', tensor(0., device='cuda:0')), (',', tensor(0.2753, device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('forecasting', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2200, device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('institutional', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('community', tensor(0., device='cuda:0'))]
idx: 430, example: Finnish forest machinery manufacturer Ponsse has agreed with Volvo on the start of cooperation in Latin America , prediction: 2, correct_label: 1, class_scores: [0.20635054 0.2661546  0.5274949 ], word_scores: ['finnish:0.0', 'forest:0.0', 'machinery:0.0', 'manufacturer:0.0', 'po:0.0', '##ns:0.0', '##se:0.0', 'has:5.9214244174654596e-06', 'agreed:0.0', 'with:4.733654350275174e-06', 'volvo:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'start:0.0', 'of:3.4365734791208524e-06', 'cooperation:0.0', 'in:3.0217122457543155e-06', 'latin:0.0', 'america:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('forest', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('has', tensor(0.2520, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('with', tensor(0.2015, device='cuda:0')), ('volvo', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2716, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('of', tensor(0.1463, device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('in', tensor(0.1286, device='cuda:0')), ('latin', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('forest', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('has', tensor(0.2520, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('with', tensor(0.2015, device='cuda:0')), ('volvo', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2716, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('of', tensor(0.1463, device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('in', tensor(0.1286, device='cuda:0')), ('latin', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0'))]
idx: 431, example: In Q1 of 2009 , the company 's result before taxes from continuing operations , excluding non-recurring items , totalled EUR -0.4 mn , compared to EUR -0.1 mn in the corresponding period in 2008 , prediction: 1, correct_label: 0, class_scores: [0.23304683 0.4030912  0.363862  ], word_scores: ['in:3.0217122457543155e-06', 'q:0.0', '##1:0.0', 'of:3.4365734791208524e-06', '2009:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'result:0.0', 'before:0.0', 'taxes:0.0', 'from:4.495178018260049e-06', 'continuing:0.0', 'operations:0.0', ',:7.986737728060689e-06', 'excluding:0.0', 'non:0.0', '-:4.821180027647642e-06', 'recurring:0.0', 'items:0.0', ',:7.986737728060689e-06', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '-:4.821180027647642e-06', '0:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '-:4.821180027647642e-06', '0:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1451, device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('of', tensor(0.1650, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.3835, device='cuda:0')), ('the', tensor(0.3064, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1451, device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('of', tensor(0.1650, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.3835, device='cuda:0')), ('the', tensor(0.3064, device='cuda:0'))]
idx: 432, example: Operating result , excluding one-off items , totaled EUR 9.1 mn compared to EUR 10.6 mn in continuing operations , excluding one-off items in 2004 , prediction: 2, correct_label: 0, class_scores: [0.14091808 0.38101256 0.47806934], word_scores: ['operating:0.0', 'result:0.0', ',:7.986737728060689e-06', 'excluding:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'off:0.0', 'items:0.0', ',:7.986737728060689e-06', 'totaled:0.0', 'eu:0.0', '##r:0.0', '9:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '10:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'continuing:0.0', 'operations:0.0', ',:7.986737728060689e-06', 'excluding:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'off:0.0', 'items:0.0', 'in:3.0217122457543155e-06', '2004:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.0797, device='cuda:0')), ('-', tensor(0.0838, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0505, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0502, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0505, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0525, device='cuda:0')), ('continuing', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.0797, device='cuda:0')), ('-', tensor(0.0838, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), ('in', tensor(0.0525, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.0797, device='cuda:0')), ('-', tensor(0.0838, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0505, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0502, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0505, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0525, device='cuda:0')), ('continuing', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.1389, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.0797, device='cuda:0')), ('-', tensor(0.0838, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), ('in', tensor(0.0525, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 433, example: Under the rental agreement , Stockmann was committed to invest in the building of a bridge over the Gogol Street or build an underground tunnel for crossing the street by 2004 , prediction: 1, correct_label: 2, class_scores: [0.17885059 0.48296335 0.33818606], word_scores: ['under:0.0', 'the:6.3806996877247e-06', 'rental:0.0', 'agreement:0.0', ',:7.986737728060689e-06', 'stock:0.0', '##mann:0.0', 'was:0.0', 'committed:0.0', 'to:2.886244146793615e-06', 'invest:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'building:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'bridge:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'go:0.0', '##gol:0.0', 'street:0.0', 'or:0.0', 'build:0.0', 'an:0.0', 'underground:0.0', 'tunnel:0.0', 'for:0.0', 'crossing:0.0', 'the:6.3806996877247e-06', 'street:0.0', 'by:0.0', '2004:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('under', tensor(0., device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('rental', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('stockmann', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('committed', tensor(0., device='cuda:0')), ('to', tensor(0.0561, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('of', tensor(0.0668, device='cuda:0')), ('a', tensor(0.1676, device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('gogol', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('build', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('underground', tensor(0., device='cuda:0')), ('tunnel', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('crossing', tensor(0., device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('under', tensor(0., device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('rental', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('stockmann', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('committed', tensor(0., device='cuda:0')), ('to', tensor(0.0561, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('of', tensor(0.0668, device='cuda:0')), ('a', tensor(0.1676, device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('gogol', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('build', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('underground', tensor(0., device='cuda:0')), ('tunnel', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('crossing', tensor(0., device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 434, example: Operating profit margin increased from 11.2 % to 11.7 % , prediction: 1, correct_label: 1, class_scores: [0.15518375 0.46140796 0.3834083 ], word_scores: ['operating:0.0', 'profit:0.0', 'margin:0.0', 'increased:0.0', 'from:4.495178018260049e-06', '11:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', 'to:2.886244146793615e-06', '11:0.0', '.:2.903296945078182e-06', '7:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('7', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('7', tensor(0., device='cuda:0'))]
idx: 435, example: Citigroup , Inc NYSE : C , Deutsche Bank NYSE : DB and Pohjola Bank are lead managers for the sale , prediction: 2, correct_label: 2, class_scores: [0.23373403 0.30102882 0.4652372 ], word_scores: ['ci:0.0', '##ti:2.5915114747476764e-06', '##group:0.0', ',:7.986737728060689e-06', 'inc:0.0', 'ny:0.0', '##se:0.0', '::0.0', 'c:0.0', ',:7.986737728060689e-06', 'deutsche:0.0', 'bank:0.0', 'ny:0.0', '##se:0.0', '::0.0', 'db:0.0', 'and:0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'bank:0.0', 'are:0.0', 'lead:0.0', 'managers:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'sale:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('citigroup', tensor(0.1039, device='cuda:0')), (',', tensor(0.3202, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('c', tensor(0., device='cuda:0')), (',', tensor(0.3202, device='cuda:0')), ('deutsche', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('db', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('managers', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2558, device='cuda:0')), ('sale', tensor(0., device='cuda:0'))],  word_scores_max: [('citigroup', tensor(0.1039, device='cuda:0')), (',', tensor(0.3202, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('c', tensor(0., device='cuda:0')), (',', tensor(0.3202, device='cuda:0')), ('deutsche', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('db', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('managers', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2558, device='cuda:0')), ('sale', tensor(0., device='cuda:0'))]
idx: 436, example: Stora Enso owns 43 percent of Bergvik and earns therefore SEK 1.5 bn on the value appreciation , prediction: 2, correct_label: 1, class_scores: [0.18051736 0.30818585 0.51129687], word_scores: ['st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'owns:0.0', '43:0.0', 'percent:0.0', 'of:3.4365734791208524e-06', 'berg:0.0', '##vik:0.0', 'and:0.0', 'earn:0.0', '##s:4.601175078278175e-06', 'therefore:0.0', 'se:0.0', '##k:0.0', '1:0.0', '.:2.903296945078182e-06', '5:0.0', 'bn:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'value:0.0', 'appreciation:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.1443, device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('of', tensor(0.2312, device='cuda:0')), ('bergvik', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('earns', tensor(0., device='cuda:0')), ('therefore', tensor(0., device='cuda:0')), ('sek', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1953, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('bn', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.4292, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('appreciation', tensor(0., device='cuda:0'))],  word_scores_max: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.1443, device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('of', tensor(0.2312, device='cuda:0')), ('bergvik', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('earns', tensor(0., device='cuda:0')), ('therefore', tensor(0., device='cuda:0')), ('sek', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1953, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('bn', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.4292, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('appreciation', tensor(0., device='cuda:0'))]
idx: 437, example: UPM-Kymmene is working closely with its shipping agents to reduce fuel consumption and greenhouse gas emissions , prediction: 2, correct_label: 1, class_scores: [0.23636656 0.37612554 0.38750792], word_scores: ['up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', 'is:0.0', 'working:0.0', 'closely:0.0', 'with:4.733654350275174e-06', 'its:1.7191393908433383e-06', 'shipping:0.0', 'agents:0.0', 'to:2.886244146793615e-06', 'reduce:0.0', 'fuel:0.0', 'consumption:0.0', 'and:0.0', 'greenhouse:0.0', 'gas:0.0', 'emissions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('upm', tensor(0.0955, device='cuda:0')), ('-', tensor(0.3079, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('closely', tensor(0., device='cuda:0')), ('with', tensor(0.3024, device='cuda:0')), ('its', tensor(0.1098, device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('agents', tensor(0., device='cuda:0')), ('to', tensor(0.1844, device='cuda:0')), ('reduce', tensor(0., device='cuda:0')), ('fuel', tensor(0., device='cuda:0')), ('consumption', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('greenhouse', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0'))],  word_scores_max: [('upm', tensor(0.0955, device='cuda:0')), ('-', tensor(0.3079, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('closely', tensor(0., device='cuda:0')), ('with', tensor(0.3024, device='cuda:0')), ('its', tensor(0.1098, device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('agents', tensor(0., device='cuda:0')), ('to', tensor(0.1844, device='cuda:0')), ('reduce', tensor(0., device='cuda:0')), ('fuel', tensor(0., device='cuda:0')), ('consumption', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('greenhouse', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0'))]
idx: 438, example: The total value of the deliveries is some EUR65m , prediction: 2, correct_label: 2, class_scores: [0.23433734 0.33095166 0.43471098], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'deliveries:0.0', 'is:0.0', 'some:0.0', 'eu:0.0', '##r:0.0', '##65:0.0', '##m:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('deliveries', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('eur65m', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('deliveries', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('eur65m', tensor(0., device='cuda:0'))]
idx: 439, example: Finnish Suominen Corporation that makes wipes , nonwovens , and flexible packaging , expects changes in the market situation to reduce sales of Suominen 's nonwovens and wet wipes from the previously estimated volumes , prediction: 2, correct_label: 0, class_scores: [0.21999674 0.37467992 0.40532336], word_scores: ['finnish:0.0', 'su:0.0', '##omi:0.0', '##nen:0.0', 'corporation:0.0', 'that:1.5133816759771435e-06', 'makes:0.0', 'wipe:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'non:0.0', '##wo:0.0', '##ven:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'and:0.0', 'flexible:0.0', 'packaging:0.0', ',:7.986737728060689e-06', 'expects:0.0', 'changes:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'market:0.0', 'situation:0.0', 'to:2.886244146793615e-06', 'reduce:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'su:0.0', '##omi:0.0', '##nen:0.0', "':0.0", 's:0.0', 'non:0.0', '##wo:0.0', '##ven:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'wet:0.0', 'wipe:0.0', '##s:4.601175078278175e-06', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'previously:0.0', 'estimated:0.0', 'volumes:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('suominen', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('that', tensor(0.0367, device='cuda:0')), ('makes', tensor(0., device='cuda:0')), ('wipes', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('nonwovens', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('flexible', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('in', tensor(0.0733, device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('to', tensor(0.0701, device='cuda:0')), ('reduce', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0834, device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('suominen', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('that', tensor(0.0367, device='cuda:0')), ('makes', tensor(0., device='cuda:0')), ('wipes', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('nonwovens', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('flexible', tensor(0., device='cuda:0')), ('packaging', tensor(0., device='cuda:0')), (',', tensor(0.1939, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('in', tensor(0.0733, device='cuda:0')), ('the', tensor(0.1549, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('to', tensor(0.0701, device='cuda:0')), ('reduce', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0834, device='cuda:0'))]
idx: 440, example: The credit covers approximately 70 % of the ship 's price , prediction: 2, correct_label: 2, class_scores: [0.21921626 0.3532029  0.42758086], word_scores: ['the:6.3806996877247e-06', 'credit:0.0', 'covers:0.0', 'approximately:0.0', '70:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'ship:0.0', "':0.0", 's:0.0', 'price:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('covers', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('covers', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))]
idx: 441, example: Net sales of Kyro 's main business area , Glaston Technologies , a manufacturer of glass processing machines , decreased to EUR 161.5 mn from EUR 164.1 mn in January-September 2005 , prediction: 1, correct_label: 0, class_scores: [0.19231716 0.40893513 0.39874774], word_scores: ['net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'ky:0.0', '##ro:0.0', "':0.0", 's:0.0', 'main:0.0', 'business:0.0', 'area:0.0', ',:7.986737728060689e-06', 'g:0.0', '##las:0.0', '##ton:0.0', 'technologies:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'manufacturer:0.0', 'of:3.4365734791208524e-06', 'glass:0.0', 'processing:0.0', 'machines:0.0', ',:7.986737728060689e-06', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '161:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '164:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'january:0.0', '-:4.821180027647642e-06', 'september:0.0', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))]
idx: 442, example: `` Marimekko operates in an industry in which changes in the business climate are reflected in consumer demand , prediction: 2, correct_label: 2, class_scores: [0.20427068 0.38557306 0.41015628], word_scores: ['`:0.0', '`:0.0', 'mari:0.0', '##me:0.0', '##kko:0.0', 'operates:0.0', 'in:3.0217122457543155e-06', 'an:0.0', 'industry:0.0', 'in:3.0217122457543155e-06', 'which:0.0', 'changes:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'business:0.0', 'climate:0.0', 'are:0.0', 'reflected:0.0', 'in:3.0217122457543155e-06', 'consumer:0.0', 'demand:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('marimekko', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('the', tensor(0.3455, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('climate', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('reflected', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0'))],  word_scores_max: [('marimekko', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('the', tensor(0.3455, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('climate', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('reflected', tensor(0., device='cuda:0')), ('in', tensor(0.1636, device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0'))]
idx: 443, example: `` Nokia is just interested in bring Nokia to the market . ', prediction: 2, correct_label: 2, class_scores: [0.288179   0.27040958 0.44141147], word_scores: ['`:0.0', '`:0.0', 'nokia:0.0', 'is:0.0', 'just:0.0', 'interested:0.0', 'in:3.0217122457543155e-06', 'bring:0.0', 'nokia:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'market:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('interested', tensor(0., device='cuda:0')), ('in', tensor(0.1989, device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('to', tensor(0.1900, device='cuda:0')), ('the', tensor(0.4200, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('.', tensor(0.1911, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('interested', tensor(0., device='cuda:0')), ('in', tensor(0.1989, device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('to', tensor(0.1900, device='cuda:0')), ('the', tensor(0.4200, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('.', tensor(0.1911, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 444, example: The company has a wide selection of metal products and services , prediction: 1, correct_label: 2, class_scores: [0.21832918 0.4736401  0.3080307 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'wide:0.0', 'selection:0.0', 'of:3.4365734791208524e-06', 'metal:0.0', 'products:0.0', 'and:0.0', 'services:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2054, device='cuda:0')), ('company', tensor(0.2155, device='cuda:0')), ('has', tensor(0.1906, device='cuda:0')), ('a', tensor(0.2778, device='cuda:0')), ('wide', tensor(0., device='cuda:0')), ('selection', tensor(0., device='cuda:0')), ('of', tensor(0.1106, device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2054, device='cuda:0')), ('company', tensor(0.2155, device='cuda:0')), ('has', tensor(0.1906, device='cuda:0')), ('a', tensor(0.2778, device='cuda:0')), ('wide', tensor(0., device='cuda:0')), ('selection', tensor(0., device='cuda:0')), ('of', tensor(0.1106, device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0'))]
idx: 445, example: The employer-employee talks concerned about 500 people , that is , the whole staff in Finland , prediction: 2, correct_label: 2, class_scores: [0.23944326 0.27568027 0.4848765 ], word_scores: ['the:6.3806996877247e-06', 'employer:0.0', '-:4.821180027647642e-06', 'employee:0.0', 'talks:0.0', 'concerned:0.0', 'about:0.0', '500:0.0', 'people:0.0', ',:7.986737728060689e-06', 'that:1.5133816759771435e-06', 'is:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'whole:0.0', 'staff:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1512, device='cuda:0')), ('employer', tensor(0., device='cuda:0')), ('-', tensor(0.1143, device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('concerned', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), (',', tensor(0.1893, device='cuda:0')), ('that', tensor(0.0359, device='cuda:0')), ('is', tensor(0., device='cuda:0')), (',', tensor(0.1893, device='cuda:0')), ('the', tensor(0.1512, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('in', tensor(0.0716, device='cuda:0')), ('finland', tensor(0.0971, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1512, device='cuda:0')), ('employer', tensor(0., device='cuda:0')), ('-', tensor(0.1143, device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('concerned', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), (',', tensor(0.1893, device='cuda:0')), ('that', tensor(0.0359, device='cuda:0')), ('is', tensor(0., device='cuda:0')), (',', tensor(0.1893, device='cuda:0')), ('the', tensor(0.1512, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('in', tensor(0.0716, device='cuda:0')), ('finland', tensor(0.0971, device='cuda:0'))]
idx: 446, example: Elcoteq has a proven track record in electronics manufacturing services ( EMS ) and a global factory network coupled with modern manufacturing equipment and consistent systems and processes , prediction: 2, correct_label: 1, class_scores: [0.15214604 0.37855935 0.46929464], word_scores: ['el:0.0', '##cote:0.0', '##q:0.0', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'proven:0.0', 'track:0.0', 'record:0.0', 'in:3.0217122457543155e-06', 'electronics:0.0', 'manufacturing:0.0', 'services:0.0', '(:0.0', 'ems:0.0', '):0.0', 'and:0.0', 'a:8.62785782373976e-06', 'global:0.0', 'factory:0.0', 'network:0.0', 'coupled:0.0', 'with:4.733654350275174e-06', 'modern:0.0', 'manufacturing:0.0', 'equipment:0.0', 'and:0.0', 'consistent:0.0', 'systems:0.0', 'and:0.0', 'processes:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('elcoteq', tensor(0., device='cuda:0')), ('has', tensor(0.1914, device='cuda:0')), ('a', tensor(0.2789, device='cuda:0')), ('proven', tensor(0., device='cuda:0')), ('track', tensor(0., device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('in', tensor(0.0977, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('ems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.2789, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('factory', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('coupled', tensor(0., device='cuda:0')), ('with', tensor(0.1530, device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('consistent', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0'))],  word_scores_max: [('elcoteq', tensor(0., device='cuda:0')), ('has', tensor(0.1914, device='cuda:0')), ('a', tensor(0.2789, device='cuda:0')), ('proven', tensor(0., device='cuda:0')), ('track', tensor(0., device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('in', tensor(0.0977, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('ems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.2789, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('factory', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('coupled', tensor(0., device='cuda:0')), ('with', tensor(0.1530, device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('consistent', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0'))]
idx: 447, example: Nevertheless , Fitch notes that the business fundamentals of the three banks currently remain sound , prediction: 1, correct_label: 1, class_scores: [0.16256791 0.4968945  0.34053758], word_scores: ['nevertheless:0.0', ',:7.986737728060689e-06', 'fitch:0.0', 'notes:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'business:0.0', 'fundamental:0.0', '##s:4.601175078278175e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'three:0.0', 'banks:0.0', 'currently:0.0', 'remain:0.0', 'sound:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nevertheless', tensor(0., device='cuda:0')), (',', tensor(0.3108, device='cuda:0')), ('fitch', tensor(0., device='cuda:0')), ('notes', tensor(0., device='cuda:0')), ('that', tensor(0.0589, device='cuda:0')), ('the', tensor(0.2483, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('fundamentals', tensor(0., device='cuda:0')), ('of', tensor(0.1337, device='cuda:0')), ('the', tensor(0.2483, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('sound', tensor(0., device='cuda:0'))],  word_scores_max: [('nevertheless', tensor(0., device='cuda:0')), (',', tensor(0.3108, device='cuda:0')), ('fitch', tensor(0., device='cuda:0')), ('notes', tensor(0., device='cuda:0')), ('that', tensor(0.0589, device='cuda:0')), ('the', tensor(0.2483, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('fundamentals', tensor(0., device='cuda:0')), ('of', tensor(0.1337, device='cuda:0')), ('the', tensor(0.2483, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('sound', tensor(0., device='cuda:0'))]
idx: 448, example: The total value of the order , placed by Aspo ' marine transportation subsidiary ESL Shipping Oy , is EUR 60 million ( USD 77.5 m ) , prediction: 2, correct_label: 2, class_scores: [0.19200952 0.35207206 0.45591843], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'order:0.0', ',:7.986737728060689e-06', 'placed:0.0', 'by:0.0', 'as:0.0', '##po:0.0', "':0.0", 'marine:0.0', 'transportation:0.0', 'subsidiary:0.0', 'es:2.450917691021459e-06', '##l:0.0', 'shipping:0.0', 'o:0.0', '##y:1.832826342251792e-06', ',:7.986737728060689e-06', 'is:0.0', 'eu:0.0', '##r:0.0', '60:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '77:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2638, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1421, device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('order', tensor(0., device='cuda:0')), (',', tensor(0.3302, device='cuda:0')), ('placed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2638, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1421, device='cuda:0')), ('the', tensor(0.2638, device='cuda:0')), ('order', tensor(0., device='cuda:0')), (',', tensor(0.3302, device='cuda:0')), ('placed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))]
idx: 449, example: The options might include a partial or total divestment of their shareholdings in Ovako , prediction: 2, correct_label: 2, class_scores: [0.17532417 0.351074   0.47360182], word_scores: ['the:6.3806996877247e-06', 'options:0.0', 'might:0.0', 'include:0.0', 'a:8.62785782373976e-06', 'partial:0.0', 'or:0.0', 'total:0.0', 'dive:0.0', '##st:0.0', '##ment:0.0', 'of:3.4365734791208524e-06', 'their:0.0', 'share:0.0', '##holding:0.0', '##s:4.601175078278175e-06', 'in:3.0217122457543155e-06', 'o:0.0', '##va:0.0', '##ko:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2972, device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('might', tensor(0., device='cuda:0')), ('include', tensor(0., device='cuda:0')), ('a', tensor(0.4019, device='cuda:0')), ('partial', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('divestment', tensor(0., device='cuda:0')), ('of', tensor(0.1601, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('shareholdings', tensor(0., device='cuda:0')), ('in', tensor(0.1408, device='cuda:0')), ('ovako', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2972, device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('might', tensor(0., device='cuda:0')), ('include', tensor(0., device='cuda:0')), ('a', tensor(0.4019, device='cuda:0')), ('partial', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('divestment', tensor(0., device='cuda:0')), ('of', tensor(0.1601, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('shareholdings', tensor(0., device='cuda:0')), ('in', tensor(0.1408, device='cuda:0')), ('ovako', tensor(0., device='cuda:0'))]
idx: 450, example: The pretax profit of the group 's life insurance business increased to EUR 36 million from EUR 27 million , prediction: 2, correct_label: 1, class_scores: [0.21254408 0.35196203 0.43549386], word_scores: ['the:6.3806996877247e-06', 'pre:0.0', '##ta:0.0', '##x:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'life:0.0', 'insurance:0.0', 'business:0.0', 'increased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '36:0.0', 'million:6.018835847498849e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '27:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))]
idx: 451, example: hybrid bond 18 January 2010 - Finnish IT consultancy Trainers ' House Oyj HEL : TRH1V said last Friday it resolved to issue a EUR5m hybrid bond to domestic investors in a bid to strengthen its capital structure , prediction: 2, correct_label: 2, class_scores: [0.20001028 0.30803165 0.491958  ], word_scores: ['hybrid:0.0', 'bond:0.0', '18:0.0', 'january:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'it:3.3415778943890473e-06', 'consultancy:0.0', 'trainers:0.0', "':0.0", 'house:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'tr:0.0', '##h:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'last:0.0', 'friday:0.0', 'it:3.3415778943890473e-06', 'resolved:0.0', 'to:2.886244146793615e-06', 'issue:0.0', 'a:8.62785782373976e-06', 'eu:0.0', '##r:0.0', '##5:0.0', '##m:0.0', 'hybrid:0.0', 'bond:0.0', 'to:2.886244146793615e-06', 'domestic:0.0', 'investors:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'bid:0.0', 'to:2.886244146793615e-06', 'strengthen:0.0', 'its:1.7191393908433383e-06', 'capital:0.0', 'structure:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('hybrid', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.5906, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('it', tensor(0.4094, device='cuda:0')), ('consultancy', tensor(0., device='cuda:0'))],  word_scores_max: [('hybrid', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.5906, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('it', tensor(0.4094, device='cuda:0')), ('consultancy', tensor(0., device='cuda:0'))]
idx: 452, example: The contract will take effect in 2009 for a five or ten year period , prediction: 2, correct_label: 2, class_scores: [0.21704203 0.34081885 0.44213912], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'will:4.073096533829812e-06', 'take:2.0325496734585613e-06', 'effect:0.0', 'in:3.0217122457543155e-06', '2009:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'five:0.0', 'or:0.0', 'ten:0.0', 'year:0.0', 'period:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2037, device='cuda:0')), ('contract', tensor(0.2294, device='cuda:0')), ('will', tensor(0.1300, device='cuda:0')), ('take', tensor(0.0649, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('in', tensor(0.0965, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2755, device='cuda:0')), ('five', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('ten', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2037, device='cuda:0')), ('contract', tensor(0.2294, device='cuda:0')), ('will', tensor(0.1300, device='cuda:0')), ('take', tensor(0.0649, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('in', tensor(0.0965, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2755, device='cuda:0')), ('five', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('ten', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0'))]
idx: 453, example: It is expected to be completed by the end of 2007 , prediction: 2, correct_label: 2, class_scores: [0.20241207 0.3411734  0.45641455], word_scores: ['it:3.3415778943890473e-06', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'completed:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2007:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('it', tensor(0.2083, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1799, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.3977, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.2142, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.2083, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.1799, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.3977, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.2142, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 454, example: Mr. Kari Stadigh will carry on as Chairman of the Board and Mr. Matti Arteva as Vice-Chairman , prediction: 2, correct_label: 2, class_scores: [0.1891039  0.35711476 0.45378137], word_scores: ['mr:0.0', '.:2.903296945078182e-06', 'kari:0.0', 'st:0.0', '##adi:0.0', '##gh:0.0', 'will:4.073096533829812e-06', 'carry:0.0', 'on:0.0', 'as:0.0', 'chairman:3.5376444884605007e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'board:0.0', 'and:0.0', 'mr:0.0', '.:2.903296945078182e-06', 'matt:0.0', '##i:0.0', 'arte:0.0', '##va:0.0', 'as:0.0', 'vice:0.0', '-:4.821180027647642e-06', 'chairman:3.5376444884605007e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('mr', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('kari', tensor(0., device='cuda:0')), ('stadigh', tensor(0., device='cuda:0')), ('will', tensor(0.1289, device='cuda:0')), ('carry', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('chairman', tensor(0.1120, device='cuda:0')), ('of', tensor(0.1088, device='cuda:0')), ('the', tensor(0.2020, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('mr', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('matti', tensor(0., device='cuda:0')), ('arteva', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('vice', tensor(0., device='cuda:0')), ('-', tensor(0.1526, device='cuda:0')), ('chairman', tensor(0.1120, device='cuda:0'))],  word_scores_max: [('mr', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('kari', tensor(0., device='cuda:0')), ('stadigh', tensor(0., device='cuda:0')), ('will', tensor(0.1289, device='cuda:0')), ('carry', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('chairman', tensor(0.1120, device='cuda:0')), ('of', tensor(0.1088, device='cuda:0')), ('the', tensor(0.2020, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('mr', tensor(0., device='cuda:0')), ('.', tensor(0.0919, device='cuda:0')), ('matti', tensor(0., device='cuda:0')), ('arteva', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('vice', tensor(0., device='cuda:0')), ('-', tensor(0.1526, device='cuda:0')), ('chairman', tensor(0.1120, device='cuda:0'))]
idx: 455, example: ADPnews - Feb 5 , 2010 - Finnish real estate investor Sponda Oyj HEL : SDA1V said today that it slipped to a net loss of EUR 81.5 million USD 11.8 m in 2009 from a profit of EUR 29.3 million in 2008 , prediction: 2, correct_label: 0, class_scores: [0.17492865 0.37537348 0.4496979 ], word_scores: ['ad:0.0', '##p:0.0', '##ne:8.183636964531615e-06', '##ws:0.0', '-:4.821180027647642e-06', 'feb:0.0', '5:0.0', ',:7.986737728060689e-06', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'real:0.0', 'estate:0.0', 'investor:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'sd:0.0', '##a1:0.0', '##v:0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'slipped:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'net:0.0', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '81:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', 'usd:0.0', '11:0.0', '.:2.903296945078182e-06', '8:0.0', 'm:0.0', 'in:3.0217122457543155e-06', '2009:0.0', 'from:4.495178018260049e-06', 'a:8.62785782373976e-06', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '29:0.0', '.:2.903296945078182e-06', '3:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adpnews', tensor(0.0901, device='cuda:0')), ('-', tensor(0.0531, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), (',', tensor(0.0880, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0531, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('oyj', tensor(0.0202, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('sda1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0167, device='cuda:0')), ('it', tensor(0.0368, device='cuda:0')), ('slipped', tensor(0., device='cuda:0')), ('to', tensor(0.0318, device='cuda:0')), ('a', tensor(0.0950, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0378, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('81', tensor(0., device='cuda:0')), ('.', tensor(0.0320, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.0663, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0320, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0333, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('from', tensor(0.0495, device='cuda:0')), ('a', tensor(0.0950, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0378, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('.', tensor(0.0320, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('million', tensor(0.0663, device='cuda:0')), ('in', tensor(0.0333, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('adpnews', tensor(0.0901, device='cuda:0')), ('-', tensor(0.0531, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), (',', tensor(0.0880, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0531, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('oyj', tensor(0.0202, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('sda1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0167, device='cuda:0')), ('it', tensor(0.0368, device='cuda:0')), ('slipped', tensor(0., device='cuda:0')), ('to', tensor(0.0318, device='cuda:0')), ('a', tensor(0.0950, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0378, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('81', tensor(0., device='cuda:0')), ('.', tensor(0.0320, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.0663, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0320, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0333, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('from', tensor(0.0495, device='cuda:0')), ('a', tensor(0.0950, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0378, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('.', tensor(0.0320, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('million', tensor(0.0663, device='cuda:0')), ('in', tensor(0.0333, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 456, example: The Group aims to increase its net sales and comparable operating profit in 2006 , prediction: 2, correct_label: 1, class_scores: [0.19355062 0.2913718  0.5150776 ], word_scores: ['the:6.3806996877247e-06', 'group:0.0', 'aims:0.0', 'to:2.886244146793615e-06', 'increase:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'sales:0.0', 'and:0.0', 'comparable:0.0', 'operating:0.0', 'profit:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4555, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.2060, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('its', tensor(0.1227, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('comparable', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('in', tensor(0.2157, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4555, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.2060, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('its', tensor(0.1227, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('comparable', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('in', tensor(0.2157, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 457, example: Under the transaction agreement , Metsaliitto will purchase 24.7 % of Metsa-Botnia 's shares from UPM and 3 % from M-real , prediction: 2, correct_label: 2, class_scores: [0.16685991 0.32900324 0.50413686], word_scores: ['under:0.0', 'the:6.3806996877247e-06', 'transaction:0.0', 'agreement:0.0', ',:7.986737728060689e-06', 'mets:0.0', '##ali:0.0', '##itt:0.0', '##o:0.0', 'will:4.073096533829812e-06', 'purchase:0.0', '24:0.0', '.:2.903296945078182e-06', '7:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'mets:0.0', '##a:3.804580501309829e-06', '-:4.821180027647642e-06', 'bot:0.0', '##nia:0.0', "':0.0", 's:0.0', 'shares:0.0', 'from:4.495178018260049e-06', 'up:1.4959460941099678e-06', '##m:0.0', 'and:0.0', '3:0.0', '%:0.0', 'from:4.495178018260049e-06', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('under', tensor(0., device='cuda:0')), ('the', tensor(0.2156, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.2698, device='cuda:0')), ('metsaliitto', tensor(0., device='cuda:0')), ('will', tensor(0.1376, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(0.0981, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('of', tensor(0.1161, device='cuda:0')), ('metsa', tensor(0., device='cuda:0')), ('-', tensor(0.1629, device='cuda:0'))],  word_scores_max: [('under', tensor(0., device='cuda:0')), ('the', tensor(0.2156, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.2698, device='cuda:0')), ('metsaliitto', tensor(0., device='cuda:0')), ('will', tensor(0.1376, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(0.0981, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('of', tensor(0.1161, device='cuda:0')), ('metsa', tensor(0., device='cuda:0')), ('-', tensor(0.1629, device='cuda:0'))]
idx: 458, example: The devices also contains Finnair 's own application for compiling customer feed-back and ideas for product development , prediction: 2, correct_label: 2, class_scores: [0.19191211 0.3949694  0.41311848], word_scores: ['the:6.3806996877247e-06', 'devices:0.0', 'also:0.0', 'contains:0.0', 'finn:0.0', '##air:0.0', "':0.0", 's:0.0', 'own:0.0', 'application:0.0', 'for:0.0', 'compiling:0.0', 'customer:0.0', 'feed:0.0', '-:4.821180027647642e-06', 'back:0.0', 'and:0.0', 'ideas:0.0', 'for:0.0', 'product:0.0', 'development:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('contains', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('contains', tensor(0., device='cuda:0'))]
idx: 459, example: The EBRD is using its own funds to provide a 21.6 million A loan while the B portion of 10 million Euros has been syndicated to two Finnish commercial banks , Nordea Bank Finland Plc 7.7 million Euros and Pohjola Bank Plc 2.3 million Euros , prediction: 2, correct_label: 2, class_scores: [0.17191306 0.28028885 0.5477981 ], word_scores: ['the:6.3806996877247e-06', 'e:0.0', '##br:0.0', '##d:0.0', 'is:0.0', 'using:0.0', 'its:1.7191393908433383e-06', 'own:0.0', 'funds:0.0', 'to:2.886244146793615e-06', 'provide:0.0', 'a:8.62785782373976e-06', '21:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'a:8.62785782373976e-06', 'loan:0.0', 'while:0.0', 'the:6.3806996877247e-06', 'b:0.0', 'portion:0.0', 'of:3.4365734791208524e-06', '10:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'syndicated:0.0', 'to:2.886244146793615e-06', 'two:0.0', 'finnish:0.0', 'commercial:0.0', 'banks:0.0', ',:7.986737728060689e-06', 'nord:0.0', '##ea:0.0', 'bank:0.0', 'finland:4.096111752005527e-06', 'plc:0.0', '7:0.0', '.:2.903296945078182e-06', '7:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'and:0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'bank:0.0', 'plc:0.0', '2:0.0', '.:2.903296945078182e-06', '3:0.0', 'million:6.018835847498849e-06', 'euros:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0696, device='cuda:0')), ('ebrd', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('using', tensor(0., device='cuda:0')), ('its', tensor(0.0187, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('to', tensor(0.0315, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('a', tensor(0.0941, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0316, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('a', tensor(0.0941, device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('the', tensor(0.0696, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('portion', tensor(0., device='cuda:0')), ('of', tensor(0.0375, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('has', tensor(0.0645, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('syndicated', tensor(0., device='cuda:0')), ('to', tensor(0.0315, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('commercial', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), (',', tensor(0.0871, device='cuda:0')), ('nordea', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('finland', tensor(0.0447, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0316, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0316, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('euros', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0696, device='cuda:0')), ('ebrd', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('using', tensor(0., device='cuda:0')), ('its', tensor(0.0187, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('to', tensor(0.0315, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('a', tensor(0.0941, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0316, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('a', tensor(0.0941, device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('the', tensor(0.0696, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('portion', tensor(0., device='cuda:0')), ('of', tensor(0.0375, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('has', tensor(0.0645, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('syndicated', tensor(0., device='cuda:0')), ('to', tensor(0.0315, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('commercial', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), (',', tensor(0.0871, device='cuda:0')), ('nordea', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('finland', tensor(0.0447, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0316, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0316, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('million', tensor(0.0656, device='cuda:0')), ('euros', tensor(0., device='cuda:0'))]
idx: 460, example: Philips was not available to comment on the report , prediction: 2, correct_label: 2, class_scores: [0.24321142 0.34104064 0.41574794], word_scores: ['philips:0.0', 'was:0.0', 'not:0.0', 'available:0.0', 'to:2.886244146793615e-06', 'comment:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'report:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('philips', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('to', tensor(0.3115, device='cuda:0')), ('comment', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.6885, device='cuda:0')), ('report', tensor(0., device='cuda:0'))],  word_scores_max: [('philips', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('to', tensor(0.3115, device='cuda:0')), ('comment', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.6885, device='cuda:0')), ('report', tensor(0., device='cuda:0'))]
idx: 461, example: Nokia said it still expects to sell 150 more million Symbian devices in years to come , giving an indication of how it expects the Phone 7 handoff to work , prediction: 1, correct_label: 2, class_scores: [0.15802135 0.45022193 0.39175674], word_scores: ['nokia:0.0', 'said:0.0', 'it:3.3415778943890473e-06', 'still:0.0', 'expects:0.0', 'to:2.886244146793615e-06', 'sell:0.0', '150:0.0', 'more:0.0', 'million:6.018835847498849e-06', 'sy:0.0', '##mb:0.0', '##ian:0.0', 'devices:0.0', 'in:3.0217122457543155e-06', 'years:0.0', 'to:2.886244146793615e-06', 'come:0.0', ',:7.986737728060689e-06', 'giving:0.0', 'an:0.0', 'indication:0.0', 'of:3.4365734791208524e-06', 'how:0.0', 'it:3.3415778943890473e-06', 'expects:0.0', 'the:6.3806996877247e-06', 'phone:0.0', '7:0.0', 'hand:0.0', '##off:0.0', 'to:2.886244146793615e-06', 'work:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0792, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('to', tensor(0.0684, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('150', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('million', tensor(0.1427, device='cuda:0')), ('symbian', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('in', tensor(0.0716, device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('to', tensor(0.0684, device='cuda:0')), ('come', tensor(0., device='cuda:0')), (',', tensor(0.1893, device='cuda:0')), ('giving', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('indication', tensor(0., device='cuda:0')), ('of', tensor(0.0815, device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('it', tensor(0.0792, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('the', tensor(0.1512, device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('handoff', tensor(0., device='cuda:0')), ('to', tensor(0.0684, device='cuda:0')), ('work', tensor(0., device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0792, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('to', tensor(0.0684, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('150', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('million', tensor(0.1427, device='cuda:0')), ('symbian', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('in', tensor(0.0716, device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('to', tensor(0.0684, device='cuda:0')), ('come', tensor(0., device='cuda:0')), (',', tensor(0.1893, device='cuda:0')), ('giving', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('indication', tensor(0., device='cuda:0')), ('of', tensor(0.0815, device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('it', tensor(0.0792, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('the', tensor(0.1512, device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('handoff', tensor(0., device='cuda:0')), ('to', tensor(0.0684, device='cuda:0')), ('work', tensor(0., device='cuda:0'))]
idx: 462, example: Aviation Systems Maintenance is based in Kansas and generated net sales of USD 2.6 million for 2008 , prediction: 2, correct_label: 2, class_scores: [0.20147383 0.3292281  0.469298  ], word_scores: ['aviation:0.0', 'systems:0.0', 'maintenance:0.0', 'is:0.0', 'based:0.0', 'in:3.0217122457543155e-06', 'kansas:0.0', 'and:0.0', 'generated:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'usd:0.0', '2:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'for:0.0', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aviation', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.1965, device='cuda:0')), ('kansas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.2234, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1888, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.3913, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('aviation', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.1965, device='cuda:0')), ('kansas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.2234, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1888, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.3913, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 463, example: Brazilian non-profit interbank Camara Interbancaria de Pagamentos CIP has acquired solutions from US business integration solutions provider Sterling Commerce , the latter company said in a statement , prediction: 2, correct_label: 1, class_scores: [0.22890587 0.36232147 0.4087727 ], word_scores: ['brazilian:0.0', 'non:0.0', '-:4.821180027647642e-06', 'profit:0.0', 'inter:0.0', '##bank:0.0', 'cam:0.0', '##ara:0.0', 'inter:0.0', '##ban:0.0', '##car:0.0', '##ia:0.0', 'de:0.0', 'pa:0.0', '##game:0.0', '##nto:0.0', '##s:4.601175078278175e-06', 'ci:0.0', '##p:0.0', 'has:5.9214244174654596e-06', 'acquired:0.0', 'solutions:0.0', 'from:4.495178018260049e-06', 'us:0.0', 'business:0.0', 'integration:0.0', 'solutions:0.0', 'provider:0.0', 'sterling:0.0', 'commerce:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'latter:0.0', 'company:6.695386673527537e-06', 'said:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'statement:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('brazilian', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.1005, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('interbank', tensor(0., device='cuda:0')), ('camara', tensor(0., device='cuda:0')), ('interbancaria', tensor(0., device='cuda:0')), ('de', tensor(0., device='cuda:0')), ('pagamentos', tensor(0., device='cuda:0')), ('cip', tensor(0., device='cuda:0')), ('has', tensor(0.1235, device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('from', tensor(0.0937, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('integration', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('sterling', tensor(0., device='cuda:0')), ('commerce', tensor(0., device='cuda:0')), (',', tensor(0.1666, device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('latter', tensor(0., device='cuda:0')), ('company', tensor(0.1396, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0630, device='cuda:0')), ('a', tensor(0.1799, device='cuda:0')), ('statement', tensor(0., device='cuda:0'))],  word_scores_max: [('brazilian', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.1005, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('interbank', tensor(0., device='cuda:0')), ('camara', tensor(0., device='cuda:0')), ('interbancaria', tensor(0., device='cuda:0')), ('de', tensor(0., device='cuda:0')), ('pagamentos', tensor(0., device='cuda:0')), ('cip', tensor(0., device='cuda:0')), ('has', tensor(0.1235, device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('from', tensor(0.0937, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('integration', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('sterling', tensor(0., device='cuda:0')), ('commerce', tensor(0., device='cuda:0')), (',', tensor(0.1666, device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('latter', tensor(0., device='cuda:0')), ('company', tensor(0.1396, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0630, device='cuda:0')), ('a', tensor(0.1799, device='cuda:0')), ('statement', tensor(0., device='cuda:0'))]
idx: 464, example: M-real plans to discontinue production of standard coated fine paper in the Hallein and Gohrsm++hle mills , prediction: 2, correct_label: 2, class_scores: [0.25078526 0.3490644  0.40015027], word_scores: ['m:0.0', '-:4.821180027647642e-06', 'real:0.0', 'plans:0.0', 'to:2.886244146793615e-06', 'disco:0.0', '##nti:0.0', '##nu:0.0', '##e:0.0', 'production:0.0', 'of:3.4365734791208524e-06', 'standard:0.0', 'coated:0.0', 'fine:0.0', 'paper:2.697490344871767e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'halle:0.0', '##in:0.0', 'and:0.0', 'go:0.0', '##hr:0.0', '##sm:0.0', '+:0.0', '+:0.0', 'h:0.0', '##le:0.0', 'mills:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('m', tensor(0., device='cuda:0')), ('-', tensor(0.2074, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.1242, device='cuda:0')), ('discontinue', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('of', tensor(0.1478, device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('coated', tensor(0., device='cuda:0')), ('fine', tensor(0., device='cuda:0')), ('paper', tensor(0.1161, device='cuda:0')), ('in', tensor(0.1300, device='cuda:0')), ('the', tensor(0.2745, device='cuda:0')), ('hallein', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('gohrsm', tensor(0., device='cuda:0')), ('hle', tensor(0., device='cuda:0')), ('mills', tensor(0., device='cuda:0'))],  word_scores_max: [('m', tensor(0., device='cuda:0')), ('-', tensor(0.2074, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.1242, device='cuda:0')), ('discontinue', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('of', tensor(0.1478, device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('coated', tensor(0., device='cuda:0')), ('fine', tensor(0., device='cuda:0')), ('paper', tensor(0.1161, device='cuda:0')), ('in', tensor(0.1300, device='cuda:0')), ('the', tensor(0.2745, device='cuda:0')), ('hallein', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('gohrsm', tensor(0., device='cuda:0')), ('hle', tensor(0., device='cuda:0')), ('mills', tensor(0., device='cuda:0'))]
idx: 465, example: It is expected to be online by 2011 , prediction: 1, correct_label: 2, class_scores: [0.18340604 0.44851267 0.3680812 ], word_scores: ['it:3.3415778943890473e-06', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'online:0.0', 'by:0.0', '2011:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('it', tensor(0.5366, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.4634, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.5366, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.4634, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0'))]
idx: 466, example: Glaston , headquartered in Tampere , Finland , is a growing and international glass technology company , prediction: 1, correct_label: 2, class_scores: [0.21865681 0.39232776 0.3890154 ], word_scores: ['g:0.0', '##las:0.0', '##ton:0.0', ',:7.986737728060689e-06', 'headquartered:0.0', 'in:3.0217122457543155e-06', 'tam:0.0', '##per:0.0', '##e:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'is:0.0', 'a:8.62785782373976e-06', 'growing:0.0', 'and:0.0', 'international:0.0', 'glass:0.0', 'technology:0.0', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('glaston', tensor(0., device='cuda:0')), (',', tensor(0.1721, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0651, device='cuda:0')), ('tampere', tensor(0., device='cuda:0')), (',', tensor(0.1721, device='cuda:0')), ('finland', tensor(0.0883, device='cuda:0')), (',', tensor(0.1721, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.1859, device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('glass', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1443, device='cuda:0'))],  word_scores_max: [('glaston', tensor(0., device='cuda:0')), (',', tensor(0.1721, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0651, device='cuda:0')), ('tampere', tensor(0., device='cuda:0')), (',', tensor(0.1721, device='cuda:0')), ('finland', tensor(0.0883, device='cuda:0')), (',', tensor(0.1721, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.1859, device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('glass', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1443, device='cuda:0'))]
idx: 467, example: Lead production , in turn , should increase to 60,000 tonnes through 2009 in what would be a twofold increase from current capacity levels , Zahariev said , prediction: 2, correct_label: 1, class_scores: [0.19079743 0.374381   0.4348216 ], word_scores: ['lead:0.0', 'production:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'turn:0.0', ',:7.986737728060689e-06', 'should:0.0', 'increase:0.0', 'to:2.886244146793615e-06', '60:0.0', ',:7.986737728060689e-06', '000:0.0', 'tonnes:0.0', 'through:0.0', '2009:0.0', 'in:3.0217122457543155e-06', 'what:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'a:8.62785782373976e-06', 'two:0.0', '##fold:0.0', 'increase:0.0', 'from:4.495178018260049e-06', 'current:0.0', 'capacity:0.0', 'levels:0.0', ',:7.986737728060689e-06', 'za:0.0', '##hari:0.0', '##ev:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lead', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('in', tensor(0.0539, device='cuda:0')), ('turn', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('to', tensor(0.0515, device='cuda:0')), ('60', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('tonnes', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('in', tensor(0.0539, device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('would', tensor(0.0374, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1538, device='cuda:0')), ('twofold', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('from', tensor(0.0801, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('levels', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('zahariev', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('lead', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('in', tensor(0.0539, device='cuda:0')), ('turn', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('to', tensor(0.0515, device='cuda:0')), ('60', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('tonnes', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('in', tensor(0.0539, device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('would', tensor(0.0374, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1538, device='cuda:0')), ('twofold', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('from', tensor(0.0801, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('levels', tensor(0., device='cuda:0')), (',', tensor(0.1424, device='cuda:0')), ('zahariev', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 468, example: The StoneGate product family was designed to provide the full benefits of a unified management system including shared logging , reporting and auditing , prediction: 2, correct_label: 2, class_scores: [0.25728592 0.28103915 0.46167496], word_scores: ['the:6.3806996877247e-06', 'stone:0.0', '##gate:0.0', 'product:0.0', 'family:0.0', 'was:0.0', 'designed:0.0', 'to:2.886244146793615e-06', 'provide:0.0', 'the:6.3806996877247e-06', 'full:3.0938992949813837e-06', 'benefits:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'unified:0.0', 'management:0.0', 'system:2.472523192409426e-06', 'including:0.0', 'shared:0.0', 'logging:0.0', ',:7.986737728060689e-06', 'reporting:0.0', 'and:0.0', 'audit:0.0', '##ing:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1546, device='cuda:0')), ('stonegate', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('family', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('designed', tensor(0., device='cuda:0')), ('to', tensor(0.0699, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('the', tensor(0.1546, device='cuda:0')), ('full', tensor(0.0750, device='cuda:0')), ('benefits', tensor(0., device='cuda:0')), ('of', tensor(0.0833, device='cuda:0')), ('a', tensor(0.2091, device='cuda:0')), ('unified', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('system', tensor(0.0599, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('shared', tensor(0., device='cuda:0')), ('logging', tensor(0., device='cuda:0')), (',', tensor(0.1935, device='cuda:0')), ('reporting', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('auditing', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1546, device='cuda:0')), ('stonegate', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('family', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('designed', tensor(0., device='cuda:0')), ('to', tensor(0.0699, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('the', tensor(0.1546, device='cuda:0')), ('full', tensor(0.0750, device='cuda:0')), ('benefits', tensor(0., device='cuda:0')), ('of', tensor(0.0833, device='cuda:0')), ('a', tensor(0.2091, device='cuda:0')), ('unified', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('system', tensor(0.0599, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('shared', tensor(0., device='cuda:0')), ('logging', tensor(0., device='cuda:0')), (',', tensor(0.1935, device='cuda:0')), ('reporting', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('auditing', tensor(0., device='cuda:0'))]
idx: 469, example: Finnish silicon wafers maker Okmetic Oyj said on September 17 , 2008 that it will invest a total of 15 mln euro $ 21.3 mln in its sensor wafer business , prediction: 1, correct_label: 2, class_scores: [0.20104611 0.48032856 0.31862527], word_scores: ['finnish:0.0', 'silicon:0.0', 'wa:0.0', '##fers:0.0', 'maker:0.0', 'ok:0.0', '##met:0.0', '##ic:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'said:0.0', 'on:0.0', 'september:0.0', '17:0.0', ',:7.986737728060689e-06', '2008:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'invest:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', '15:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '21:0.0', '.:2.903296945078182e-06', '3:0.0', 'ml:0.0', '##n:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'sensor:0.0', 'wa:0.0', '##fer:0.0', 'business:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('wafers', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('oyj', tensor(0.0477, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.2077, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('that', tensor(0.0394, device='cuda:0')), ('it', tensor(0.0869, device='cuda:0')), ('will', tensor(0.1059, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('a', tensor(0.2244, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0894, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0755, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('in', tensor(0.0786, device='cuda:0')), ('its', tensor(0.0447, device='cuda:0')), ('sensor', tensor(0., device='cuda:0')), ('wafer', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('wafers', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('oyj', tensor(0.0477, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.2077, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('that', tensor(0.0394, device='cuda:0')), ('it', tensor(0.0869, device='cuda:0')), ('will', tensor(0.1059, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('a', tensor(0.2244, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0894, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0755, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('in', tensor(0.0786, device='cuda:0')), ('its', tensor(0.0447, device='cuda:0')), ('sensor', tensor(0., device='cuda:0')), ('wafer', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 470, example: About Nokia Nokia is a pioneer in mobile telecommunications and the world 's leading maker of mobile devices , prediction: 2, correct_label: 1, class_scores: [0.15431625 0.3891076  0.4565761 ], word_scores: ['about:0.0', 'nokia:0.0', 'nokia:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'pioneer:0.0', 'in:3.0217122457543155e-06', 'mobile:0.0', 'telecommunications:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'world:0.0', "':0.0", 's:0.0', 'leading:0.0', 'maker:0.0', 'of:3.4365734791208524e-06', 'mobile:0.0', 'devices:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('about', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.4785, device='cuda:0')), ('pioneer', tensor(0., device='cuda:0')), ('in', tensor(0.1676, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('telecommunications', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.3539, device='cuda:0'))],  word_scores_max: [('about', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.4785, device='cuda:0')), ('pioneer', tensor(0., device='cuda:0')), ('in', tensor(0.1676, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('telecommunications', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.3539, device='cuda:0'))]
idx: 471, example: In a release , the Company said that Vocollect T2 customers in North America can now take advantage of its Voice Directed Warehousing solution and increase warehouse efficiency and productivity gains at a discounted price , prediction: 1, correct_label: 1, class_scores: [0.2052197  0.49843302 0.29634726], word_scores: ['in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'release:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', 'that:1.5133816759771435e-06', 'vo:0.0', '##coll:0.0', '##ect:0.0', 't:0.0', '##2:0.0', 'customers:0.0', 'in:3.0217122457543155e-06', 'north:0.0', 'america:0.0', 'can:0.0', 'now:0.0', 'take:2.0325496734585613e-06', 'advantage:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'voice:0.0', 'directed:0.0', 'ware:0.0', '##ho:0.0', '##using:0.0', 'solution:0.0', 'and:0.0', 'increase:0.0', 'warehouse:0.0', 'efficiency:0.0', 'and:0.0', 'productivity:0.0', 'gains:0.0', 'at:0.0', 'a:8.62785782373976e-06', 'discount:0.0', '##ed:0.0', 'price:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0569, device='cuda:0')), ('a', tensor(0.1626, device='cuda:0')), ('release', tensor(0., device='cuda:0')), (',', tensor(0.1505, device='cuda:0')), ('the', tensor(0.1202, device='cuda:0')), ('company', tensor(0.1262, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0285, device='cuda:0')), ('vocollect', tensor(0., device='cuda:0')), ('t2', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('in', tensor(0.0569, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('take', tensor(0.0383, device='cuda:0')), ('advantage', tensor(0., device='cuda:0')), ('of', tensor(0.0648, device='cuda:0')), ('its', tensor(0.0324, device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('warehousing', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('productivity', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.1626, device='cuda:0')), ('discounted', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0569, device='cuda:0')), ('a', tensor(0.1626, device='cuda:0')), ('release', tensor(0., device='cuda:0')), (',', tensor(0.1505, device='cuda:0')), ('the', tensor(0.1202, device='cuda:0')), ('company', tensor(0.1262, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0285, device='cuda:0')), ('vocollect', tensor(0., device='cuda:0')), ('t2', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('in', tensor(0.0569, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('take', tensor(0.0383, device='cuda:0')), ('advantage', tensor(0., device='cuda:0')), ('of', tensor(0.0648, device='cuda:0')), ('its', tensor(0.0324, device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('warehousing', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('productivity', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.1626, device='cuda:0')), ('discounted', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))]
idx: 472, example: Both operating profit and net sales for the three-month period increased , respectively from EUR15 .1 m and EUR131 .5 m , as compared to the corresponding period in 2005 , prediction: 2, correct_label: 1, class_scores: [0.11397877 0.40627322 0.47974795], word_scores: ['both:0.0', 'operating:0.0', 'profit:0.0', 'and:0.0', 'net:0.0', 'sales:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'three:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'increased:0.0', ',:7.986737728060689e-06', 'respectively:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##15:0.0', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', 'and:0.0', 'eu:0.0', '##r:0.0', '##13:0.0', '##1:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('-', tensor(0.0969, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0903, device='cuda:0')), ('eur15', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur131', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))],  word_scores_max: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('-', tensor(0.0969, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0903, device='cuda:0')), ('eur15', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur131', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))]
idx: 473, example: Finnish food industry companies HK Ruokatalo and Atria will form a joint venture company called L+�nsi-Kalkkuna to produce turkey meat , prediction: 2, correct_label: 1, class_scores: [0.17769569 0.35461852 0.46768576], word_scores: ['finnish:0.0', 'food:0.0', 'industry:0.0', 'companies:0.0', 'hk:0.0', 'ru:0.0', '##oka:0.0', '##tal:0.0', '##o:0.0', 'and:0.0', 'at:0.0', '##ria:0.0', 'will:4.073096533829812e-06', 'form:0.0', 'a:8.62785782373976e-06', 'joint:0.0', 'venture:0.0', 'company:6.695386673527537e-06', 'called:0.0', 'l:0.0', '+:0.0', 'ns:0.0', '##i:0.0', '-:4.821180027647642e-06', 'ka:0.0', '##lk:0.0', '##ku:0.0', '##na:0.0', 'to:2.886244146793615e-06', 'produce:0.0', 'turkey:0.0', 'meat:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('hk', tensor(0., device='cuda:0')), ('ruokatalo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('atria', tensor(0., device='cuda:0')), ('will', tensor(0.1503, device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('a', tensor(0.3183, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.2470, device='cuda:0')), ('called', tensor(0., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nsi', tensor(0., device='cuda:0')), ('-', tensor(0.1779, device='cuda:0')), ('kalkkuna', tensor(0., device='cuda:0')), ('to', tensor(0.1065, device='cuda:0')), ('produce', tensor(0., device='cuda:0')), ('turkey', tensor(0., device='cuda:0')), ('meat', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('hk', tensor(0., device='cuda:0')), ('ruokatalo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('atria', tensor(0., device='cuda:0')), ('will', tensor(0.1503, device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('a', tensor(0.3183, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.2470, device='cuda:0')), ('called', tensor(0., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nsi', tensor(0., device='cuda:0')), ('-', tensor(0.1779, device='cuda:0')), ('kalkkuna', tensor(0., device='cuda:0')), ('to', tensor(0.1065, device='cuda:0')), ('produce', tensor(0., device='cuda:0')), ('turkey', tensor(0., device='cuda:0')), ('meat', tensor(0., device='cuda:0'))]
idx: 474, example: The total scope of the project is about 38,000 square metres and it is valued at a total of around EUR75m , prediction: 2, correct_label: 2, class_scores: [0.17339998 0.36381364 0.46278635], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'scope:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'project:0.0', 'is:0.0', 'about:0.0', '38:0.0', ',:7.986737728060689e-06', '000:0.0', 'square:0.0', 'metres:0.0', 'and:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'valued:0.0', 'at:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', 'around:0.0', 'eu:0.0', '##r:0.0', '##75:0.0', '##m:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1612, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('scope', tensor(0., device='cuda:0')), ('of', tensor(0.0868, device='cuda:0')), ('the', tensor(0.1612, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('38', tensor(0., device='cuda:0')), (',', tensor(0.2017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metres', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0844, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('valued', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.2179, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0868, device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('eur75m', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1612, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('scope', tensor(0., device='cuda:0')), ('of', tensor(0.0868, device='cuda:0')), ('the', tensor(0.1612, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('38', tensor(0., device='cuda:0')), (',', tensor(0.2017, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metres', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0844, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('valued', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.2179, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0868, device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('eur75m', tensor(0., device='cuda:0'))]
idx: 475, example: The company 's main shareholders Lihakunta and Itikka Osuuskunta have both made a commitment to acquire shares worth EUR 20mn , prediction: 2, correct_label: 2, class_scores: [0.15900113 0.34556258 0.49543634], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'main:0.0', 'shareholders:0.0', 'li:0.0', '##hak:0.0', '##unt:0.0', '##a:3.804580501309829e-06', 'and:0.0', 'it:3.3415778943890473e-06', '##ik:0.0', '##ka:0.0', 'os:0.0', '##u:0.0', '##us:0.0', '##ku:0.0', '##nta:0.0', 'have:2.910326429628185e-06', 'both:0.0', 'made:0.0', 'a:8.62785782373976e-06', 'commitment:0.0', 'to:2.886244146793615e-06', 'acquire:0.0', 'shares:0.0', 'worth:0.0', 'eu:0.0', '##r:0.0', '20:0.0', '##m:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 476, example: The adjustments concern staff in both the Specialty Papers and the Fiber Composites segments , prediction: 2, correct_label: 2, class_scores: [0.16648725 0.3352645  0.4982483 ], word_scores: ['the:6.3806996877247e-06', 'adjustments:0.0', 'concern:0.0', 'staff:0.0', 'in:3.0217122457543155e-06', 'both:0.0', 'the:6.3806996877247e-06', 'specialty:0.0', 'papers:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'fiber:0.0', 'composite:0.0', '##s:4.601175078278175e-06', 'segments:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2879, device='cuda:0')), ('adjustments', tensor(0., device='cuda:0')), ('concern', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('in', tensor(0.1363, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('the', tensor(0.2879, device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('papers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2879, device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('composites', tensor(0., device='cuda:0')), ('segments', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2879, device='cuda:0')), ('adjustments', tensor(0., device='cuda:0')), ('concern', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('in', tensor(0.1363, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('the', tensor(0.2879, device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('papers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2879, device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('composites', tensor(0., device='cuda:0')), ('segments', tensor(0., device='cuda:0'))]
idx: 477, example: He said : `` It is for sale again and we will be actively marketing it , prediction: 2, correct_label: 2, class_scores: [0.21175642 0.35910657 0.42913696], word_scores: ['he:0.0', 'said:0.0', '::0.0', '`:0.0', '`:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'for:0.0', 'sale:0.0', 'again:0.0', 'and:0.0', 'we:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'actively:0.0', 'marketing:0.0', 'it:3.3415778943890473e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('he', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.3107, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('will', tensor(0.3787, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('actively', tensor(0., device='cuda:0')), ('marketing', tensor(0., device='cuda:0')), ('it', tensor(0.3107, device='cuda:0'))],  word_scores_max: [('he', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.3107, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('will', tensor(0.3787, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('actively', tensor(0., device='cuda:0')), ('marketing', tensor(0., device='cuda:0')), ('it', tensor(0.3107, device='cuda:0'))]
idx: 478, example: Vaisala Oyj Stock exchange release 26.03.2010 klo 09.00 1 ( 1 ) The Annual General Meeting of Vaisala Oyj decided on March 25 , 2010 to approve the Company 's annual accounts for 2009 , prediction: 1, correct_label: 2, class_scores: [0.17251563 0.45548356 0.37200078], word_scores: ['va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'stock:0.0', 'exchange:0.0', 'release:0.0', '26:0.0', '.:2.903296945078182e-06', '03:0.0', '.:2.903296945078182e-06', '2010:0.0', 'k:0.0', '##lo:0.0', '09:0.0', '.:2.903296945078182e-06', '00:0.0', '1:0.0', '(:0.0', '1:0.0', '):0.0', 'the:6.3806996877247e-06', 'annual:0.0', 'general:0.0', 'meeting:0.0', 'of:3.4365734791208524e-06', 'va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'decided:0.0', 'on:0.0', 'march:0.0', '25:0.0', ',:7.986737728060689e-06', '2010:0.0', 'to:2.886244146793615e-06', 'approve:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'annual:0.0', 'accounts:0.0', 'for:0.0', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vaisala', tensor(0.0539, device='cuda:0')), ('oyj', tensor(0.0415, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('.', tensor(0.0657, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('.', tensor(0.0657, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('klo', tensor(0., device='cuda:0')), ('09', tensor(0., device='cuda:0')), ('.', tensor(0.0657, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('the', tensor(0.1443, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('of', tensor(0.0777, device='cuda:0')), ('vaisala', tensor(0.0539, device='cuda:0')), ('oyj', tensor(0.0415, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), (',', tensor(0.1807, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('to', tensor(0.0653, device='cuda:0')), ('approve', tensor(0., device='cuda:0')), ('the', tensor(0.1443, device='cuda:0'))],  word_scores_max: [('vaisala', tensor(0.0539, device='cuda:0')), ('oyj', tensor(0.0415, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('.', tensor(0.0657, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('.', tensor(0.0657, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('klo', tensor(0., device='cuda:0')), ('09', tensor(0., device='cuda:0')), ('.', tensor(0.0657, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('the', tensor(0.1443, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('meeting', tensor(0., device='cuda:0')), ('of', tensor(0.0777, device='cuda:0')), ('vaisala', tensor(0.0539, device='cuda:0')), ('oyj', tensor(0.0415, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), (',', tensor(0.1807, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('to', tensor(0.0653, device='cuda:0')), ('approve', tensor(0., device='cuda:0')), ('the', tensor(0.1443, device='cuda:0'))]
idx: 479, example: Net sales fell by 33 % from the third quarter of 2008 to EUR 130.5 mn , prediction: 2, correct_label: 0, class_scores: [0.22653382 0.38367197 0.38979426], word_scores: ['net:0.0', 'sales:0.0', 'fell:0.0', 'by:0.0', '33:0.0', '%:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2008:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '130:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('from', tensor(0.2236, device='cuda:0')), ('the', tensor(0.3174, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1710, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('to', tensor(0.1436, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('130', tensor(0., device='cuda:0')), ('.', tensor(0.1444, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('from', tensor(0.2236, device='cuda:0')), ('the', tensor(0.3174, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1710, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('to', tensor(0.1436, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('130', tensor(0., device='cuda:0')), ('.', tensor(0.1444, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 480, example: For the fiscal year ending September 30 , 2009 the revenue from these customers was $ 10.012 million or around 11.0 % of the transportation group 's revenue , prediction: 1, correct_label: 2, class_scores: [0.155002  0.4514457 0.3935522], word_scores: ['for:0.0', 'the:6.3806996877247e-06', 'fiscal:0.0', 'year:0.0', 'ending:0.0', 'september:0.0', '30:0.0', ',:7.986737728060689e-06', '2009:0.0', 'the:6.3806996877247e-06', 'revenue:0.0', 'from:4.495178018260049e-06', 'these:0.0', 'customers:0.0', 'was:0.0', '$:0.0', '10:0.0', '.:2.903296945078182e-06', '01:0.0', '##2:0.0', 'million:6.018835847498849e-06', 'or:0.0', 'around:0.0', '11:0.0', '.:2.903296945078182e-06', '0:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'transportation:0.0', 'group:0.0', "':0.0", 's:0.0', 'revenue:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('for', tensor(0., device='cuda:0')), ('the', tensor(0.1361, device='cuda:0')), ('fiscal', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ending', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1703, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('the', tensor(0.1361, device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('from', tensor(0.0959, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0619, device='cuda:0')), ('012', tensor(0., device='cuda:0')), ('million', tensor(0.1284, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0619, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('of', tensor(0.0733, device='cuda:0')), ('the', tensor(0.1361, device='cuda:0')), ('transportation', tensor(0., device='cuda:0'))],  word_scores_max: [('for', tensor(0., device='cuda:0')), ('the', tensor(0.1361, device='cuda:0')), ('fiscal', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ending', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1703, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('the', tensor(0.1361, device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('from', tensor(0.0959, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.0619, device='cuda:0')), ('012', tensor(0., device='cuda:0')), ('million', tensor(0.1284, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0619, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('of', tensor(0.0733, device='cuda:0')), ('the', tensor(0.1361, device='cuda:0')), ('transportation', tensor(0., device='cuda:0'))]
idx: 481, example: In complying with the European Water Framework Directive requirements , the pre-treatment unit will be fully renovated , including hydraulics of waste water inception , degridding , sand and grease removal and treatment and deodorization of the unit , prediction: 1, correct_label: 1, class_scores: [0.22112247 0.41088006 0.3679974 ], word_scores: ['in:3.0217122457543155e-06', 'comply:0.0', '##ing:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'european:0.0', 'water:0.0', 'framework:0.0', 'directive:0.0', 'requirements:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'pre:0.0', '-:4.821180027647642e-06', 'treatment:0.0', 'unit:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'fully:0.0', 'renovated:0.0', ',:7.986737728060689e-06', 'including:0.0', 'hydraulic:0.0', '##s:4.601175078278175e-06', 'of:3.4365734791208524e-06', 'waste:0.0', 'water:0.0', 'inception:0.0', ',:7.986737728060689e-06', 'de:0.0', '##gr:0.0', '##id:0.0', '##ding:0.0', ',:7.986737728060689e-06', 'sand:0.0', 'and:0.0', 'grease:0.0', 'removal:0.0', 'and:0.0', 'treatment:0.0', 'and:0.0', 'de:0.0', '##od:0.0', '##ori:0.0', '##zation:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'unit:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0405, device='cuda:0')), ('complying', tensor(0., device='cuda:0')), ('with', tensor(0.0634, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('framework', tensor(0., device='cuda:0')), ('directive', tensor(0., device='cuda:0')), ('requirements', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('pre', tensor(0., device='cuda:0')), ('-', tensor(0.0646, device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('will', tensor(0.0546, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('renovated', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('hydraulics', tensor(0., device='cuda:0')), ('of', tensor(0.0461, device='cuda:0')), ('waste', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('inception', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('degridding', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('sand', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grease', tensor(0., device='cuda:0')), ('removal', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('deodorization', tensor(0., device='cuda:0')), ('of', tensor(0.0461, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('unit', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0405, device='cuda:0')), ('complying', tensor(0., device='cuda:0')), ('with', tensor(0.0634, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('framework', tensor(0., device='cuda:0')), ('directive', tensor(0., device='cuda:0')), ('requirements', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('pre', tensor(0., device='cuda:0')), ('-', tensor(0.0646, device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('will', tensor(0.0546, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('renovated', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('hydraulics', tensor(0., device='cuda:0')), ('of', tensor(0.0461, device='cuda:0')), ('waste', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('inception', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('degridding', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('sand', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grease', tensor(0., device='cuda:0')), ('removal', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('deodorization', tensor(0., device='cuda:0')), ('of', tensor(0.0461, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('unit', tensor(0., device='cuda:0'))]
idx: 482, example: This implementation is very important to the operator , since it is about to launch its Fixed-to-Mobile convergence service in Brazil see Brazil : 8 May 2006 : , prediction: 2, correct_label: 2, class_scores: [0.25079042 0.32656848 0.42264104], word_scores: ['this:0.0', 'implementation:0.0', 'is:0.0', 'very:0.0', 'important:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'operator:0.0', ',:7.986737728060689e-06', 'since:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'about:0.0', 'to:2.886244146793615e-06', 'launch:0.0', 'its:1.7191393908433383e-06', 'fixed:0.0', '-:4.821180027647642e-06', 'to:2.886244146793615e-06', '-:4.821180027647642e-06', 'mobile:0.0', 'convergence:0.0', 'service:0.0', 'in:3.0217122457543155e-06', 'brazil:0.0', 'see:0.0', 'brazil:0.0', '::0.0', '8:0.0', 'may:0.0', '2006:0.0', '::0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('this', tensor(0., device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('to', tensor(0.0708, device='cuda:0')), ('the', tensor(0.1566, device='cuda:0')), ('operator', tensor(0., device='cuda:0')), (',', tensor(0.1960, device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('it', tensor(0.0820, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.0708, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('its', tensor(0.0422, device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('-', tensor(0.1183, device='cuda:0')), ('to', tensor(0.0708, device='cuda:0')), ('-', tensor(0.1183, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('convergence', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('in', tensor(0.0742, device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('to', tensor(0.0708, device='cuda:0')), ('the', tensor(0.1566, device='cuda:0')), ('operator', tensor(0., device='cuda:0')), (',', tensor(0.1960, device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('it', tensor(0.0820, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.0708, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('its', tensor(0.0422, device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('-', tensor(0.1183, device='cuda:0')), ('to', tensor(0.0708, device='cuda:0')), ('-', tensor(0.1183, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('convergence', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('in', tensor(0.0742, device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 483, example: Its total annual revenue comes up to about 160 mln zloty ( $ 56.9 mln-42 .3 mln euro ) , prediction: 2, correct_label: 2, class_scores: [0.22266725 0.37004012 0.40729266], word_scores: ['its:1.7191393908433383e-06', 'total:0.0', 'annual:0.0', 'revenue:0.0', 'comes:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', 'about:0.0', '160:0.0', 'ml:0.0', '##n:0.0', 'z:0.0', '##lot:0.0', '##y:1.832826342251792e-06', '(:0.0', '$:0.0', '56:0.0', '.:2.903296945078182e-06', '9:0.0', 'ml:0.0', '##n:0.0', '-:4.821180027647642e-06', '42:0.0', '.:2.903296945078182e-06', '3:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('its', tensor(0.1028, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('comes', tensor(0., device='cuda:0')), ('up', tensor(0.0894, device='cuda:0')), ('to', tensor(0.1725, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('160', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('zloty', tensor(0., device='cuda:0')), ('56', tensor(0., device='cuda:0')), ('.', tensor(0.1735, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('-', tensor(0.2882, device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('.', tensor(0.1735, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0'))],  word_scores_max: [('its', tensor(0.1028, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('comes', tensor(0., device='cuda:0')), ('up', tensor(0.0894, device='cuda:0')), ('to', tensor(0.1725, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('160', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('zloty', tensor(0., device='cuda:0')), ('56', tensor(0., device='cuda:0')), ('.', tensor(0.1735, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('-', tensor(0.2882, device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('.', tensor(0.1735, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0'))]
idx: 484, example: Barclays Plc ( LSE : BARC ) ( NYSE : BCS ) , Credit Agricole SA ( EPA : ACA ) ( CAGR , prediction: 2, correct_label: 2, class_scores: [0.2583798  0.2909538  0.45066646], word_scores: ['barclay:0.0', '##s:4.601175078278175e-06', 'plc:0.0', '(:0.0', 'l:0.0', '##se:0.0', '::0.0', 'bar:0.0', '##c:0.0', '):0.0', '(:0.0', 'ny:0.0', '##se:0.0', '::0.0', 'bc:0.0', '##s:4.601175078278175e-06', '):0.0', ',:7.986737728060689e-06', 'credit:0.0', 'ag:0.0', '##ric:0.0', '##ole:0.0', 'sa:0.0', '(:0.0', 'epa:0.0', '::0.0', 'ac:0.0', '##a:3.804580501309829e-06', '):0.0', '(:0.0', 'ca:0.0', '##gr:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('barclays', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('barc', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('bcs', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('agricole', tensor(0., device='cuda:0')), ('sa', tensor(0., device='cuda:0')), ('epa', tensor(0., device='cuda:0')), ('aca', tensor(0., device='cuda:0')), ('cagr', tensor(0., device='cuda:0'))],  word_scores_max: [('barclays', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('barc', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('bcs', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('agricole', tensor(0., device='cuda:0')), ('sa', tensor(0., device='cuda:0')), ('epa', tensor(0., device='cuda:0')), ('aca', tensor(0., device='cuda:0')), ('cagr', tensor(0., device='cuda:0'))]
idx: 485, example: The expanded plant is scheduled to be operational by the middle of October 2009 , prediction: 1, correct_label: 2, class_scores: [0.20996061 0.42721695 0.36282244], word_scores: ['the:6.3806996877247e-06', 'expanded:0.0', 'plant:0.0', 'is:0.0', 'scheduled:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'operational:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'middle:0.0', 'of:3.4365734791208524e-06', 'october:0.0', '2009:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3343, device='cuda:0')), ('expanded', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.1512, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.3343, device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('of', tensor(0.1801, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3343, device='cuda:0')), ('expanded', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.1512, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.3343, device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('of', tensor(0.1801, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 486, example: Self-service and automation are in a bigger role now and Fujitsu 's global resources will be exploited effectively , prediction: 2, correct_label: 1, class_scores: [0.19420148 0.33264744 0.47315112], word_scores: ['self:0.0', '-:4.821180027647642e-06', 'service:0.0', 'and:0.0', 'automation:0.0', 'are:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'bigger:0.0', 'role:0.0', 'now:0.0', 'and:0.0', 'fuji:0.0', '##tsu:0.0', "':0.0", 's:0.0', 'global:0.0', 'resources:3.8971406866039615e-06', 'will:4.073096533829812e-06', 'be:0.0', 'exploited:0.0', 'effectively:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('self', tensor(0., device='cuda:0')), ('-', tensor(0.2927, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('automation', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('in', tensor(0.1835, device='cuda:0')), ('a', tensor(0.5238, device='cuda:0')), ('bigger', tensor(0., device='cuda:0')), ('role', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))],  word_scores_max: [('self', tensor(0., device='cuda:0')), ('-', tensor(0.2927, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('automation', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('in', tensor(0.1835, device='cuda:0')), ('a', tensor(0.5238, device='cuda:0')), ('bigger', tensor(0., device='cuda:0')), ('role', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))]
idx: 487, example: In addition , the existing service counter area in the reception hall will be rebuilt and access provided to local rail connections , prediction: 1, correct_label: 2, class_scores: [0.21059678 0.436743   0.3526602 ], word_scores: ['in:3.0217122457543155e-06', 'addition:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'existing:0.0', 'service:0.0', 'counter:0.0', 'area:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'reception:0.0', 'hall:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'rebuilt:0.0', 'and:0.0', 'access:0.0', 'provided:0.0', 'to:2.886244146793615e-06', 'local:0.0', 'rail:0.0', 'connections:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0895, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.2366, device='cuda:0')), ('the', tensor(0.1891, device='cuda:0')), ('existing', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('counter', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('in', tensor(0.0895, device='cuda:0')), ('the', tensor(0.1891, device='cuda:0')), ('reception', tensor(0., device='cuda:0')), ('hall', tensor(0., device='cuda:0')), ('will', tensor(0.1207, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('rebuilt', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('to', tensor(0.0855, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('rail', tensor(0., device='cuda:0')), ('connections', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0895, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.2366, device='cuda:0')), ('the', tensor(0.1891, device='cuda:0')), ('existing', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('counter', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('in', tensor(0.0895, device='cuda:0')), ('the', tensor(0.1891, device='cuda:0')), ('reception', tensor(0., device='cuda:0')), ('hall', tensor(0., device='cuda:0')), ('will', tensor(0.1207, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('rebuilt', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('to', tensor(0.0855, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('rail', tensor(0., device='cuda:0')), ('connections', tensor(0., device='cuda:0'))]
idx: 488, example: Delivery will start immediately in June 2008 and will be completed in 2008 , prediction: 2, correct_label: 2, class_scores: [0.1398768  0.32119414 0.5389291 ], word_scores: ['delivery:0.0', 'will:4.073096533829812e-06', 'start:0.0', 'immediately:0.0', 'in:3.0217122457543155e-06', 'june:0.0', '2008:0.0', 'and:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'completed:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('delivery', tensor(0., device='cuda:0')), ('will', tensor(0.2870, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('immediately', tensor(0., device='cuda:0')), ('in', tensor(0.2130, device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.2870, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.2130, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('delivery', tensor(0., device='cuda:0')), ('will', tensor(0.2870, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('immediately', tensor(0., device='cuda:0')), ('in', tensor(0.2130, device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.2870, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.2130, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 489, example: Kesko Agro Lietuva , the agricultural machinery and grain trader and another member of the Kesko Group , boosted its sales by 42.9 percent to 13.4 million euros , VAT inclusive , prediction: 2, correct_label: 1, class_scores: [0.19022806 0.32768965 0.4820823 ], word_scores: ['ke:0.0', '##sko:0.0', 'ag:0.0', '##ro:0.0', 'lie:0.0', '##tu:0.0', '##va:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'agricultural:0.0', 'machinery:0.0', 'and:0.0', 'grain:0.0', 'trader:0.0', 'and:0.0', 'another:0.0', 'member:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'ke:0.0', '##sko:0.0', 'group:0.0', ',:7.986737728060689e-06', 'boosted:0.0', 'its:1.7191393908433383e-06', 'sales:0.0', 'by:0.0', '42:0.0', '.:2.903296945078182e-06', '9:0.0', 'percent:0.0', 'to:2.886244146793615e-06', '13:0.0', '.:2.903296945078182e-06', '4:0.0', 'million:6.018835847498849e-06', 'euros:0.0', ',:7.986737728060689e-06', 'va:2.3812995095795486e-06', '##t:0.0', 'inclusive:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kesko', tensor(0., device='cuda:0')), ('agro', tensor(0., device='cuda:0')), ('lietuva', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('the', tensor(0.1082, device='cuda:0')), ('agricultural', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grain', tensor(0., device='cuda:0')), ('trader', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('member', tensor(0., device='cuda:0')), ('of', tensor(0.0583, device='cuda:0')), ('the', tensor(0.1082, device='cuda:0')), ('kesko', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('boosted', tensor(0., device='cuda:0')), ('its', tensor(0.0292, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('to', tensor(0.0489, device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.1021, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('vat', tensor(0.0404, device='cuda:0')), ('inclusive', tensor(0., device='cuda:0'))],  word_scores_max: [('kesko', tensor(0., device='cuda:0')), ('agro', tensor(0., device='cuda:0')), ('lietuva', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('the', tensor(0.1082, device='cuda:0')), ('agricultural', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grain', tensor(0., device='cuda:0')), ('trader', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('member', tensor(0., device='cuda:0')), ('of', tensor(0.0583, device='cuda:0')), ('the', tensor(0.1082, device='cuda:0')), ('kesko', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('boosted', tensor(0., device='cuda:0')), ('its', tensor(0.0292, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('to', tensor(0.0489, device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.1021, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('vat', tensor(0.0404, device='cuda:0')), ('inclusive', tensor(0., device='cuda:0'))]
idx: 490, example: A maximum of 666,104 new shares can further be subscribed for by exercising B options under the 2004 stock option plan , prediction: 2, correct_label: 2, class_scores: [0.2194542  0.36586496 0.41468084], word_scores: ['a:8.62785782373976e-06', 'maximum:0.0', 'of:3.4365734791208524e-06', '66:0.0', '##6:0.0', ',:7.986737728060689e-06', '104:0.0', 'new:2.798587502184091e-06', 'shares:0.0', 'can:0.0', 'further:0.0', 'be:0.0', 'sub:0.0', '##scribe:0.0', '##d:0.0', 'for:0.0', 'by:0.0', 'exercising:0.0', 'b:0.0', 'options:0.0', 'under:0.0', 'the:6.3806996877247e-06', '2004:0.0', 'stock:0.0', 'option:0.0', 'plan:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.2952, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.1176, device='cuda:0')), ('666', tensor(0., device='cuda:0')), (',', tensor(0.2732, device='cuda:0')), ('104', tensor(0., device='cuda:0')), ('new', tensor(0.0957, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('exercising', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.2183, device='cuda:0')), ('2004', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.2952, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.1176, device='cuda:0')), ('666', tensor(0., device='cuda:0')), (',', tensor(0.2732, device='cuda:0')), ('104', tensor(0., device='cuda:0')), ('new', tensor(0.0957, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('subscribed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('exercising', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.2183, device='cuda:0')), ('2004', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0'))]
idx: 491, example: UPM-Kymmene is one of the world 's leading printing paper producers with production in 15 countries and a sales network covering more than 170 companies , prediction: 1, correct_label: 1, class_scores: [0.14083053 0.4541973  0.40497214], word_scores: ['up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', 'is:0.0', 'one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'world:0.0', "':0.0", 's:0.0', 'leading:0.0', 'printing:0.0', 'paper:2.697490344871767e-06', 'producers:0.0', 'with:4.733654350275174e-06', 'production:0.0', 'in:3.0217122457543155e-06', '15:0.0', 'countries:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'sales:0.0', 'network:0.0', 'covering:0.0', 'more:0.0', 'than:0.0', '170:0.0', 'companies:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('upm', tensor(0.0722, device='cuda:0')), ('-', tensor(0.2327, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('one', tensor(0.2213, device='cuda:0')), ('of', tensor(0.1659, device='cuda:0')), ('the', tensor(0.3080, device='cuda:0'))],  word_scores_max: [('upm', tensor(0.0722, device='cuda:0')), ('-', tensor(0.2327, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('one', tensor(0.2213, device='cuda:0')), ('of', tensor(0.1659, device='cuda:0')), ('the', tensor(0.3080, device='cuda:0'))]
idx: 492, example: Vacon aims to establish its presence in the solar energy business in various parts of the world towards the end of 2010 , said Olli Teva , marketing director renewable energy applications , prediction: 2, correct_label: 2, class_scores: [0.18039654 0.35028493 0.46931854], word_scores: ['va:2.3812995095795486e-06', '##con:0.0', 'aims:0.0', 'to:2.886244146793615e-06', 'establish:0.0', 'its:1.7191393908433383e-06', 'presence:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'solar:0.0', 'energy:0.0', 'business:0.0', 'in:3.0217122457543155e-06', 'various:0.0', 'parts:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'world:0.0', 'towards:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'said:0.0', 'ol:0.0', '##li:0.0', 'te:0.0', '##va:0.0', ',:7.986737728060689e-06', 'marketing:0.0', 'director:0.0', 'renewable:0.0', 'energy:0.0', 'applications:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vacon', tensor(0.0433, device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.0525, device='cuda:0')), ('establish', tensor(0., device='cuda:0')), ('its', tensor(0.0312, device='cuda:0')), ('presence', tensor(0., device='cuda:0')), ('in', tensor(0.0549, device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('solar', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('in', tensor(0.0549, device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('world', tensor(0., device='cuda:0')), ('towards', tensor(0., device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1452, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('olli', tensor(0., device='cuda:0')), ('teva', tensor(0., device='cuda:0')), (',', tensor(0.1452, device='cuda:0')), ('marketing', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('renewable', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('applications', tensor(0., device='cuda:0'))],  word_scores_max: [('vacon', tensor(0.0433, device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.0525, device='cuda:0')), ('establish', tensor(0., device='cuda:0')), ('its', tensor(0.0312, device='cuda:0')), ('presence', tensor(0., device='cuda:0')), ('in', tensor(0.0549, device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('solar', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('in', tensor(0.0549, device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('parts', tensor(0., device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('world', tensor(0., device='cuda:0')), ('towards', tensor(0., device='cuda:0')), ('the', tensor(0.1160, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0625, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1452, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('olli', tensor(0., device='cuda:0')), ('teva', tensor(0., device='cuda:0')), (',', tensor(0.1452, device='cuda:0')), ('marketing', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('renewable', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('applications', tensor(0., device='cuda:0'))]
idx: 493, example: `` With this agreement , we can continue our good cooperationand at the same time release capital that has been tied up in ourmachinery operation , prediction: 2, correct_label: 1, class_scores: [0.17868812 0.352078   0.46923384], word_scores: ['`:0.0', '`:0.0', 'with:4.733654350275174e-06', 'this:0.0', 'agreement:0.0', ',:7.986737728060689e-06', 'we:0.0', 'can:0.0', 'continue:0.0', 'our:0.0', 'good:0.0', 'cooperation:0.0', '##and:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'time:0.0', 'release:0.0', 'capital:0.0', 'that:1.5133816759771435e-06', 'has:5.9214244174654596e-06', 'been:0.0', 'tied:0.0', 'up:1.4959460941099678e-06', 'in:3.0217122457543155e-06', 'our:0.0', '##mac:0.0', '##hine:0.0', '##ry:0.0', 'operation:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('with', tensor(0.1524, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.2572, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('cooperationand', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2055, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('that', tensor(0.0487, device='cuda:0')), ('has', tensor(0.1907, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('tied', tensor(0., device='cuda:0')), ('up', tensor(0.0482, device='cuda:0')), ('in', tensor(0.0973, device='cuda:0')), ('ourmachinery', tensor(0., device='cuda:0')), ('operation', tensor(0., device='cuda:0'))],  word_scores_max: [('with', tensor(0.1524, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), (',', tensor(0.2572, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('cooperationand', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2055, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('that', tensor(0.0487, device='cuda:0')), ('has', tensor(0.1907, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('tied', tensor(0., device='cuda:0')), ('up', tensor(0.0482, device='cuda:0')), ('in', tensor(0.0973, device='cuda:0')), ('ourmachinery', tensor(0., device='cuda:0')), ('operation', tensor(0., device='cuda:0'))]
idx: 494, example: The duration of the lay-offs per employee will vary from one to six weeks , prediction: 2, correct_label: 2, class_scores: [0.22200897 0.3168733  0.46111768], word_scores: ['the:6.3806996877247e-06', 'duration:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'lay:0.0', '-:4.821180027647642e-06', 'offs:0.0', 'per:0.0', 'employee:0.0', 'will:4.073096533829812e-06', 'vary:0.0', 'from:4.495178018260049e-06', 'one:4.584404450724833e-06', 'to:2.886244146793615e-06', 'six:0.0', 'weeks:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1722, device='cuda:0')), ('duration', tensor(0., device='cuda:0')), ('of', tensor(0.0927, device='cuda:0')), ('the', tensor(0.1722, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1301, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('will', tensor(0.1099, device='cuda:0')), ('vary', tensor(0., device='cuda:0')), ('from', tensor(0.1213, device='cuda:0')), ('one', tensor(0.1237, device='cuda:0')), ('to', tensor(0.0779, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1722, device='cuda:0')), ('duration', tensor(0., device='cuda:0')), ('of', tensor(0.0927, device='cuda:0')), ('the', tensor(0.1722, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1301, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('will', tensor(0.1099, device='cuda:0')), ('vary', tensor(0., device='cuda:0')), ('from', tensor(0.1213, device='cuda:0')), ('one', tensor(0.1237, device='cuda:0')), ('to', tensor(0.0779, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0'))]
idx: 495, example: When completed , the 120-meter Watchtower will be the highest building in Ireland , prediction: 2, correct_label: 2, class_scores: [0.18123502 0.3206071  0.4981579 ], word_scores: ['when:0.0', 'completed:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', '120:0.0', '-:4.821180027647642e-06', 'meter:0.0', 'watch:0.0', '##tower:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'the:6.3806996877247e-06', 'highest:0.0', 'building:0.0', 'in:3.0217122457543155e-06', 'ireland:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('when', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), (',', tensor(0.2445, device='cuda:0')), ('the', tensor(0.1953, device='cuda:0')), ('120', tensor(0., device='cuda:0')), ('-', tensor(0.1476, device='cuda:0')), ('meter', tensor(0., device='cuda:0')), ('watchtower', tensor(0., device='cuda:0')), ('will', tensor(0.1247, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.1953, device='cuda:0')), ('highest', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('in', tensor(0.0925, device='cuda:0')), ('ireland', tensor(0., device='cuda:0'))],  word_scores_max: [('when', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), (',', tensor(0.2445, device='cuda:0')), ('the', tensor(0.1953, device='cuda:0')), ('120', tensor(0., device='cuda:0')), ('-', tensor(0.1476, device='cuda:0')), ('meter', tensor(0., device='cuda:0')), ('watchtower', tensor(0., device='cuda:0')), ('will', tensor(0.1247, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.1953, device='cuda:0')), ('highest', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('in', tensor(0.0925, device='cuda:0')), ('ireland', tensor(0., device='cuda:0'))]
idx: 496, example: Jacobs has been supporting Storengy 's investment of developing storage sites since 2006 as owner 's engineer , prediction: 2, correct_label: 2, class_scores: [0.19896144 0.39241162 0.4086269 ], word_scores: ['jacobs:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'supporting:0.0', 'store:0.0', '##ng:0.0', '##y:1.832826342251792e-06', "':0.0", 's:0.0', 'investment:0.0', 'of:3.4365734791208524e-06', 'developing:0.0', 'storage:0.0', 'sites:0.0', 'since:0.0', '2006:0.0', 'as:0.0', 'owner:5.6893281907832716e-06', "':0.0", 's:0.0', 'engineer:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('jacobs', tensor(0., device='cuda:0')), ('has', tensor(1., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('supporting', tensor(0., device='cuda:0'))],  word_scores_max: [('jacobs', tensor(0., device='cuda:0')), ('has', tensor(1., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('supporting', tensor(0., device='cuda:0'))]
idx: 497, example: Radiation and today is a full service house expert in radiation and nuclear safety issues , prediction: 1, correct_label: 2, class_scores: [0.15868106 0.4567469  0.38457212], word_scores: ['radiation:0.0', 'and:0.0', 'today:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'full:3.0938992949813837e-06', 'service:0.0', 'house:0.0', 'expert:0.0', 'in:3.0217122457543155e-06', 'radiation:0.0', 'and:0.0', 'nuclear:0.0', 'safety:0.0', 'issues:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('radiation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5852, device='cuda:0')), ('full', tensor(0.2098, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('expert', tensor(0., device='cuda:0')), ('in', tensor(0.2050, device='cuda:0')), ('radiation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nuclear', tensor(0., device='cuda:0')), ('safety', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0'))],  word_scores_max: [('radiation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5852, device='cuda:0')), ('full', tensor(0.2098, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('expert', tensor(0., device='cuda:0')), ('in', tensor(0.2050, device='cuda:0')), ('radiation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nuclear', tensor(0., device='cuda:0')), ('safety', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0'))]
idx: 498, example: In providing managed services , Nokia takes responsibility for building , operating and transferring as well as optimising the Indosat 3G network , prediction: 1, correct_label: 2, class_scores: [0.24769633 0.3945734  0.35773024], word_scores: ['in:3.0217122457543155e-06', 'providing:0.0', 'managed:0.0', 'services:0.0', ',:7.986737728060689e-06', 'nokia:0.0', 'takes:0.0', 'responsibility:0.0', 'for:0.0', 'building:0.0', ',:7.986737728060689e-06', 'operating:0.0', 'and:0.0', 'transferring:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'opt:0.0', '##imi:0.0', '##sing:0.0', 'the:6.3806996877247e-06', 'indo:0.0', '##sat:0.0', '3:0.0', '##g:0.0', 'network:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1191, device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('managed', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.3147, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('takes', tensor(0., device='cuda:0')), ('responsibility', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), (',', tensor(0.3147, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('transferring', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('optimising', tensor(0., device='cuda:0')), ('the', tensor(0.2514, device='cuda:0')), ('indosat', tensor(0., device='cuda:0')), ('3g', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.1191, device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('managed', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.3147, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('takes', tensor(0., device='cuda:0')), ('responsibility', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), (',', tensor(0.3147, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('transferring', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('optimising', tensor(0., device='cuda:0')), ('the', tensor(0.2514, device='cuda:0')), ('indosat', tensor(0., device='cuda:0')), ('3g', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0'))]
idx: 499, example: More than a third of the original participants dropped out due to nausea and other side effects , prediction: 2, correct_label: 0, class_scores: [0.14997086 0.29373932 0.55628985], word_scores: ['more:0.0', 'than:0.0', 'a:8.62785782373976e-06', 'third:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'original:0.0', 'participants:0.0', 'dropped:0.0', 'out:0.0', 'due:0.0', 'to:2.886244146793615e-06', 'nausea:0.0', 'and:0.0', 'other:0.0', 'side:0.0', 'effects:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('a', tensor(0.4045, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('of', tensor(0.1611, device='cuda:0')), ('the', tensor(0.2991, device='cuda:0')), ('original', tensor(0., device='cuda:0')), ('participants', tensor(0., device='cuda:0')), ('dropped', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.1353, device='cuda:0')), ('nausea', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('side', tensor(0., device='cuda:0')), ('effects', tensor(0., device='cuda:0'))],  word_scores_max: [('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('a', tensor(0.4045, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('of', tensor(0.1611, device='cuda:0')), ('the', tensor(0.2991, device='cuda:0')), ('original', tensor(0., device='cuda:0')), ('participants', tensor(0., device='cuda:0')), ('dropped', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.1353, device='cuda:0')), ('nausea', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('side', tensor(0., device='cuda:0')), ('effects', tensor(0., device='cuda:0'))]
idx: 500, example: It now owns 80,565 shares in Amer Sports Corporation , equaling 0.11 % of the company 's share capital and voting rights , prediction: 2, correct_label: 2, class_scores: [0.19677785 0.3961677  0.40705442], word_scores: ['it:3.3415778943890473e-06', 'now:0.0', 'owns:0.0', '80:0.0', ',:7.986737728060689e-06', '56:0.0', '##5:0.0', 'shares:0.0', 'in:3.0217122457543155e-06', 'am:0.0', '##er:0.0', 'sports:0.0', 'corporation:0.0', ',:7.986737728060689e-06', 'equal:0.0', '##ing:0.0', '0:0.0', '.:2.903296945078182e-06', '11:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'share:0.0', 'capital:0.0', 'and:0.0', 'voting:0.0', 'rights:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.0953, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('80', tensor(0., device='cuda:0')), (',', tensor(0.2278, device='cuda:0')), ('565', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0862, device='cuda:0')), ('amer', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), (',', tensor(0.2278, device='cuda:0')), ('equaling', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0828, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('the', tensor(0.1820, device='cuda:0'))],  word_scores_max: [('it', tensor(0.0953, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('80', tensor(0., device='cuda:0')), (',', tensor(0.2278, device='cuda:0')), ('565', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0862, device='cuda:0')), ('amer', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), (',', tensor(0.2278, device='cuda:0')), ('equaling', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0828, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('the', tensor(0.1820, device='cuda:0'))]
idx: 501, example: Equity ratio was 60.9 % compared to 54.2 % In the third quarter of 2007 , net sales of the Frozen Foods Business totaled EUR 11.0 , up by about 5 % from the third quarter of 2006 , prediction: 1, correct_label: 1, class_scores: [0.20002338 0.40492168 0.39505494], word_scores: ['equity:0.0', 'ratio:0.0', 'was:0.0', '60:0.0', '.:2.903296945078182e-06', '9:0.0', '%:0.0', 'compared:0.0', 'to:2.886244146793615e-06', '54:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', ',:7.986737728060689e-06', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'frozen:0.0', 'foods:0.0', 'business:0.0', 'totaled:0.0', 'eu:0.0', '##r:0.0', '11:0.0', '.:2.903296945078182e-06', '0:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'by:0.0', 'about:0.0', '5:0.0', '%:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('equity', tensor(0., device='cuda:0')), ('ratio', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('.', tensor(0.0440, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0437, device='cuda:0')), ('54', tensor(0., device='cuda:0')), ('.', tensor(0.0440, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('in', tensor(0.0458, device='cuda:0')), ('the', tensor(0.0966, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1209, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('the', tensor(0.0966, device='cuda:0')), ('frozen', tensor(0., device='cuda:0')), ('foods', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0440, device='cuda:0')), ('0', tensor(0., device='cuda:0')), (',', tensor(0.1209, device='cuda:0')), ('up', tensor(0.0227, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('from', tensor(0.0681, device='cuda:0')), ('the', tensor(0.0966, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('equity', tensor(0., device='cuda:0')), ('ratio', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('.', tensor(0.0440, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0437, device='cuda:0')), ('54', tensor(0., device='cuda:0')), ('.', tensor(0.0440, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('in', tensor(0.0458, device='cuda:0')), ('the', tensor(0.0966, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1209, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('the', tensor(0.0966, device='cuda:0')), ('frozen', tensor(0., device='cuda:0')), ('foods', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0440, device='cuda:0')), ('0', tensor(0., device='cuda:0')), (',', tensor(0.1209, device='cuda:0')), ('up', tensor(0.0227, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('from', tensor(0.0681, device='cuda:0')), ('the', tensor(0.0966, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 502, example: Nokia Corp of Finland Tuesday said it has received a unified device managment contract with Finnish operator Elisa Oyj , prediction: 2, correct_label: 2, class_scores: [0.27161965 0.31281006 0.41557026], word_scores: ['nokia:0.0', 'corp:0.0', 'of:3.4365734791208524e-06', 'finland:4.096111752005527e-06', 'tuesday:0.0', 'said:0.0', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'received:0.0', 'a:8.62785782373976e-06', 'unified:0.0', 'device:0.0', 'mana:0.0', '##gm:0.0', '##ent:0.0', 'contract:7.1864019446366e-06', 'with:4.733654350275174e-06', 'finnish:0.0', 'operator:0.0', 'elisa:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('of', tensor(0.0877, device='cuda:0')), ('finland', tensor(0.1046, device='cuda:0')), ('tuesday', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0853, device='cuda:0')), ('has', tensor(0.1511, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('a', tensor(0.2202, device='cuda:0')), ('unified', tensor(0., device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('managment', tensor(0., device='cuda:0')), ('contract', tensor(0.1834, device='cuda:0')), ('with', tensor(0.1208, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('operator', tensor(0., device='cuda:0')), ('elisa', tensor(0., device='cuda:0')), ('oyj', tensor(0.0468, device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('of', tensor(0.0877, device='cuda:0')), ('finland', tensor(0.1046, device='cuda:0')), ('tuesday', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0853, device='cuda:0')), ('has', tensor(0.1511, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('a', tensor(0.2202, device='cuda:0')), ('unified', tensor(0., device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('managment', tensor(0., device='cuda:0')), ('contract', tensor(0.1834, device='cuda:0')), ('with', tensor(0.1208, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('operator', tensor(0., device='cuda:0')), ('elisa', tensor(0., device='cuda:0')), ('oyj', tensor(0.0468, device='cuda:0'))]
idx: 503, example: Both operating profit and turnover for the nine-month period increased , respectively from EUR2 .4 m and EUR43 .8 m , as compared to the corresponding period a year ago , prediction: 2, correct_label: 1, class_scores: [0.1601442  0.41048425 0.42937157], word_scores: ['both:0.0', 'operating:0.0', 'profit:0.0', 'and:0.0', 'turnover:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'nine:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'increased:0.0', ',:7.986737728060689e-06', 'respectively:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##2:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', 'and:0.0', 'eu:0.0', '##r:0.0', '##43:0.0', '.:2.903296945078182e-06', '8:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1152, device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('-', tensor(0.0871, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1442, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0812, device='cuda:0')), ('eur2', tensor(0., device='cuda:0')), ('.', tensor(0.0524, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur43', tensor(0., device='cuda:0')), ('.', tensor(0.0524, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1442, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0521, device='cuda:0')), ('the', tensor(0.1152, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1558, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))],  word_scores_max: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1152, device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('-', tensor(0.0871, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1442, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0812, device='cuda:0')), ('eur2', tensor(0., device='cuda:0')), ('.', tensor(0.0524, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur43', tensor(0., device='cuda:0')), ('.', tensor(0.0524, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1442, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0521, device='cuda:0')), ('the', tensor(0.1152, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1558, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))]
idx: 504, example: Further concrete cooperation is also carried out through various projects , doctoral theses and diploma dissertations , prediction: 2, correct_label: 2, class_scores: [0.20652081 0.3763243  0.417155  ], word_scores: ['further:0.0', 'concrete:0.0', 'cooperation:0.0', 'is:0.0', 'also:0.0', 'carried:0.0', 'out:0.0', 'through:0.0', 'various:0.0', 'projects:0.0', ',:7.986737728060689e-06', 'doctoral:0.0', 'these:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'diploma:0.0', 'dissertation:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('further', tensor(0., device='cuda:0')), ('concrete', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('carried', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('projects', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('doctoral', tensor(0., device='cuda:0')), ('theses', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('diploma', tensor(0., device='cuda:0')), ('dissertations', tensor(0., device='cuda:0'))],  word_scores_max: [('further', tensor(0., device='cuda:0')), ('concrete', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('carried', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('projects', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('doctoral', tensor(0., device='cuda:0')), ('theses', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('diploma', tensor(0., device='cuda:0')), ('dissertations', tensor(0., device='cuda:0'))]
idx: 505, example: At the close , the OMX Helsinki 25 was 0.01 pct lower at 3,067.64 points and the OMX Helsinki was down 0.05 pct at 10,321.46 points on over 1.343 bln eur of turnover , prediction: 2, correct_label: 0, class_scores: [0.20172983 0.36084056 0.43742964], word_scores: ['at:0.0', 'the:6.3806996877247e-06', 'close:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'om:0.0', '##x:0.0', 'helsinki:0.0', '25:0.0', 'was:0.0', '0:0.0', '.:2.903296945078182e-06', '01:0.0', 'pc:0.0', '##t:0.0', 'lower:0.0', 'at:0.0', '3:0.0', ',:7.986737728060689e-06', '06:0.0', '##7:0.0', '.:2.903296945078182e-06', '64:0.0', 'points:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'om:0.0', '##x:0.0', 'helsinki:0.0', 'was:0.0', 'down:0.0', '0:0.0', '.:2.903296945078182e-06', '05:0.0', 'pc:0.0', '##t:0.0', 'at:0.0', '10:0.0', ',:7.986737728060689e-06', '321:0.0', '.:2.903296945078182e-06', '46:0.0', 'points:0.0', 'on:0.0', 'over:0.0', '1:0.0', '.:2.903296945078182e-06', '343:0.0', 'b:0.0', '##ln:0.0', 'eu:0.0', '##r:0.0', 'of:3.4365734791208524e-06', 'turnover:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('at', tensor(0., device='cuda:0')), ('the', tensor(0.1045, device='cuda:0')), ('close', tensor(0., device='cuda:0')), (',', tensor(0.1308, device='cuda:0')), ('the', tensor(0.1045, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('01', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), (',', tensor(0.1308, device='cuda:0')), ('067', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('64', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1045, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('05', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), (',', tensor(0.1308, device='cuda:0')), ('321', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('343', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('of', tensor(0.0563, device='cuda:0')), ('turnover', tensor(0., device='cuda:0'))],  word_scores_max: [('at', tensor(0., device='cuda:0')), ('the', tensor(0.1045, device='cuda:0')), ('close', tensor(0., device='cuda:0')), (',', tensor(0.1308, device='cuda:0')), ('the', tensor(0.1045, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('01', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), (',', tensor(0.1308, device='cuda:0')), ('067', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('64', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1045, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('05', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), (',', tensor(0.1308, device='cuda:0')), ('321', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0476, device='cuda:0')), ('343', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('of', tensor(0.0563, device='cuda:0')), ('turnover', tensor(0., device='cuda:0'))]
idx: 506, example: Teleste expects to start the deliveries at the end of 2009 , prediction: 1, correct_label: 2, class_scores: [0.16741669 0.41848353 0.41409972], word_scores: ['tel:0.0', '##est:0.0', '##e:0.0', 'expects:0.0', 'to:2.886244146793615e-06', 'start:0.0', 'the:6.3806996877247e-06', 'deliveries:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('teleste', tensor(0., device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('to', tensor(0.1512, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('the', tensor(0.3343, device='cuda:0')), ('deliveries', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.3343, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1801, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('teleste', tensor(0., device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('to', tensor(0.1512, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('the', tensor(0.3343, device='cuda:0')), ('deliveries', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.3343, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1801, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 507, example: In the second quarter of 2010 , the group 's net profit rose to EUR3 .1 m from EUR2 .5 m in April-June 2009 , prediction: 1, correct_label: 1, class_scores: [0.15002957 0.47950867 0.3704618 ], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'net:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##3:0.0', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##2:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', 'in:3.0217122457543155e-06', 'april:0.0', '-:4.821180027647642e-06', 'june:0.0', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1111, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1263, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2936, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1111, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1263, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2936, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0'))]
idx: 508, example: It has sold one half of its business operations and will enter the Helsinki Stock Exchange via the back door through an innovative buyout arrangement with Kasola , prediction: 2, correct_label: 2, class_scores: [0.21686903 0.3335204  0.44961056], word_scores: ['it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'sold:0.0', 'one:4.584404450724833e-06', 'half:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'business:0.0', 'operations:0.0', 'and:0.0', 'will:4.073096533829812e-06', 'enter:0.0', 'the:6.3806996877247e-06', 'helsinki:0.0', 'stock:0.0', 'exchange:0.0', 'via:0.0', 'the:6.3806996877247e-06', 'back:0.0', 'door:0.0', 'through:0.0', 'an:0.0', 'innovative:0.0', 'buy:0.0', '##out:0.0', 'arrangement:0.0', 'with:4.733654350275174e-06', 'ka:0.0', '##sol:0.0', '##a:3.804580501309829e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.0824, device='cuda:0')), ('has', tensor(0.1460, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('one', tensor(0.1130, device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0847, device='cuda:0')), ('its', tensor(0.0424, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.1004, device='cuda:0')), ('enter', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('door', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('innovative', tensor(0., device='cuda:0')), ('buyout', tensor(0., device='cuda:0')), ('arrangement', tensor(0., device='cuda:0')), ('with', tensor(0.1167, device='cuda:0')), ('kasola', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.0824, device='cuda:0')), ('has', tensor(0.1460, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('one', tensor(0.1130, device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0847, device='cuda:0')), ('its', tensor(0.0424, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.1004, device='cuda:0')), ('enter', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('door', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('innovative', tensor(0., device='cuda:0')), ('buyout', tensor(0., device='cuda:0')), ('arrangement', tensor(0., device='cuda:0')), ('with', tensor(0.1167, device='cuda:0')), ('kasola', tensor(0., device='cuda:0'))]
idx: 509, example: The bridge is part of the highway 14 development project , prediction: 2, correct_label: 2, class_scores: [0.16877371 0.32867175 0.50255454], word_scores: ['the:6.3806996877247e-06', 'bridge:0.0', 'is:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'highway:0.0', '14:0.0', 'development:0.0', 'project:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('highway', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('the', tensor(0.3939, device='cuda:0')), ('highway', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0'))]
idx: 510, example: In 2007 Talentum will disclose three Interim Reports - Q1 ( January - March ) on Friday , 27 April , 2007 - Q2 ( April - June ) on Friday , 20 July , 2007 - Q3 ( July - September ) on Friday , 26 October , 2007 , prediction: 2, correct_label: 2, class_scores: [0.2501242  0.30741608 0.44245973], word_scores: ['in:3.0217122457543155e-06', '2007:0.0', 'talent:0.0', '##um:0.0', 'will:4.073096533829812e-06', 'disclose:0.0', 'three:0.0', 'interim:0.0', 'reports:0.0', '-:4.821180027647642e-06', 'q:0.0', '##1:0.0', '(:0.0', 'january:0.0', '-:4.821180027647642e-06', 'march:0.0', '):0.0', 'on:0.0', 'friday:0.0', ',:7.986737728060689e-06', '27:0.0', 'april:0.0', ',:7.986737728060689e-06', '2007:0.0', '-:4.821180027647642e-06', 'q:0.0', '##2:0.0', '(:0.0', 'april:0.0', '-:4.821180027647642e-06', 'june:0.0', '):0.0', 'on:0.0', 'friday:0.0', ',:7.986737728060689e-06', '20:0.0', 'july:0.0', ',:7.986737728060689e-06', '2007:0.0', '-:4.821180027647642e-06', 'q:0.0', '##3:0.0', '(:0.0', 'july:0.0', '-:4.821180027647642e-06', 'september:0.0', '):0.0', 'on:0.0', 'friday:0.0', ',:7.986737728060689e-06', '26:0.0', 'october:0.0', ',:7.986737728060689e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0360, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('will', tensor(0.0485, device='cuda:0')), ('disclose', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('interim', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('q2', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('q3', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0360, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('will', tensor(0.0485, device='cuda:0')), ('disclose', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('interim', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('q2', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('q3', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('-', tensor(0.0574, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), (',', tensor(0.0951, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 511, example: The company is reportedly searching for a replacement for CEO Olli-Pekka Kallasvuo , prediction: 2, correct_label: 2, class_scores: [0.24237569 0.3121504  0.44547397], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'reportedly:0.0', 'searching:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'replacement:0.0', 'for:0.0', 'ceo:0.0', 'ol:0.0', '##li:0.0', '-:4.821180027647642e-06', 'pe:0.0', '##kka:0.0', 'ka:0.0', '##llas:0.0', '##vu:0.0', '##o:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2406, device='cuda:0')), ('company', tensor(0.2524, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('reportedly', tensor(0., device='cuda:0')), ('searching', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.3253, device='cuda:0')), ('replacement', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('olli', tensor(0., device='cuda:0')), ('-', tensor(0.1818, device='cuda:0')), ('pekka', tensor(0., device='cuda:0')), ('kallasvuo', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2406, device='cuda:0')), ('company', tensor(0.2524, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('reportedly', tensor(0., device='cuda:0')), ('searching', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.3253, device='cuda:0')), ('replacement', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('olli', tensor(0., device='cuda:0')), ('-', tensor(0.1818, device='cuda:0')), ('pekka', tensor(0., device='cuda:0')), ('kallasvuo', tensor(0., device='cuda:0'))]
idx: 512, example: Capacity will ease at its Seikku sawmill in Pori and Alholma sawmill in Pietarsaari and result in 60 people being laid off for around six weeks starting mid-May , it said , prediction: 1, correct_label: 0, class_scores: [0.17618838 0.46938783 0.3544238 ], word_scores: ['capacity:0.0', 'will:4.073096533829812e-06', 'ease:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'se:0.0', '##ik:0.0', '##ku:0.0', 'sawmill:0.0', 'in:3.0217122457543155e-06', 'por:0.0', '##i:0.0', 'and:0.0', 'al:0.0', '##holm:0.0', '##a:3.804580501309829e-06', 'sawmill:0.0', 'in:3.0217122457543155e-06', 'pie:0.0', '##tar:0.0', '##sa:0.0', '##ari:0.0', 'and:0.0', 'result:0.0', 'in:3.0217122457543155e-06', '60:0.0', 'people:0.0', 'being:0.0', 'laid:0.0', 'off:0.0', 'for:0.0', 'around:0.0', 'six:0.0', 'weeks:0.0', 'starting:0.0', 'mid:0.0', '-:4.821180027647642e-06', 'may:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('capacity', tensor(0., device='cuda:0')), ('will', tensor(0.1314, device='cuda:0')), ('ease', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0554, device='cuda:0')), ('seikku', tensor(0., device='cuda:0')), ('sawmill', tensor(0., device='cuda:0')), ('in', tensor(0.0975, device='cuda:0')), ('pori', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('alholma', tensor(0., device='cuda:0')), ('sawmill', tensor(0., device='cuda:0')), ('in', tensor(0.0975, device='cuda:0')), ('pietarsaari', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('in', tensor(0.0975, device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.1555, device='cuda:0')), ('may', tensor(0., device='cuda:0')), (',', tensor(0.2576, device='cuda:0')), ('it', tensor(0.1078, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('capacity', tensor(0., device='cuda:0')), ('will', tensor(0.1314, device='cuda:0')), ('ease', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0554, device='cuda:0')), ('seikku', tensor(0., device='cuda:0')), ('sawmill', tensor(0., device='cuda:0')), ('in', tensor(0.0975, device='cuda:0')), ('pori', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('alholma', tensor(0., device='cuda:0')), ('sawmill', tensor(0., device='cuda:0')), ('in', tensor(0.0975, device='cuda:0')), ('pietarsaari', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('in', tensor(0.0975, device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.1555, device='cuda:0')), ('may', tensor(0., device='cuda:0')), (',', tensor(0.2576, device='cuda:0')), ('it', tensor(0.1078, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 513, example: `` Rapala is excited to be partnering with RBFF and other industry leaders on this holiday promotion . ', prediction: 2, correct_label: 2, class_scores: [0.22309059 0.3531752  0.42373428], word_scores: ['`:0.0', '`:0.0', 'rap:0.0', '##ala:0.0', 'is:0.0', 'excited:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'partnering:0.0', 'with:4.733654350275174e-06', 'rb:0.0', '##ff:0.0', 'and:0.0', 'other:0.0', 'industry:0.0', 'leaders:0.0', 'on:0.0', 'this:0.0', 'holiday:0.0', 'promotion:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rapala', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('excited', tensor(0., device='cuda:0')), ('to', tensor(0.2743, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('partnering', tensor(0., device='cuda:0')), ('with', tensor(0.4498, device='cuda:0')), ('rbff', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('leaders', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('holiday', tensor(0., device='cuda:0')), ('promotion', tensor(0., device='cuda:0')), ('.', tensor(0.2759, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('rapala', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('excited', tensor(0., device='cuda:0')), ('to', tensor(0.2743, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('partnering', tensor(0., device='cuda:0')), ('with', tensor(0.4498, device='cuda:0')), ('rbff', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('leaders', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('holiday', tensor(0., device='cuda:0')), ('promotion', tensor(0., device='cuda:0')), ('.', tensor(0.2759, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 514, example: The offer , deemed too low by Finnlines ' board , stands until 4 pm tomorrow , prediction: 2, correct_label: 0, class_scores: [0.19218048 0.29642868 0.5113908 ], word_scores: ['the:6.3806996877247e-06', 'offer:0.0', ',:7.986737728060689e-06', 'deemed:0.0', 'too:0.0', 'low:0.0', 'by:0.0', 'finn:0.0', '##lines:0.0', "':0.0", 'board:0.0', ',:7.986737728060689e-06', 'stands:0.0', 'until:0.0', '4:0.0', 'pm:0.0', 'tomorrow:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4441, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('deemed', tensor(0., device='cuda:0')), ('too', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4441, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('deemed', tensor(0., device='cuda:0')), ('too', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))]
idx: 515, example: In addition , nine fixed-term employment contracts will not be extended and two people will leave the company under pension arrangements , prediction: 2, correct_label: 2, class_scores: [0.19821167 0.32730675 0.47448167], word_scores: ['in:3.0217122457543155e-06', 'addition:0.0', ',:7.986737728060689e-06', 'nine:0.0', 'fixed:0.0', '-:4.821180027647642e-06', 'term:0.0', 'employment:0.0', 'contracts:0.0', 'will:4.073096533829812e-06', 'not:0.0', 'be:0.0', 'extended:0.0', 'and:0.0', 'two:0.0', 'people:0.0', 'will:4.073096533829812e-06', 'leave:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'under:0.0', 'pension:0.0', 'arrangements:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0816, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.2156, device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('-', tensor(0.1301, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('employment', tensor(0., device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('will', tensor(0.1099, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('will', tensor(0.1099, device='cuda:0')), ('leave', tensor(0., device='cuda:0')), ('the', tensor(0.1722, device='cuda:0')), ('company', tensor(0.1807, device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('pension', tensor(0., device='cuda:0')), ('arrangements', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0816, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.2156, device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('-', tensor(0.1301, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('employment', tensor(0., device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('will', tensor(0.1099, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('will', tensor(0.1099, device='cuda:0')), ('leave', tensor(0., device='cuda:0')), ('the', tensor(0.1722, device='cuda:0')), ('company', tensor(0.1807, device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('pension', tensor(0., device='cuda:0')), ('arrangements', tensor(0., device='cuda:0'))]
idx: 516, example: All rights reserved , prediction: 2, correct_label: 2, class_scores: [0.18602642 0.34865242 0.4653212 ], word_scores: ['all:0.0', 'rights:0.0', 'reserved:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('all', tensor(nan, device='cuda:0')), ('rights', tensor(nan, device='cuda:0')), ('reserved', tensor(nan, device='cuda:0'))],  word_scores_max: [('all', tensor(nan, device='cuda:0')), ('rights', tensor(nan, device='cuda:0')), ('reserved', tensor(nan, device='cuda:0'))]
idx: 517, example: Operating profit , excluding non-recurring items , totalled EUR 1.0 mn , down from EUR 1.6 mn , prediction: 2, correct_label: 0, class_scores: [0.2856458  0.25985947 0.4544947 ], word_scores: ['operating:0.0', 'profit:0.0', ',:7.986737728060689e-06', 'excluding:0.0', 'non:0.0', '-:4.821180027647642e-06', 'recurring:0.0', 'items:0.0', ',:7.986737728060689e-06', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), (',', tensor(0.2044, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.1234, device='cuda:0')), ('recurring', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), (',', tensor(0.2044, device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2044, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.1150, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), (',', tensor(0.2044, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.1234, device='cuda:0')), ('recurring', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), (',', tensor(0.2044, device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2044, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.1150, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 518, example: Vacon controls a further 5 % of the company via investment fund Power Fund I. EUR 1.0 = USD 1.39, prediction: 2, correct_label: 2, class_scores: [0.18758297 0.28944406 0.522973  ], word_scores: ['va:2.3812995095795486e-06', '##con:0.0', 'controls:0.0', 'a:8.62785782373976e-06', 'further:0.0', '5:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'via:0.0', 'investment:0.0', 'fund:0.0', 'power:0.0', 'fund:0.0', 'i:0.0', '.:2.903296945078182e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '0:0.0', '=:0.0', 'usd:0.0', '1:0.0', '.:2.903296945078182e-06', '39:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vacon', tensor(0.0657, device='cuda:0')), ('controls', tensor(0., device='cuda:0')), ('a', tensor(0.2381, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('of', tensor(0.0948, device='cuda:0')), ('the', tensor(0.1761, device='cuda:0')), ('company', tensor(0.1848, device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('fund', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('fund', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('.', tensor(0.0801, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0801, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0801, device='cuda:0')), ('39', tensor(0., device='cuda:0'))],  word_scores_max: [('vacon', tensor(0.0657, device='cuda:0')), ('controls', tensor(0., device='cuda:0')), ('a', tensor(0.2381, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('of', tensor(0.0948, device='cuda:0')), ('the', tensor(0.1761, device='cuda:0')), ('company', tensor(0.1848, device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('fund', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('fund', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('.', tensor(0.0801, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0801, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0801, device='cuda:0')), ('39', tensor(0., device='cuda:0'))]
idx: 519, example: Sales fell abroad but increased in Finland , prediction: 1, correct_label: 2, class_scores: [0.29282463 0.3748991  0.33227625], word_scores: ['sales:0.0', 'fell:0.0', 'abroad:0.0', 'but:0.0', 'increased:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('sales', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('abroad', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('in', tensor(0.4245, device='cuda:0')), ('finland', tensor(0.5755, device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('abroad', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('in', tensor(0.4245, device='cuda:0')), ('finland', tensor(0.5755, device='cuda:0'))]
idx: 520, example: The share capital of Alma Media Corporation business ID 1944757-4 is EUR 44,767,513.80 and it is divided into 74,612,523 shares , prediction: 2, correct_label: 2, class_scores: [0.28422177 0.28939947 0.4263787 ], word_scores: ['the:6.3806996877247e-06', 'share:0.0', 'capital:0.0', 'of:3.4365734791208524e-06', 'alma:0.0', 'media:0.0', 'corporation:0.0', 'business:0.0', 'id:0.0', '1944:0.0', '##75:0.0', '##7:0.0', '-:4.821180027647642e-06', '4:0.0', 'is:0.0', 'eu:0.0', '##r:0.0', '44:0.0', ',:7.986737728060689e-06', '76:0.0', '##7:0.0', ',:7.986737728060689e-06', '51:0.0', '##3:0.0', '.:2.903296945078182e-06', '80:0.0', 'and:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'divided:0.0', 'into:0.0', '74:0.0', ',:7.986737728060689e-06', '61:0.0', '##2:0.0', ',:7.986737728060689e-06', '52:0.0', '##3:0.0', 'shares:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1208, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('of', tensor(0.0650, device='cuda:0')), ('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('id', tensor(0., device='cuda:0')), ('1944757', tensor(0., device='cuda:0')), ('-', tensor(0.0913, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('44', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('767', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('513', tensor(0., device='cuda:0')), ('.', tensor(0.0550, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0633, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('divided', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('74', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('612', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('523', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1208, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('of', tensor(0.0650, device='cuda:0')), ('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('id', tensor(0., device='cuda:0')), ('1944757', tensor(0., device='cuda:0')), ('-', tensor(0.0913, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('44', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('767', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('513', tensor(0., device='cuda:0')), ('.', tensor(0.0550, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0633, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('divided', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('74', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('612', tensor(0., device='cuda:0')), (',', tensor(0.1512, device='cuda:0')), ('523', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0'))]
idx: 521, example: Department store sales improved by 14 % to EUR 1,070.6 mn , prediction: 2, correct_label: 1, class_scores: [0.14830273 0.32633153 0.52536577], word_scores: ['department:0.0', 'store:0.0', 'sales:0.0', 'improved:0.0', 'by:0.0', '14:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '1:0.0', ',:7.986737728060689e-06', '07:0.0', '##0:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('department', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('to', tensor(0.2095, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.5797, device='cuda:0')), ('070', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('department', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('to', tensor(0.2095, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.5797, device='cuda:0')), ('070', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 522, example: Bertrand Sciard has been the vice chairman of the board of directors of Aldata Solution since April 2007 , prediction: 2, correct_label: 2, class_scores: [0.17831887 0.35227552 0.46940568], word_scores: ['bertrand:0.0', 'sci:0.0', '##ard:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'the:6.3806996877247e-06', 'vice:0.0', 'chairman:3.5376444884605007e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'of:3.4365734791208524e-06', 'al:0.0', '##da:0.0', '##ta:0.0', 'solution:0.0', 'since:0.0', 'april:0.0', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('bertrand', tensor(0., device='cuda:0')), ('sciard', tensor(0., device='cuda:0')), ('has', tensor(0.1820, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('the', tensor(0.1961, device='cuda:0')), ('vice', tensor(0., device='cuda:0')), ('chairman', tensor(0.1087, device='cuda:0')), ('of', tensor(0.1056, device='cuda:0')), ('the', tensor(0.1961, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.1056, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('of', tensor(0.1056, device='cuda:0')), ('aldata', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('bertrand', tensor(0., device='cuda:0')), ('sciard', tensor(0., device='cuda:0')), ('has', tensor(0.1820, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('the', tensor(0.1961, device='cuda:0')), ('vice', tensor(0., device='cuda:0')), ('chairman', tensor(0.1087, device='cuda:0')), ('of', tensor(0.1056, device='cuda:0')), ('the', tensor(0.1961, device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.1056, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('of', tensor(0.1056, device='cuda:0')), ('aldata', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 523, example: The EPS improved to EUR0 .38 from EUR0 .27 , prediction: 2, correct_label: 1, class_scores: [0.18259846 0.33185977 0.48554176], word_scores: ['the:6.3806996877247e-06', 'eps:0.0', 'improved:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '38:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '27:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3261, device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('to', tensor(0.1475, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1484, device='cuda:0')), ('38', tensor(0., device='cuda:0')), ('from', tensor(0.2297, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1484, device='cuda:0')), ('27', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3261, device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('to', tensor(0.1475, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1484, device='cuda:0')), ('38', tensor(0., device='cuda:0')), ('from', tensor(0.2297, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1484, device='cuda:0')), ('27', tensor(0., device='cuda:0'))]
idx: 524, example: `` We are pleased with the efforts of both negotiating teams and look forward to a productive four years ahead . ', prediction: 2, correct_label: 1, class_scores: [0.29071367 0.27190316 0.43738317], word_scores: ['`:0.0', '`:0.0', 'we:0.0', 'are:0.0', 'pleased:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'efforts:0.0', 'of:3.4365734791208524e-06', 'both:0.0', 'negotiating:0.0', 'teams:0.0', 'and:0.0', 'look:0.0', 'forward:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'productive:0.0', 'four:3.606506425057887e-06', 'years:0.0', 'ahead:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('pleased', tensor(0., device='cuda:0')), ('with', tensor(0.1453, device='cuda:0')), ('the', tensor(0.1959, device='cuda:0')), ('efforts', tensor(0., device='cuda:0')), ('of', tensor(0.1055, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('negotiating', tensor(0., device='cuda:0')), ('teams', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.0886, device='cuda:0')), ('a', tensor(0.2649, device='cuda:0')), ('productive', tensor(0., device='cuda:0')), ('four', tensor(0.1107, device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('ahead', tensor(0., device='cuda:0')), ('.', tensor(0.0891, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('pleased', tensor(0., device='cuda:0')), ('with', tensor(0.1453, device='cuda:0')), ('the', tensor(0.1959, device='cuda:0')), ('efforts', tensor(0., device='cuda:0')), ('of', tensor(0.1055, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('negotiating', tensor(0., device='cuda:0')), ('teams', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.0886, device='cuda:0')), ('a', tensor(0.2649, device='cuda:0')), ('productive', tensor(0., device='cuda:0')), ('four', tensor(0.1107, device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('ahead', tensor(0., device='cuda:0')), ('.', tensor(0.0891, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 525, example: CEO of the company Tarmo Noop said the growth in the sale of premium beers was the biggest , prediction: 2, correct_label: 1, class_scores: [0.2692978  0.32689613 0.4038061 ], word_scores: ['ceo:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'tar:0.0', '##mo:0.0', 'no:0.0', '##op:0.0', 'said:0.0', 'the:6.3806996877247e-06', 'growth:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'sale:0.0', 'of:3.4365734791208524e-06', 'premium:0.0', 'beers:0.0', 'was:0.0', 'the:6.3806996877247e-06', 'biggest:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ceo', tensor(0., device='cuda:0')), ('of', tensor(0.0816, device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('company', tensor(0.1590, device='cuda:0')), ('tarmo', tensor(0., device='cuda:0')), ('noop', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('of', tensor(0.0816, device='cuda:0')), ('premium', tensor(0., device='cuda:0')), ('beers', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('biggest', tensor(0., device='cuda:0'))],  word_scores_max: [('ceo', tensor(0., device='cuda:0')), ('of', tensor(0.0816, device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('company', tensor(0.1590, device='cuda:0')), ('tarmo', tensor(0., device='cuda:0')), ('noop', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0718, device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('of', tensor(0.0816, device='cuda:0')), ('premium', tensor(0., device='cuda:0')), ('beers', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('biggest', tensor(0., device='cuda:0'))]
idx: 526, example: The paper industry 's de-inking sludge , which is produced in mills that use recycled fiber when printing ink is removed from recovered paper , is also a suitable raw material , prediction: 2, correct_label: 2, class_scores: [0.22753805 0.37362522 0.39883673], word_scores: ['the:6.3806996877247e-06', 'paper:2.697490344871767e-06', 'industry:0.0', "':0.0", 's:0.0', 'de:0.0', '-:4.821180027647642e-06', 'ink:0.0', '##ing:0.0', 'sl:0.0', '##udge:0.0', ',:7.986737728060689e-06', 'which:0.0', 'is:0.0', 'produced:0.0', 'in:3.0217122457543155e-06', 'mills:0.0', 'that:1.5133816759771435e-06', 'use:0.0', 'recycled:0.0', 'fiber:0.0', 'when:0.0', 'printing:0.0', 'ink:0.0', 'is:0.0', 'removed:0.0', 'from:4.495178018260049e-06', 'recovered:0.0', 'paper:2.697490344871767e-06', ',:7.986737728060689e-06', 'is:0.0', 'also:0.0', 'a:8.62785782373976e-06', 'suitable:0.0', 'raw:0.0', 'material:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.7029, device='cuda:0')), ('paper', tensor(0.2971, device='cuda:0'))],  word_scores_max: [('the', tensor(0.7029, device='cuda:0')), ('paper', tensor(0.2971, device='cuda:0'))]
idx: 527, example: I can say categorically , no , ' Wahlroos was quoted as saying by the paper , when asked about Sampo 's interest in making a bid for RSA , prediction: 1, correct_label: 2, class_scores: [0.22802539 0.41495964 0.35701498], word_scores: ['i:0.0', 'can:0.0', 'say:0.0', 'cat:0.0', '##egorical:0.0', '##ly:0.0', ',:7.986737728060689e-06', 'no:0.0', ',:7.986737728060689e-06', "':0.0", 'wah:0.0', '##lr:0.0', '##oo:0.0', '##s:4.601175078278175e-06', 'was:0.0', 'quoted:0.0', 'as:0.0', 'saying:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'paper:2.697490344871767e-06', ',:7.986737728060689e-06', 'when:0.0', 'asked:0.0', 'about:0.0', 'sam:0.0', '##po:0.0', "':0.0", 's:0.0', 'interest:0.0', 'in:3.0217122457543155e-06', 'making:0.0', 'a:8.62785782373976e-06', 'bid:0.0', 'for:0.0', 'rs:0.0', '##a:3.804580501309829e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('i', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('say', tensor(0., device='cuda:0')), ('categorically', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('no', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('i', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('say', tensor(0., device='cuda:0')), ('categorically', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('no', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0'))]
idx: 528, example: Our key geographical markets are Europe , Russian Federation , Middle-East , South-Africa and Japan , prediction: 2, correct_label: 2, class_scores: [0.2415224  0.31027025 0.44820732], word_scores: ['our:0.0', 'key:0.0', 'geographical:0.0', 'markets:0.0', 'are:0.0', 'europe:0.0', ',:7.986737728060689e-06', 'russian:0.0', 'federation:0.0', ',:7.986737728060689e-06', 'middle:0.0', '-:4.821180027647642e-06', 'east:0.0', ',:7.986737728060689e-06', 'south:0.0', '-:4.821180027647642e-06', 'africa:0.0', 'and:0.0', 'japan:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('our', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('geographical', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0')), (',', tensor(0.2377, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('federation', tensor(0., device='cuda:0')), (',', tensor(0.2377, device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('-', tensor(0.1435, device='cuda:0')), ('east', tensor(0., device='cuda:0')), (',', tensor(0.2377, device='cuda:0')), ('south', tensor(0., device='cuda:0')), ('-', tensor(0.1435, device='cuda:0')), ('africa', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('japan', tensor(0., device='cuda:0'))],  word_scores_max: [('our', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('geographical', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0')), (',', tensor(0.2377, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('federation', tensor(0., device='cuda:0')), (',', tensor(0.2377, device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('-', tensor(0.1435, device='cuda:0')), ('east', tensor(0., device='cuda:0')), (',', tensor(0.2377, device='cuda:0')), ('south', tensor(0., device='cuda:0')), ('-', tensor(0.1435, device='cuda:0')), ('africa', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('japan', tensor(0., device='cuda:0'))]
idx: 529, example: RFID ( Radio Frequency Identification ) is a method of so-called intelligent transport , whereby information can be read and saved remotely , prediction: 1, correct_label: 2, class_scores: [0.1790799 0.4469442 0.3739759], word_scores: ['rf:0.0', '##id:0.0', '(:0.0', 'radio:2.7861385660798987e-06', 'frequency:0.0', 'identification:0.0', '):0.0', 'is:0.0', 'a:8.62785782373976e-06', 'method:2.380315208938555e-06', 'of:3.4365734791208524e-06', 'so:0.0', '-:4.821180027647642e-06', 'called:0.0', 'intelligent:0.0', 'transport:0.0', ',:7.986737728060689e-06', 'whereby:0.0', 'information:0.0', 'can:0.0', 'be:0.0', 'read:0.0', 'and:0.0', 'saved:0.0', 'remotely:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rfid', tensor(0., device='cuda:0')), ('radio', tensor(0.0928, device='cuda:0')), ('frequency', tensor(0., device='cuda:0')), ('identification', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2872, device='cuda:0')), ('method', tensor(0.0792, device='cuda:0')), ('of', tensor(0.1144, device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('-', tensor(0.1605, device='cuda:0')), ('called', tensor(0., device='cuda:0')), ('intelligent', tensor(0., device='cuda:0')), ('transport', tensor(0., device='cuda:0')), (',', tensor(0.2659, device='cuda:0')), ('whereby', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('read', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('saved', tensor(0., device='cuda:0')), ('remotely', tensor(0., device='cuda:0'))],  word_scores_max: [('rfid', tensor(0., device='cuda:0')), ('radio', tensor(0.0928, device='cuda:0')), ('frequency', tensor(0., device='cuda:0')), ('identification', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2872, device='cuda:0')), ('method', tensor(0.0792, device='cuda:0')), ('of', tensor(0.1144, device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('-', tensor(0.1605, device='cuda:0')), ('called', tensor(0., device='cuda:0')), ('intelligent', tensor(0., device='cuda:0')), ('transport', tensor(0., device='cuda:0')), (',', tensor(0.2659, device='cuda:0')), ('whereby', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('read', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('saved', tensor(0., device='cuda:0')), ('remotely', tensor(0., device='cuda:0'))]
idx: 530, example: Recovery has been evident in the liquid handling business , particularly in areas outside Europe and primarily in North America and Asia , prediction: 2, correct_label: 1, class_scores: [0.14212818 0.3906451  0.46722677], word_scores: ['recovery:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'evident:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'liquid:0.0', 'handling:8.843817340675741e-06', 'business:0.0', ',:7.986737728060689e-06', 'particularly:0.0', 'in:3.0217122457543155e-06', 'areas:0.0', 'outside:0.0', 'europe:0.0', 'and:0.0', 'primarily:0.0', 'in:3.0217122457543155e-06', 'north:0.0', 'america:0.0', 'and:0.0', 'asia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('recovery', tensor(0., device='cuda:0')), ('has', tensor(0.1550, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('evident', tensor(0., device='cuda:0')), ('in', tensor(0.0791, device='cuda:0')), ('the', tensor(0.1670, device='cuda:0')), ('liquid', tensor(0., device='cuda:0')), ('handling', tensor(0.2315, device='cuda:0')), ('business', tensor(0., device='cuda:0')), (',', tensor(0.2091, device='cuda:0')), ('particularly', tensor(0., device='cuda:0')), ('in', tensor(0.0791, device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('outside', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('primarily', tensor(0., device='cuda:0')), ('in', tensor(0.0791, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('asia', tensor(0., device='cuda:0'))],  word_scores_max: [('recovery', tensor(0., device='cuda:0')), ('has', tensor(0.1550, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('evident', tensor(0., device='cuda:0')), ('in', tensor(0.0791, device='cuda:0')), ('the', tensor(0.1670, device='cuda:0')), ('liquid', tensor(0., device='cuda:0')), ('handling', tensor(0.2315, device='cuda:0')), ('business', tensor(0., device='cuda:0')), (',', tensor(0.2091, device='cuda:0')), ('particularly', tensor(0., device='cuda:0')), ('in', tensor(0.0791, device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('outside', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('primarily', tensor(0., device='cuda:0')), ('in', tensor(0.0791, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('asia', tensor(0., device='cuda:0'))]
idx: 531, example: Based upon its unique fiber expertise and innovative approach , the company has a strong market position in several business areas in which it operates , prediction: 2, correct_label: 1, class_scores: [0.21482404 0.38161832 0.40355766], word_scores: ['based:0.0', 'upon:0.0', 'its:1.7191393908433383e-06', 'unique:0.0', 'fiber:0.0', 'expertise:0.0', 'and:0.0', 'innovative:0.0', 'approach:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'strong:0.0', 'market:0.0', 'position:0.0', 'in:3.0217122457543155e-06', 'several:0.0', 'business:0.0', 'areas:0.0', 'in:3.0217122457543155e-06', 'which:0.0', 'it:3.3415778943890473e-06', 'operates:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('based', tensor(0., device='cuda:0')), ('upon', tensor(0., device='cuda:0')), ('its', tensor(0.0368, device='cuda:0')), ('unique', tensor(0., device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('innovative', tensor(0., device='cuda:0')), ('approach', tensor(0., device='cuda:0')), (',', tensor(0.1710, device='cuda:0')), ('the', tensor(0.1366, device='cuda:0')), ('company', tensor(0.1433, device='cuda:0')), ('has', tensor(0.1268, device='cuda:0')), ('a', tensor(0.1847, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('in', tensor(0.0647, device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('in', tensor(0.0647, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('it', tensor(0.0715, device='cuda:0')), ('operates', tensor(0., device='cuda:0'))],  word_scores_max: [('based', tensor(0., device='cuda:0')), ('upon', tensor(0., device='cuda:0')), ('its', tensor(0.0368, device='cuda:0')), ('unique', tensor(0., device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('innovative', tensor(0., device='cuda:0')), ('approach', tensor(0., device='cuda:0')), (',', tensor(0.1710, device='cuda:0')), ('the', tensor(0.1366, device='cuda:0')), ('company', tensor(0.1433, device='cuda:0')), ('has', tensor(0.1268, device='cuda:0')), ('a', tensor(0.1847, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('in', tensor(0.0647, device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('in', tensor(0.0647, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('it', tensor(0.0715, device='cuda:0')), ('operates', tensor(0., device='cuda:0'))]
idx: 532, example: Finnish media group Talentum has issued a profit warning , prediction: 2, correct_label: 0, class_scores: [0.18263938 0.3842118  0.43314877], word_scores: ['finnish:0.0', 'media:0.0', 'group:0.0', 'talent:0.0', '##um:0.0', 'has:5.9214244174654596e-06', 'issued:0.0', 'a:8.62785782373976e-06', 'profit:0.0', 'warning:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('has', tensor(0.4070, device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('a', tensor(0.5930, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('warning', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('has', tensor(0.4070, device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('a', tensor(0.5930, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('warning', tensor(0., device='cuda:0'))]
idx: 533, example: In the third quarter , net sales increased by 12 % year-on-year to EUR159 .5 m , or by 6 % at comparable currency rates growth , prediction: 2, correct_label: 1, class_scores: [0.26072645 0.35139966 0.38787383], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', ',:7.986737728060689e-06', 'net:0.0', 'sales:0.0', 'increased:0.0', 'by:0.0', '12:0.0', '%:0.0', 'year:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'year:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##15:0.0', '##9:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', ',:7.986737728060689e-06', 'or:0.0', 'by:0.0', '6:0.0', '%:0.0', 'at:0.0', 'comparable:0.0', 'currency:0.0', 'rates:0.0', 'growth:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0740, device='cuda:0')), ('the', tensor(0.1564, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), (',', tensor(0.1957, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.1181, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.1181, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0707, device='cuda:0')), ('eur159', tensor(0., device='cuda:0')), ('.', tensor(0.0711, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1957, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('comparable', tensor(0., device='cuda:0')), ('currency', tensor(0., device='cuda:0')), ('rates', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0740, device='cuda:0')), ('the', tensor(0.1564, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), (',', tensor(0.1957, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('-', tensor(0.1181, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.1181, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('to', tensor(0.0707, device='cuda:0')), ('eur159', tensor(0., device='cuda:0')), ('.', tensor(0.0711, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1957, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('comparable', tensor(0., device='cuda:0')), ('currency', tensor(0., device='cuda:0')), ('rates', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0'))]
idx: 534, example: The company has delivered the technical infrastructure , used by NAV for their data warehouse and business intelligence initiatives , prediction: 2, correct_label: 2, class_scores: [0.13459584 0.39499754 0.47040668], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'delivered:0.0', 'the:6.3806996877247e-06', 'technical:0.0', 'infrastructure:0.0', ',:7.986737728060689e-06', 'used:0.0', 'by:0.0', 'na:0.0', '##v:0.0', 'for:0.0', 'their:0.0', 'data:0.0', 'warehouse:0.0', 'and:0.0', 'business:0.0', 'intelligence:0.0', 'initiatives:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1912, device='cuda:0')), ('company', tensor(0.2007, device='cuda:0')), ('has', tensor(0.1775, device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('the', tensor(0.1912, device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), (',', tensor(0.2394, device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('nav', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('intelligence', tensor(0., device='cuda:0')), ('initiatives', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1912, device='cuda:0')), ('company', tensor(0.2007, device='cuda:0')), ('has', tensor(0.1775, device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('the', tensor(0.1912, device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), (',', tensor(0.2394, device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('nav', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('intelligence', tensor(0., device='cuda:0')), ('initiatives', tensor(0., device='cuda:0'))]
idx: 535, example: We can choose the most efficient , best overall value option for our customers already at the bidding stage , prediction: 2, correct_label: 1, class_scores: [0.20964314 0.35096797 0.43938884], word_scores: ['we:0.0', 'can:0.0', 'choose:0.0', 'the:6.3806996877247e-06', 'most:0.0', 'efficient:0.0', ',:7.986737728060689e-06', 'best:0.0', 'overall:0.0', 'value:0.0', 'option:0.0', 'for:0.0', 'our:0.0', 'customers:0.0', 'already:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'bidding:0.0', 'stage:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('choose', tensor(0., device='cuda:0')), ('the', tensor(0.3075, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), (',', tensor(0.3849, device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('overall', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.3075, device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('stage', tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('choose', tensor(0., device='cuda:0')), ('the', tensor(0.3075, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), (',', tensor(0.3849, device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('overall', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.3075, device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('stage', tensor(0., device='cuda:0'))]
idx: 536, example: Finnish meat company Atria can no longer promise a sufficient amount of domestic beef to its customers , prediction: 2, correct_label: 0, class_scores: [0.1617501  0.26809898 0.570151  ], word_scores: ['finnish:0.0', 'meat:0.0', 'company:6.695386673527537e-06', 'at:0.0', '##ria:0.0', 'can:0.0', 'no:0.0', 'longer:0.0', 'promise:0.0', 'a:8.62785782373976e-06', 'sufficient:0.0', 'amount:0.0', 'of:3.4365734791208524e-06', 'domestic:0.0', 'beef:0.0', 'to:2.886244146793615e-06', 'its:1.7191393908433383e-06', 'customers:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('meat', tensor(0., device='cuda:0')), ('company', tensor(0.2866, device='cuda:0')), ('atria', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('longer', tensor(0., device='cuda:0')), ('promise', tensor(0., device='cuda:0')), ('a', tensor(0.3693, device='cuda:0')), ('sufficient', tensor(0., device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('of', tensor(0.1471, device='cuda:0')), ('domestic', tensor(0., device='cuda:0')), ('beef', tensor(0., device='cuda:0')), ('to', tensor(0.1235, device='cuda:0')), ('its', tensor(0.0736, device='cuda:0')), ('customers', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('meat', tensor(0., device='cuda:0')), ('company', tensor(0.2866, device='cuda:0')), ('atria', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('longer', tensor(0., device='cuda:0')), ('promise', tensor(0., device='cuda:0')), ('a', tensor(0.3693, device='cuda:0')), ('sufficient', tensor(0., device='cuda:0')), ('amount', tensor(0., device='cuda:0')), ('of', tensor(0.1471, device='cuda:0')), ('domestic', tensor(0., device='cuda:0')), ('beef', tensor(0., device='cuda:0')), ('to', tensor(0.1235, device='cuda:0')), ('its', tensor(0.0736, device='cuda:0')), ('customers', tensor(0., device='cuda:0'))]
idx: 537, example: The reduction notice applied to 17 people , prediction: 2, correct_label: 0, class_scores: [0.13564442 0.38064852 0.48370704], word_scores: ['the:6.3806996877247e-06', 'reduction:0.0', 'notice:0.0', 'applied:0.0', 'to:2.886244146793615e-06', '17:0.0', 'people:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6885, device='cuda:0')), ('reduction', tensor(0., device='cuda:0')), ('notice', tensor(0., device='cuda:0')), ('applied', tensor(0., device='cuda:0')), ('to', tensor(0.3115, device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6885, device='cuda:0')), ('reduction', tensor(0., device='cuda:0')), ('notice', tensor(0., device='cuda:0')), ('applied', tensor(0., device='cuda:0')), ('to', tensor(0.3115, device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))]
idx: 538, example: facades in Riga 8 March 2010 - Finnish construction company YIT Oyj HEL : YTY1V said today that it will build the frame and the facades in a tower construction project in Riga , prediction: 2, correct_label: 2, class_scores: [0.16581395 0.2860943  0.5480917 ], word_scores: ['facades:0.0', 'in:3.0217122457543155e-06', 'riga:0.0', '8:0.0', 'march:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'construction:0.0', 'company:6.695386673527537e-06', 'yi:0.0', '##t:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'y:0.0', '##ty:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'build:0.0', 'the:6.3806996877247e-06', 'frame:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'facades:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'tower:0.0', 'construction:0.0', 'project:0.0', 'in:3.0217122457543155e-06', 'riga:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('facades', tensor(0., device='cuda:0')), ('in', tensor(0.0573, device='cuda:0')), ('riga', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0914, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('company', tensor(0.1270, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('oyj', tensor(0.0348, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('yty1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0287, device='cuda:0')), ('it', tensor(0.0634, device='cuda:0')), ('will', tensor(0.0772, device='cuda:0')), ('build', tensor(0., device='cuda:0')), ('the', tensor(0.1210, device='cuda:0')), ('frame', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1210, device='cuda:0')), ('facades', tensor(0., device='cuda:0')), ('in', tensor(0.0573, device='cuda:0')), ('a', tensor(0.1636, device='cuda:0')), ('tower', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0573, device='cuda:0')), ('riga', tensor(0., device='cuda:0'))],  word_scores_max: [('facades', tensor(0., device='cuda:0')), ('in', tensor(0.0573, device='cuda:0')), ('riga', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0914, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('company', tensor(0.1270, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('oyj', tensor(0.0348, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('yty1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0287, device='cuda:0')), ('it', tensor(0.0634, device='cuda:0')), ('will', tensor(0.0772, device='cuda:0')), ('build', tensor(0., device='cuda:0')), ('the', tensor(0.1210, device='cuda:0')), ('frame', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1210, device='cuda:0')), ('facades', tensor(0., device='cuda:0')), ('in', tensor(0.0573, device='cuda:0')), ('a', tensor(0.1636, device='cuda:0')), ('tower', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0573, device='cuda:0')), ('riga', tensor(0., device='cuda:0'))]
idx: 539, example: The restructuring creates a more efficient organization with increased operational focus and stable profitability , and leads to more efficient production , said Bo Annvik , head of Specialty Stainless , prediction: 1, correct_label: 1, class_scores: [0.16692124 0.4616125  0.37146625], word_scores: ['the:6.3806996877247e-06', 'restructuring:0.0', 'creates:0.0', 'a:8.62785782373976e-06', 'more:0.0', 'efficient:0.0', 'organization:0.0', 'with:4.733654350275174e-06', 'increased:0.0', 'operational:0.0', 'focus:0.0', 'and:0.0', 'stable:0.0', 'profit:0.0', '##ability:0.0', ',:7.986737728060689e-06', 'and:0.0', 'leads:0.0', 'to:2.886244146793615e-06', 'more:0.0', 'efficient:0.0', 'production:0.0', ',:7.986737728060689e-06', 'said:0.0', 'bo:0.0', 'ann:0.0', '##vik:0.0', ',:7.986737728060689e-06', 'head:0.0', 'of:3.4365734791208524e-06', 'specialty:0.0', 'stainless:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1275, device='cuda:0')), ('restructuring', tensor(0., device='cuda:0')), ('creates', tensor(0., device='cuda:0')), ('a', tensor(0.1725, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('organization', tensor(0., device='cuda:0')), ('with', tensor(0.0946, device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('stable', tensor(0., device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), (',', tensor(0.1597, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('to', tensor(0.0577, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), (',', tensor(0.1597, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('bo', tensor(0., device='cuda:0')), ('annvik', tensor(0., device='cuda:0')), (',', tensor(0.1597, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('of', tensor(0.0687, device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('stainless', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1275, device='cuda:0')), ('restructuring', tensor(0., device='cuda:0')), ('creates', tensor(0., device='cuda:0')), ('a', tensor(0.1725, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('organization', tensor(0., device='cuda:0')), ('with', tensor(0.0946, device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('stable', tensor(0., device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), (',', tensor(0.1597, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('to', tensor(0.0577, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('efficient', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), (',', tensor(0.1597, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('bo', tensor(0., device='cuda:0')), ('annvik', tensor(0., device='cuda:0')), (',', tensor(0.1597, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('of', tensor(0.0687, device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('stainless', tensor(0., device='cuda:0'))]
idx: 540, example: Swedish telco TeliaSonera is teaming up with Friends , a Swedish organization against bullying , to fight bullying of children and teenagers via electronic channels , prediction: 2, correct_label: 2, class_scores: [0.19829062 0.37998328 0.4217261 ], word_scores: ['swedish:0.0', 'tel:0.0', '##co:0.0', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'is:0.0', 'teaming:0.0', 'up:1.4959460941099678e-06', 'with:4.733654350275174e-06', 'friends:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'swedish:0.0', 'organization:0.0', 'against:0.0', 'bullying:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'fight:0.0', 'bullying:0.0', 'of:3.4365734791208524e-06', 'children:0.0', 'and:0.0', 'teenagers:0.0', 'via:0.0', 'electronic:0.0', 'channels:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('swedish', tensor(0., device='cuda:0')), ('telco', tensor(0., device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('teaming', tensor(0., device='cuda:0')), ('up', tensor(0.0403, device='cuda:0')), ('with', tensor(0.1274, device='cuda:0')), ('friends', tensor(0., device='cuda:0')), (',', tensor(0.2150, device='cuda:0')), ('a', tensor(0.2322, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('organization', tensor(0., device='cuda:0')), ('against', tensor(0., device='cuda:0')), ('bullying', tensor(0., device='cuda:0')), (',', tensor(0.2150, device='cuda:0')), ('to', tensor(0.0777, device='cuda:0')), ('fight', tensor(0., device='cuda:0')), ('bullying', tensor(0., device='cuda:0')), ('of', tensor(0.0925, device='cuda:0')), ('children', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('teenagers', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('channels', tensor(0., device='cuda:0'))],  word_scores_max: [('swedish', tensor(0., device='cuda:0')), ('telco', tensor(0., device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('teaming', tensor(0., device='cuda:0')), ('up', tensor(0.0403, device='cuda:0')), ('with', tensor(0.1274, device='cuda:0')), ('friends', tensor(0., device='cuda:0')), (',', tensor(0.2150, device='cuda:0')), ('a', tensor(0.2322, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('organization', tensor(0., device='cuda:0')), ('against', tensor(0., device='cuda:0')), ('bullying', tensor(0., device='cuda:0')), (',', tensor(0.2150, device='cuda:0')), ('to', tensor(0.0777, device='cuda:0')), ('fight', tensor(0., device='cuda:0')), ('bullying', tensor(0., device='cuda:0')), ('of', tensor(0.0925, device='cuda:0')), ('children', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('teenagers', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('channels', tensor(0., device='cuda:0'))]
idx: 541, example: `` It gives us a sense of pride and exposure , '' said Bruce Hansen , the SVH sales representative for Wolverine , prediction: 1, correct_label: 1, class_scores: [0.21516289 0.4381062  0.34673095], word_scores: ['`:0.0', '`:0.0', 'it:3.3415778943890473e-06', 'gives:0.0', 'us:0.0', 'a:8.62785782373976e-06', 'sense:0.0', 'of:3.4365734791208524e-06', 'pride:0.0', 'and:0.0', 'exposure:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'said:0.0', 'bruce:0.0', 'hansen:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'sv:0.0', '##h:0.0', 'sales:0.0', 'representative:0.0', 'for:0.0', 'wolverine:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.1428, device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('a', tensor(0.3688, device='cuda:0')), ('sense', tensor(0., device='cuda:0')), ('of', tensor(0.1469, device='cuda:0')), ('pride', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('exposure', tensor(0., device='cuda:0')), (',', tensor(0.3414, device='cuda:0'))],  word_scores_max: [('it', tensor(0.1428, device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('a', tensor(0.3688, device='cuda:0')), ('sense', tensor(0., device='cuda:0')), ('of', tensor(0.1469, device='cuda:0')), ('pride', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('exposure', tensor(0., device='cuda:0')), (',', tensor(0.3414, device='cuda:0'))]
idx: 542, example: GUANGDONG , October 26 , SinoCast -- Nokia Telecommunications Dongguan branch entered into a letter of intent to open a Nokia Class in Qingyuan Polytechnic , Qingyuan City of Guangdong Province , prediction: 2, correct_label: 2, class_scores: [0.21841608 0.28930378 0.49228007], word_scores: ['guangdong:0.0', ',:7.986737728060689e-06', 'october:0.0', '26:0.0', ',:7.986737728060689e-06', 'sino:0.0', '##cast:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'nokia:0.0', 'telecommunications:0.0', 'dong:0.0', '##gua:0.0', '##n:0.0', 'branch:0.0', 'entered:0.0', 'into:0.0', 'a:8.62785782373976e-06', 'letter:0.0', 'of:3.4365734791208524e-06', 'intent:0.0', 'to:2.886244146793615e-06', 'open:0.0', 'a:8.62785782373976e-06', 'nokia:0.0', 'class:0.0', 'in:3.0217122457543155e-06', 'qing:0.0', '##yuan:0.0', 'polytechnic:0.0', ',:7.986737728060689e-06', 'qing:0.0', '##yuan:0.0', 'city:0.0', 'of:3.4365734791208524e-06', 'guangdong:0.0', 'province:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('guangdong', tensor(0., device='cuda:0')), (',', tensor(0.1255, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), (',', tensor(0.1255, device='cuda:0')), ('sinocast', tensor(0., device='cuda:0')), ('-', tensor(0.0758, device='cuda:0')), ('-', tensor(0.0758, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('telecommunications', tensor(0., device='cuda:0')), ('dongguan', tensor(0., device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('a', tensor(0.1356, device='cuda:0')), ('letter', tensor(0., device='cuda:0')), ('of', tensor(0.0540, device='cuda:0')), ('intent', tensor(0., device='cuda:0')), ('to', tensor(0.0454, device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('a', tensor(0.1356, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('class', tensor(0., device='cuda:0')), ('in', tensor(0.0475, device='cuda:0')), ('qingyuan', tensor(0., device='cuda:0')), ('polytechnic', tensor(0., device='cuda:0')), (',', tensor(0.1255, device='cuda:0')), ('qingyuan', tensor(0., device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0540, device='cuda:0')), ('guangdong', tensor(0., device='cuda:0')), ('province', tensor(0., device='cuda:0'))],  word_scores_max: [('guangdong', tensor(0., device='cuda:0')), (',', tensor(0.1255, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), (',', tensor(0.1255, device='cuda:0')), ('sinocast', tensor(0., device='cuda:0')), ('-', tensor(0.0758, device='cuda:0')), ('-', tensor(0.0758, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('telecommunications', tensor(0., device='cuda:0')), ('dongguan', tensor(0., device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('entered', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('a', tensor(0.1356, device='cuda:0')), ('letter', tensor(0., device='cuda:0')), ('of', tensor(0.0540, device='cuda:0')), ('intent', tensor(0., device='cuda:0')), ('to', tensor(0.0454, device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('a', tensor(0.1356, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('class', tensor(0., device='cuda:0')), ('in', tensor(0.0475, device='cuda:0')), ('qingyuan', tensor(0., device='cuda:0')), ('polytechnic', tensor(0., device='cuda:0')), (',', tensor(0.1255, device='cuda:0')), ('qingyuan', tensor(0., device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0540, device='cuda:0')), ('guangdong', tensor(0., device='cuda:0')), ('province', tensor(0., device='cuda:0'))]
idx: 543, example: The total number of voting rights is 74,612,523 , prediction: 2, correct_label: 2, class_scores: [0.18610725 0.27527657 0.5386162 ], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'number:0.0', 'of:3.4365734791208524e-06', 'voting:0.0', 'rights:0.0', 'is:0.0', '74:0.0', ',:7.986737728060689e-06', '61:0.0', '##2:0.0', ',:7.986737728060689e-06', '52:0.0', '##3:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2474, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.1332, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('74', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('612', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('523', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2474, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.1332, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('74', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('612', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('523', tensor(0., device='cuda:0'))]
idx: 544, example: The total investment of the project will be approximately EUR 36m , prediction: 2, correct_label: 2, class_scores: [0.18456058 0.38474506 0.4306944 ], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'investment:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'project:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'approximately:0.0', 'eu:0.0', '##r:0.0', '36:0.0', '##m:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3148, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('of', tensor(0.1695, device='cuda:0')), ('the', tensor(0.3148, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('will', tensor(0.2009, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('36m', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3148, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('of', tensor(0.1695, device='cuda:0')), ('the', tensor(0.3148, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('will', tensor(0.2009, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('36m', tensor(0., device='cuda:0'))]
idx: 545, example: a January 11 , 2010 EPHC board of directors has approved an increase in the quarterly dividend from $ 0.03 to $ 0.05 per share , prediction: 1, correct_label: 1, class_scores: [0.22906677 0.39400956 0.37692362], word_scores: ['a:8.62785782373976e-06', 'january:0.0', '11:0.0', ',:7.986737728060689e-06', '2010:0.0', 'ep:0.0', '##hc:0.0', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'has:5.9214244174654596e-06', 'approved:0.0', 'an:0.0', 'increase:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'quarterly:0.0', 'divide:0.0', '##nd:0.0', 'from:4.495178018260049e-06', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '03:0.0', 'to:2.886244146793615e-06', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '05:0.0', 'per:0.0', 'share:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1777, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), (',', tensor(0.1645, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('ephc', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0708, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('has', tensor(0.1219, device='cuda:0')), ('approved', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('in', tensor(0.0622, device='cuda:0')), ('the', tensor(0.1314, device='cuda:0')), ('quarterly', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('from', tensor(0.0926, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0598, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('to', tensor(0.0594, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0598, device='cuda:0')), ('05', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.1777, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), (',', tensor(0.1645, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('ephc', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('of', tensor(0.0708, device='cuda:0')), ('directors', tensor(0., device='cuda:0')), ('has', tensor(0.1219, device='cuda:0')), ('approved', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('in', tensor(0.0622, device='cuda:0')), ('the', tensor(0.1314, device='cuda:0')), ('quarterly', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('from', tensor(0.0926, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0598, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('to', tensor(0.0594, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0598, device='cuda:0')), ('05', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))]
idx: 546, example: `` My wife is looking forward to getting a paycheck again , '' he quipped recently as a six-knot current swirled around his anchored and heavily sponsored jet sled , prediction: 2, correct_label: 2, class_scores: [0.1738183  0.345378   0.48080376], word_scores: ['`:0.0', '`:0.0', 'my:0.0', 'wife:0.0', 'is:0.0', 'looking:0.0', 'forward:0.0', 'to:2.886244146793615e-06', 'getting:0.0', 'a:8.62785782373976e-06', 'pay:0.0', '##che:0.0', '##ck:1.956489086296642e-06', 'again:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'he:0.0', 'qui:0.0', '##pped:0.0', 'recently:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'six:0.0', '-:4.821180027647642e-06', 'knot:0.0', 'current:0.0', 'swirled:0.0', 'around:0.0', 'his:0.0', 'anchored:0.0', 'and:0.0', 'heavily:0.0', 'sponsored:0.0', 'jet:0.0', 'sl:0.0', '##ed:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('my', tensor(0., device='cuda:0')), ('wife', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.1480, device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('a', tensor(0.4424, device='cuda:0')), ('paycheck', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.4096, device='cuda:0'))],  word_scores_max: [('my', tensor(0., device='cuda:0')), ('wife', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('to', tensor(0.1480, device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('a', tensor(0.4424, device='cuda:0')), ('paycheck', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.4096, device='cuda:0'))]
idx: 547, example: Managing Director Timo Kohtam+�ki of Lemmink+�inen Infra nevertheless points out the continued need for infrastructure construction in the Baltic markets , prediction: 2, correct_label: 2, class_scores: [0.10973468 0.4239688  0.46629655], word_scores: ['managing:0.0', 'director:0.0', 'tim:0.0', '##o:0.0', 'ko:5.9404255807748996e-06', '##hta:0.0', '##m:0.0', '+:0.0', 'ki:0.0', 'of:3.4365734791208524e-06', 'le:0.0', '##mm:0.0', '##ink:0.0', '+:0.0', 'in:3.0217122457543155e-06', '##en:0.0', 'in:3.0217122457543155e-06', '##fra:0.0', 'nevertheless:0.0', 'points:0.0', 'out:0.0', 'the:6.3806996877247e-06', 'continued:0.0', 'need:0.0', 'for:0.0', 'infrastructure:0.0', 'construction:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'baltic:0.0', 'markets:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('managing', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('timo', tensor(0., device='cuda:0')), ('kohtam', tensor(0.1904, device='cuda:0')), ('ki', tensor(0., device='cuda:0')), ('of', tensor(0.1101, device='cuda:0')), ('lemmink', tensor(0., device='cuda:0')), ('inen', tensor(0.0968, device='cuda:0')), ('infra', tensor(0.0968, device='cuda:0')), ('nevertheless', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('the', tensor(0.2045, device='cuda:0')), ('continued', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('in', tensor(0.0968, device='cuda:0')), ('the', tensor(0.2045, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))],  word_scores_max: [('managing', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('timo', tensor(0., device='cuda:0')), ('kohtam', tensor(0.1904, device='cuda:0')), ('ki', tensor(0., device='cuda:0')), ('of', tensor(0.1101, device='cuda:0')), ('lemmink', tensor(0., device='cuda:0')), ('inen', tensor(0.0968, device='cuda:0')), ('infra', tensor(0.0968, device='cuda:0')), ('nevertheless', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('the', tensor(0.2045, device='cuda:0')), ('continued', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('in', tensor(0.0968, device='cuda:0')), ('the', tensor(0.2045, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))]
idx: 548, example: The lay-offs will affect 240 people out of the total 320 Okmetic employees in Finland , prediction: 2, correct_label: 0, class_scores: [0.24012138 0.30480793 0.4550706 ], word_scores: ['the:6.3806996877247e-06', 'lay:0.0', '-:4.821180027647642e-06', 'offs:0.0', 'will:4.073096533829812e-06', 'affect:0.0', '240:0.0', 'people:0.0', 'out:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'total:0.0', '320:0.0', 'ok:0.0', '##met:0.0', '##ic:0.0', 'employees:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1981, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1497, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('will', tensor(0.1265, device='cuda:0')), ('affect', tensor(0., device='cuda:0')), ('240', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('of', tensor(0.1067, device='cuda:0')), ('the', tensor(0.1981, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('320', tensor(0., device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('in', tensor(0.0938, device='cuda:0')), ('finland', tensor(0.1272, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1981, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1497, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('will', tensor(0.1265, device='cuda:0')), ('affect', tensor(0., device='cuda:0')), ('240', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('of', tensor(0.1067, device='cuda:0')), ('the', tensor(0.1981, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('320', tensor(0., device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('in', tensor(0.0938, device='cuda:0')), ('finland', tensor(0.1272, device='cuda:0'))]
idx: 549, example: The Finnish supplier of BSS-OSS and VAS for telecom operators , Tecnotree , has received expansion orders worth a total US$ 7.3 mn for its convergent charging and next generation messaging solutions in Latin America , the company announced without specifying which operators had placed the orders , prediction: 1, correct_label: 1, class_scores: [0.19633038 0.45826516 0.34540445], word_scores: ['the:6.3806996877247e-06', 'finnish:0.0', 'supplier:0.0', 'of:3.4365734791208524e-06', 'bs:0.0', '##s:4.601175078278175e-06', '-:4.821180027647642e-06', 'os:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'va:2.3812995095795486e-06', '##s:4.601175078278175e-06', 'for:0.0', 'telecom:0.0', 'te:0.0', '##c:0.0', '##not:0.0', '##ree:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'received:0.0', 'expansion:0.0', 'orders:0.0', 'worth:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'us:0.0', '$:0.0', '7:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'for:0.0', 'its:1.7191393908433383e-06', 'converge:0.0', '##nt:0.0', 'charging:0.0', 'and:0.0', 'next:0.0', 'generation:0.0', 'messaging:0.0', 'solutions:0.0', 'in:3.0217122457543155e-06', 'latin:0.0', 'america:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'announced:0.0', 'without:0.0', 'specify:0.0', '##ing:0.0', 'which:0.0', 'operators:0.0', 'had:0.0', 'placed:0.0', 'the:6.3806996877247e-06', 'orders:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('the', tensor(0.0855, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('of', tensor(0.0460, device='cuda:0')), ('bss', tensor(0., device='cuda:0')), ('-', tensor(0.0646, device='cuda:0')), ('oss', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('vas', tensor(0.0319, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('telecom', tensor(0., device='cuda:0')), ('tecnotree', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('has', tensor(0.0793, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('a', tensor(0.1156, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0389, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.0230, device='cuda:0')), ('convergent', tensor(0., device='cuda:0')), ('charging', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('generation', tensor(0., device='cuda:0')), ('messaging', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('in', tensor(0.0405, device='cuda:0')), ('latin', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('company', tensor(0.0897, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('specifying', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('operators', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('placed', tensor(0., device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('orders', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0855, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('of', tensor(0.0460, device='cuda:0')), ('bss', tensor(0., device='cuda:0')), ('-', tensor(0.0646, device='cuda:0')), ('oss', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('vas', tensor(0.0319, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('telecom', tensor(0., device='cuda:0')), ('tecnotree', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('has', tensor(0.0793, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('a', tensor(0.1156, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0389, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.0230, device='cuda:0')), ('convergent', tensor(0., device='cuda:0')), ('charging', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('generation', tensor(0., device='cuda:0')), ('messaging', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('in', tensor(0.0405, device='cuda:0')), ('latin', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), (',', tensor(0.1070, device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('company', tensor(0.0897, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('specifying', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('operators', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('placed', tensor(0., device='cuda:0')), ('the', tensor(0.0855, device='cuda:0')), ('orders', tensor(0., device='cuda:0'))]
idx: 550, example: The decision to sell a share in Lenenergo was reached in line with Fortum 's strategic plans to invest mainly in generating assets in Russia , while Lenenergo is a grid company , the press release said , prediction: 2, correct_label: 1, class_scores: [0.24280329 0.32470748 0.4324892 ], word_scores: ['the:6.3806996877247e-06', 'decision:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'a:8.62785782373976e-06', 'share:0.0', 'in:3.0217122457543155e-06', 'len:0.0', '##ener:0.0', '##go:0.0', 'was:0.0', 'reached:0.0', 'in:3.0217122457543155e-06', 'line:0.0', 'with:4.733654350275174e-06', 'fort:0.0', '##um:0.0', "':0.0", 's:0.0', 'strategic:0.0', 'plans:0.0', 'to:2.886244146793615e-06', 'invest:0.0', 'mainly:0.0', 'in:3.0217122457543155e-06', 'generating:0.0', 'assets:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', ',:7.986737728060689e-06', 'while:0.0', 'len:0.0', '##ener:0.0', '##go:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'grid:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'press:0.0', 'release:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2225, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('to', tensor(0.1007, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('a', tensor(0.3009, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('in', tensor(0.1054, device='cuda:0')), ('lenenergo', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('reached', tensor(0., device='cuda:0')), ('in', tensor(0.1054, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('with', tensor(0.1651, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2225, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('to', tensor(0.1007, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('a', tensor(0.3009, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('in', tensor(0.1054, device='cuda:0')), ('lenenergo', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('reached', tensor(0., device='cuda:0')), ('in', tensor(0.1054, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('with', tensor(0.1651, device='cuda:0'))]
idx: 551, example: The loss for the third quarter of 2007 was EUR 0.3 mn smaller than the loss of the second quarter of 2007 , prediction: 2, correct_label: 1, class_scores: [0.2339154  0.28411004 0.48197454], word_scores: ['the:6.3806996877247e-06', 'loss:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'smaller:0.0', 'than:0.0', 'the:6.3806996877247e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1647, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1647, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0887, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0750, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('smaller', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('the', tensor(0.1647, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0887, device='cuda:0')), ('the', tensor(0.1647, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0887, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1647, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1647, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0887, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0750, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('smaller', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('the', tensor(0.1647, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0887, device='cuda:0')), ('the', tensor(0.1647, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0887, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 552, example: S&P has kept its `` sell '' rating , while Nordea and UBS have reaffirmed their `` buy '' recommendations , prediction: 2, correct_label: 2, class_scores: [0.15727612 0.25311252 0.58961135], word_scores: ['s:0.0', '&:0.0', 'p:0.0', 'has:5.9214244174654596e-06', 'kept:0.0', 'its:1.7191393908433383e-06', '`:0.0', '`:0.0', 'sell:0.0', "':0.0", "':0.0", 'rating:0.0', ',:7.986737728060689e-06', 'while:0.0', 'nord:0.0', '##ea:0.0', 'and:0.0', 'u:0.0', '##bs:0.0', 'have:2.910326429628185e-06', 're:0.0', '##af:0.0', '##firmed:0.0', 'their:0.0', '`:0.0', '`:0.0', 'buy:0.0', "':0.0", "':0.0", 'recommendations:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('s', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('has', tensor(0.7750, device='cuda:0')), ('kept', tensor(0., device='cuda:0')), ('its', tensor(0.2250, device='cuda:0'))],  word_scores_max: [('s', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('has', tensor(0.7750, device='cuda:0')), ('kept', tensor(0., device='cuda:0')), ('its', tensor(0.2250, device='cuda:0'))]
idx: 553, example: After the restructuring , UPM 's average paper machine capacity in Europe will be 320,000 tons ( 350,000 short tons ) in coated magazine paper and 420,000 tons ( 460,000 short tons ) in coated fine paper , prediction: 2, correct_label: 2, class_scores: [0.17658116 0.35116026 0.47225857], word_scores: ['after:0.0', 'the:6.3806996877247e-06', 'restructuring:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', '##m:0.0', "':0.0", 's:0.0', 'average:0.0', 'paper:2.697490344871767e-06', 'machine:0.0', 'capacity:0.0', 'in:3.0217122457543155e-06', 'europe:0.0', 'will:4.073096533829812e-06', 'be:0.0', '320:0.0', ',:7.986737728060689e-06', '000:0.0', 'tons:0.0', '(:0.0', '350:0.0', ',:7.986737728060689e-06', '000:0.0', 'short:0.0', 'tons:0.0', '):0.0', 'in:3.0217122457543155e-06', 'coated:0.0', 'magazine:0.0', 'paper:2.697490344871767e-06', 'and:0.0', '420:0.0', ',:7.986737728060689e-06', '000:0.0', 'tons:0.0', '(:0.0', '460:0.0', ',:7.986737728060689e-06', '000:0.0', 'short:0.0', 'tons:0.0', '):0.0', 'in:3.0217122457543155e-06', 'coated:0.0', 'fine:0.0', 'paper:2.697490344871767e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('restructuring', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('restructuring', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0'))]
idx: 554, example: Calls to the switchboard and directory services have decreased significantly since our employees now have up-to-date contact information from all their colleagues and customers on their phone and can place the call directly , prediction: 2, correct_label: 2, class_scores: [0.23832005 0.26965058 0.4920294 ], word_scores: ['calls:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'switch:0.0', '##board:0.0', 'and:0.0', 'directory:0.0', 'services:0.0', 'have:2.910326429628185e-06', 'decreased:0.0', 'significantly:0.0', 'since:0.0', 'our:0.0', 'employees:0.0', 'now:0.0', 'have:2.910326429628185e-06', 'up:1.4959460941099678e-06', '-:4.821180027647642e-06', 'to:2.886244146793615e-06', '-:4.821180027647642e-06', 'date:0.0', 'contact:0.0', 'information:0.0', 'from:4.495178018260049e-06', 'all:0.0', 'their:0.0', 'colleagues:0.0', 'and:0.0', 'customers:0.0', 'on:0.0', 'their:0.0', 'phone:0.0', 'and:0.0', 'can:0.0', 'place:0.0', 'the:6.3806996877247e-06', 'call:0.0', 'directly:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('calls', tensor(0., device='cuda:0')), ('to', tensor(0.0722, device='cuda:0')), ('the', tensor(0.1596, device='cuda:0')), ('switchboard', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('directory', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('have', tensor(0.0728, device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('significantly', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('have', tensor(0.0728, device='cuda:0')), ('up', tensor(0.0374, device='cuda:0')), ('-', tensor(0.1206, device='cuda:0')), ('to', tensor(0.0722, device='cuda:0')), ('-', tensor(0.1206, device='cuda:0')), ('date', tensor(0., device='cuda:0')), ('contact', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('from', tensor(0.1124, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('colleagues', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('the', tensor(0.1596, device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('directly', tensor(0., device='cuda:0'))],  word_scores_max: [('calls', tensor(0., device='cuda:0')), ('to', tensor(0.0722, device='cuda:0')), ('the', tensor(0.1596, device='cuda:0')), ('switchboard', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('directory', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('have', tensor(0.0728, device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('significantly', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('have', tensor(0.0728, device='cuda:0')), ('up', tensor(0.0374, device='cuda:0')), ('-', tensor(0.1206, device='cuda:0')), ('to', tensor(0.0722, device='cuda:0')), ('-', tensor(0.1206, device='cuda:0')), ('date', tensor(0., device='cuda:0')), ('contact', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('from', tensor(0.1124, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('colleagues', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('the', tensor(0.1596, device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('directly', tensor(0., device='cuda:0'))]
idx: 555, example: Due to Pirkka beer , Olvi 's brewery in Iisalmi is moving to 7-day , 24-hour work shifts , prediction: 2, correct_label: 2, class_scores: [0.1990399  0.39842713 0.402533  ], word_scores: ['due:0.0', 'to:2.886244146793615e-06', 'pi:0.0', '##rk:0.0', '##ka:0.0', 'beer:0.0', ',:7.986737728060689e-06', 'ol:0.0', '##vi:0.0', "':0.0", 's:0.0', 'brewery:0.0', 'in:3.0217122457543155e-06', 'ii:0.0', '##sal:0.0', '##mi:0.0', 'is:0.0', 'moving:0.0', 'to:2.886244146793615e-06', '7:0.0', '-:4.821180027647642e-06', 'day:0.0', ',:7.986737728060689e-06', '24:0.0', '-:4.821180027647642e-06', 'hour:0.0', 'work:0.0', 'shifts:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('due', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('pirkka', tensor(0., device='cuda:0')), ('beer', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0'))],  word_scores_max: [('due', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('pirkka', tensor(0., device='cuda:0')), ('beer', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0'))]
idx: 556, example: There will be return flights from Stuttgart every morning , as well as evening departures on Thursdays , Fridays and Sundays , prediction: 2, correct_label: 2, class_scores: [0.17218716 0.31250328 0.5153096 ], word_scores: ['there:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'return:0.0', 'flights:0.0', 'from:4.495178018260049e-06', 'stuttgart:0.0', 'every:0.0', 'morning:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'evening:0.0', 'departure:0.0', '##s:4.601175078278175e-06', 'on:0.0', 'thursday:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'fridays:0.0', 'and:0.0', 'sundays:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('there', tensor(0., device='cuda:0')), ('will', tensor(0.1660, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('return', tensor(0., device='cuda:0')), ('flights', tensor(0., device='cuda:0')), ('from', tensor(0.1832, device='cuda:0')), ('stuttgart', tensor(0., device='cuda:0')), ('every', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0')), (',', tensor(0.3254, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('evening', tensor(0., device='cuda:0')), ('departures', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursdays', tensor(0., device='cuda:0')), (',', tensor(0.3254, device='cuda:0')), ('fridays', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sundays', tensor(0., device='cuda:0'))],  word_scores_max: [('there', tensor(0., device='cuda:0')), ('will', tensor(0.1660, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('return', tensor(0., device='cuda:0')), ('flights', tensor(0., device='cuda:0')), ('from', tensor(0.1832, device='cuda:0')), ('stuttgart', tensor(0., device='cuda:0')), ('every', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0')), (',', tensor(0.3254, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('evening', tensor(0., device='cuda:0')), ('departures', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursdays', tensor(0., device='cuda:0')), (',', tensor(0.3254, device='cuda:0')), ('fridays', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sundays', tensor(0., device='cuda:0'))]
idx: 557, example: The firm is headquartered in Vantaa , southern Finland and has 16 employees , prediction: 2, correct_label: 2, class_scores: [0.17174824 0.3968995  0.43135223], word_scores: ['the:6.3806996877247e-06', 'firm:0.0', 'is:0.0', 'headquartered:0.0', 'in:3.0217122457543155e-06', 'van:0.0', '##ta:0.0', '##a:3.804580501309829e-06', ',:7.986737728060689e-06', 'southern:0.0', 'finland:4.096111752005527e-06', 'and:0.0', 'has:5.9214244174654596e-06', '16:0.0', 'employees:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2328, device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.1103, device='cuda:0')), ('vantaa', tensor(0., device='cuda:0')), (',', tensor(0.2914, device='cuda:0')), ('southern', tensor(0., device='cuda:0')), ('finland', tensor(0.1495, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('has', tensor(0.2161, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2328, device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.1103, device='cuda:0')), ('vantaa', tensor(0., device='cuda:0')), (',', tensor(0.2914, device='cuda:0')), ('southern', tensor(0., device='cuda:0')), ('finland', tensor(0.1495, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('has', tensor(0.2161, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0'))]
idx: 558, example: Diluted earnings per share ( EPS ) fell to EUR 0.63 from EUR 1.71 , prediction: 1, correct_label: 0, class_scores: [0.21582317 0.42547432 0.35870254], word_scores: ['dil:0.0', '##uted:0.0', 'earnings:0.0', 'per:0.0', 'share:0.0', '(:0.0', 'eps:0.0', '):0.0', 'fell:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '63:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '71:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('diluted', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('63', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('71', tensor(0., device='cuda:0'))],  word_scores_max: [('diluted', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('63', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('71', tensor(0., device='cuda:0'))]
idx: 559, example: Both operating profit and net sales for the 12-month period increased , respectively from EUR20 .8 m and EUR177 .7 m , as compared to the financial year 2004 , prediction: 2, correct_label: 1, class_scores: [0.26112038 0.3663713  0.3725083 ], word_scores: ['both:0.0', 'operating:0.0', 'profit:0.0', 'and:0.0', 'net:0.0', 'sales:0.0', 'for:0.0', 'the:6.3806996877247e-06', '12:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'increased:0.0', ',:7.986737728060689e-06', 'respectively:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##20:0.0', '.:2.903296945078182e-06', '8:0.0', 'm:0.0', 'and:0.0', 'eu:0.0', '##r:0.0', '##17:0.0', '##7:0.0', '.:2.903296945078182e-06', '7:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'financial:0.0', 'year:0.0', '2004:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0962, device='cuda:0')), ('eur20', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur177', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0962, device='cuda:0')), ('eur20', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur177', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 560, example: The plant is scheduled for completion in late February 2007 with hand over of some areas in January Two other suppliers of Nokia - Aspocomp Group Oyj and Perlos - have announced their plans to establish plants within the Nokia complex Together , they will invest Rs 365 crore , prediction: 1, correct_label: 2, class_scores: [0.15579346 0.4379006  0.40630594], word_scores: ['the:6.3806996877247e-06', 'plant:0.0', 'is:0.0', 'scheduled:0.0', 'for:0.0', 'completion:0.0', 'in:3.0217122457543155e-06', 'late:0.0', 'february:0.0', '2007:0.0', 'with:4.733654350275174e-06', 'hand:0.0', 'over:0.0', 'of:3.4365734791208524e-06', 'some:0.0', 'areas:0.0', 'in:3.0217122457543155e-06', 'january:0.0', 'two:0.0', 'other:0.0', 'suppliers:0.0', 'of:3.4365734791208524e-06', 'nokia:0.0', '-:4.821180027647642e-06', 'as:0.0', '##po:0.0', '##com:0.0', '##p:0.0', 'group:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'and:0.0', 'per:0.0', '##los:0.0', '-:4.821180027647642e-06', 'have:2.910326429628185e-06', 'announced:0.0', 'their:0.0', 'plans:0.0', 'to:2.886244146793615e-06', 'establish:0.0', 'plants:0.0', 'within:0.0', 'the:6.3806996877247e-06', 'nokia:0.0', 'complex:0.0', 'together:0.0', ',:7.986737728060689e-06', 'they:0.0', 'will:4.073096533829812e-06', 'invest:0.0', 'rs:0.0', '365:0.0', 'crore:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1068, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('in', tensor(0.0506, device='cuda:0')), ('late', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('with', tensor(0.0792, device='cuda:0')), ('hand', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('in', tensor(0.0506, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('suppliers', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('aspocomp', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('oyj', tensor(0.0307, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('perlos', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('have', tensor(0.0487, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.0483, device='cuda:0')), ('establish', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('complex', tensor(0., device='cuda:0')), ('together', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.0682, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('rs', tensor(0., device='cuda:0')), ('365', tensor(0., device='cuda:0')), ('crore', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1068, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('completion', tensor(0., device='cuda:0')), ('in', tensor(0.0506, device='cuda:0')), ('late', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('with', tensor(0.0792, device='cuda:0')), ('hand', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0')), ('in', tensor(0.0506, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('suppliers', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('aspocomp', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('oyj', tensor(0.0307, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('perlos', tensor(0., device='cuda:0')), ('-', tensor(0.0807, device='cuda:0')), ('have', tensor(0.0487, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.0483, device='cuda:0')), ('establish', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('the', tensor(0.1068, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('complex', tensor(0., device='cuda:0')), ('together', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.0682, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('rs', tensor(0., device='cuda:0')), ('365', tensor(0., device='cuda:0')), ('crore', tensor(0., device='cuda:0'))]
idx: 561, example: Sales increased due to growing market rates and increased operations , prediction: 1, correct_label: 1, class_scores: [0.20217447 0.40328354 0.39454207], word_scores: ['sales:0.0', 'increased:0.0', 'due:0.0', 'to:2.886244146793615e-06', 'growing:0.0', 'market:0.0', 'rates:0.0', 'and:0.0', 'increased:0.0', 'operations:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('rates', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('rates', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 562, example: `` The considerably weaker U.S. dollar and British pound had an impact on sales and average prices in euros , '' UPM said , prediction: 1, correct_label: 0, class_scores: [0.19441146 0.4270516  0.37853694], word_scores: ['`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'considerably:0.0', 'weaker:0.0', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'dollar:0.0', 'and:0.0', 'british:0.0', 'pound:7.64060314395465e-06', 'had:0.0', 'an:0.0', 'impact:0.0', 'on:0.0', 'sales:0.0', 'and:0.0', 'average:0.0', 'prices:0.0', 'in:3.0217122457543155e-06', 'euros:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'up:1.4959460941099678e-06', '##m:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2069, device='cuda:0')), ('considerably', tensor(0., device='cuda:0')), ('weaker', tensor(0., device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.0942, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0942, device='cuda:0')), ('dollar', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('british', tensor(0., device='cuda:0')), ('pound', tensor(0.2478, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('impact', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('average', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('in', tensor(0.0980, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), (',', tensor(0.2590, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2069, device='cuda:0')), ('considerably', tensor(0., device='cuda:0')), ('weaker', tensor(0., device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.0942, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0942, device='cuda:0')), ('dollar', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('british', tensor(0., device='cuda:0')), ('pound', tensor(0.2478, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('impact', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('average', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('in', tensor(0.0980, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), (',', tensor(0.2590, device='cuda:0'))]
idx: 563, example: Neste Shipping is the most likely to remain Finnish as the oil sector and its transports are significant for emergency supply , prediction: 2, correct_label: 2, class_scores: [0.2682703  0.29443046 0.43729913], word_scores: ['nest:0.0', '##e:0.0', 'shipping:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'most:0.0', 'likely:0.0', 'to:2.886244146793615e-06', 'remain:0.0', 'finnish:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'oil:0.0', 'sector:0.0', 'and:0.0', 'its:1.7191393908433383e-06', 'transports:0.0', 'are:0.0', 'significant:0.0', 'for:0.0', 'emergency:0.0', 'supply:6.221108833415201e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('neste', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2705, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('likely', tensor(0., device='cuda:0')), ('to', tensor(0.1224, device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.2705, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('its', tensor(0.0729, device='cuda:0')), ('transports', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('emergency', tensor(0., device='cuda:0')), ('supply', tensor(0.2637, device='cuda:0'))],  word_scores_max: [('neste', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2705, device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('likely', tensor(0., device='cuda:0')), ('to', tensor(0.1224, device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.2705, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('its', tensor(0.0729, device='cuda:0')), ('transports', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('emergency', tensor(0., device='cuda:0')), ('supply', tensor(0.2637, device='cuda:0'))]
idx: 564, example: You will hear the latest insights and updates on Citycon 's strategy as well as the latest news from all the business units , prediction: 1, correct_label: 2, class_scores: [0.19006056 0.46346596 0.3464735 ], word_scores: ['you:0.0', 'will:4.073096533829812e-06', 'hear:0.0', 'the:6.3806996877247e-06', 'latest:0.0', 'insights:0.0', 'and:0.0', 'updates:0.0', 'on:0.0', 'city:0.0', '##con:0.0', "':0.0", 's:0.0', 'strategy:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'latest:0.0', 'news:0.0', 'from:4.495178018260049e-06', 'all:0.0', 'the:6.3806996877247e-06', 'business:0.0', 'units:2.8638919502554927e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('you', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('hear', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('latest', tensor(0., device='cuda:0')), ('insights', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('updates', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0'))],  word_scores_max: [('you', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('hear', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('latest', tensor(0., device='cuda:0')), ('insights', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('updates', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0'))]
idx: 565, example: 25 November 2010 - Finnish paints and coatings company Tikkurila Oyj ( HEL : TIK1V ) said today that Finnish state-owned investment company Solidium Oy sold its 14.7 % stake in the company for a total of EUR98m , prediction: 2, correct_label: 2, class_scores: [0.25550833 0.2834352  0.4610564 ], word_scores: ['25:0.0', 'november:0.0', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'paints:0.0', 'and:0.0', 'coating:0.0', '##s:4.601175078278175e-06', 'company:6.695386673527537e-06', 'ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ti:0.0', '##k:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'finnish:0.0', 'state:0.0', '-:4.821180027647642e-06', 'owned:0.0', 'investment:0.0', 'company:6.695386673527537e-06', 'solid:0.0', '##ium:0.0', 'o:0.0', '##y:1.832826342251792e-06', 'sold:0.0', 'its:1.7191393908433383e-06', '14:0.0', '.:2.903296945078182e-06', '7:0.0', '%:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'for:0.0', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##9:0.0', '##8:0.0', '##m:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('25', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0815, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('paints', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('coatings', tensor(0., device='cuda:0')), ('company', tensor(0.1132, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('oyj', tensor(0.0310, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('tik1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0256, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('state', tensor(0., device='cuda:0')), ('-', tensor(0.0815, device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.1132, device='cuda:0')), ('solidium', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('its', tensor(0.0291, device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('.', tensor(0.0491, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0511, device='cuda:0')), ('the', tensor(0.1078, device='cuda:0')), ('company', tensor(0.1132, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1458, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0581, device='cuda:0')), ('eur98m', tensor(0., device='cuda:0'))],  word_scores_max: [('25', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0815, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('paints', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('coatings', tensor(0., device='cuda:0')), ('company', tensor(0.1132, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('oyj', tensor(0.0310, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('tik1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0256, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('state', tensor(0., device='cuda:0')), ('-', tensor(0.0815, device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.1132, device='cuda:0')), ('solidium', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('its', tensor(0.0291, device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('.', tensor(0.0491, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0511, device='cuda:0')), ('the', tensor(0.1078, device='cuda:0')), ('company', tensor(0.1132, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1458, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0581, device='cuda:0')), ('eur98m', tensor(0., device='cuda:0'))]
idx: 566, example: The new units should become one of the largest ones within the company , prediction: 2, correct_label: 2, class_scores: [0.17493953 0.4117412  0.41331926], word_scores: ['the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'units:2.8638919502554927e-06', 'should:0.0', 'become:0.0', 'one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'largest:0.0', 'ones:0.0', 'within:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1615, device='cuda:0')), ('new', tensor(0.0708, device='cuda:0')), ('units', tensor(0.0725, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('one', tensor(0.1160, device='cuda:0')), ('of', tensor(0.0870, device='cuda:0')), ('the', tensor(0.1615, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('ones', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('the', tensor(0.1615, device='cuda:0')), ('company', tensor(0.1694, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1615, device='cuda:0')), ('new', tensor(0.0708, device='cuda:0')), ('units', tensor(0.0725, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('one', tensor(0.1160, device='cuda:0')), ('of', tensor(0.0870, device='cuda:0')), ('the', tensor(0.1615, device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('ones', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('the', tensor(0.1615, device='cuda:0')), ('company', tensor(0.1694, device='cuda:0'))]
idx: 567, example: Earnings per share EPS amounted to EUR0 .01 , prediction: 2, correct_label: 2, class_scores: [0.19931222 0.32817847 0.47250926], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', 'eps:0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '01:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0')), ('01', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0')), ('01', tensor(0., device='cuda:0'))]
idx: 568, example: Okmetic 's silicon wafers are part of a further processing chain that produces end products that improve human interaction and quality of life , prediction: 2, correct_label: 2, class_scores: [0.14882973 0.4068411  0.44432914], word_scores: ['ok:0.0', '##met:0.0', '##ic:0.0', "':0.0", 's:0.0', 'silicon:0.0', 'wa:0.0', '##fers:0.0', 'are:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'further:0.0', 'processing:0.0', 'chain:0.0', 'that:1.5133816759771435e-06', 'produces:0.0', 'end:0.0', 'products:0.0', 'that:1.5133816759771435e-06', 'improve:0.0', 'human:0.0', 'interaction:0.0', 'and:0.0', 'quality:0.0', 'of:3.4365734791208524e-06', 'life:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 569, example: Only this time , Nokia , India 's largest MNC , has sought out a topic that could spark off a million approaches ` Creativity in Emerging Markets , prediction: 1, correct_label: 2, class_scores: [0.19866905 0.44092593 0.360405  ], word_scores: ['only:0.0', 'this:0.0', 'time:0.0', ',:7.986737728060689e-06', 'nokia:0.0', ',:7.986737728060689e-06', 'india:0.0', "':0.0", 's:0.0', 'largest:0.0', 'mn:0.0', '##c:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'sought:0.0', 'out:0.0', 'a:8.62785782373976e-06', 'topic:0.0', 'that:1.5133816759771435e-06', 'could:0.0', 'spark:0.0', 'off:0.0', 'a:8.62785782373976e-06', 'million:6.018835847498849e-06', 'approaches:0.0', '`:0.0', 'creativity:0.0', 'in:3.0217122457543155e-06', 'emerging:0.0', 'markets:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('only', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('only', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0'))]
idx: 570, example: It also said its third quarter diluted EPS came in at 0.34 eur compared with 0.16 eur in the same quarter a year ago , prediction: 2, correct_label: 1, class_scores: [0.21883453 0.38565964 0.39550582], word_scores: ['it:3.3415778943890473e-06', 'also:0.0', 'said:0.0', 'its:1.7191393908433383e-06', 'third:0.0', 'quarter:0.0', 'dil:0.0', '##uted:0.0', 'eps:0.0', 'came:0.0', 'in:3.0217122457543155e-06', 'at:0.0', '0:0.0', '.:2.903296945078182e-06', '34:0.0', 'eu:0.0', '##r:0.0', 'compared:0.0', 'with:4.733654350275174e-06', '0:0.0', '.:2.903296945078182e-06', '16:0.0', 'eu:0.0', '##r:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'same:0.0', 'quarter:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('it', tensor(0.0912, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0469, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('diluted', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('came', tensor(0., device='cuda:0')), ('in', tensor(0.0824, device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0792, device='cuda:0')), ('34', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.1291, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0792, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('in', tensor(0.0824, device='cuda:0')), ('the', tensor(0.1741, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('a', tensor(0.2354, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.0912, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0469, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('diluted', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('came', tensor(0., device='cuda:0')), ('in', tensor(0.0824, device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0792, device='cuda:0')), ('34', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.1291, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0792, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('in', tensor(0.0824, device='cuda:0')), ('the', tensor(0.1741, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('a', tensor(0.2354, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))]
idx: 571, example: Rapala VMC Corporation Rapala , a leading fishing tackle and sporting goods manufacturer and distributor , is the main owner of Peltonen with its 80 % shareholding , prediction: 2, correct_label: 2, class_scores: [0.16874215 0.33685505 0.49440283], word_scores: ['rap:0.0', '##ala:0.0', 'v:0.0', '##mc:0.0', 'corporation:0.0', 'rap:0.0', '##ala:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'leading:0.0', 'fishing:0.0', 'tackle:0.0', 'and:0.0', 'sporting:0.0', 'goods:0.0', 'manufacturer:0.0', 'and:0.0', 'distributor:0.0', ',:7.986737728060689e-06', 'is:0.0', 'the:6.3806996877247e-06', 'main:0.0', 'owner:5.6893281907832716e-06', 'of:3.4365734791208524e-06', 'pe:0.0', '##lton:0.0', '##en:0.0', 'with:4.733654350275174e-06', 'its:1.7191393908433383e-06', '80:0.0', '%:0.0', 'share:0.0', '##holding:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rapala', tensor(0., device='cuda:0')), ('vmc', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('rapala', tensor(0., device='cuda:0')), (',', tensor(0.1715, device='cuda:0')), ('a', tensor(0.1853, device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('fishing', tensor(0., device='cuda:0')), ('tackle', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sporting', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('distributor', tensor(0., device='cuda:0')), (',', tensor(0.1715, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.1370, device='cuda:0')), ('main', tensor(0., device='cuda:0')), ('owner', tensor(0.1222, device='cuda:0')), ('of', tensor(0.0738, device='cuda:0')), ('peltonen', tensor(0., device='cuda:0')), ('with', tensor(0.1017, device='cuda:0')), ('its', tensor(0.0369, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('shareholding', tensor(0., device='cuda:0'))],  word_scores_max: [('rapala', tensor(0., device='cuda:0')), ('vmc', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('rapala', tensor(0., device='cuda:0')), (',', tensor(0.1715, device='cuda:0')), ('a', tensor(0.1853, device='cuda:0')), ('leading', tensor(0., device='cuda:0')), ('fishing', tensor(0., device='cuda:0')), ('tackle', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sporting', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('distributor', tensor(0., device='cuda:0')), (',', tensor(0.1715, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.1370, device='cuda:0')), ('main', tensor(0., device='cuda:0')), ('owner', tensor(0.1222, device='cuda:0')), ('of', tensor(0.0738, device='cuda:0')), ('peltonen', tensor(0., device='cuda:0')), ('with', tensor(0.1017, device='cuda:0')), ('its', tensor(0.0369, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('shareholding', tensor(0., device='cuda:0'))]
idx: 572, example: ADPnews - Sep 28 , 2009 - Finnish silicon wafers maker Okmetic Oyj HEL : OKM1V said it will reduce the number of its clerical workers by 22 worldwide as a result of personnel negotiations completed today , prediction: 1, correct_label: 0, class_scores: [0.13472798 0.44372767 0.4215443 ], word_scores: ['ad:0.0', '##p:0.0', '##ne:8.183636964531615e-06', '##ws:0.0', '-:4.821180027647642e-06', 'sep:0.0', '28:0.0', ',:7.986737728060689e-06', '2009:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'silicon:0.0', 'wa:0.0', '##fers:0.0', 'maker:0.0', 'ok:0.0', '##met:0.0', '##ic:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ok:0.0', '##m:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'reduce:0.0', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'clerical:0.0', 'workers:0.0', 'by:0.0', '22:0.0', 'worldwide:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'result:0.0', 'of:3.4365734791208524e-06', 'personnel:0.0', 'negotiations:0.0', 'completed:0.0', 'today:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('adpnews', tensor(0.1395, device='cuda:0')), ('-', tensor(0.0822, device='cuda:0')), ('sep', tensor(0., device='cuda:0')), ('28', tensor(0., device='cuda:0')), (',', tensor(0.1362, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0822, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('wafers', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('oyj', tensor(0.0312, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('okm1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0570, device='cuda:0')), ('will', tensor(0.0694, device='cuda:0')), ('reduce', tensor(0., device='cuda:0')), ('the', tensor(0.1088, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0586, device='cuda:0')), ('its', tensor(0.0293, device='cuda:0')), ('clerical', tensor(0., device='cuda:0')), ('workers', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('worldwide', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1471, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0586, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0'))],  word_scores_max: [('adpnews', tensor(0.1395, device='cuda:0')), ('-', tensor(0.0822, device='cuda:0')), ('sep', tensor(0., device='cuda:0')), ('28', tensor(0., device='cuda:0')), (',', tensor(0.1362, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0822, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('wafers', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('oyj', tensor(0.0312, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('okm1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('it', tensor(0.0570, device='cuda:0')), ('will', tensor(0.0694, device='cuda:0')), ('reduce', tensor(0., device='cuda:0')), ('the', tensor(0.1088, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0586, device='cuda:0')), ('its', tensor(0.0293, device='cuda:0')), ('clerical', tensor(0., device='cuda:0')), ('workers', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), ('worldwide', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1471, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0586, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0'))]
idx: 573, example: The policy was also aimed at making the companies more profitable and competitive , prediction: 2, correct_label: 1, class_scores: [0.23469089 0.37856147 0.38674766], word_scores: ['the:6.3806996877247e-06', 'policy:0.0', 'was:0.0', 'also:0.0', 'aimed:0.0', 'at:0.0', 'making:0.0', 'the:6.3806996877247e-06', 'companies:0.0', 'more:0.0', 'profitable:0.0', 'and:0.0', 'competitive:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.5000, device='cuda:0')), ('policy', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('competitive', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5000, device='cuda:0')), ('policy', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('aimed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('competitive', tensor(0., device='cuda:0'))]
idx: 574, example: Finnish electronics contract manufacturer Scanfil had net sales of EUR 52.2 mn in the first quarter of 2007 , down from EUR 60.1 mn a year before , prediction: 1, correct_label: 0, class_scores: [0.23630601 0.40425792 0.3594361 ], word_scores: ['finnish:0.0', 'electronics:0.0', 'contract:7.1864019446366e-06', 'manufacturer:0.0', 'scan:0.0', '##fi:0.0', '##l:0.0', 'had:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '52:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '60:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'before:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('contract', tensor(0.1426, device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('scanfil', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('52', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0600, device='cuda:0')), ('the', tensor(0.1267, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1585, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0892, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('a', tensor(0.1713, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('contract', tensor(0.1426, device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('scanfil', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('52', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0600, device='cuda:0')), ('the', tensor(0.1267, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0682, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.1585, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0892, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('.', tensor(0.0576, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('a', tensor(0.1713, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0'))]
idx: 575, example: Why not give your bedroom a cool makeover for summer , prediction: 2, correct_label: 2, class_scores: [0.17817065 0.36066732 0.46116206], word_scores: ['why:0.0', 'not:0.0', 'give:0.0', 'your:0.0', 'bedroom:0.0', 'a:8.62785782373976e-06', 'cool:0.0', 'make:0.0', '##over:0.0', 'for:0.0', 'summer:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('why', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('bedroom', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('cool', tensor(0., device='cuda:0')), ('makeover', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('summer', tensor(0., device='cuda:0'))],  word_scores_max: [('why', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('bedroom', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('cool', tensor(0., device='cuda:0')), ('makeover', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('summer', tensor(0., device='cuda:0'))]
idx: 576, example: down to EUR5 .9 m H1 '09 3 August 2009 - Finnish media group Ilkka-Yhtyma Oyj ( HEL : ILK2S ) said today its net profit fell 45 % on the year to EUR5 .9 m in the first half of 2009 , prediction: 1, correct_label: 0, class_scores: [0.13534234 0.4848433  0.37981433], word_scores: ['down:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##5:0.0', '.:2.903296945078182e-06', '9:0.0', 'm:0.0', 'h:0.0', '##1:0.0', "':0.0", '09:0.0', '3:0.0', 'august:0.0', 'group:0.0', 'il:0.0', '##kka:0.0', '-:4.821180027647642e-06', 'y:0.0', '##ht:0.0', '##ym:0.0', '##a:3.804580501309829e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'il:0.0', '##k:0.0', '##2:0.0', '##s:4.601175078278175e-06', '):0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'fell:0.0', '45:4.878051640844205e-06', '%:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'year:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##5:0.0', '.:2.903296945078182e-06', '9:0.0', 'm:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('down', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0'))],  word_scores_max: [('down', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0'))]
idx: 577, example: The size of the extension , 18.5 % of which already has been let , will have a gross area of about 2,830 sq m 30,460 sq ft , prediction: 2, correct_label: 2, class_scores: [0.24168229 0.33228233 0.42603534], word_scores: ['the:6.3806996877247e-06', 'size:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'extension:0.0', ',:7.986737728060689e-06', '18:0.0', '.:2.903296945078182e-06', '5:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'which:0.0', 'already:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'let:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'gross:0.0', 'area:0.0', 'of:3.4365734791208524e-06', 'about:0.0', '2:0.0', ',:7.986737728060689e-06', '83:0.0', '##0:0.0', 'sq:0.0', 'm:0.0', '30:0.0', ',:7.986737728060689e-06', '460:0.0', 'sq:0.0', 'ft:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0803, device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('of', tensor(0.0433, device='cuda:0')), ('the', tensor(0.0803, device='cuda:0')), ('extension', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0365, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('of', tensor(0.0433, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('has', tensor(0.0745, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('let', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('will', tensor(0.0513, device='cuda:0')), ('have', tensor(0.0366, device='cuda:0')), ('a', tensor(0.1086, device='cuda:0')), ('gross', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0433, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('830', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('460', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('ft', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0803, device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('of', tensor(0.0433, device='cuda:0')), ('the', tensor(0.0803, device='cuda:0')), ('extension', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0365, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('of', tensor(0.0433, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('has', tensor(0.0745, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('let', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('will', tensor(0.0513, device='cuda:0')), ('have', tensor(0.0366, device='cuda:0')), ('a', tensor(0.1086, device='cuda:0')), ('gross', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0433, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('830', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.1005, device='cuda:0')), ('460', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('ft', tensor(0., device='cuda:0'))]
idx: 578, example: As a result , the company will temporarily lay-off 25 % of the whole personnel , approximately 270 persons at Kirkkonummi and Nivala factories , prediction: 1, correct_label: 0, class_scores: [0.21150824 0.43341327 0.35507852], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'result:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'temporarily:0.0', 'lay:0.0', '-:4.821180027647642e-06', 'off:0.0', '25:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'whole:0.0', 'personnel:0.0', ',:7.986737728060689e-06', 'approximately:0.0', '270:0.0', 'persons:0.0', 'at:0.0', 'kirk:0.0', '##kon:0.0', '##um:0.0', '##mi:0.0', 'and:0.0', 'ni:0.0', '##val:0.0', '##a:3.804580501309829e-06', 'factories:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('the', tensor(0.1132, device='cuda:0')), ('company', tensor(0.1187, device='cuda:0')), ('will', tensor(0.0722, device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.0855, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('of', tensor(0.0609, device='cuda:0')), ('the', tensor(0.1132, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('270', tensor(0., device='cuda:0')), ('persons', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('kirkkonummi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nivala', tensor(0., device='cuda:0')), ('factories', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('the', tensor(0.1132, device='cuda:0')), ('company', tensor(0.1187, device='cuda:0')), ('will', tensor(0.0722, device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.0855, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('of', tensor(0.0609, device='cuda:0')), ('the', tensor(0.1132, device='cuda:0')), ('whole', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('270', tensor(0., device='cuda:0')), ('persons', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('kirkkonummi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nivala', tensor(0., device='cuda:0')), ('factories', tensor(0., device='cuda:0'))]
idx: 579, example: One of the headboxes will be equipped with a modern consistency control system to ensure cross machine profile of the plasterboard , prediction: 2, correct_label: 2, class_scores: [0.21208054 0.25680077 0.53111863], word_scores: ['one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'head:0.0', '##box:0.0', '##es:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'equipped:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'modern:0.0', 'consistency:0.0', 'control:0.0', 'system:2.472523192409426e-06', 'to:2.886244146793615e-06', 'ensure:0.0', 'cross:0.0', 'machine:0.0', 'profile:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'plaster:0.0', '##board:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('one', tensor(0.0975, device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('headboxes', tensor(0., device='cuda:0')), ('will', tensor(0.0866, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('equipped', tensor(0., device='cuda:0')), ('with', tensor(0.1007, device='cuda:0')), ('a', tensor(0.1835, device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('consistency', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('system', tensor(0.0526, device='cuda:0')), ('to', tensor(0.0614, device='cuda:0')), ('ensure', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('machine', tensor(0., device='cuda:0')), ('profile', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('plasterboard', tensor(0., device='cuda:0'))],  word_scores_max: [('one', tensor(0.0975, device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('headboxes', tensor(0., device='cuda:0')), ('will', tensor(0.0866, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('equipped', tensor(0., device='cuda:0')), ('with', tensor(0.1007, device='cuda:0')), ('a', tensor(0.1835, device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('consistency', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('system', tensor(0.0526, device='cuda:0')), ('to', tensor(0.0614, device='cuda:0')), ('ensure', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('machine', tensor(0., device='cuda:0')), ('profile', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('plasterboard', tensor(0., device='cuda:0'))]
idx: 580, example: HELSINKI ( AFX ) - Nokian Tyres reported a fourth quarter pretax profit of 61.5 mln eur , up from 48.6 mln on the back of strong sales , prediction: 2, correct_label: 1, class_scores: [0.23987228 0.3769044  0.38322335], word_scores: ['helsinki:0.0', '(:0.0', 'af:0.0', '##x:0.0', '):0.0', '-:4.821180027647642e-06', 'nokia:0.0', '##n:0.0', 'tyres:0.0', 'reported:0.0', 'a:8.62785782373976e-06', 'fourth:0.0', 'quarter:0.0', 'pre:0.0', '##ta:0.0', '##x:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', '61:0.0', '.:2.903296945078182e-06', '5:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', '48:0.0', '.:2.903296945078182e-06', '6:0.0', 'ml:0.0', '##n:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'back:0.0', 'of:3.4365734791208524e-06', 'strong:0.0', 'sales:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('helsinki', tensor(0., device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('-', tensor(0.1037, device='cuda:0')), ('nokian', tensor(0., device='cuda:0')), ('tyres', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('a', tensor(0.1856, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0739, device='cuda:0')), ('61', tensor(0., device='cuda:0')), ('.', tensor(0.0625, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.1718, device='cuda:0')), ('up', tensor(0.0322, device='cuda:0')), ('from', tensor(0.0967, device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('.', tensor(0.0625, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1373, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('of', tensor(0.0739, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0'))],  word_scores_max: [('helsinki', tensor(0., device='cuda:0')), ('afx', tensor(0., device='cuda:0')), ('-', tensor(0.1037, device='cuda:0')), ('nokian', tensor(0., device='cuda:0')), ('tyres', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('a', tensor(0.1856, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0739, device='cuda:0')), ('61', tensor(0., device='cuda:0')), ('.', tensor(0.0625, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.1718, device='cuda:0')), ('up', tensor(0.0322, device='cuda:0')), ('from', tensor(0.0967, device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('.', tensor(0.0625, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1373, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('of', tensor(0.0739, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0'))]
idx: 581, example: Approximately SEK 166 million in repayments has been demanded for overcharging in the Stockholm area , with the remaining SEK 87 million taken from the Western coast , the inspectorate said , prediction: 2, correct_label: 2, class_scores: [0.22609678 0.2977486  0.4761547 ], word_scores: ['approximately:0.0', 'se:0.0', '##k:0.0', '166:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', 'repay:0.0', '##ments:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'demanded:0.0', 'for:0.0', 'over:0.0', '##cha:0.0', '##rg:0.0', '##ing:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'stockholm:0.0', 'area:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'remaining:0.0', 'se:0.0', '##k:0.0', '87:0.0', 'million:6.018835847498849e-06', 'taken:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'western:0.0', 'coast:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'inspector:0.0', '##ate:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('approximately', tensor(0., device='cuda:0')), ('sek', tensor(0., device='cuda:0')), ('166', tensor(0., device='cuda:0')), ('million', tensor(0.0805, device='cuda:0')), ('in', tensor(0.0404, device='cuda:0')), ('repayments', tensor(0., device='cuda:0')), ('has', tensor(0.0792, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('demanded', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('overcharging', tensor(0., device='cuda:0')), ('in', tensor(0.0404, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), (',', tensor(0.1069, device='cuda:0')), ('with', tensor(0.0633, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('sek', tensor(0., device='cuda:0')), ('87', tensor(0., device='cuda:0')), ('million', tensor(0.0805, device='cuda:0')), ('taken', tensor(0., device='cuda:0')), ('from', tensor(0.0602, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('western', tensor(0., device='cuda:0')), ('coast', tensor(0., device='cuda:0')), (',', tensor(0.1069, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('inspectorate', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('approximately', tensor(0., device='cuda:0')), ('sek', tensor(0., device='cuda:0')), ('166', tensor(0., device='cuda:0')), ('million', tensor(0.0805, device='cuda:0')), ('in', tensor(0.0404, device='cuda:0')), ('repayments', tensor(0., device='cuda:0')), ('has', tensor(0.0792, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('demanded', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('overcharging', tensor(0., device='cuda:0')), ('in', tensor(0.0404, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), (',', tensor(0.1069, device='cuda:0')), ('with', tensor(0.0633, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('sek', tensor(0., device='cuda:0')), ('87', tensor(0., device='cuda:0')), ('million', tensor(0.0805, device='cuda:0')), ('taken', tensor(0., device='cuda:0')), ('from', tensor(0.0602, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('western', tensor(0., device='cuda:0')), ('coast', tensor(0., device='cuda:0')), (',', tensor(0.1069, device='cuda:0')), ('the', tensor(0.0854, device='cuda:0')), ('inspectorate', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 582, example: In addition , YIT has reserved EPI Russia the right to expand the logistics center by about 100,000 m2 , prediction: 2, correct_label: 2, class_scores: [0.2432509  0.29895845 0.45779058], word_scores: ['in:3.0217122457543155e-06', 'addition:0.0', ',:7.986737728060689e-06', 'yi:0.0', '##t:0.0', 'has:5.9214244174654596e-06', 'reserved:0.0', 'ep:0.0', '##i:0.0', 'russia:0.0', 'the:6.3806996877247e-06', 'right:0.0', 'to:2.886244146793615e-06', 'expand:0.0', 'the:6.3806996877247e-06', 'logistics:0.0', 'center:0.0', 'by:0.0', 'about:0.0', '100:0.0', ',:7.986737728060689e-06', '000:0.0', 'm2:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0745, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.1969, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('has', tensor(0.1460, device='cuda:0')), ('reserved', tensor(0., device='cuda:0')), ('epi', tensor(0., device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('to', tensor(0.0712, device='cuda:0')), ('expand', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), (',', tensor(0.1969, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('m2', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0745, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.1969, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('has', tensor(0.1460, device='cuda:0')), ('reserved', tensor(0., device='cuda:0')), ('epi', tensor(0., device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('to', tensor(0.0712, device='cuda:0')), ('expand', tensor(0., device='cuda:0')), ('the', tensor(0.1573, device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), (',', tensor(0.1969, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('m2', tensor(0., device='cuda:0'))]
idx: 583, example: Loudeye Corp. , up $ 2.56 at $ 4.33 Nokia Corp. , down 10 cents at $ 19.46 Nokia agreed to buy the digital music distributor for $ 60 million , prediction: 2, correct_label: 2, class_scores: [0.17460546 0.4105767  0.41481787], word_scores: ['loud:0.0', '##eye:0.0', 'corp:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '56:0.0', 'at:0.0', '$:0.0', '4:0.0', '.:2.903296945078182e-06', '33:0.0', 'nokia:0.0', 'corp:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'down:0.0', '10:0.0', 'cents:0.0', 'at:0.0', '$:0.0', '19:0.0', '.:2.903296945078182e-06', '46:0.0', 'nokia:0.0', 'agreed:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'the:6.3806996877247e-06', 'digital:0.0', 'music:0.0', 'distributor:0.0', 'for:0.0', '$:0.0', '60:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('loudeye', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('up', tensor(0.0316, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ('56', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('cents', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0611, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('digital', tensor(0., device='cuda:0')), ('music', tensor(0., device='cuda:0')), ('distributor', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('million', tensor(0.1273, device='cuda:0'))],  word_scores_max: [('loudeye', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('up', tensor(0.0316, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ('56', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('cents', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('.', tensor(0.0614, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0611, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('digital', tensor(0., device='cuda:0')), ('music', tensor(0., device='cuda:0')), ('distributor', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('million', tensor(0.1273, device='cuda:0'))]
idx: 584, example: We went to the market with yield guidance of the 7.25 % area , which gave us the flexibility to go up or down by 1-8th , prediction: 2, correct_label: 2, class_scores: [0.18712048 0.37126568 0.4416139 ], word_scores: ['we:0.0', 'went:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'market:0.0', 'with:4.733654350275174e-06', 'yield:0.0', 'guidance:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', '7:0.0', '.:2.903296945078182e-06', '25:0.0', '%:0.0', 'area:0.0', ',:7.986737728060689e-06', 'which:0.0', 'gave:0.0', 'us:0.0', 'the:6.3806996877247e-06', 'flexibility:0.0', 'to:2.886244146793615e-06', 'go:0.0', 'up:1.4959460941099678e-06', 'or:0.0', 'down:0.0', 'by:0.0', '1:0.0', '-:4.821180027647642e-06', '8th:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('to', tensor(0.0574, device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('with', tensor(0.0941, device='cuda:0')), ('yield', tensor(0., device='cuda:0')), ('guidance', tensor(0., device='cuda:0')), ('of', tensor(0.0683, device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0577, device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), (',', tensor(0.1588, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('gave', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('flexibility', tensor(0., device='cuda:0')), ('to', tensor(0.0574, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('up', tensor(0.0297, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.0959, device='cuda:0')), ('8th', tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('to', tensor(0.0574, device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('with', tensor(0.0941, device='cuda:0')), ('yield', tensor(0., device='cuda:0')), ('guidance', tensor(0., device='cuda:0')), ('of', tensor(0.0683, device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0577, device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), (',', tensor(0.1588, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('gave', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('the', tensor(0.1269, device='cuda:0')), ('flexibility', tensor(0., device='cuda:0')), ('to', tensor(0.0574, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('up', tensor(0.0297, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.0959, device='cuda:0')), ('8th', tensor(0., device='cuda:0'))]
idx: 585, example: Strand Associates is expanding its Madison corporate headquarters with space to add about 100 employees to the engineering firm , prediction: 1, correct_label: 1, class_scores: [0.19403447 0.43235353 0.37361193], word_scores: ['strand:0.0', 'associates:0.0', 'is:0.0', 'expanding:0.0', 'its:1.7191393908433383e-06', 'madison:3.4110794331354555e-06', 'corporate:0.0', 'headquarters:0.0', 'with:4.733654350275174e-06', 'space:0.0', 'to:2.886244146793615e-06', 'add:0.0', 'about:0.0', '100:0.0', 'employees:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'engineering:0.0', 'firm:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('strand', tensor(0., device='cuda:0')), ('associates', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expanding', tensor(0., device='cuda:0')), ('its', tensor(0.0781, device='cuda:0')), ('madison', tensor(0.1549, device='cuda:0')), ('corporate', tensor(0., device='cuda:0')), ('headquarters', tensor(0., device='cuda:0')), ('with', tensor(0.2150, device='cuda:0')), ('space', tensor(0., device='cuda:0')), ('to', tensor(0.1311, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('to', tensor(0.1311, device='cuda:0')), ('the', tensor(0.2898, device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0'))],  word_scores_max: [('strand', tensor(0., device='cuda:0')), ('associates', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expanding', tensor(0., device='cuda:0')), ('its', tensor(0.0781, device='cuda:0')), ('madison', tensor(0.1549, device='cuda:0')), ('corporate', tensor(0., device='cuda:0')), ('headquarters', tensor(0., device='cuda:0')), ('with', tensor(0.2150, device='cuda:0')), ('space', tensor(0., device='cuda:0')), ('to', tensor(0.1311, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('to', tensor(0.1311, device='cuda:0')), ('the', tensor(0.2898, device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0'))]
idx: 586, example: Panostaja did not disclose the purchase price , prediction: 2, correct_label: 2, class_scores: [0.22088493 0.3319677  0.44714737], word_scores: ['pan:0.0', '##osta:0.0', '##ja:0.0', 'did:0.0', 'not:0.0', 'disclose:0.0', 'the:6.3806996877247e-06', 'purchase:0.0', 'price:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('panostaja', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclose', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))],  word_scores_max: [('panostaja', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclose', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))]
idx: 587, example: Operators only need to learn how to use one device for multiple levels of applications , including voice-directed operations , prediction: 1, correct_label: 2, class_scores: [0.270772   0.37225986 0.35696813], word_scores: ['operators:0.0', 'only:0.0', 'need:0.0', 'to:2.886244146793615e-06', 'learn:0.0', 'how:0.0', 'to:2.886244146793615e-06', 'use:0.0', 'one:4.584404450724833e-06', 'device:0.0', 'for:0.0', 'multiple:0.0', 'levels:0.0', 'of:3.4365734791208524e-06', 'applications:0.0', ',:7.986737728060689e-06', 'including:0.0', 'voice:0.0', '-:4.821180027647642e-06', 'directed:0.0', 'operations:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operators', tensor(0., device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('learn', tensor(0., device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('one', tensor(0.1723, device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('multiple', tensor(0., device='cuda:0')), ('levels', tensor(0., device='cuda:0')), ('of', tensor(0.1292, device='cuda:0')), ('applications', tensor(0., device='cuda:0')), (',', tensor(0.3002, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('-', tensor(0.1812, device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('operators', tensor(0., device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('learn', tensor(0., device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('one', tensor(0.1723, device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('multiple', tensor(0., device='cuda:0')), ('levels', tensor(0., device='cuda:0')), ('of', tensor(0.1292, device='cuda:0')), ('applications', tensor(0., device='cuda:0')), (',', tensor(0.3002, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('voice', tensor(0., device='cuda:0')), ('-', tensor(0.1812, device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 588, example: Russian Media Ventures ' minority shareholder Peter Hervy denied the plans to sell OVA Press , the daily said , prediction: 2, correct_label: 2, class_scores: [0.23555253 0.2945799  0.4698676 ], word_scores: ['russian:0.0', 'media:0.0', 'ventures:0.0', "':0.0", 'minority:0.0', 'shareholder:0.0', 'peter:0.0', 'her:0.0', '##vy:0.0', 'denied:0.0', 'the:6.3806996877247e-06', 'plans:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'o:0.0', '##va:0.0', 'press:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'daily:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('russian', tensor(nan, device='cuda:0')), ('media', tensor(nan, device='cuda:0'))],  word_scores_max: [('russian', tensor(nan, device='cuda:0')), ('media', tensor(nan, device='cuda:0'))]
idx: 589, example: The report examines the medical equipment business structure and operations , history and products , and provides an analysis of its key medical equipment revenue lines , prediction: 2, correct_label: 2, class_scores: [0.26330736 0.31541294 0.42127964], word_scores: ['the:6.3806996877247e-06', 'report:0.0', 'examines:0.0', 'the:6.3806996877247e-06', 'medical:0.0', 'equipment:0.0', 'business:0.0', 'structure:0.0', 'and:0.0', 'operations:0.0', ',:7.986737728060689e-06', 'history:0.0', 'and:0.0', 'products:0.0', ',:7.986737728060689e-06', 'and:0.0', 'provides:0.0', 'an:0.0', 'analysis:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'key:0.0', 'medical:0.0', 'equipment:0.0', 'revenue:0.0', 'lines:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1883, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('examines', tensor(0., device='cuda:0')), ('the', tensor(0.1883, device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('structure', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.2357, device='cuda:0')), ('history', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), (',', tensor(0.2357, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('analysis', tensor(0., device='cuda:0')), ('of', tensor(0.1014, device='cuda:0')), ('its', tensor(0.0507, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1883, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('examines', tensor(0., device='cuda:0')), ('the', tensor(0.1883, device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('structure', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.2357, device='cuda:0')), ('history', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), (',', tensor(0.2357, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('analysis', tensor(0., device='cuda:0')), ('of', tensor(0.1014, device='cuda:0')), ('its', tensor(0.0507, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0'))]
idx: 590, example: By 14:29 CET on Monday , shares in Bavarian Nordic had climbed 1.21 % to DKK250 on the stock exchange in Copenhagen after having lost 7.41 % in the past month , prediction: 2, correct_label: 1, class_scores: [0.1900838  0.27240664 0.53750956], word_scores: ['by:0.0', '14:0.0', '::0.0', '29:0.0', 'ce:0.0', '##t:0.0', 'on:0.0', 'monday:0.0', ',:7.986737728060689e-06', 'shares:0.0', 'in:3.0217122457543155e-06', 'bavarian:0.0', 'nordic:0.0', 'had:0.0', 'climbed:0.0', '1:0.0', '.:2.903296945078182e-06', '21:0.0', '%:0.0', 'to:2.886244146793615e-06', 'd:0.0', '##kk:0.0', '##25:0.0', '##0:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'stock:0.0', 'exchange:0.0', 'in:3.0217122457543155e-06', 'copenhagen:0.0', 'after:0.0', 'having:0.0', 'lost:0.0', '7:0.0', '.:2.903296945078182e-06', '41:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'past:0.0', 'month:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('by', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('cet', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), (',', tensor(0.2074, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0785, device='cuda:0')), ('bavarian', tensor(0., device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('climbed', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0754, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('to', tensor(0.0750, device='cuda:0')), ('dkk250', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1657, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('in', tensor(0.0785, device='cuda:0')), ('copenhagen', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('having', tensor(0., device='cuda:0')), ('lost', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0754, device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('in', tensor(0.0785, device='cuda:0')), ('the', tensor(0.1657, device='cuda:0')), ('past', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0'))],  word_scores_max: [('by', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('cet', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), (',', tensor(0.2074, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0785, device='cuda:0')), ('bavarian', tensor(0., device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('climbed', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0754, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('to', tensor(0.0750, device='cuda:0')), ('dkk250', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1657, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('in', tensor(0.0785, device='cuda:0')), ('copenhagen', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('having', tensor(0., device='cuda:0')), ('lost', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0754, device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('in', tensor(0.0785, device='cuda:0')), ('the', tensor(0.1657, device='cuda:0')), ('past', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0'))]
idx: 591, example: Following the payment made in April , the company has a total of EUR 23.0 million in loans from financial institutions , prediction: 2, correct_label: 2, class_scores: [0.21547931 0.3581268  0.42639393], word_scores: ['following:0.0', 'the:6.3806996877247e-06', 'payment:0.0', 'made:0.0', 'in:3.0217122457543155e-06', 'april:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '23:3.2229838780040154e-06', '.:2.903296945078182e-06', '0:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', 'loans:0.0', 'from:4.495178018260049e-06', 'financial:0.0', 'institutions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('following', tensor(0., device='cuda:0')), ('the', tensor(0.0937, device='cuda:0')), ('payment', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('in', tensor(0.0444, device='cuda:0')), ('april', tensor(0., device='cuda:0')), (',', tensor(0.1173, device='cuda:0')), ('the', tensor(0.0937, device='cuda:0')), ('company', tensor(0.0983, device='cuda:0')), ('has', tensor(0.0869, device='cuda:0')), ('a', tensor(0.1267, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0505, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('23', tensor(0.0473, device='cuda:0')), ('.', tensor(0.0426, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('million', tensor(0.0884, device='cuda:0')), ('in', tensor(0.0444, device='cuda:0')), ('loans', tensor(0., device='cuda:0')), ('from', tensor(0.0660, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('institutions', tensor(0., device='cuda:0'))],  word_scores_max: [('following', tensor(0., device='cuda:0')), ('the', tensor(0.0937, device='cuda:0')), ('payment', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('in', tensor(0.0444, device='cuda:0')), ('april', tensor(0., device='cuda:0')), (',', tensor(0.1173, device='cuda:0')), ('the', tensor(0.0937, device='cuda:0')), ('company', tensor(0.0983, device='cuda:0')), ('has', tensor(0.0869, device='cuda:0')), ('a', tensor(0.1267, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.0505, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('23', tensor(0.0473, device='cuda:0')), ('.', tensor(0.0426, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('million', tensor(0.0884, device='cuda:0')), ('in', tensor(0.0444, device='cuda:0')), ('loans', tensor(0., device='cuda:0')), ('from', tensor(0.0660, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('institutions', tensor(0., device='cuda:0'))]
idx: 592, example: The shares carry a right to dividend and other shareholder rights as from their registration with the Finnish Trade Register , prediction: 2, correct_label: 2, class_scores: [0.19521317 0.31868935 0.4860975 ], word_scores: ['the:6.3806996877247e-06', 'shares:0.0', 'carry:0.0', 'a:8.62785782373976e-06', 'right:0.0', 'to:2.886244146793615e-06', 'divide:0.0', '##nd:0.0', 'and:0.0', 'other:0.0', 'shareholder:0.0', 'rights:0.0', 'as:0.0', 'from:4.495178018260049e-06', 'their:0.0', 'registration:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'trade:0.0', 'register:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1904, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('carry', tensor(0., device='cuda:0')), ('a', tensor(0.2575, device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('to', tensor(0.0861, device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('shareholder', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('from', tensor(0.1342, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('registration', tensor(0., device='cuda:0')), ('with', tensor(0.1413, device='cuda:0')), ('the', tensor(0.1904, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('register', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1904, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('carry', tensor(0., device='cuda:0')), ('a', tensor(0.2575, device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('to', tensor(0.0861, device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('shareholder', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('from', tensor(0.1342, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('registration', tensor(0., device='cuda:0')), ('with', tensor(0.1413, device='cuda:0')), ('the', tensor(0.1904, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('register', tensor(0., device='cuda:0'))]
idx: 593, example: The trade is in accordance with the agreement announced on 26 March 2008 , prediction: 2, correct_label: 2, class_scores: [0.25595552 0.33263326 0.41141123], word_scores: ['the:6.3806996877247e-06', 'trade:0.0', 'is:0.0', 'in:3.0217122457543155e-06', 'accordance:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'agreement:0.0', 'announced:0.0', 'on:0.0', '26:0.0', 'march:0.0', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3110, device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.1473, device='cuda:0')), ('accordance', tensor(0., device='cuda:0')), ('with', tensor(0.2307, device='cuda:0')), ('the', tensor(0.3110, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3110, device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.1473, device='cuda:0')), ('accordance', tensor(0., device='cuda:0')), ('with', tensor(0.2307, device='cuda:0')), ('the', tensor(0.3110, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('26', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 594, example: Finnish shipping company Finnlines ' pretax loss totalled EUR 6.5 mn in the third quarter of 2009 , compared to a profit of EUR 0.3 mn in the third quarter of 2008 , prediction: 2, correct_label: 0, class_scores: [0.23233603 0.37082663 0.3968373 ], word_scores: ['finnish:0.0', 'shipping:0.0', 'company:6.695386673527537e-06', 'finn:0.0', '##lines:0.0', "':0.0", 'pre:0.0', '##ta:0.0', '##x:0.0', 'loss:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '6:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2009:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('company', tensor(1., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('company', tensor(1., device='cuda:0'))]
idx: 595, example: The Economic Development and Trade Ministry and Industry and Energy Ministry , along with the Kostroma regional administration and the Russian Lumberman and Timber Exporters Union , has been carrying out work to acquire investment for the construction of a pulp and paper mill in Neya since 2003 , prediction: 2, correct_label: 2, class_scores: [0.21791685 0.34179595 0.4402872 ], word_scores: ['the:6.3806996877247e-06', 'economic:0.0', 'development:0.0', 'and:0.0', 'trade:0.0', 'ministry:0.0', 'and:0.0', 'industry:0.0', 'and:0.0', 'energy:0.0', 'ministry:0.0', ',:7.986737728060689e-06', 'along:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'ko:5.9404255807748996e-06', '##strom:0.0', '##a:3.804580501309829e-06', 'regional:0.0', 'administration:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'russian:0.0', 'lumber:0.0', '##man:0.0', 'and:0.0', 'timber:0.0', 'export:0.0', '##ers:5.0093617574020755e-06', 'union:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'been:0.0', 'carrying:0.0', 'out:0.0', 'work:0.0', 'to:2.886244146793615e-06', 'acquire:0.0', 'investment:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'construction:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'pulp:0.0', 'and:0.0', 'paper:2.697490344871767e-06', 'mill:2.6564571271592285e-06', 'in:3.0217122457543155e-06', 'ne:0.0', '##ya:0.0', 'since:0.0', '2003:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0784, device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), (',', tensor(0.0981, device='cuda:0')), ('along', tensor(0., device='cuda:0')), ('with', tensor(0.0581, device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('kostroma', tensor(0.0730, device='cuda:0')), ('regional', tensor(0., device='cuda:0')), ('administration', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('lumberman', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('timber', tensor(0., device='cuda:0')), ('exporters', tensor(0., device='cuda:0')), ('union', tensor(0., device='cuda:0')), (',', tensor(0.0981, device='cuda:0')), ('has', tensor(0.0727, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('carrying', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('to', tensor(0.0354, device='cuda:0')), ('acquire', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('of', tensor(0.0422, device='cuda:0')), ('a', tensor(0.1060, device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('paper', tensor(0.0331, device='cuda:0')), ('mill', tensor(0.0326, device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('neya', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('2003', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0784, device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('energy', tensor(0., device='cuda:0')), ('ministry', tensor(0., device='cuda:0')), (',', tensor(0.0981, device='cuda:0')), ('along', tensor(0., device='cuda:0')), ('with', tensor(0.0581, device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('kostroma', tensor(0.0730, device='cuda:0')), ('regional', tensor(0., device='cuda:0')), ('administration', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('lumberman', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('timber', tensor(0., device='cuda:0')), ('exporters', tensor(0., device='cuda:0')), ('union', tensor(0., device='cuda:0')), (',', tensor(0.0981, device='cuda:0')), ('has', tensor(0.0727, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('carrying', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('to', tensor(0.0354, device='cuda:0')), ('acquire', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0784, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('of', tensor(0.0422, device='cuda:0')), ('a', tensor(0.1060, device='cuda:0')), ('pulp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('paper', tensor(0.0331, device='cuda:0')), ('mill', tensor(0.0326, device='cuda:0')), ('in', tensor(0.0371, device='cuda:0')), ('neya', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('2003', tensor(0., device='cuda:0'))]
idx: 596, example: U.S.-based T Corp. is in talks with Scandinavian telecoms company TeliaSonera to sell its stake in Uzbek cellular operator Coscom , an executive at Coscom told Interfax , prediction: 1, correct_label: 2, class_scores: [0.19129393 0.4702484  0.33845767], word_scores: ['u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', '-:4.821180027647642e-06', 'based:0.0', 't:0.0', 'corp:0.0', '.:2.903296945078182e-06', 'is:0.0', 'in:3.0217122457543155e-06', 'talks:0.0', 'with:4.733654350275174e-06', 'scandinavian:0.0', 'telecom:0.0', '##s:4.601175078278175e-06', 'company:6.695386673527537e-06', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'its:1.7191393908433383e-06', 'stake:0.0', 'in:3.0217122457543155e-06', 'u:0.0', '##zbek:0.0', 'cellular:0.0', 'operator:0.0', 'co:0.0', '##sco:0.0', '##m:0.0', ',:7.986737728060689e-06', 'an:0.0', 'executive:0.0', 'at:0.0', 'co:0.0', '##sco:0.0', '##m:0.0', 'told:0.0', 'inter:0.0', '##fa:0.0', '##x:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('u', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('-', tensor(0.1106, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('with', tensor(0.1086, device='cuda:0')), ('scandinavian', tensor(0., device='cuda:0')), ('telecoms', tensor(0., device='cuda:0')), ('company', tensor(0.1536, device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('to', tensor(0.0662, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0394, device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('uzbek', tensor(0., device='cuda:0')), ('cellular', tensor(0., device='cuda:0')), ('operator', tensor(0., device='cuda:0')), ('coscom', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('coscom', tensor(0., device='cuda:0')), ('told', tensor(0., device='cuda:0')), ('interfax', tensor(0., device='cuda:0'))],  word_scores_max: [('u', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('-', tensor(0.1106, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0666, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('with', tensor(0.1086, device='cuda:0')), ('scandinavian', tensor(0., device='cuda:0')), ('telecoms', tensor(0., device='cuda:0')), ('company', tensor(0.1536, device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('to', tensor(0.0662, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0394, device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0693, device='cuda:0')), ('uzbek', tensor(0., device='cuda:0')), ('cellular', tensor(0., device='cuda:0')), ('operator', tensor(0., device='cuda:0')), ('coscom', tensor(0., device='cuda:0')), (',', tensor(0.1832, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('coscom', tensor(0., device='cuda:0')), ('told', tensor(0., device='cuda:0')), ('interfax', tensor(0., device='cuda:0'))]
idx: 597, example: Finnish Raute Precision that supplies weighing and dosing systems and plants is changing its name to Lahti Precision , prediction: 2, correct_label: 2, class_scores: [0.16209207 0.3142308  0.5236772 ], word_scores: ['finnish:0.0', 'ra:0.0', '##ute:0.0', 'precision:0.0', 'that:1.5133816759771435e-06', 'supplies:0.0', 'weighing:0.0', 'and:0.0', 'dos:0.0', '##ing:0.0', 'systems:0.0', 'and:0.0', 'plants:0.0', 'is:0.0', 'changing:0.0', 'its:1.7191393908433383e-06', 'name:0.0', 'to:2.886244146793615e-06', 'la:0.0', '##ht:0.0', '##i:0.0', 'precision:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('raute', tensor(0., device='cuda:0')), ('precision', tensor(0., device='cuda:0')), ('that', tensor(0.2473, device='cuda:0')), ('supplies', tensor(0., device='cuda:0')), ('weighing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dosing', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('changing', tensor(0., device='cuda:0')), ('its', tensor(0.2810, device='cuda:0')), ('name', tensor(0., device='cuda:0')), ('to', tensor(0.4717, device='cuda:0')), ('lahti', tensor(0., device='cuda:0')), ('precision', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('raute', tensor(0., device='cuda:0')), ('precision', tensor(0., device='cuda:0')), ('that', tensor(0.2473, device='cuda:0')), ('supplies', tensor(0., device='cuda:0')), ('weighing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('dosing', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('changing', tensor(0., device='cuda:0')), ('its', tensor(0.2810, device='cuda:0')), ('name', tensor(0., device='cuda:0')), ('to', tensor(0.4717, device='cuda:0')), ('lahti', tensor(0., device='cuda:0')), ('precision', tensor(0., device='cuda:0'))]
idx: 598, example: The other seats would go to Edgar Edmonds , an American with experience of the clothing and retail industry , and Christian Fischer , an Austrian with experience in the winter sports goods business , prediction: 2, correct_label: 2, class_scores: [0.1997647  0.32626125 0.47397405], word_scores: ['the:6.3806996877247e-06', 'other:0.0', 'seats:0.0', 'would:2.0953068542439723e-06', 'go:0.0', 'to:2.886244146793615e-06', 'edgar:0.0', 'edmond:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'an:0.0', 'american:0.0', 'with:4.733654350275174e-06', 'experience:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'clothing:0.0', 'and:0.0', 'retail:0.0', 'industry:0.0', ',:7.986737728060689e-06', 'and:0.0', 'christian:0.0', 'fischer:0.0', ',:7.986737728060689e-06', 'an:0.0', 'austrian:0.0', 'with:4.733654350275174e-06', 'experience:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'winter:0.0', 'sports:0.0', 'goods:0.0', 'business:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0997, device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('seats', tensor(0., device='cuda:0')), ('would', tensor(0.0327, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('to', tensor(0.0451, device='cuda:0')), ('edgar', tensor(0., device='cuda:0')), ('edmonds', tensor(0., device='cuda:0')), (',', tensor(0.1248, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('american', tensor(0., device='cuda:0')), ('with', tensor(0.0740, device='cuda:0')), ('experience', tensor(0., device='cuda:0')), ('of', tensor(0.0537, device='cuda:0')), ('the', tensor(0.0997, device='cuda:0')), ('clothing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.1248, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('christian', tensor(0., device='cuda:0')), ('fischer', tensor(0., device='cuda:0')), (',', tensor(0.1248, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('austrian', tensor(0., device='cuda:0')), ('with', tensor(0.0740, device='cuda:0')), ('experience', tensor(0., device='cuda:0')), ('in', tensor(0.0472, device='cuda:0')), ('the', tensor(0.0997, device='cuda:0')), ('winter', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0997, device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('seats', tensor(0., device='cuda:0')), ('would', tensor(0.0327, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('to', tensor(0.0451, device='cuda:0')), ('edgar', tensor(0., device='cuda:0')), ('edmonds', tensor(0., device='cuda:0')), (',', tensor(0.1248, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('american', tensor(0., device='cuda:0')), ('with', tensor(0.0740, device='cuda:0')), ('experience', tensor(0., device='cuda:0')), ('of', tensor(0.0537, device='cuda:0')), ('the', tensor(0.0997, device='cuda:0')), ('clothing', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.1248, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('christian', tensor(0., device='cuda:0')), ('fischer', tensor(0., device='cuda:0')), (',', tensor(0.1248, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('austrian', tensor(0., device='cuda:0')), ('with', tensor(0.0740, device='cuda:0')), ('experience', tensor(0., device='cuda:0')), ('in', tensor(0.0472, device='cuda:0')), ('the', tensor(0.0997, device='cuda:0')), ('winter', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 599, example: The Line 4 will run fully underground and will comprise 10 stations which will be executed in two implementation stages , prediction: 1, correct_label: 2, class_scores: [0.18584563 0.43103915 0.38311523], word_scores: ['the:6.3806996877247e-06', 'line:0.0', '4:0.0', 'will:4.073096533829812e-06', 'run:0.0', 'fully:0.0', 'underground:0.0', 'and:0.0', 'will:4.073096533829812e-06', 'comprise:0.0', '10:0.0', 'stations:0.0', 'which:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'executed:0.0', 'in:3.0217122457543155e-06', 'two:0.0', 'implementation:0.0', 'stages:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2951, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('will', tensor(0.1884, device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('underground', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.1884, device='cuda:0')), ('comprise', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('stations', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('will', tensor(0.1884, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('executed', tensor(0., device='cuda:0')), ('in', tensor(0.1398, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('stages', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2951, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('will', tensor(0.1884, device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('underground', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.1884, device='cuda:0')), ('comprise', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('stations', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('will', tensor(0.1884, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('executed', tensor(0., device='cuda:0')), ('in', tensor(0.1398, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('implementation', tensor(0., device='cuda:0')), ('stages', tensor(0., device='cuda:0'))]
idx: 600, example: Risto Raty , Tekla 's executive vice president , said that Tekla Structures and ArchiCAD will cover the entire design and documentation workflow throughout a construction project , prediction: 2, correct_label: 2, class_scores: [0.19339064 0.32386446 0.4827449 ], word_scores: ['ri:0.0', '##sto:0.0', 'rat:0.0', '##y:1.832826342251792e-06', ',:7.986737728060689e-06', 'te:0.0', '##kla:0.0', "':0.0", 's:0.0', 'executive:0.0', 'vice:0.0', 'president:0.0', ',:7.986737728060689e-06', 'said:0.0', 'that:1.5133816759771435e-06', 'te:0.0', '##kla:0.0', 'structures:0.0', 'and:0.0', 'arch:0.0', '##ica:0.0', '##d:0.0', 'will:4.073096533829812e-06', 'cover:0.0', 'the:6.3806996877247e-06', 'entire:0.0', 'design:0.0', 'and:0.0', 'documentation:0.0', 'work:0.0', '##flow:0.0', 'throughout:0.0', 'a:8.62785782373976e-06', 'construction:0.0', 'project:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('risto', tensor(0., device='cuda:0')), ('raty', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('risto', tensor(0., device='cuda:0')), ('raty', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 601, example: The wireless industry is bracing itself for the iPhone , which will launch on June 29 , prediction: 2, correct_label: 2, class_scores: [0.2048584  0.27314278 0.52199876], word_scores: ['the:6.3806996877247e-06', 'wireless:0.0', 'industry:0.0', 'is:0.0', 'bracing:0.0', 'itself:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'iphone:0.0', ',:7.986737728060689e-06', 'which:0.0', 'will:4.073096533829812e-06', 'launch:0.0', 'on:0.0', 'june:0.0', '29:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2571, device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('bracing', tensor(0., device='cuda:0')), ('itself', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2571, device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), (',', tensor(0.3218, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('will', tensor(0.1641, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2571, device='cuda:0')), ('wireless', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('bracing', tensor(0., device='cuda:0')), ('itself', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2571, device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), (',', tensor(0.3218, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('will', tensor(0.1641, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0'))]
idx: 602, example: Ramirent Finland is the domestic unit of machinery rental company Ramirent Oyj HEL : RMR1V , prediction: 2, correct_label: 2, class_scores: [0.15598223 0.34878665 0.49523106], word_scores: ['ram:0.0', '##ire:0.0', '##nt:0.0', 'finland:4.096111752005527e-06', 'is:0.0', 'the:6.3806996877247e-06', 'domestic:0.0', 'unit:0.0', 'of:3.4365734791208524e-06', 'machinery:0.0', 'rental:0.0', 'company:6.695386673527537e-06', 'ram:0.0', '##ire:0.0', '##nt:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'rm:0.0', '##r:0.0', '##1:0.0', '##v:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ramirent', tensor(0., device='cuda:0')), ('finland', tensor(0.1825, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2843, device='cuda:0')), ('domestic', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.1531, device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('rental', tensor(0., device='cuda:0')), ('company', tensor(0.2983, device='cuda:0')), ('ramirent', tensor(0., device='cuda:0')), ('oyj', tensor(0.0817, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('rmr1v', tensor(0., device='cuda:0'))],  word_scores_max: [('ramirent', tensor(0., device='cuda:0')), ('finland', tensor(0.1825, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2843, device='cuda:0')), ('domestic', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.1531, device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('rental', tensor(0., device='cuda:0')), ('company', tensor(0.2983, device='cuda:0')), ('ramirent', tensor(0., device='cuda:0')), ('oyj', tensor(0.0817, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('rmr1v', tensor(0., device='cuda:0'))]
idx: 603, example: treatment products in Usa , Canada , Mexico , Australia and Brazil Today , Global Research & Data Services is going to publish several market analyses about the markets for water treatment products in some selected countries , prediction: 2, correct_label: 2, class_scores: [0.21384501 0.36185107 0.42430395], word_scores: ['treatment:0.0', 'products:0.0', 'in:3.0217122457543155e-06', 'usa:0.0', ',:7.986737728060689e-06', 'canada:0.0', ',:7.986737728060689e-06', 'mexico:0.0', ',:7.986737728060689e-06', 'australia:0.0', 'and:0.0', 'brazil:0.0', 'today:0.0', ',:7.986737728060689e-06', 'global:0.0', 'research:0.0', '&:0.0', 'data:0.0', 'services:0.0', 'is:0.0', 'going:0.0', 'to:2.886244146793615e-06', 'publish:0.0', 'several:0.0', 'market:0.0', 'analyses:0.0', 'about:0.0', 'the:6.3806996877247e-06', 'markets:0.0', 'for:0.0', 'water:0.0', 'treatment:0.0', 'products:0.0', 'in:3.0217122457543155e-06', 'some:0.0', 'selected:0.0', 'countries:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('treatment', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('in', tensor(0.0639, device='cuda:0')), ('usa', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('canada', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('mexico', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('australia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('to', tensor(0.0611, device='cuda:0')), ('publish', tensor(0., device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('analyses', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('in', tensor(0.0639, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('selected', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))],  word_scores_max: [('treatment', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('in', tensor(0.0639, device='cuda:0')), ('usa', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('canada', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('mexico', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('australia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), (',', tensor(0.1690, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('to', tensor(0.0611, device='cuda:0')), ('publish', tensor(0., device='cuda:0')), ('several', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('analyses', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('the', tensor(0.1350, device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('water', tensor(0., device='cuda:0')), ('treatment', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('in', tensor(0.0639, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('selected', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0'))]
idx: 604, example: Finnish Food Workers ' Union SEL plans to hasten its collective bargaining with a two-day strike that would begin on 7 April 2010 , in Finland , prediction: 1, correct_label: 0, class_scores: [0.15090662 0.47605658 0.3730369 ], word_scores: ['finnish:0.0', 'food:0.0', 'workers:0.0', "':0.0", 'union:0.0', 'se:0.0', '##l:0.0', 'plans:0.0', 'to:2.886244146793615e-06', 'haste:0.0', '##n:0.0', 'its:1.7191393908433383e-06', 'collective:0.0', 'bargaining:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'two:0.0', '-:4.821180027647642e-06', 'day:0.0', 'strike:0.0', 'that:1.5133816759771435e-06', 'would:2.0953068542439723e-06', 'begin:0.0', 'on:0.0', '7:0.0', 'april:0.0', '2010:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(nan, device='cuda:0')), ('food', tensor(nan, device='cuda:0'))],  word_scores_max: [('finnish', tensor(nan, device='cuda:0')), ('food', tensor(nan, device='cuda:0'))]
idx: 605, example: Earnings per share ( EPS ) for the first quarter 2007 amounted to EUR0 .07 , up from EUR0 .04 , prediction: 2, correct_label: 1, class_scores: [0.19481298 0.32159895 0.483588  ], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', '(:0.0', 'eps:0.0', '):0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', '2007:0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '07:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '04:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2196, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.0993, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0999, device='cuda:0')), ('07', tensor(0., device='cuda:0')), (',', tensor(0.2749, device='cuda:0')), ('up', tensor(0.0515, device='cuda:0')), ('from', tensor(0.1547, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0999, device='cuda:0')), ('04', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2196, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.0993, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0999, device='cuda:0')), ('07', tensor(0., device='cuda:0')), (',', tensor(0.2749, device='cuda:0')), ('up', tensor(0.0515, device='cuda:0')), ('from', tensor(0.1547, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0999, device='cuda:0')), ('04', tensor(0., device='cuda:0'))]
idx: 606, example: Finnish industrial group Ruukki Group Plc OMX Helsinki : RUG1V said on Friday 14 November that its furniture business segment Incap Furniture has concluded personnel negotiations that were started at the end of September , prediction: 2, correct_label: 2, class_scores: [0.25352833 0.30347416 0.44299752], word_scores: ['finnish:0.0', 'industrial:0.0', 'group:0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', 'group:0.0', 'plc:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'rug:0.0', '##1:0.0', '##v:0.0', 'said:0.0', 'on:0.0', 'friday:0.0', '14:0.0', 'november:0.0', 'that:1.5133816759771435e-06', 'its:1.7191393908433383e-06', 'furniture:0.0', 'business:0.0', 'segment:0.0', 'inca:0.0', '##p:0.0', 'furniture:0.0', 'has:5.9214244174654596e-06', 'concluded:0.0', 'personnel:0.0', 'negotiations:0.0', 'that:1.5133816759771435e-06', 'were:0.0', 'started:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', 'september:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('rug1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('that', tensor(0.0739, device='cuda:0')), ('its', tensor(0.0839, device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('segment', tensor(0., device='cuda:0')), ('incap', tensor(0., device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), ('has', tensor(0.2891, device='cuda:0')), ('concluded', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('that', tensor(0.0739, device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.3115, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1678, device='cuda:0')), ('september', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('rug1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('that', tensor(0.0739, device='cuda:0')), ('its', tensor(0.0839, device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('segment', tensor(0., device='cuda:0')), ('incap', tensor(0., device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), ('has', tensor(0.2891, device='cuda:0')), ('concluded', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('that', tensor(0.0739, device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.3115, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1678, device='cuda:0')), ('september', tensor(0., device='cuda:0'))]
idx: 607, example: According to Eijkens , a publisher can do much more than just publish colourful books : a publisher can provide value added to information by individualising it , prediction: 2, correct_label: 2, class_scores: [0.20196514 0.34786627 0.45016858], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'e:0.0', '##ij:0.0', '##ken:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'publisher:0.0', 'can:0.0', 'do:0.0', 'much:0.0', 'more:0.0', 'than:0.0', 'just:0.0', 'publish:0.0', 'colourful:0.0', 'books:0.0', '::0.0', 'a:8.62785782373976e-06', 'publisher:0.0', 'can:0.0', 'provide:0.0', 'value:0.0', 'added:0.0', 'to:2.886244146793615e-06', 'information:0.0', 'by:0.0', 'individual:0.0', '##ising:0.0', 'it:3.3415778943890473e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.0840, device='cuda:0')), ('eijkens', tensor(0., device='cuda:0')), (',', tensor(0.2325, device='cuda:0')), ('a', tensor(0.2511, device='cuda:0')), ('publisher', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('do', tensor(0., device='cuda:0')), ('much', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('publish', tensor(0., device='cuda:0')), ('colourful', tensor(0., device='cuda:0')), ('books', tensor(0., device='cuda:0')), ('a', tensor(0.2511, device='cuda:0')), ('publisher', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('to', tensor(0.0840, device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('individualising', tensor(0., device='cuda:0')), ('it', tensor(0.0973, device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.0840, device='cuda:0')), ('eijkens', tensor(0., device='cuda:0')), (',', tensor(0.2325, device='cuda:0')), ('a', tensor(0.2511, device='cuda:0')), ('publisher', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('do', tensor(0., device='cuda:0')), ('much', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('publish', tensor(0., device='cuda:0')), ('colourful', tensor(0., device='cuda:0')), ('books', tensor(0., device='cuda:0')), ('a', tensor(0.2511, device='cuda:0')), ('publisher', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('to', tensor(0.0840, device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('individualising', tensor(0., device='cuda:0')), ('it', tensor(0.0973, device='cuda:0'))]
idx: 608, example: The venture , which will be 51 % owned by Kemira and 49 % by IVRCL , will operate an inorganic coagulant manufacturing facility , to be built in Vishakapatnam Vizag in the state of Andhra Pradesh and to kick off operations in the second half of 2011 , prediction: 2, correct_label: 2, class_scores: [0.12663263 0.31368336 0.559684  ], word_scores: ['the:6.3806996877247e-06', 'venture:0.0', ',:7.986737728060689e-06', 'which:0.0', 'will:4.073096533829812e-06', 'be:0.0', '51:0.0', '%:0.0', 'owned:0.0', 'by:0.0', 'ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', 'and:0.0', '%:0.0', 'by:0.0', 'iv:0.0', '##rc:0.0', '##l:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'operate:0.0', 'an:0.0', 'inorganic:0.0', 'coa:0.0', '##gul:0.0', '##ant:0.0', 'manufacturing:0.0', 'facility:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'be:0.0', 'built:0.0', 'in:3.0217122457543155e-06', 'vis:0.0', '##hak:0.0', '##apa:0.0', '##t:0.0', '##nam:0.0', 'viz:0.0', '##ag:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'state:0.0', 'of:3.4365734791208524e-06', 'andhra:0.0', 'pradesh:0.0', 'and:0.0', 'to:2.886244146793615e-06', 'kick:0.0', 'off:0.0', 'operations:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2011:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('the', tensor(0.0875, device='cuda:0')), ('venture', tensor(0., device='cuda:0')), (',', tensor(0.1095, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('will', tensor(0.0558, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('51', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('kemira', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ivrcl', tensor(0., device='cuda:0')), (',', tensor(0.1095, device='cuda:0')), ('will', tensor(0.0558, device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('inorganic', tensor(0., device='cuda:0')), ('coagulant', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0')), (',', tensor(0.1095, device='cuda:0')), ('to', tensor(0.0396, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('in', tensor(0.0414, device='cuda:0')), ('vishakapatnam', tensor(0., device='cuda:0')), ('vizag', tensor(0., device='cuda:0')), ('in', tensor(0.0414, device='cuda:0')), ('the', tensor(0.0875, device='cuda:0')), ('state', tensor(0., device='cuda:0')), ('of', tensor(0.0471, device='cuda:0')), ('andhra', tensor(0., device='cuda:0')), ('pradesh', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0396, device='cuda:0')), ('kick', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0414, device='cuda:0')), ('the', tensor(0.0875, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0471, device='cuda:0')), ('2011', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0875, device='cuda:0')), ('venture', tensor(0., device='cuda:0')), (',', tensor(0.1095, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('will', tensor(0.0558, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('51', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('kemira', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ivrcl', tensor(0., device='cuda:0')), (',', tensor(0.1095, device='cuda:0')), ('will', tensor(0.0558, device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('inorganic', tensor(0., device='cuda:0')), ('coagulant', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0')), (',', tensor(0.1095, device='cuda:0')), ('to', tensor(0.0396, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('in', tensor(0.0414, device='cuda:0')), ('vishakapatnam', tensor(0., device='cuda:0')), ('vizag', tensor(0., device='cuda:0')), ('in', tensor(0.0414, device='cuda:0')), ('the', tensor(0.0875, device='cuda:0')), ('state', tensor(0., device='cuda:0')), ('of', tensor(0.0471, device='cuda:0')), ('andhra', tensor(0., device='cuda:0')), ('pradesh', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0396, device='cuda:0')), ('kick', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0414, device='cuda:0')), ('the', tensor(0.0875, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0471, device='cuda:0')), ('2011', tensor(0., device='cuda:0'))]
idx: 609, example: Our solutions are fully Arabized , and our message is that we want to become the IT partner of choice for businesses in the Near-East region , prediction: 1, correct_label: 2, class_scores: [0.20511018 0.4083502  0.38653967], word_scores: ['our:0.0', 'solutions:0.0', 'are:0.0', 'fully:0.0', 'arab:0.0', '##ized:0.0', ',:7.986737728060689e-06', 'and:0.0', 'our:0.0', 'message:0.0', 'is:0.0', 'that:1.5133816759771435e-06', 'we:0.0', 'want:0.0', 'to:2.886244146793615e-06', 'become:0.0', 'the:6.3806996877247e-06', 'it:3.3415778943890473e-06', 'partner:0.0', 'of:3.4365734791208524e-06', 'choice:0.0', 'for:0.0', 'businesses:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'near:0.0', '-:4.821180027647642e-06', 'east:0.0', 'region:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('our', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('arabized', tensor(0., device='cuda:0')), (',', tensor(0.2008, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('message', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0381, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('want', tensor(0., device='cuda:0')), ('to', tensor(0.0726, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('the', tensor(0.1604, device='cuda:0')), ('it', tensor(0.0840, device='cuda:0')), ('partner', tensor(0., device='cuda:0')), ('of', tensor(0.0864, device='cuda:0')), ('choice', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('businesses', tensor(0., device='cuda:0')), ('in', tensor(0.0760, device='cuda:0')), ('the', tensor(0.1604, device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('-', tensor(0.1212, device='cuda:0')), ('east', tensor(0., device='cuda:0')), ('region', tensor(0., device='cuda:0'))],  word_scores_max: [('our', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('arabized', tensor(0., device='cuda:0')), (',', tensor(0.2008, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('message', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0381, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('want', tensor(0., device='cuda:0')), ('to', tensor(0.0726, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('the', tensor(0.1604, device='cuda:0')), ('it', tensor(0.0840, device='cuda:0')), ('partner', tensor(0., device='cuda:0')), ('of', tensor(0.0864, device='cuda:0')), ('choice', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('businesses', tensor(0., device='cuda:0')), ('in', tensor(0.0760, device='cuda:0')), ('the', tensor(0.1604, device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('-', tensor(0.1212, device='cuda:0')), ('east', tensor(0., device='cuda:0')), ('region', tensor(0., device='cuda:0'))]
idx: 610, example: Pharmaceuticals group Orion Corp reported a fall in its third-quarter earnings that were hit by larger expenditures on R&D and marketing , prediction: 2, correct_label: 0, class_scores: [0.21428107 0.25355497 0.532164  ], word_scores: ['pharmaceuticals:0.0', 'group:0.0', 'orion:0.0', 'corp:0.0', 'reported:0.0', 'a:8.62785782373976e-06', 'fall:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'third:0.0', '-:4.821180027647642e-06', 'quarter:0.0', 'earnings:0.0', 'that:1.5133816759771435e-06', 'were:0.0', 'hit:0.0', 'by:0.0', 'larger:0.0', 'expenditures:0.0', 'on:0.0', 'r:0.0', '&:0.0', 'd:0.0', 'and:0.0', 'marketing:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pharmaceuticals', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('orion', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('a', tensor(0.4379, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.1534, device='cuda:0')), ('its', tensor(0.0873, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('-', tensor(0.2447, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('that', tensor(0.0768, device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('larger', tensor(0., device='cuda:0')), ('expenditures', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('d', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('marketing', tensor(0., device='cuda:0'))],  word_scores_max: [('pharmaceuticals', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('orion', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('a', tensor(0.4379, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.1534, device='cuda:0')), ('its', tensor(0.0873, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('-', tensor(0.2447, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('that', tensor(0.0768, device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('larger', tensor(0., device='cuda:0')), ('expenditures', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('d', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('marketing', tensor(0., device='cuda:0'))]
idx: 611, example: The reductions will be concluded by autumn 2010 , prediction: 2, correct_label: 2, class_scores: [0.13274363 0.3916761  0.47558025], word_scores: ['the:6.3806996877247e-06', 'reductions:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'concluded:0.0', 'by:0.0', 'autumn:0.0', '2010:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6104, device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('concluded', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6104, device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('concluded', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 612, example: According shipping company Viking Line , the EU decision will have a significant financial impact , prediction: 2, correct_label: 2, class_scores: [0.26995233 0.3317554  0.39829227], word_scores: ['according:0.0', 'shipping:0.0', 'company:6.695386673527537e-06', 'viking:0.0', 'line:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'eu:0.0', 'decision:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'significant:0.0', 'financial:0.0', 'impact:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('according', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('company', tensor(0.1826, device='cuda:0')), ('viking', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), (',', tensor(0.2178, device='cuda:0')), ('the', tensor(0.1740, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('will', tensor(0.1111, device='cuda:0')), ('have', tensor(0.0794, device='cuda:0')), ('a', tensor(0.2353, device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('impact', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('company', tensor(0.1826, device='cuda:0')), ('viking', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), (',', tensor(0.2178, device='cuda:0')), ('the', tensor(0.1740, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('will', tensor(0.1111, device='cuda:0')), ('have', tensor(0.0794, device='cuda:0')), ('a', tensor(0.2353, device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('impact', tensor(0., device='cuda:0'))]
idx: 613, example: In 2006 the company 's net sales amounted to approximately EUR259m and it has some 8,000 employees , prediction: 2, correct_label: 2, class_scores: [0.16842215 0.3929278  0.43865   ], word_scores: ['in:3.0217122457543155e-06', '2006:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'approximately:0.0', 'eu:0.0', '##r:0.0', '##25:0.0', '##9:0.0', '##m:0.0', 'and:0.0', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'some:0.0', '8:0.0', ',:7.986737728060689e-06', '000:0.0', 'employees:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.3214, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('the', tensor(0.6786, device='cuda:0'))],  word_scores_max: [('in', tensor(0.3214, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('the', tensor(0.6786, device='cuda:0'))]
idx: 614, example: Operating loss landed at EUR39m including one-offs and at EUR27m excluding one-offs , prediction: 2, correct_label: 2, class_scores: [0.20573328 0.33114997 0.46311677], word_scores: ['operating:0.0', 'loss:0.0', 'landed:0.0', 'at:0.0', 'eu:0.0', '##r:0.0', '##39:0.0', '##m:0.0', 'including:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'offs:0.0', 'and:0.0', 'at:0.0', 'eu:0.0', '##r:0.0', '##27:0.0', '##m:0.0', 'excluding:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'offs:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('landed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('eur39m', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('one', tensor(0.2437, device='cuda:0')), ('-', tensor(0.2563, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('eur27m', tensor(0., device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.2437, device='cuda:0')), ('-', tensor(0.2563, device='cuda:0')), ('offs', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('landed', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('eur39m', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('one', tensor(0.2437, device='cuda:0')), ('-', tensor(0.2563, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('eur27m', tensor(0., device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.2437, device='cuda:0')), ('-', tensor(0.2563, device='cuda:0')), ('offs', tensor(0., device='cuda:0'))]
idx: 615, example: The Group owns and operates a fleet of more than 800dwt , while container capacity is 17,000 TEUs , and manages a diversified fleet of its own railway rolling stock of over 17,000 units , prediction: 2, correct_label: 2, class_scores: [0.19609344 0.34426254 0.45964402], word_scores: ['the:6.3806996877247e-06', 'group:0.0', 'owns:0.0', 'and:0.0', 'operates:0.0', 'a:8.62785782373976e-06', 'fleet:0.0', 'of:3.4365734791208524e-06', 'more:0.0', 'than:0.0', '800:0.0', '##d:0.0', '##wt:0.0', ',:7.986737728060689e-06', 'while:0.0', 'container:0.0', 'capacity:0.0', 'is:0.0', '17:0.0', ',:7.986737728060689e-06', '000:0.0', 'te:0.0', '##us:0.0', ',:7.986737728060689e-06', 'and:0.0', 'manages:0.0', 'a:8.62785782373976e-06', 'diversified:0.0', 'fleet:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'own:0.0', 'railway:0.0', 'rolling:0.0', 'stock:0.0', 'of:3.4365734791208524e-06', 'over:0.0', '17:0.0', ',:7.986737728060689e-06', '000:0.0', 'units:2.8638919502554927e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0905, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('a', tensor(0.1224, device='cuda:0')), ('fleet', tensor(0., device='cuda:0')), ('of', tensor(0.0488, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('800dwt', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('container', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('teus', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('manages', tensor(0., device='cuda:0')), ('a', tensor(0.1224, device='cuda:0')), ('diversified', tensor(0., device='cuda:0')), ('fleet', tensor(0., device='cuda:0')), ('of', tensor(0.0488, device='cuda:0')), ('its', tensor(0.0244, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('railway', tensor(0., device='cuda:0')), ('rolling', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('of', tensor(0.0488, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('units', tensor(0.0406, device='cuda:0'))],  word_scores_max: [('the', tensor(0.0905, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0')), ('a', tensor(0.1224, device='cuda:0')), ('fleet', tensor(0., device='cuda:0')), ('of', tensor(0.0488, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('800dwt', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('container', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('teus', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('manages', tensor(0., device='cuda:0')), ('a', tensor(0.1224, device='cuda:0')), ('diversified', tensor(0., device='cuda:0')), ('fleet', tensor(0., device='cuda:0')), ('of', tensor(0.0488, device='cuda:0')), ('its', tensor(0.0244, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('railway', tensor(0., device='cuda:0')), ('rolling', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('of', tensor(0.0488, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), (',', tensor(0.1133, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('units', tensor(0.0406, device='cuda:0'))]
idx: 616, example: The first quarter was as expected and was in line with analysts ' forecasts , prediction: 2, correct_label: 2, class_scores: [0.19282903 0.39706263 0.4101083 ], word_scores: ['the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'was:0.0', 'as:0.0', 'expected:0.0', 'and:0.0', 'was:0.0', 'in:3.0217122457543155e-06', 'line:0.0', 'with:4.733654350275174e-06', 'analysts:0.0', "':0.0", 'forecast:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.4514, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('in', tensor(0.2138, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('with', tensor(0.3349, device='cuda:0'))],  word_scores_max: [('the', tensor(0.4514, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('in', tensor(0.2138, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('with', tensor(0.3349, device='cuda:0'))]
idx: 617, example: According to Finnish FIM Bank , Alpro 's price would be around EUR 100mn-150mn , prediction: 2, correct_label: 2, class_scores: [0.19029523 0.36822358 0.44148123], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'finnish:0.0', 'fi:0.0', '##m:0.0', 'bank:0.0', ',:7.986737728060689e-06', 'al:0.0', '##pro:0.0', "':0.0", 's:0.0', 'price:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'around:0.0', 'eu:0.0', '##r:0.0', '100:0.0', '##m:0.0', '##n:0.0', '-:4.821180027647642e-06', '150:0.0', '##m:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('fim', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('fim', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0'))]
idx: 618, example: UPM-Kymmene has generated thirty-one consecutive quarters of positive EBITDA , prediction: 2, correct_label: 1, class_scores: [0.19168347 0.38522622 0.4230903 ], word_scores: ['up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', 'has:5.9214244174654596e-06', 'generated:0.0', 'thirty:0.0', '-:4.821180027647642e-06', 'one:4.584404450724833e-06', 'consecutive:0.0', 'quarters:0.0', 'of:3.4365734791208524e-06', 'positive:0.0', 'e:0.0', '##bit:0.0', '##da:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('upm', tensor(0.0596, device='cuda:0')), ('-', tensor(0.1922, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('has', tensor(0.2361, device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('thirty', tensor(0., device='cuda:0')), ('-', tensor(0.1922, device='cuda:0')), ('one', tensor(0.1828, device='cuda:0')), ('consecutive', tensor(0., device='cuda:0')), ('quarters', tensor(0., device='cuda:0')), ('of', tensor(0.1370, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('ebitda', tensor(0., device='cuda:0'))],  word_scores_max: [('upm', tensor(0.0596, device='cuda:0')), ('-', tensor(0.1922, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('has', tensor(0.2361, device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('thirty', tensor(0., device='cuda:0')), ('-', tensor(0.1922, device='cuda:0')), ('one', tensor(0.1828, device='cuda:0')), ('consecutive', tensor(0., device='cuda:0')), ('quarters', tensor(0., device='cuda:0')), ('of', tensor(0.1370, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('ebitda', tensor(0., device='cuda:0'))]
idx: 619, example: Russia 's Video International Group holds a controlling stake in Russian Media Ventures , prediction: 2, correct_label: 2, class_scores: [0.28327098 0.35419768 0.3625314 ], word_scores: ['russia:0.0', "':0.0", 's:0.0', 'video:0.0', 'international:0.0', 'group:0.0', 'holds:0.0', 'a:8.62785782373976e-06', 'controlling:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'russian:0.0', 'media:0.0', 'ventures:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 620, example: Proving that good cellphone design is truly a work of art , the website for the Nokia 6131 provides a colorful canvas for the expression of mobile-inspired sentiments , prediction: 2, correct_label: 1, class_scores: [0.15426607 0.3778882  0.46784574], word_scores: ['proving:0.0', 'that:1.5133816759771435e-06', 'good:0.0', 'cell:0.0', '##phone:0.0', 'design:0.0', 'is:0.0', 'truly:0.0', 'a:8.62785782373976e-06', 'work:0.0', 'of:3.4365734791208524e-06', 'art:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'website:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'nokia:0.0', '61:0.0', '##31:0.0', 'provides:0.0', 'a:8.62785782373976e-06', 'colorful:0.0', 'canvas:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'expression:0.0', 'of:3.4365734791208524e-06', 'mobile:0.0', '-:4.821180027647642e-06', 'inspired:0.0', 'sentiments:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('proving', tensor(0., device='cuda:0')), ('that', tensor(0.0263, device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('cellphone', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('truly', tensor(0., device='cuda:0')), ('a', tensor(0.1498, device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('of', tensor(0.0597, device='cuda:0')), ('art', tensor(0., device='cuda:0')), (',', tensor(0.1387, device='cuda:0')), ('the', tensor(0.1108, device='cuda:0')), ('website', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1108, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('6131', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('a', tensor(0.1498, device='cuda:0')), ('colorful', tensor(0., device='cuda:0')), ('canvas', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1108, device='cuda:0')), ('expression', tensor(0., device='cuda:0')), ('of', tensor(0.0597, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('-', tensor(0.0837, device='cuda:0')), ('inspired', tensor(0., device='cuda:0')), ('sentiments', tensor(0., device='cuda:0'))],  word_scores_max: [('proving', tensor(0., device='cuda:0')), ('that', tensor(0.0263, device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('cellphone', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('truly', tensor(0., device='cuda:0')), ('a', tensor(0.1498, device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('of', tensor(0.0597, device='cuda:0')), ('art', tensor(0., device='cuda:0')), (',', tensor(0.1387, device='cuda:0')), ('the', tensor(0.1108, device='cuda:0')), ('website', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1108, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('6131', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('a', tensor(0.1498, device='cuda:0')), ('colorful', tensor(0., device='cuda:0')), ('canvas', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1108, device='cuda:0')), ('expression', tensor(0., device='cuda:0')), ('of', tensor(0.0597, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('-', tensor(0.0837, device='cuda:0')), ('inspired', tensor(0., device='cuda:0')), ('sentiments', tensor(0., device='cuda:0'))]
idx: 621, example: Paychex has more than 100 offices serving approximately 554,000 payroll clients nationwide as of May 31 , 2009 , prediction: 1, correct_label: 2, class_scores: [0.22450165 0.40097788 0.37452048], word_scores: ['pay:0.0', '##che:0.0', '##x:0.0', 'has:5.9214244174654596e-06', 'more:0.0', 'than:0.0', '100:0.0', 'offices:0.0', 'serving:0.0', 'approximately:0.0', '55:0.0', '##4:0.0', ',:7.986737728060689e-06', '000:0.0', 'payroll:0.0', 'clients:0.0', 'nationwide:0.0', 'as:0.0', 'of:3.4365734791208524e-06', 'may:0.0', '31:0.0', ',:7.986737728060689e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('paychex', tensor(0., device='cuda:0')), ('has', tensor(0.2338, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('offices', tensor(0., device='cuda:0')), ('serving', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('554', tensor(0., device='cuda:0')), (',', tensor(0.3153, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('payroll', tensor(0., device='cuda:0')), ('clients', tensor(0., device='cuda:0')), ('nationwide', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('of', tensor(0.1357, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('31', tensor(0., device='cuda:0')), (',', tensor(0.3153, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('paychex', tensor(0., device='cuda:0')), ('has', tensor(0.2338, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('offices', tensor(0., device='cuda:0')), ('serving', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('554', tensor(0., device='cuda:0')), (',', tensor(0.3153, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('payroll', tensor(0., device='cuda:0')), ('clients', tensor(0., device='cuda:0')), ('nationwide', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('of', tensor(0.1357, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('31', tensor(0., device='cuda:0')), (',', tensor(0.3153, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 622, example: Capital base and capital adequacy measurement is based on approaches under Basel II , prediction: 2, correct_label: 2, class_scores: [0.2209524 0.2923477 0.4866999], word_scores: ['capital:0.0', 'base:0.0', 'and:0.0', 'capital:0.0', 'ad:0.0', '##e:0.0', '##qua:0.0', '##cy:0.0', 'measurement:0.0', 'is:0.0', 'based:0.0', 'on:0.0', 'approaches:0.0', 'under:0.0', 'basel:0.0', 'ii:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('capital', tensor(nan, device='cuda:0')), ('base', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('capital', tensor(nan, device='cuda:0')), ('adequacy', tensor(nan, device='cuda:0')), ('measurement', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('based', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('approaches', tensor(nan, device='cuda:0')), ('under', tensor(nan, device='cuda:0')), ('basel', tensor(nan, device='cuda:0')), ('ii', tensor(nan, device='cuda:0'))],  word_scores_max: [('capital', tensor(nan, device='cuda:0')), ('base', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('capital', tensor(nan, device='cuda:0')), ('adequacy', tensor(nan, device='cuda:0')), ('measurement', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('based', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('approaches', tensor(nan, device='cuda:0')), ('under', tensor(nan, device='cuda:0')), ('basel', tensor(nan, device='cuda:0')), ('ii', tensor(nan, device='cuda:0'))]
idx: 623, example: Chief Financial Officer Jim Heindlmeyer said Beyond Oblivion is in advanced talks with the four major recording companies about its service , prediction: 2, correct_label: 2, class_scores: [0.16911362 0.29729182 0.5335946 ], word_scores: ['chief:0.0', 'financial:0.0', 'officer:0.0', 'jim:0.0', 'he:0.0', '##ind:0.0', '##lm:0.0', '##eyer:0.0', 'said:0.0', 'beyond:0.0', 'oblivion:0.0', 'is:0.0', 'in:3.0217122457543155e-06', 'advanced:0.0', 'talks:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'four:3.606506425057887e-06', 'major:0.0', 'recording:0.0', 'companies:0.0', 'about:0.0', 'its:1.7191393908433383e-06', 'service:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('chief', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('officer', tensor(0., device='cuda:0')), ('jim', tensor(0., device='cuda:0')), ('heindlmeyer', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('beyond', tensor(0., device='cuda:0')), ('oblivion', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.1553, device='cuda:0')), ('advanced', tensor(0., device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('with', tensor(0.2432, device='cuda:0')), ('the', tensor(0.3279, device='cuda:0')), ('four', tensor(0.1853, device='cuda:0')), ('major', tensor(0., device='cuda:0')), ('recording', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('its', tensor(0.0883, device='cuda:0')), ('service', tensor(0., device='cuda:0'))],  word_scores_max: [('chief', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('officer', tensor(0., device='cuda:0')), ('jim', tensor(0., device='cuda:0')), ('heindlmeyer', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('beyond', tensor(0., device='cuda:0')), ('oblivion', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.1553, device='cuda:0')), ('advanced', tensor(0., device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('with', tensor(0.2432, device='cuda:0')), ('the', tensor(0.3279, device='cuda:0')), ('four', tensor(0.1853, device='cuda:0')), ('major', tensor(0., device='cuda:0')), ('recording', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('its', tensor(0.0883, device='cuda:0')), ('service', tensor(0., device='cuda:0'))]
idx: 624, example: ASPO Plc STOCK EXCHANGE BULLETIN October 24 , 2006 at 2:00 p.m. Aspo Systems Division has completed the statutory negotiations , as required under the Act on Co-Operation Within Undertakings , conducted as part of the action plan launched in August , prediction: 2, correct_label: 2, class_scores: [0.21174172 0.33869553 0.4495628 ], word_scores: ['as:0.0', '##po:0.0', 'plc:0.0', 'stock:0.0', 'exchange:0.0', 'bulletin:0.0', 'october:0.0', '24:0.0', ',:7.986737728060689e-06', '2006:0.0', 'at:0.0', '2:0.0', '::0.0', '00:0.0', 'p:0.0', '.:2.903296945078182e-06', 'm:0.0', '.:2.903296945078182e-06', 'as:0.0', '##po:0.0', 'systems:0.0', 'division:0.0', 'has:5.9214244174654596e-06', 'completed:0.0', 'the:6.3806996877247e-06', 'statutory:0.0', 'negotiations:0.0', ',:7.986737728060689e-06', 'as:0.0', 'required:0.0', 'under:0.0', 'the:6.3806996877247e-06', 'act:0.0', 'on:0.0', 'co:0.0', '-:4.821180027647642e-06', 'operation:0.0', 'within:0.0', 'undertaking:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'conducted:0.0', 'as:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'action:0.0', 'plan:0.0', 'launched:0.0', 'in:3.0217122457543155e-06', 'august:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aspo', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('bulletin', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), (',', tensor(0.1208, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('.', tensor(0.0439, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0439, device='cuda:0')), ('aspo', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('has', tensor(0.0896, device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('the', tensor(0.0965, device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), (',', tensor(0.1208, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('required', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.0965, device='cuda:0')), ('act', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('-', tensor(0.0729, device='cuda:0')), ('operation', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('undertakings', tensor(0., device='cuda:0')), (',', tensor(0.1208, device='cuda:0')), ('conducted', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('the', tensor(0.0965, device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('launched', tensor(0., device='cuda:0')), ('in', tensor(0.0457, device='cuda:0')), ('august', tensor(0., device='cuda:0'))],  word_scores_max: [('aspo', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('bulletin', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), (',', tensor(0.1208, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('.', tensor(0.0439, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0439, device='cuda:0')), ('aspo', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('has', tensor(0.0896, device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('the', tensor(0.0965, device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), (',', tensor(0.1208, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('required', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.0965, device='cuda:0')), ('act', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('-', tensor(0.0729, device='cuda:0')), ('operation', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('undertakings', tensor(0., device='cuda:0')), (',', tensor(0.1208, device='cuda:0')), ('conducted', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0520, device='cuda:0')), ('the', tensor(0.0965, device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('launched', tensor(0., device='cuda:0')), ('in', tensor(0.0457, device='cuda:0')), ('august', tensor(0., device='cuda:0'))]
idx: 625, example: The personnel reductions will primarily affect those working for the parent company in the diagnostics business or in production and logistics in the liquid handling business , prediction: 1, correct_label: 0, class_scores: [0.21597347 0.41292948 0.37109703], word_scores: ['the:6.3806996877247e-06', 'personnel:0.0', 'reductions:0.0', 'will:4.073096533829812e-06', 'primarily:0.0', 'affect:0.0', 'those:0.0', 'working:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'parent:0.0', 'company:6.695386673527537e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'diagnostic:0.0', '##s:4.601175078278175e-06', 'business:0.0', 'or:0.0', 'in:3.0217122457543155e-06', 'production:0.0', 'and:0.0', 'logistics:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'liquid:0.0', 'handling:8.843817340675741e-06', 'business:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1177, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('will', tensor(0.0751, device='cuda:0')), ('primarily', tensor(0., device='cuda:0')), ('affect', tensor(0., device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('parent', tensor(0., device='cuda:0')), ('company', tensor(0.1235, device='cuda:0')), ('in', tensor(0.0558, device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('diagnostics', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('in', tensor(0.0558, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('in', tensor(0.0558, device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('liquid', tensor(0., device='cuda:0')), ('handling', tensor(0.1632, device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1177, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('will', tensor(0.0751, device='cuda:0')), ('primarily', tensor(0., device='cuda:0')), ('affect', tensor(0., device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('parent', tensor(0., device='cuda:0')), ('company', tensor(0.1235, device='cuda:0')), ('in', tensor(0.0558, device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('diagnostics', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('in', tensor(0.0558, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('in', tensor(0.0558, device='cuda:0')), ('the', tensor(0.1177, device='cuda:0')), ('liquid', tensor(0., device='cuda:0')), ('handling', tensor(0.1632, device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 626, example: Finnish software and hardware developer Elektrobit Oyj HEL : EBG1V , or EB , said today it will temporarily lay off up to 200 people for a maximum of 90 day in Finland , aiming to achieve cost savings of EUR 1.7 million USD 2m in the second half of 2010 , prediction: 2, correct_label: 0, class_scores: [0.20156975 0.3375503  0.46087992], word_scores: ['finnish:0.0', 'software:0.0', 'and:0.0', 'hardware:0.0', 'developer:0.0', 'el:0.0', '##ek:0.0', '##tro:0.0', '##bit:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', 'e:0.0', '##b:0.0', ',:7.986737728060689e-06', 'said:0.0', 'today:0.0', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'temporarily:0.0', 'lay:0.0', 'off:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '200:0.0', 'people:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'maximum:0.0', 'of:3.4365734791208524e-06', '90:0.0', 'day:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'aiming:0.0', 'to:2.886244146793615e-06', 'achieve:0.0', 'cost:0.0', 'savings:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '7:0.0', 'million:6.018835847498849e-06', 'usd:0.0', '2:0.0', '##m:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hardware', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('elektrobit', tensor(0., device='cuda:0')), ('oyj', tensor(0.0238, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('eb', tensor(0., device='cuda:0')), (',', tensor(0.1039, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0435, device='cuda:0')), ('will', tensor(0.0530, device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('up', tensor(0.0195, device='cuda:0')), ('to', tensor(0.0375, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1122, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('in', tensor(0.0393, device='cuda:0')), ('finland', tensor(0.0533, device='cuda:0')), (',', tensor(0.1039, device='cuda:0')), ('aiming', tensor(0., device='cuda:0')), ('to', tensor(0.0375, device='cuda:0')), ('achieve', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('savings', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0378, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.0783, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('2m', tensor(0., device='cuda:0')), ('in', tensor(0.0393, device='cuda:0')), ('the', tensor(0.0830, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hardware', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('elektrobit', tensor(0., device='cuda:0')), ('oyj', tensor(0.0238, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('eb', tensor(0., device='cuda:0')), (',', tensor(0.1039, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('it', tensor(0.0435, device='cuda:0')), ('will', tensor(0.0530, device='cuda:0')), ('temporarily', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('up', tensor(0.0195, device='cuda:0')), ('to', tensor(0.0375, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1122, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('in', tensor(0.0393, device='cuda:0')), ('finland', tensor(0.0533, device='cuda:0')), (',', tensor(0.1039, device='cuda:0')), ('aiming', tensor(0., device='cuda:0')), ('to', tensor(0.0375, device='cuda:0')), ('achieve', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('savings', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0378, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.0783, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('2m', tensor(0., device='cuda:0')), ('in', tensor(0.0393, device='cuda:0')), ('the', tensor(0.0830, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0447, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 627, example: When new types of network elements are added to the network , the conversion file is updated by adding the information required for converting the message format of the new network element type to the format understood by the management system , prediction: 2, correct_label: 2, class_scores: [0.2092252  0.29554066 0.49523422], word_scores: ['when:0.0', 'new:2.798587502184091e-06', 'types:0.0', 'of:3.4365734791208524e-06', 'network:0.0', 'elements:0.0', 'are:0.0', 'added:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'network:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'conversion:0.0', 'file:0.0', 'is:0.0', 'updated:0.0', 'by:0.0', 'adding:0.0', 'the:6.3806996877247e-06', 'information:0.0', 'required:0.0', 'for:0.0', 'converting:0.0', 'the:6.3806996877247e-06', 'message:0.0', 'format:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'network:0.0', 'element:0.0', 'type:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'format:0.0', 'understood:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'management:0.0', 'system:2.472523192409426e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('when', tensor(0., device='cuda:0')), ('new', tensor(0.0381, device='cuda:0')), ('types', tensor(0., device='cuda:0')), ('of', tensor(0.0468, device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('elements', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('to', tensor(0.0393, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('network', tensor(0., device='cuda:0')), (',', tensor(0.1089, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('conversion', tensor(0., device='cuda:0')), ('file', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('updated', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('adding', tensor(0., device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('required', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('converting', tensor(0., device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('message', tensor(0., device='cuda:0')), ('format', tensor(0., device='cuda:0')), ('of', tensor(0.0468, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('new', tensor(0.0381, device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('element', tensor(0., device='cuda:0')), ('type', tensor(0., device='cuda:0')), ('to', tensor(0.0393, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('format', tensor(0., device='cuda:0')), ('understood', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('system', tensor(0.0337, device='cuda:0'))],  word_scores_max: [('when', tensor(0., device='cuda:0')), ('new', tensor(0.0381, device='cuda:0')), ('types', tensor(0., device='cuda:0')), ('of', tensor(0.0468, device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('elements', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('to', tensor(0.0393, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('network', tensor(0., device='cuda:0')), (',', tensor(0.1089, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('conversion', tensor(0., device='cuda:0')), ('file', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('updated', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('adding', tensor(0., device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('required', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('converting', tensor(0., device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('message', tensor(0., device='cuda:0')), ('format', tensor(0., device='cuda:0')), ('of', tensor(0.0468, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('new', tensor(0.0381, device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('element', tensor(0., device='cuda:0')), ('type', tensor(0., device='cuda:0')), ('to', tensor(0.0393, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('format', tensor(0., device='cuda:0')), ('understood', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('system', tensor(0.0337, device='cuda:0'))]
idx: 628, example: Finnish electronics contract maker Incap Oyj said on January 3 , 2008 it sold its manufacturing facilities in Helsinki to local real estate company Sponda Oyj for 5.3 mln euro ( $ 7.8 mln ) , prediction: 2, correct_label: 2, class_scores: [0.23947525 0.3172621  0.44326258], word_scores: ['finnish:0.0', 'electronics:0.0', 'contract:7.1864019446366e-06', 'maker:0.0', 'inca:0.0', '##p:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'said:0.0', 'on:0.0', 'january:0.0', '3:0.0', ',:7.986737728060689e-06', '2008:0.0', 'it:3.3415778943890473e-06', 'sold:0.0', 'its:1.7191393908433383e-06', 'manufacturing:0.0', 'facilities:0.0', 'in:3.0217122457543155e-06', 'helsinki:0.0', 'to:2.886244146793615e-06', 'local:0.0', 'real:0.0', 'estate:0.0', 'company:6.695386673527537e-06', 'sp:0.0', '##onda:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'for:0.0', '5:0.0', '.:2.903296945078182e-06', '3:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '(:0.0', '$:0.0', '7:0.0', '.:2.903296945078182e-06', '8:0.0', 'ml:0.0', '##n:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('contract', tensor(0.1699, device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('incap', tensor(0., device='cuda:0')), ('oyj', tensor(0.0433, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), (',', tensor(0.1888, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('it', tensor(0.0790, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('its', tensor(0.0406, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0')), ('in', tensor(0.0714, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('to', tensor(0.0682, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('company', tensor(0.1582, device='cuda:0')), ('sponda', tensor(0., device='cuda:0')), ('oyj', tensor(0.0433, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('contract', tensor(0.1699, device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('incap', tensor(0., device='cuda:0')), ('oyj', tensor(0.0433, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), (',', tensor(0.1888, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('it', tensor(0.0790, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('its', tensor(0.0406, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0')), ('in', tensor(0.0714, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('to', tensor(0.0682, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('company', tensor(0.1582, device='cuda:0')), ('sponda', tensor(0., device='cuda:0')), ('oyj', tensor(0.0433, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0'))]
idx: 629, example: Germany 's innovational centers are united in focusing at companies , which aim at use of technologies and development of new kinds of activity , through supporting the beginner companies with the entire spectrum of their services , prediction: 2, correct_label: 2, class_scores: [0.16940583 0.33794734 0.49264684], word_scores: ['germany:0.0', "':0.0", 's:0.0', 'innovation:0.0', '##al:0.0', 'centers:0.0', 'are:0.0', 'united:0.0', 'in:3.0217122457543155e-06', 'focusing:0.0', 'at:0.0', 'companies:0.0', ',:7.986737728060689e-06', 'which:0.0', 'aim:0.0', 'at:0.0', 'use:0.0', 'of:3.4365734791208524e-06', 'technologies:0.0', 'and:0.0', 'development:0.0', 'of:3.4365734791208524e-06', 'new:2.798587502184091e-06', 'kinds:0.0', 'of:3.4365734791208524e-06', 'activity:0.0', ',:7.986737728060689e-06', 'through:0.0', 'supporting:0.0', 'the:6.3806996877247e-06', 'begin:0.0', '##ner:0.0', 'companies:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'entire:0.0', 'spectrum:0.0', 'of:3.4365734791208524e-06', 'their:0.0', 'services:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 630, example: The business idea of Budget Sport is to offer customers a wide range of high-quality sports equipment and clothing at low prices , the company said , prediction: 2, correct_label: 2, class_scores: [0.26674306 0.27746388 0.45579302], word_scores: ['the:6.3806996877247e-06', 'business:0.0', 'idea:0.0', 'of:3.4365734791208524e-06', 'budget:0.0', 'sport:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'offer:0.0', 'customers:0.0', 'a:8.62785782373976e-06', 'wide:0.0', 'range:0.0', 'of:3.4365734791208524e-06', 'high:0.0', '-:4.821180027647642e-06', 'quality:0.0', 'sports:0.0', 'equipment:0.0', 'and:0.0', 'clothing:0.0', 'at:0.0', 'low:0.0', 'prices:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1260, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('idea', tensor(0., device='cuda:0')), ('of', tensor(0.0678, device='cuda:0')), ('budget', tensor(0., device='cuda:0')), ('sport', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0570, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('a', tensor(0.1703, device='cuda:0')), ('wide', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0678, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('-', tensor(0.0952, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('clothing', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), (',', tensor(0.1577, device='cuda:0')), ('the', tensor(0.1260, device='cuda:0')), ('company', tensor(0.1322, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1260, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('idea', tensor(0., device='cuda:0')), ('of', tensor(0.0678, device='cuda:0')), ('budget', tensor(0., device='cuda:0')), ('sport', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.0570, device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('a', tensor(0.1703, device='cuda:0')), ('wide', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0678, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('-', tensor(0.0952, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('clothing', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), (',', tensor(0.1577, device='cuda:0')), ('the', tensor(0.1260, device='cuda:0')), ('company', tensor(0.1322, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 631, example: Alma Media holds 70 % of this company , the remaining shares being owned by the company 's key employees , prediction: 1, correct_label: 2, class_scores: [0.2803083  0.40977186 0.30991986], word_scores: ['alma:0.0', 'media:0.0', 'holds:0.0', '70:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'this:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'remaining:0.0', 'shares:0.0', 'being:0.0', 'owned:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'key:0.0', 'employees:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('holds', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('of', tensor(0.1113, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('company', tensor(0.2168, device='cuda:0')), (',', tensor(0.2586, device='cuda:0')), ('the', tensor(0.2066, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.2066, device='cuda:0'))],  word_scores_max: [('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('holds', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('of', tensor(0.1113, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('company', tensor(0.2168, device='cuda:0')), (',', tensor(0.2586, device='cuda:0')), ('the', tensor(0.2066, device='cuda:0')), ('remaining', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.2066, device='cuda:0'))]
idx: 632, example: Net sales in 2007 totalled EUR 329 million and the operating margin was over 19 % , prediction: 1, correct_label: 2, class_scores: [0.18573709 0.44589242 0.36837044], word_scores: ['net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', '2007:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '329:0.0', 'million:6.018835847498849e-06', 'and:0.0', 'the:6.3806996877247e-06', 'operating:0.0', 'margin:0.0', 'was:0.0', 'over:0.0', '19:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1959, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('329', tensor(0., device='cuda:0')), ('million', tensor(0.3903, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1959, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('329', tensor(0., device='cuda:0')), ('million', tensor(0.3903, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0'))]
idx: 633, example: `` After this purchase , Cramo will become the second largest rental services provider in the Latvian market , prediction: 2, correct_label: 1, class_scores: [0.12391783 0.37241247 0.5036697 ], word_scores: ['`:0.0', '`:0.0', 'after:0.0', 'this:0.0', 'purchase:0.0', ',:7.986737728060689e-06', 'cr:0.0', '##amo:0.0', 'will:4.073096533829812e-06', 'become:0.0', 'the:6.3806996877247e-06', 'second:0.0', 'largest:0.0', 'rental:0.0', 'services:0.0', 'provider:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'latvian:0.0', 'market:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('after', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), (',', tensor(0.2868, device='cuda:0')), ('cramo', tensor(0., device='cuda:0')), ('will', tensor(0.1463, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('the', tensor(0.2292, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('rental', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('in', tensor(0.1085, device='cuda:0')), ('the', tensor(0.2292, device='cuda:0')), ('latvian', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), (',', tensor(0.2868, device='cuda:0')), ('cramo', tensor(0., device='cuda:0')), ('will', tensor(0.1463, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('the', tensor(0.2292, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('largest', tensor(0., device='cuda:0')), ('rental', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('in', tensor(0.1085, device='cuda:0')), ('the', tensor(0.2292, device='cuda:0')), ('latvian', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))]
idx: 634, example: Kaupthing forecasts that Finnish-Swedish Stora Enso will close its mill in Reisholz , in Germany , prediction: 2, correct_label: 2, class_scores: [0.2454387  0.25265223 0.5019091 ], word_scores: ['ka:0.0', '##upt:0.0', '##hing:0.0', 'forecast:0.0', '##s:4.601175078278175e-06', 'that:1.5133816759771435e-06', 'finnish:0.0', '-:4.821180027647642e-06', 'swedish:0.0', 'st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'will:4.073096533829812e-06', 'close:0.0', 'its:1.7191393908433383e-06', 'mill:2.6564571271592285e-06', 'in:3.0217122457543155e-06', 'rei:0.0', '##sho:0.0', '##lz:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'germany:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kaupthing', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('that', tensor(0.0489, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('-', tensor(0.1557, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0693, device='cuda:0')), ('will', tensor(0.1316, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('its', tensor(0.0555, device='cuda:0')), ('mill', tensor(0.0858, device='cuda:0')), ('in', tensor(0.0976, device='cuda:0')), ('reisholz', tensor(0., device='cuda:0')), (',', tensor(0.2580, device='cuda:0')), ('in', tensor(0.0976, device='cuda:0')), ('germany', tensor(0., device='cuda:0'))],  word_scores_max: [('kaupthing', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('that', tensor(0.0489, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('-', tensor(0.1557, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0693, device='cuda:0')), ('will', tensor(0.1316, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('its', tensor(0.0555, device='cuda:0')), ('mill', tensor(0.0858, device='cuda:0')), ('in', tensor(0.0976, device='cuda:0')), ('reisholz', tensor(0., device='cuda:0')), (',', tensor(0.2580, device='cuda:0')), ('in', tensor(0.0976, device='cuda:0')), ('germany', tensor(0., device='cuda:0'))]
idx: 635, example: The subscriptions increase Cargotec 's share capital by 36,780 euros , prediction: 2, correct_label: 1, class_scores: [0.13699834 0.30800372 0.5549979 ], word_scores: ['the:6.3806996877247e-06', 'subscription:0.0', '##s:4.601175078278175e-06', 'increase:0.0', 'cargo:0.0', '##tec:0.0', "':0.0", 's:0.0', 'share:0.0', 'capital:0.0', 'by:0.0', '36:0.0', ',:7.986737728060689e-06', '780:0.0', 'euros:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0')), ('subscriptions', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('subscriptions', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0'))]
idx: 636, example: Finnish bank Pohjola Bank Plc HEL : POH1S said today that it will issue a EUR 40 million USD 51.2 m index-linked bond , Pohjola Tutkimuksen Tahdet VIII-2010 Pohjola Research Stars VIII-2010 , on October 27 , 2010 , prediction: 2, correct_label: 2, class_scores: [0.24252789 0.32086825 0.4366038 ], word_scores: ['finnish:0.0', 'bank:0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'bank:0.0', 'plc:0.0', 'he:0.0', '##l:0.0', '::0.0', 'po:0.0', '##h:0.0', '##1:0.0', 'eu:0.0', '##r:0.0', '40:0.0', 'million:6.018835847498849e-06', 'usd:0.0', '51:0.0', '.:2.903296945078182e-06', '2:0.0', 'm:0.0', 'index:0.0', '-:4.821180027647642e-06', 'linked:0.0', 'bond:0.0', ',:7.986737728060689e-06', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'tu:3.6499097859632457e-06', '##t:0.0', '##kim:0.0', '##uk:0.0', '##sen:0.0', 'ta:0.0', '##hd:0.0', '##et:0.0', 'viii:0.0', '-:4.821180027647642e-06', '2010:0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'research:0.0', 'stars:0.0', 'viii:0.0', '-:4.821180027647642e-06', '2010:0.0', ',:7.986737728060689e-06', 'on:0.0', 'october:0.0', '27:0.0', ',:7.986737728060689e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('poh1', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('million', tensor(0.1180, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('51', tensor(0., device='cuda:0')), ('.', tensor(0.0569, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('-', tensor(0.0945, device='cuda:0')), ('linked', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), (',', tensor(0.1566, device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('tutkimuksen', tensor(0.0716, device='cuda:0')), ('tahdet', tensor(0., device='cuda:0')), ('viii', tensor(0., device='cuda:0')), ('-', tensor(0.0945, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('stars', tensor(0., device='cuda:0')), ('viii', tensor(0., device='cuda:0')), ('-', tensor(0.0945, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1566, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), (',', tensor(0.1566, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('poh1', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('million', tensor(0.1180, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('51', tensor(0., device='cuda:0')), ('.', tensor(0.0569, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('-', tensor(0.0945, device='cuda:0')), ('linked', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), (',', tensor(0.1566, device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('tutkimuksen', tensor(0.0716, device='cuda:0')), ('tahdet', tensor(0., device='cuda:0')), ('viii', tensor(0., device='cuda:0')), ('-', tensor(0.0945, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('stars', tensor(0., device='cuda:0')), ('viii', tensor(0., device='cuda:0')), ('-', tensor(0.0945, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1566, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), (',', tensor(0.1566, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 637, example: Nurminen Logistics provides high-quality logistics services , such as railway transports , terminal services , forwarding , special and heavy transports and medical transports , prediction: 2, correct_label: 2, class_scores: [0.2390577 0.2996607 0.4612816], word_scores: ['nur:0.0', '##mine:0.0', '##n:0.0', 'logistics:0.0', 'provides:0.0', 'high:0.0', '-:4.821180027647642e-06', 'quality:0.0', 'logistics:0.0', 'services:0.0', ',:7.986737728060689e-06', 'such:0.0', 'as:0.0', 'railway:0.0', 'transports:0.0', ',:7.986737728060689e-06', 'terminal:0.0', 'services:0.0', ',:7.986737728060689e-06', 'forward:0.0', '##ing:0.0', ',:7.986737728060689e-06', 'special:0.0', 'and:0.0', 'heavy:0.0', 'transports:0.0', 'and:0.0', 'medical:0.0', 'transports:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nurminen', tensor(0., device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('-', tensor(0.1311, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('railway', tensor(0., device='cuda:0')), ('transports', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('terminal', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('forwarding', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('special', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('heavy', tensor(0., device='cuda:0')), ('transports', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('transports', tensor(0., device='cuda:0'))],  word_scores_max: [('nurminen', tensor(0., device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('-', tensor(0.1311, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('logistics', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('railway', tensor(0., device='cuda:0')), ('transports', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('terminal', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('forwarding', tensor(0., device='cuda:0')), (',', tensor(0.2172, device='cuda:0')), ('special', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('heavy', tensor(0., device='cuda:0')), ('transports', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('transports', tensor(0., device='cuda:0'))]
idx: 638, example: Welcome , prediction: 2, correct_label: 2, class_scores: [0.23761131 0.31861076 0.44377792], word_scores: ['welcome:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('welcome', tensor(nan, device='cuda:0'))],  word_scores_max: [('welcome', tensor(nan, device='cuda:0'))]
idx: 639, example: Metso Foundries Jyvaskyla Oy will discontinue production on this line by 30 September 2008 , the company said , prediction: 2, correct_label: 2, class_scores: [0.18608007 0.31190982 0.5020101 ], word_scores: ['mets:0.0', '##o:0.0', 'found:0.0', '##ries:0.0', 'j:0.0', '##y:1.832826342251792e-06', '##vas:0.0', '##ky:0.0', '##la:0.0', 'o:0.0', '##y:1.832826342251792e-06', 'will:4.073096533829812e-06', 'disco:0.0', '##nti:0.0', '##nu:0.0', '##e:0.0', 'production:0.0', 'on:0.0', 'this:0.0', 'line:0.0', 'by:0.0', '30:0.0', 'september:0.0', '2008:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('metso', tensor(0., device='cuda:0')), ('foundries', tensor(0., device='cuda:0')), ('jyvaskyla', tensor(0.0680, device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('will', tensor(0.1510, device='cuda:0')), ('discontinue', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), (',', tensor(0.2961, device='cuda:0')), ('the', tensor(0.2366, device='cuda:0')), ('company', tensor(0.2483, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('metso', tensor(0., device='cuda:0')), ('foundries', tensor(0., device='cuda:0')), ('jyvaskyla', tensor(0.0680, device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('will', tensor(0.1510, device='cuda:0')), ('discontinue', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), (',', tensor(0.2961, device='cuda:0')), ('the', tensor(0.2366, device='cuda:0')), ('company', tensor(0.2483, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 640, example: Layoffs will also take place at the Suomussalmi and Kuhmo plants this autumn as a result of codetermination negotiations held there , prediction: 2, correct_label: 0, class_scores: [0.14702277 0.363794   0.48918325], word_scores: ['lay:0.0', '##offs:0.0', 'will:4.073096533829812e-06', 'also:0.0', 'take:2.0325496734585613e-06', 'place:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'su:0.0', '##om:0.0', '##uss:0.0', '##al:0.0', '##mi:0.0', 'and:0.0', 'ku:0.0', '##hm:0.0', '##o:0.0', 'plants:0.0', 'this:0.0', 'autumn:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'result:0.0', 'of:3.4365734791208524e-06', 'code:0.0', '##ter:0.0', '##mina:0.0', '##tion:0.0', 'negotiations:0.0', 'held:0.0', 'there:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('layoffs', tensor(0., device='cuda:0')), ('will', tensor(0.1659, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('take', tensor(0.0828, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2599, device='cuda:0')), ('suomussalmi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kuhmo', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.3514, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.1400, device='cuda:0')), ('codetermination', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0'))],  word_scores_max: [('layoffs', tensor(0., device='cuda:0')), ('will', tensor(0.1659, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('take', tensor(0.0828, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2599, device='cuda:0')), ('suomussalmi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kuhmo', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.3514, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.1400, device='cuda:0')), ('codetermination', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0'))]
idx: 641, example: Pretax profit decreased to EUR 33.8 mn from EUR 40.8 mn in the fourth quarter of 2005 , prediction: 2, correct_label: 0, class_scores: [0.2088537  0.35053644 0.44060984], word_scores: ['pre:0.0', '##ta:0.0', '##x:0.0', 'profit:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '33:0.0', '.:2.903296945078182e-06', '8:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '40:0.0', '.:2.903296945078182e-06', '8:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'fourth:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.1109, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1727, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1161, device='cuda:0')), ('the', tensor(0.2452, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1320, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))],  word_scores_max: [('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.1109, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1727, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('.', tensor(0.1115, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1161, device='cuda:0')), ('the', tensor(0.2452, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1320, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))]
idx: 642, example: The groups 's turnover for the full fiscal year is expected to show a slight increase from the previous fiscal year , prediction: 1, correct_label: 1, class_scores: [0.19144899 0.4316008  0.37695023], word_scores: ['the:6.3806996877247e-06', 'groups:0.0', "':0.0", 's:0.0', 'turnover:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'full:3.0938992949813837e-06', 'fiscal:0.0', 'year:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'show:0.0', 'a:8.62785782373976e-06', 'slight:0.0', 'increase:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'previous:0.0', 'fiscal:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 643, example: - Tikkurila inspires you to color your life , prediction: 1, correct_label: 2, class_scores: [0.12247676 0.50578976 0.3717335 ], word_scores: ['-:4.821180027647642e-06', 'ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', 'inspire:0.0', '##s:4.601175078278175e-06', 'you:0.0', 'to:2.886244146793615e-06', 'color:0.0', 'your:0.0', 'life:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('-', tensor(0.6255, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('inspires', tensor(0., device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('color', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0'))],  word_scores_max: [('-', tensor(0.6255, device='cuda:0')), ('tikkurila', tensor(0., device='cuda:0')), ('inspires', tensor(0., device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('color', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0'))]
idx: 644, example: Compagnie de Financement Foncier - Is to issue a benchmark , 10 year covered deal in Euros , prediction: 2, correct_label: 2, class_scores: [0.16480874 0.41451257 0.42067873], word_scores: ['com:0.0', '##pa:0.0', '##gni:0.0', '##e:0.0', 'de:0.0', 'finance:0.0', '##ment:0.0', 'f:0.0', '##on:0.0', '##cier:0.0', '-:4.821180027647642e-06', 'is:0.0', 'to:2.886244146793615e-06', 'issue:0.0', 'a:8.62785782373976e-06', 'bench:0.0', '##mark:0.0', ',:7.986737728060689e-06', '10:0.0', 'year:0.0', 'covered:0.0', 'deal:0.0', 'in:3.0217122457543155e-06', 'euros:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('compagnie', tensor(0., device='cuda:0')), ('de', tensor(0., device='cuda:0')), ('financement', tensor(0., device='cuda:0')), ('foncier', tensor(0., device='cuda:0')), ('-', tensor(0.1763, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.1056, device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('a', tensor(0.3155, device='cuda:0')), ('benchmark', tensor(0., device='cuda:0')), (',', tensor(0.2921, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('covered', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('in', tensor(0.1105, device='cuda:0')), ('euros', tensor(0., device='cuda:0'))],  word_scores_max: [('compagnie', tensor(0., device='cuda:0')), ('de', tensor(0., device='cuda:0')), ('financement', tensor(0., device='cuda:0')), ('foncier', tensor(0., device='cuda:0')), ('-', tensor(0.1763, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.1056, device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('a', tensor(0.3155, device='cuda:0')), ('benchmark', tensor(0., device='cuda:0')), (',', tensor(0.2921, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('covered', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('in', tensor(0.1105, device='cuda:0')), ('euros', tensor(0., device='cuda:0'))]
idx: 645, example: That topped consensus forecasts for earnings of 0.21 euros a share , prediction: 2, correct_label: 1, class_scores: [0.10609028 0.3901275  0.5037822 ], word_scores: ['that:1.5133816759771435e-06', 'topped:0.0', 'consensus:0.0', 'forecast:0.0', '##s:4.601175078278175e-06', 'for:0.0', 'earnings:0.0', 'of:3.4365734791208524e-06', '0:0.0', '.:2.903296945078182e-06', '21:0.0', 'euros:0.0', 'a:8.62785782373976e-06', 'share:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('that', tensor(0.0918, device='cuda:0')), ('topped', tensor(0., device='cuda:0')), ('consensus', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('of', tensor(0.2085, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.1762, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('a', tensor(0.5235, device='cuda:0')), ('share', tensor(0., device='cuda:0'))],  word_scores_max: [('that', tensor(0.0918, device='cuda:0')), ('topped', tensor(0., device='cuda:0')), ('consensus', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('of', tensor(0.2085, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.1762, device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('a', tensor(0.5235, device='cuda:0')), ('share', tensor(0., device='cuda:0'))]
idx: 646, example: Sampo Housing Loan Bank , a unit of Finland 's Sampo Bank , has priced its EUR1bn ( USD1 .3 bn ) bond at 99.889 % , Reuters reported , prediction: 1, correct_label: 2, class_scores: [0.22137083 0.4359403  0.3426889 ], word_scores: ['sam:0.0', '##po:0.0', 'housing:0.0', 'loan:0.0', 'bank:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'unit:0.0', 'of:3.4365734791208524e-06', 'finland:4.096111752005527e-06', "':0.0", 's:0.0', 'sam:0.0', '##po:0.0', 'bank:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'priced:0.0', 'its:1.7191393908433383e-06', 'eu:0.0', '##r:0.0', '##1:0.0', '##bn:0.0', '(:0.0', 'usd:0.0', '##1:0.0', '.:2.903296945078182e-06', '3:0.0', 'bn:0.0', '):0.0', 'bond:0.0', 'at:0.0', '99:0.0', '.:2.903296945078182e-06', '88:0.0', '##9:0.0', '%:0.0', ',:7.986737728060689e-06', 'reuters:0.0', 'reported:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sampo', tensor(0., device='cuda:0')), ('housing', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.3983, device='cuda:0')), ('a', tensor(0.4303, device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.1714, device='cuda:0'))],  word_scores_max: [('sampo', tensor(0., device='cuda:0')), ('housing', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.3983, device='cuda:0')), ('a', tensor(0.4303, device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.1714, device='cuda:0'))]
idx: 647, example: Most of the permanent layoffs will be in the plywood and sawn timber sectors of the Finnish company 's operations at several domestic mills , where earlier this year it temporarily laid off some 1,200 workers to save costs , prediction: 2, correct_label: 0, class_scores: [0.18693213 0.3951715  0.41789633], word_scores: ['most:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'permanent:0.0', 'lay:0.0', '##offs:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'pl:0.0', '##ywood:0.0', 'and:0.0', 'saw:0.0', '##n:0.0', 'timber:0.0', 'sectors:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'operations:0.0', 'at:0.0', 'several:0.0', 'domestic:0.0', 'mills:0.0', ',:7.986737728060689e-06', 'where:0.0', 'earlier:0.0', 'this:0.0', 'year:0.0', 'it:3.3415778943890473e-06', 'temporarily:0.0', 'laid:0.0', 'off:0.0', 'some:0.0', '1:0.0', ',:7.986737728060689e-06', '200:0.0', 'workers:0.0', 'to:2.886244146793615e-06', 'save:0.0', 'costs:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('most', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('permanent', tensor(0., device='cuda:0')), ('layoffs', tensor(0., device='cuda:0')), ('will', tensor(0.1230, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('in', tensor(0.0913, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('plywood', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sawn', tensor(0., device='cuda:0')), ('timber', tensor(0., device='cuda:0')), ('sectors', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('finnish', tensor(0., device='cuda:0'))],  word_scores_max: [('most', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('permanent', tensor(0., device='cuda:0')), ('layoffs', tensor(0., device='cuda:0')), ('will', tensor(0.1230, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('in', tensor(0.0913, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('plywood', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sawn', tensor(0., device='cuda:0')), ('timber', tensor(0., device='cuda:0')), ('sectors', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('finnish', tensor(0., device='cuda:0'))]
idx: 648, example: `` We have come out with a decision which is based on our preliminary economic , operational and environmental findings , '' Karvinen said , prediction: 2, correct_label: 2, class_scores: [0.25743473 0.27108344 0.47148186], word_scores: ['`:0.0', '`:0.0', 'we:0.0', 'have:2.910326429628185e-06', 'come:0.0', 'out:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'decision:0.0', 'which:0.0', 'is:0.0', 'based:0.0', 'on:0.0', 'our:0.0', 'preliminary:0.0', 'economic:0.0', ',:7.986737728060689e-06', 'operational:0.0', 'and:0.0', 'environmental:0.0', 'findings:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'ka:0.0', '##r:0.0', '##vine:0.0', '##n:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('have', tensor(0.0903, device='cuda:0')), ('come', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('with', tensor(0.1468, device='cuda:0')), ('a', tensor(0.2676, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('preliminary', tensor(0., device='cuda:0')), ('economic', tensor(0., device='cuda:0')), (',', tensor(0.2477, device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('findings', tensor(0., device='cuda:0')), (',', tensor(0.2477, device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('have', tensor(0.0903, device='cuda:0')), ('come', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('with', tensor(0.1468, device='cuda:0')), ('a', tensor(0.2676, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('preliminary', tensor(0., device='cuda:0')), ('economic', tensor(0., device='cuda:0')), (',', tensor(0.2477, device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('environmental', tensor(0., device='cuda:0')), ('findings', tensor(0., device='cuda:0')), (',', tensor(0.2477, device='cuda:0'))]
idx: 649, example: The company said that it has started to investigate streamlining its operations in order to meet the tightening competition on the mobile phone charger market , prediction: 2, correct_label: 1, class_scores: [0.21050537 0.33876148 0.45073316], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'started:0.0', 'to:2.886244146793615e-06', 'investigate:0.0', 'stream:0.0', '##lining:0.0', 'its:1.7191393908433383e-06', 'operations:0.0', 'in:3.0217122457543155e-06', 'order:0.0', 'to:2.886244146793615e-06', 'meet:0.0', 'the:6.3806996877247e-06', 'tightening:0.0', 'competition:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'mobile:0.0', 'phone:0.0', 'charge:0.0', '##r:0.0', 'market:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1354, device='cuda:0')), ('company', tensor(0.1421, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0321, device='cuda:0')), ('it', tensor(0.0709, device='cuda:0')), ('has', tensor(0.1256, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('to', tensor(0.0612, device='cuda:0')), ('investigate', tensor(0., device='cuda:0')), ('streamlining', tensor(0., device='cuda:0')), ('its', tensor(0.0365, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0641, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('to', tensor(0.0612, device='cuda:0')), ('meet', tensor(0., device='cuda:0')), ('the', tensor(0.1354, device='cuda:0')), ('tightening', tensor(0., device='cuda:0')), ('competition', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1354, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('charger', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1354, device='cuda:0')), ('company', tensor(0.1421, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0321, device='cuda:0')), ('it', tensor(0.0709, device='cuda:0')), ('has', tensor(0.1256, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('to', tensor(0.0612, device='cuda:0')), ('investigate', tensor(0., device='cuda:0')), ('streamlining', tensor(0., device='cuda:0')), ('its', tensor(0.0365, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0641, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('to', tensor(0.0612, device='cuda:0')), ('meet', tensor(0., device='cuda:0')), ('the', tensor(0.1354, device='cuda:0')), ('tightening', tensor(0., device='cuda:0')), ('competition', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1354, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phone', tensor(0., device='cuda:0')), ('charger', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))]
idx: 650, example: The tightened competition situation in the production automation market has affected net sales during 2006 , Cencorp said , prediction: 2, correct_label: 0, class_scores: [0.21854818 0.2773136  0.5041382 ], word_scores: ['the:6.3806996877247e-06', 'tightened:0.0', 'competition:0.0', 'situation:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'production:0.0', 'automation:0.0', 'market:0.0', 'has:5.9214244174654596e-06', 'affected:0.0', 'net:0.0', 'sales:0.0', 'during:0.0', '2006:0.0', ',:7.986737728060689e-06', 'ce:0.0', '##nco:0.0', '##rp:0.0', 'said:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2149, device='cuda:0')), ('tightened', tensor(0., device='cuda:0')), ('competition', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('in', tensor(0.1018, device='cuda:0')), ('the', tensor(0.2149, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('automation', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('has', tensor(0.1994, device='cuda:0')), ('affected', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2690, device='cuda:0')), ('cencorp', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2149, device='cuda:0')), ('tightened', tensor(0., device='cuda:0')), ('competition', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('in', tensor(0.1018, device='cuda:0')), ('the', tensor(0.2149, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('automation', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('has', tensor(0.1994, device='cuda:0')), ('affected', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2690, device='cuda:0')), ('cencorp', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 651, example: Dirk Jones , head of Financial Institutions Client Sales Management , GTS , Citigroup , Inc , said , ` Citi is extremely pleased to be providing global custody services to Pohjola Group Bank , prediction: 2, correct_label: 1, class_scores: [0.15586667 0.3382402  0.5058932 ], word_scores: ['dirk:0.0', 'jones:0.0', ',:7.986737728060689e-06', 'head:0.0', 'of:3.4365734791208524e-06', 'financial:0.0', 'institutions:0.0', 'client:0.0', 'sales:0.0', 'management:0.0', ',:7.986737728060689e-06', 'gt:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'ci:0.0', '##ti:2.5915114747476764e-06', '##group:0.0', ',:7.986737728060689e-06', 'inc:0.0', ',:7.986737728060689e-06', 'said:0.0', ',:7.986737728060689e-06', '`:0.0', 'ci:0.0', '##ti:2.5915114747476764e-06', 'is:0.0', 'extremely:0.0', 'pleased:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'providing:0.0', 'global:0.0', 'custody:0.0', 'services:0.0', 'to:2.886244146793615e-06', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'group:0.0', 'bank:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('dirk', tensor(0., device='cuda:0')), ('jones', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('institutions', tensor(0., device='cuda:0')), ('client', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('gts', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('citigroup', tensor(0.0434, device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('said', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('citi', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('extremely', tensor(0., device='cuda:0')), ('pleased', tensor(0., device='cuda:0')), ('to', tensor(0.0483, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('custody', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('to', tensor(0.0483, device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0'))],  word_scores_max: [('dirk', tensor(0., device='cuda:0')), ('jones', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('of', tensor(0.0575, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('institutions', tensor(0., device='cuda:0')), ('client', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('gts', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('citigroup', tensor(0.0434, device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('said', tensor(0., device='cuda:0')), (',', tensor(0.1337, device='cuda:0')), ('citi', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('extremely', tensor(0., device='cuda:0')), ('pleased', tensor(0., device='cuda:0')), ('to', tensor(0.0483, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('providing', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('custody', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('to', tensor(0.0483, device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0'))]
idx: 652, example: The objective is that trading in the shares will commence on May 2 , 2007 , prediction: 2, correct_label: 2, class_scores: [0.18080334 0.37947565 0.43972096], word_scores: ['the:6.3806996877247e-06', 'objective:0.0', 'is:0.0', 'that:1.5133816759771435e-06', 'trading:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'shares:0.0', 'will:4.073096533829812e-06', 'commence:0.0', 'on:0.0', 'may:0.0', '2:0.0', ',:7.986737728060689e-06', '2007:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2174, device='cuda:0')), ('objective', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0516, device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('in', tensor(0.1029, device='cuda:0')), ('the', tensor(0.2174, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('will', tensor(0.1387, device='cuda:0')), ('commence', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.2721, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2174, device='cuda:0')), ('objective', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0516, device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('in', tensor(0.1029, device='cuda:0')), ('the', tensor(0.2174, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('will', tensor(0.1387, device='cuda:0')), ('commence', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.2721, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 653, example: Sales at the Tiimari business went down by 8 % to EUR 11.8 million , while Gallerix stores saw 29 % growth to EUR 2 million , prediction: 2, correct_label: 0, class_scores: [0.15404108 0.4140536  0.4319054 ], word_scores: ['sales:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'ti:0.0', '##ima:0.0', '##ri:0.0', 'business:0.0', 'went:0.0', 'down:0.0', 'by:0.0', '8:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '11:0.0', '.:2.903296945078182e-06', '8:0.0', 'million:6.018835847498849e-06', ',:7.986737728060689e-06', 'while:0.0', 'gall:0.0', '##eri:0.0', '##x:0.0', 'stores:0.0', 'saw:0.0', '29:0.0', '%:0.0', 'growth:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '2:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sales', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('tiimari', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('to', tensor(0.0823, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0828, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('million', tensor(0.1716, device='cuda:0')), (',', tensor(0.2277, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('gallerix', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0')), ('saw', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('to', tensor(0.0823, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('million', tensor(0.1716, device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('tiimari', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('to', tensor(0.0823, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0828, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('million', tensor(0.1716, device='cuda:0')), (',', tensor(0.2277, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('gallerix', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0')), ('saw', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('to', tensor(0.0823, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('million', tensor(0.1716, device='cuda:0'))]
idx: 654, example: The chilled meat products category led the meat , fish and poultry market in Finland , accounting for a share of 31.4 % , prediction: 2, correct_label: 2, class_scores: [0.26247412 0.34409577 0.39343014], word_scores: ['the:6.3806996877247e-06', 'chilled:0.0', 'meat:0.0', 'products:0.0', 'category:0.0', 'led:0.0', 'the:6.3806996877247e-06', 'meat:0.0', ',:7.986737728060689e-06', 'fish:0.0', 'and:0.0', 'poultry:0.0', 'market:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'accounting:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'share:0.0', 'of:3.4365734791208524e-06', '31:0.0', '.:2.903296945078182e-06', '4:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1256, device='cuda:0')), ('chilled', tensor(0., device='cuda:0')), ('meat', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('category', tensor(0., device='cuda:0')), ('led', tensor(0., device='cuda:0')), ('the', tensor(0.1256, device='cuda:0')), ('meat', tensor(0., device='cuda:0')), (',', tensor(0.1572, device='cuda:0')), ('fish', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('poultry', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0595, device='cuda:0')), ('finland', tensor(0.0806, device='cuda:0')), (',', tensor(0.1572, device='cuda:0')), ('accounting', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1698, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.0676, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('.', tensor(0.0571, device='cuda:0')), ('4', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1256, device='cuda:0')), ('chilled', tensor(0., device='cuda:0')), ('meat', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('category', tensor(0., device='cuda:0')), ('led', tensor(0., device='cuda:0')), ('the', tensor(0.1256, device='cuda:0')), ('meat', tensor(0., device='cuda:0')), (',', tensor(0.1572, device='cuda:0')), ('fish', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('poultry', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0595, device='cuda:0')), ('finland', tensor(0.0806, device='cuda:0')), (',', tensor(0.1572, device='cuda:0')), ('accounting', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1698, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.0676, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('.', tensor(0.0571, device='cuda:0')), ('4', tensor(0., device='cuda:0'))]
idx: 655, example: Delivery is expected to take place later this month , prediction: 1, correct_label: 2, class_scores: [0.23112348 0.4364189  0.33245775], word_scores: ['delivery:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'take:2.0325496734585613e-06', 'place:0.0', 'later:0.0', 'this:0.0', 'month:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('delivery', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.5868, device='cuda:0')), ('take', tensor(0.4132, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('later', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0'))],  word_scores_max: [('delivery', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.5868, device='cuda:0')), ('take', tensor(0.4132, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('later', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0'))]
idx: 656, example: Konecranes has previously communicated an estimated reduction of about 1,600 employees on group level in 2009 , prediction: 1, correct_label: 0, class_scores: [0.25657687 0.3888156  0.35460752], word_scores: ['ko:5.9404255807748996e-06', '##ne:8.183636964531615e-06', '##cr:6.230764483916573e-06', '##ane:6.42778195469873e-06', '##s:4.601175078278175e-06', 'has:5.9214244174654596e-06', 'previously:0.0', 'communicated:0.0', 'an:0.0', 'estimated:0.0', 'reduction:0.0', 'of:3.4365734791208524e-06', 'about:0.0', '1:0.0', ',:7.986737728060689e-06', '600:0.0', 'employees:0.0', 'on:0.0', 'group:0.0', 'level:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('konecranes', tensor(0.2866, device='cuda:0')), ('has', tensor(0.2074, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('communicated', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('reduction', tensor(0., device='cuda:0')), ('of', tensor(0.1204, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.2797, device='cuda:0')), ('600', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('in', tensor(0.1058, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('konecranes', tensor(0.5680, device='cuda:0')), ('has', tensor(0.1256, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('communicated', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('reduction', tensor(0., device='cuda:0')), ('of', tensor(0.0729, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1694, device='cuda:0')), ('600', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('in', tensor(0.0641, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 657, example: The connectivity unit has more than 100 e-invoice customers , and the number of annual transactions stands at nearly one million , prediction: 2, correct_label: 2, class_scores: [0.24052161 0.36227596 0.3972024 ], word_scores: ['the:6.3806996877247e-06', 'connectivity:0.0', 'unit:0.0', 'has:5.9214244174654596e-06', 'more:0.0', 'than:0.0', '100:0.0', 'e:0.0', '-:4.821180027647642e-06', 'in:3.0217122457543155e-06', '##vo:0.0', '##ice:0.0', 'customers:0.0', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'annual:0.0', 'transactions:0.0', 'stands:0.0', 'at:0.0', 'nearly:0.0', 'one:4.584404450724833e-06', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1314, device='cuda:0')), ('connectivity', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('has', tensor(0.1220, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.0993, device='cuda:0')), ('invoice', tensor(0.0622, device='cuda:0')), ('customers', tensor(0., device='cuda:0')), (',', tensor(0.1645, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1314, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0708, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('transactions', tensor(0., device='cuda:0')), ('stands', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('nearly', tensor(0., device='cuda:0')), ('one', tensor(0.0944, device='cuda:0')), ('million', tensor(0.1240, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1314, device='cuda:0')), ('connectivity', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('has', tensor(0.1220, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.0993, device='cuda:0')), ('invoice', tensor(0.0622, device='cuda:0')), ('customers', tensor(0., device='cuda:0')), (',', tensor(0.1645, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1314, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0708, device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('transactions', tensor(0., device='cuda:0')), ('stands', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('nearly', tensor(0., device='cuda:0')), ('one', tensor(0.0944, device='cuda:0')), ('million', tensor(0.1240, device='cuda:0'))]
idx: 658, example: Finnish house manufacturers are targeting the strongly growing one-family house market in Russia , prediction: 2, correct_label: 2, class_scores: [0.14536889 0.40640786 0.44822323], word_scores: ['finnish:0.0', 'house:0.0', 'manufacturers:0.0', 'are:0.0', 'targeting:0.0', 'the:6.3806996877247e-06', 'strongly:0.0', 'growing:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'family:0.0', 'house:0.0', 'market:0.0', 'in:3.0217122457543155e-06', 'russia:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('manufacturers', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('targeting', tensor(0., device='cuda:0')), ('the', tensor(0.3393, device='cuda:0')), ('strongly', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('one', tensor(0.2437, device='cuda:0')), ('-', tensor(0.2563, device='cuda:0')), ('family', tensor(0., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.1607, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('manufacturers', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('targeting', tensor(0., device='cuda:0')), ('the', tensor(0.3393, device='cuda:0')), ('strongly', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('one', tensor(0.2437, device='cuda:0')), ('-', tensor(0.2563, device='cuda:0')), ('family', tensor(0., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.1607, device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 659, example: No changes in media activity were seen in October compared with September , prediction: 1, correct_label: 2, class_scores: [0.17310588 0.44393885 0.38295528], word_scores: ['no:0.0', 'changes:0.0', 'in:3.0217122457543155e-06', 'media:0.0', 'activity:0.0', 'were:0.0', 'seen:0.0', 'in:3.0217122457543155e-06', 'october:0.0', 'compared:0.0', 'with:4.733654350275174e-06', 'september:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('no', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('in', tensor(0.2804, device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('activity', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('seen', tensor(0., device='cuda:0')), ('in', tensor(0.2804, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.4392, device='cuda:0')), ('september', tensor(0., device='cuda:0'))],  word_scores_max: [('no', tensor(0., device='cuda:0')), ('changes', tensor(0., device='cuda:0')), ('in', tensor(0.2804, device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('activity', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('seen', tensor(0., device='cuda:0')), ('in', tensor(0.2804, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.4392, device='cuda:0')), ('september', tensor(0., device='cuda:0'))]
idx: 660, example: Unit costs for flight operations fell by 6.4 percent , prediction: 1, correct_label: 1, class_scores: [0.21251392 0.44776487 0.33972114], word_scores: ['unit:0.0', 'costs:0.0', 'for:0.0', 'flight:0.0', 'operations:0.0', 'fell:0.0', 'by:0.0', '6:0.0', '.:2.903296945078182e-06', '4:0.0', 'percent:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('unit', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('flight', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0'))],  word_scores_max: [('unit', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('flight', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0'))]
idx: 661, example: Sales for the Department Store Division increased by 15 % and sales for the clothing store subsidiary Seppala increased by 8 % Meanwhile sales for Hobby Hall decreased by 12 % , prediction: 2, correct_label: 1, class_scores: [0.23077494 0.35049513 0.4187299 ], word_scores: ['sales:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'department:0.0', 'store:0.0', 'division:0.0', 'increased:0.0', 'by:0.0', '15:0.0', '%:0.0', 'and:0.0', 'sales:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'clothing:0.0', 'store:0.0', 'subsidiary:0.0', 'sep:0.0', '##pala:0.0', 'increased:0.0', 'by:0.0', '8:0.0', '%:0.0', 'meanwhile:0.0', 'sales:0.0', 'for:0.0', 'hobby:0.0', 'hall:0.0', 'decreased:0.0', 'by:0.0', '12:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('department', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('clothing', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('seppala', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('meanwhile', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('hobby', tensor(0., device='cuda:0')), ('hall', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('department', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('clothing', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('seppala', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('meanwhile', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('hobby', tensor(0., device='cuda:0')), ('hall', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0'))]
idx: 662, example: L&T is operative in Finland , Sweden , Latvia , Russia and Norway , prediction: 2, correct_label: 2, class_scores: [0.23778051 0.28986832 0.4723511 ], word_scores: ['l:0.0', '&:0.0', 't:0.0', 'is:0.0', 'operative:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'sweden:0.0', ',:7.986737728060689e-06', 'latvia:0.0', ',:7.986737728060689e-06', 'russia:0.0', 'and:0.0', 'norway:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('l', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('operative', tensor(0., device='cuda:0')), ('in', tensor(0.0972, device='cuda:0')), ('finland', tensor(0.1318, device='cuda:0')), (',', tensor(0.2570, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), (',', tensor(0.2570, device='cuda:0')), ('latvia', tensor(0., device='cuda:0')), (',', tensor(0.2570, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('norway', tensor(0., device='cuda:0'))],  word_scores_max: [('l', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('operative', tensor(0., device='cuda:0')), ('in', tensor(0.0972, device='cuda:0')), ('finland', tensor(0.1318, device='cuda:0')), (',', tensor(0.2570, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), (',', tensor(0.2570, device='cuda:0')), ('latvia', tensor(0., device='cuda:0')), (',', tensor(0.2570, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('norway', tensor(0., device='cuda:0'))]
idx: 663, example: Honkarakenne also decided yesterday to sell 88,500 of its B-series shares to key staff members for EUR 2.90 per share , prediction: 2, correct_label: 2, class_scores: [0.32960844 0.30387953 0.36651206], word_scores: ['hon:0.0', '##kara:0.0', '##ken:0.0', '##ne:8.183636964531615e-06', 'also:0.0', 'decided:0.0', 'yesterday:0.0', 'to:2.886244146793615e-06', 'sell:0.0', '88:0.0', ',:7.986737728060689e-06', '500:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'b:0.0', '-:4.821180027647642e-06', 'series:0.0', 'shares:0.0', 'to:2.886244146793615e-06', 'key:0.0', 'staff:0.0', 'members:0.0', 'for:0.0', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '90:0.0', 'per:0.0', 'share:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('honkarakenne', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('to', tensor(0.1083, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('88', tensor(0., device='cuda:0')), (',', tensor(0.2998, device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('of', tensor(0.1290, device='cuda:0')), ('its', tensor(0.0645, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('-', tensor(0.1810, device='cuda:0')), ('series', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('to', tensor(0.1083, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1090, device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))],  word_scores_max: [('honkarakenne', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('to', tensor(0.1083, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('88', tensor(0., device='cuda:0')), (',', tensor(0.2998, device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('of', tensor(0.1290, device='cuda:0')), ('its', tensor(0.0645, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('-', tensor(0.1810, device='cuda:0')), ('series', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('to', tensor(0.1083, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1090, device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))]
idx: 664, example: The company 's transportation business is conducted through Florida Rock & Tank Lines , which is a Southeastern transportation company concentrating in the hauling by motor carrier of liquid and dry bulk commodities , prediction: 1, correct_label: 2, class_scores: [0.2080632  0.43235928 0.35957754], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'transportation:0.0', 'business:0.0', 'is:0.0', 'conducted:0.0', 'through:0.0', 'florida:0.0', 'rock:0.0', '&:0.0', 'tank:0.0', 'lines:0.0', ',:7.986737728060689e-06', 'which:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'southeastern:0.0', 'transportation:0.0', 'company:6.695386673527537e-06', 'concentrating:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'hauling:0.0', 'by:0.0', 'motor:0.0', 'carrier:0.0', 'of:3.4365734791208524e-06', 'liquid:0.0', 'and:0.0', 'dry:0.0', 'bulk:0.0', 'commodities:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 665, example: Operating profit rose to EUR 13.5 mn from EUR 9.7 mn in the corresponding period in 2006 , prediction: 2, correct_label: 1, class_scores: [0.24799143 0.3519451  0.4000634 ], word_scores: ['operating:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '13:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '9:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.1127, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1755, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('the', tensor(0.2491, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.1127, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1755, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('the', tensor(0.2491, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 666, example: The companies expect the first orders already in 2011 , prediction: 2, correct_label: 1, class_scores: [0.21299261 0.34169132 0.44531605], word_scores: ['the:6.3806996877247e-06', 'companies:0.0', 'expect:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'orders:0.0', 'already:0.0', 'in:3.0217122457543155e-06', '2011:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4043, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('expect', tensor(0., device='cuda:0')), ('the', tensor(0.4043, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('in', tensor(0.1915, device='cuda:0')), ('2011', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4043, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('expect', tensor(0., device='cuda:0')), ('the', tensor(0.4043, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('in', tensor(0.1915, device='cuda:0')), ('2011', tensor(0., device='cuda:0'))]
idx: 667, example: Jobs will not be transferred from Finland , however , prediction: 1, correct_label: 1, class_scores: [0.16717315 0.43659168 0.39623517], word_scores: ['jobs:0.0', 'will:4.073096533829812e-06', 'not:0.0', 'be:0.0', 'transferred:0.0', 'from:4.495178018260049e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'however:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('jobs', tensor(0., device='cuda:0')), ('will', tensor(0.1972, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('transferred', tensor(0., device='cuda:0')), ('from', tensor(0.2177, device='cuda:0')), ('finland', tensor(0.1983, device='cuda:0')), (',', tensor(0.3867, device='cuda:0')), ('however', tensor(0., device='cuda:0'))],  word_scores_max: [('jobs', tensor(0., device='cuda:0')), ('will', tensor(0.1972, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('transferred', tensor(0., device='cuda:0')), ('from', tensor(0.2177, device='cuda:0')), ('finland', tensor(0.1983, device='cuda:0')), (',', tensor(0.3867, device='cuda:0')), ('however', tensor(0., device='cuda:0'))]
idx: 668, example: Profit for the period totaled EUR 39.4 mn , up from EUR 33.9 mn in the corresponding period in 2006 , prediction: 1, correct_label: 1, class_scores: [0.17606947 0.45164716 0.37228337], word_scores: ['profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'period:0.0', 'totaled:0.0', 'eu:0.0', '##r:0.0', '39:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '33:0.0', '.:2.903296945078182e-06', '9:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1653, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('39', tensor(0., device='cuda:0')), ('.', tensor(0.0752, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2070, device='cuda:0')), ('up', tensor(0.0388, device='cuda:0')), ('from', tensor(0.1165, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('.', tensor(0.0752, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0783, device='cuda:0')), ('the', tensor(0.1653, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0783, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1653, device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('39', tensor(0., device='cuda:0')), ('.', tensor(0.0752, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2070, device='cuda:0')), ('up', tensor(0.0388, device='cuda:0')), ('from', tensor(0.1165, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('33', tensor(0., device='cuda:0')), ('.', tensor(0.0752, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0783, device='cuda:0')), ('the', tensor(0.1653, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0783, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 669, example: The company is now withdrawing the second part , EUR 7.2 mn , of the investment commitment , prediction: 2, correct_label: 2, class_scores: [0.18189962 0.35808206 0.46001837], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'now:0.0', 'withdrawing:0.0', 'the:6.3806996877247e-06', 'second:0.0', 'part:0.0', ',:7.986737728060689e-06', 'eu:0.0', '##r:0.0', '7:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'investment:0.0', 'commitment:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1325, device='cuda:0')), ('company', tensor(0.1391, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('withdrawing', tensor(0., device='cuda:0')), ('the', tensor(0.1325, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), (',', tensor(0.1659, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0603, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1659, device='cuda:0')), ('of', tensor(0.0714, device='cuda:0')), ('the', tensor(0.1325, device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1325, device='cuda:0')), ('company', tensor(0.1391, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('withdrawing', tensor(0., device='cuda:0')), ('the', tensor(0.1325, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), (',', tensor(0.1659, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0603, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1659, device='cuda:0')), ('of', tensor(0.0714, device='cuda:0')), ('the', tensor(0.1325, device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0'))]
idx: 670, example: Nokia Siemens Networks has struggled to make a profit in the past two years , prediction: 2, correct_label: 0, class_scores: [0.13270655 0.36927596 0.49801758], word_scores: ['nokia:0.0', 'siemens:0.0', 'networks:0.0', 'has:5.9214244174654596e-06', 'struggled:0.0', 'to:2.886244146793615e-06', 'make:0.0', 'a:8.62785782373976e-06', 'profit:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'past:0.0', 'two:0.0', 'years:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('siemens', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('has', tensor(0.2206, device='cuda:0')), ('struggled', tensor(0., device='cuda:0')), ('to', tensor(0.1075, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('a', tensor(0.3215, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('in', tensor(0.1126, device='cuda:0')), ('the', tensor(0.2377, device='cuda:0')), ('past', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('siemens', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('has', tensor(0.2206, device='cuda:0')), ('struggled', tensor(0., device='cuda:0')), ('to', tensor(0.1075, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('a', tensor(0.3215, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('in', tensor(0.1126, device='cuda:0')), ('the', tensor(0.2377, device='cuda:0')), ('past', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0'))]
idx: 671, example: The Finnish government announced Wednesday that it sold a 32 percent stake in chemicals and fertilizer group Kemira Oyj for (  x20ac ) 655.6 million ( $ 890US million ) , sending the company 's share price up 6 percent , prediction: 2, correct_label: 1, class_scores: [0.20557354 0.351614   0.44281244], word_scores: ['the:6.3806996877247e-06', 'finnish:0.0', 'government:0.0', 'announced:0.0', 'wednesday:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'sold:0.0', 'a:8.62785782373976e-06', '32:0.0', 'percent:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'chemicals:0.0', 'and:0.0', 'fe:0.0', '##rti:0.0', '##lizer:0.0', 'group:0.0', 'ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'for:0.0', '(:0.0', 'x:0.0', '##20:0.0', '##ac:0.0', '):0.0', '65:0.0', '##5:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', '(:0.0', '$:0.0', '89:0.0', '##0:0.0', '##us:0.0', 'million:6.018835847498849e-06', '):0.0', ',:7.986737728060689e-06', 'sending:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'share:0.0', 'price:0.0', 'up:1.4959460941099678e-06', '6:0.0', 'percent:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1181, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('wednesday', tensor(0., device='cuda:0')), ('that', tensor(0.0280, device='cuda:0')), ('it', tensor(0.0619, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('a', tensor(0.1597, device='cuda:0')), ('32', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0559, device='cuda:0')), ('chemicals', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fertilizer', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('kemira', tensor(0., device='cuda:0')), ('oyj', tensor(0.0339, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('655', tensor(0., device='cuda:0')), ('.', tensor(0.0537, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1114, device='cuda:0')), ('890us', tensor(0., device='cuda:0')), ('million', tensor(0.1114, device='cuda:0')), (',', tensor(0.1478, device='cuda:0')), ('sending', tensor(0., device='cuda:0')), ('the', tensor(0.1181, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1181, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('wednesday', tensor(0., device='cuda:0')), ('that', tensor(0.0280, device='cuda:0')), ('it', tensor(0.0619, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('a', tensor(0.1597, device='cuda:0')), ('32', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.0559, device='cuda:0')), ('chemicals', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fertilizer', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('kemira', tensor(0., device='cuda:0')), ('oyj', tensor(0.0339, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('655', tensor(0., device='cuda:0')), ('.', tensor(0.0537, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1114, device='cuda:0')), ('890us', tensor(0., device='cuda:0')), ('million', tensor(0.1114, device='cuda:0')), (',', tensor(0.1478, device='cuda:0')), ('sending', tensor(0., device='cuda:0')), ('the', tensor(0.1181, device='cuda:0'))]
idx: 672, example: The combined value of the orders is EUR 45mn , prediction: 2, correct_label: 2, class_scores: [0.2039402  0.3980041  0.39805567], word_scores: ['the:6.3806996877247e-06', 'combined:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'orders:0.0', 'is:0.0', 'eu:0.0', '##r:0.0', '45:4.878051640844205e-06', '##m:0.0', '##n:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3027, device='cuda:0')), ('combined', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1631, device='cuda:0')), ('the', tensor(0.3027, device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('45mn', tensor(0.2315, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3027, device='cuda:0')), ('combined', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1631, device='cuda:0')), ('the', tensor(0.3027, device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('45mn', tensor(0.2315, device='cuda:0'))]
idx: 673, example: Stora Enso 's target has been cut to EUR 4.85 from EUR 5.55 and Holmen 's target -- to SEK 135 from SEK 150 , prediction: 1, correct_label: 0, class_scores: [0.24054505 0.3867073  0.3727477 ], word_scores: ['st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', "':0.0", 's:0.0', 'target:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'cut:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '4:0.0', '.:2.903296945078182e-06', '85:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '5:0.0', '.:2.903296945078182e-06', '55:0.0', 'and:0.0', 'holm:0.0', '##en:0.0', "':0.0", 's:0.0', 'target:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'to:2.886244146793615e-06', 'se:0.0', '##k:0.0', '135:0.0', 'from:4.495178018260049e-06', 'se:0.0', '##k:0.0', '150:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stora', tensor(nan, device='cuda:0'))],  word_scores_max: [('stora', tensor(nan, device='cuda:0'))]
idx: 674, example: `` After a long , unprofitable period the Food Division posted a profitable result , which speaks of a healthier cost structure and a new approach in business operations , '' Rihko said , prediction: 2, correct_label: 1, class_scores: [0.18047889 0.30046088 0.5190603 ], word_scores: ['`:0.0', '`:0.0', 'after:0.0', 'a:8.62785782373976e-06', 'long:0.0', ',:7.986737728060689e-06', 'un:0.0', '##pro:0.0', '##fi:0.0', '##table:0.0', 'period:0.0', 'the:6.3806996877247e-06', 'food:0.0', 'division:0.0', 'posted:0.0', 'a:8.62785782373976e-06', 'profitable:0.0', 'result:0.0', ',:7.986737728060689e-06', 'which:0.0', 'speaks:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'health:0.0', '##ier:0.0', 'cost:0.0', 'structure:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'approach:0.0', 'in:3.0217122457543155e-06', 'business:0.0', 'operations:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'ri:0.0', '##h:0.0', '##ko:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('long', tensor(0., device='cuda:0')), (',', tensor(0.1078, device='cuda:0')), ('unprofitable', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('the', tensor(0.0861, device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1078, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('speaks', tensor(0., device='cuda:0')), ('of', tensor(0.0464, device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('healthier', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('structure', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('new', tensor(0.0378, device='cuda:0')), ('approach', tensor(0., device='cuda:0')), ('in', tensor(0.0408, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.1078, device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('long', tensor(0., device='cuda:0')), (',', tensor(0.1078, device='cuda:0')), ('unprofitable', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('the', tensor(0.0861, device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), (',', tensor(0.1078, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('speaks', tensor(0., device='cuda:0')), ('of', tensor(0.0464, device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('healthier', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('structure', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.1164, device='cuda:0')), ('new', tensor(0.0378, device='cuda:0')), ('approach', tensor(0., device='cuda:0')), ('in', tensor(0.0408, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.1078, device='cuda:0'))]
idx: 675, example: Consolidated pretax profit decreased by 69.2 % to EUR 41.0 mn from EUR 133.1 mn in 2007 , prediction: 2, correct_label: 0, class_scores: [0.19679657 0.39483115 0.40837225], word_scores: ['consolidated:0.0', 'pre:0.0', '##ta:0.0', '##x:0.0', 'profit:0.0', 'decreased:0.0', 'by:0.0', '69:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '41:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '133:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('consolidated', tensor(0., device='cuda:0')), ('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('69', tensor(0., device='cuda:0')), ('.', tensor(0.1519, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('to', tensor(0.1510, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('.', tensor(0.1519, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.2352, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('133', tensor(0., device='cuda:0')), ('.', tensor(0.1519, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1581, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('consolidated', tensor(0., device='cuda:0')), ('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('69', tensor(0., device='cuda:0')), ('.', tensor(0.1519, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('to', tensor(0.1510, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('.', tensor(0.1519, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.2352, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('133', tensor(0., device='cuda:0')), ('.', tensor(0.1519, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1581, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 676, example: Finnish messaging solutions developer Tecnomen Corporation ( OMX Helsinki : TEM1V ) said on Thursday ( 11 December ) that it has received an expansion order for its Convergent Charging solution in Latin America , prediction: 2, correct_label: 1, class_scores: [0.19393164 0.35204065 0.45402777], word_scores: ['finnish:0.0', 'messaging:0.0', 'solutions:0.0', 'developer:0.0', 'te:0.0', '##c:0.0', '##no:0.0', '##men:0.0', 'corporation:0.0', '(:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'te:0.0', '##m:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'on:0.0', 'thursday:0.0', '(:0.0', '11:0.0', 'december:0.0', '):0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'received:0.0', 'an:0.0', 'expansion:0.0', 'order:0.0', 'for:0.0', 'its:1.7191393908433383e-06', 'converge:0.0', '##nt:0.0', 'charging:0.0', 'solution:0.0', 'in:3.0217122457543155e-06', 'latin:0.0', 'america:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('messaging', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('tecnomen', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('tem1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursday', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('that', tensor(0.0975, device='cuda:0')), ('it', tensor(0.2153, device='cuda:0')), ('has', tensor(0.3816, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.1108, device='cuda:0')), ('convergent', tensor(0., device='cuda:0')), ('charging', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('in', tensor(0.1947, device='cuda:0')), ('latin', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('messaging', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('tecnomen', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('tem1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursday', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('that', tensor(0.0975, device='cuda:0')), ('it', tensor(0.2153, device='cuda:0')), ('has', tensor(0.3816, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('its', tensor(0.1108, device='cuda:0')), ('convergent', tensor(0., device='cuda:0')), ('charging', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('in', tensor(0.1947, device='cuda:0')), ('latin', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0'))]
idx: 677, example: The corresponding increase in the share capital , in total EUR 300,00 was registered in the Finnish Trade Register on May 8 , 2008 , prediction: 2, correct_label: 2, class_scores: [0.22048473 0.34824544 0.4312698 ], word_scores: ['the:6.3806996877247e-06', 'corresponding:0.0', 'increase:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'share:0.0', 'capital:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'total:0.0', 'eu:0.0', '##r:0.0', '300:0.0', ',:7.986737728060689e-06', '00:0.0', 'was:0.0', 'registered:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'trade:0.0', 'register:0.0', 'on:0.0', 'may:0.0', '8:0.0', ',:7.986737728060689e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1223, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('in', tensor(0.0579, device='cuda:0')), ('the', tensor(0.1223, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), (',', tensor(0.1531, device='cuda:0')), ('in', tensor(0.0579, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('300', tensor(0., device='cuda:0')), (',', tensor(0.1531, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('registered', tensor(0., device='cuda:0')), ('in', tensor(0.0579, device='cuda:0')), ('the', tensor(0.1223, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('register', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), (',', tensor(0.1531, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1223, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('in', tensor(0.0579, device='cuda:0')), ('the', tensor(0.1223, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), (',', tensor(0.1531, device='cuda:0')), ('in', tensor(0.0579, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('300', tensor(0., device='cuda:0')), (',', tensor(0.1531, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('registered', tensor(0., device='cuda:0')), ('in', tensor(0.0579, device='cuda:0')), ('the', tensor(0.1223, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('register', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), (',', tensor(0.1531, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 678, example: The Finnish national carrier said net loss in April through June was euro26 million , down from a net profit of euro13 million a year earlier , prediction: 2, correct_label: 0, class_scores: [0.19950315 0.27387932 0.52661747], word_scores: ['the:6.3806996877247e-06', 'finnish:0.0', 'national:0.0', 'carrier:0.0', 'said:0.0', 'net:0.0', 'loss:0.0', 'in:3.0217122457543155e-06', 'april:0.0', 'through:0.0', 'june:0.0', 'was:0.0', 'euro:0.0', '##26:0.0', 'million:6.018835847498849e-06', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'a:8.62785782373976e-06', 'net:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'euro:0.0', '##13:0.0', 'million:6.018835847498849e-06', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1168, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('national', tensor(0., device='cuda:0')), ('carrier', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('in', tensor(0.0553, device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('euro26', tensor(0., device='cuda:0')), ('million', tensor(0.1102, device='cuda:0')), (',', tensor(0.1462, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0823, device='cuda:0')), ('a', tensor(0.1580, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0629, device='cuda:0')), ('euro13', tensor(0., device='cuda:0')), ('million', tensor(0.1102, device='cuda:0')), ('a', tensor(0.1580, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1168, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('national', tensor(0., device='cuda:0')), ('carrier', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('in', tensor(0.0553, device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('euro26', tensor(0., device='cuda:0')), ('million', tensor(0.1102, device='cuda:0')), (',', tensor(0.1462, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0823, device='cuda:0')), ('a', tensor(0.1580, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0629, device='cuda:0')), ('euro13', tensor(0., device='cuda:0')), ('million', tensor(0.1102, device='cuda:0')), ('a', tensor(0.1580, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 679, example: Customers include hotels and restaurants as well as wholesalers and some retailers , prediction: 2, correct_label: 2, class_scores: [0.19619174 0.30967143 0.49413687], word_scores: ['customers:0.0', 'include:0.0', 'hotels:0.0', 'and:0.0', 'restaurants:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'wholesale:0.0', '##rs:0.0', 'and:0.0', 'some:0.0', 'retailers:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('customers', tensor(nan, device='cuda:0')), ('include', tensor(nan, device='cuda:0')), ('hotels', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('restaurants', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('well', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('wholesalers', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('some', tensor(nan, device='cuda:0')), ('retailers', tensor(nan, device='cuda:0'))],  word_scores_max: [('customers', tensor(nan, device='cuda:0')), ('include', tensor(nan, device='cuda:0')), ('hotels', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('restaurants', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('well', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('wholesalers', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('some', tensor(nan, device='cuda:0')), ('retailers', tensor(nan, device='cuda:0'))]
idx: 680, example: The union filed a grievance over the company 's overtime assignment policies , prediction: 1, correct_label: 0, class_scores: [0.29929945 0.35104665 0.34965396], word_scores: ['the:6.3806996877247e-06', 'union:0.0', 'filed:0.0', 'a:8.62785782373976e-06', 'gr:0.0', '##ie:0.0', '##vance:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'overtime:0.0', 'assignment:0.0', 'policies:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2983, device='cuda:0')), ('union', tensor(0., device='cuda:0')), ('filed', tensor(0., device='cuda:0')), ('a', tensor(0.4034, device='cuda:0')), ('grievance', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.2983, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2983, device='cuda:0')), ('union', tensor(0., device='cuda:0')), ('filed', tensor(0., device='cuda:0')), ('a', tensor(0.4034, device='cuda:0')), ('grievance', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.2983, device='cuda:0'))]
idx: 681, example: The company serves customers in various industries , including process and resources , industrial machinery , architecture , building , construction , electrical , transportation , electronics , chemical , petrochemical , energy , and information technology , as well as catering and households , prediction: 2, correct_label: 2, class_scores: [0.149653   0.23061928 0.6197277 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'serves:0.0', 'customers:0.0', 'in:3.0217122457543155e-06', 'various:0.0', 'industries:0.0', ',:7.986737728060689e-06', 'including:0.0', 'process:0.0', 'and:0.0', 'resources:3.8971406866039615e-06', ',:7.986737728060689e-06', 'industrial:0.0', 'machinery:0.0', ',:7.986737728060689e-06', 'architecture:0.0', ',:7.986737728060689e-06', 'building:0.0', ',:7.986737728060689e-06', 'construction:0.0', ',:7.986737728060689e-06', 'electrical:0.0', ',:7.986737728060689e-06', 'transportation:0.0', ',:7.986737728060689e-06', 'electronics:0.0', ',:7.986737728060689e-06', 'chemical:0.0', ',:7.986737728060689e-06', 'pet:0.0', '##ro:0.0', '##chemical:0.0', ',:7.986737728060689e-06', 'energy:0.0', ',:7.986737728060689e-06', 'and:0.0', 'information:0.0', 'technology:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'catering:0.0', 'and:0.0', 'households:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0515, device='cuda:0')), ('company', tensor(0.0541, device='cuda:0')), ('serves', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('in', tensor(0.0244, device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('industries', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('resources', tensor(0.0315, device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('architecture', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('building', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('electrical', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('transportation', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('chemical', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('petrochemical', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('energy', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('catering', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('households', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0515, device='cuda:0')), ('company', tensor(0.0541, device='cuda:0')), ('serves', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('in', tensor(0.0244, device='cuda:0')), ('various', tensor(0., device='cuda:0')), ('industries', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('resources', tensor(0.0315, device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('industrial', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('architecture', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('building', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('electrical', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('transportation', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('chemical', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('petrochemical', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('energy', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), (',', tensor(0.0645, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('catering', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('households', tensor(0., device='cuda:0'))]
idx: 682, example: Cramo 's manager Jarmo Laasanen said hiring of equipment and machinery in Lithuania differs from the other Baltic countries in that in Lithuania still many public structures such as roads , bridges , airports and shops are being built , prediction: 2, correct_label: 2, class_scores: [0.17858058 0.3188016  0.50261784], word_scores: ['cr:0.0', '##amo:0.0', "':0.0", 's:0.0', 'manager:0.0', 'jar:0.0', '##mo:0.0', 'la:0.0', '##asa:0.0', '##nen:0.0', 'said:0.0', 'hiring:0.0', 'of:3.4365734791208524e-06', 'equipment:0.0', 'and:0.0', 'machinery:0.0', 'in:3.0217122457543155e-06', 'lithuania:0.0', 'differs:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'other:0.0', 'baltic:0.0', 'countries:0.0', 'in:3.0217122457543155e-06', 'that:1.5133816759771435e-06', 'in:3.0217122457543155e-06', 'lithuania:0.0', 'still:0.0', 'many:0.0', 'public:0.0', 'structures:0.0', 'such:0.0', 'as:0.0', 'roads:0.0', ',:7.986737728060689e-06', 'bridges:0.0', ',:7.986737728060689e-06', 'airports:0.0', 'and:0.0', 'shops:0.0', 'are:0.0', 'being:0.0', 'built:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 683, example: The total need for staff cuts corresponds to about 300 man-years , prediction: 2, correct_label: 0, class_scores: [0.19305545 0.3103059  0.49663863], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'need:0.0', 'for:0.0', 'staff:0.0', 'cuts:0.0', 'corresponds:0.0', 'to:2.886244146793615e-06', 'about:0.0', '300:0.0', 'man:0.0', '-:4.821180027647642e-06', 'years:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.4529, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('cuts', tensor(0., device='cuda:0')), ('corresponds', tensor(0., device='cuda:0')), ('to', tensor(0.2049, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('300', tensor(0., device='cuda:0')), ('man', tensor(0., device='cuda:0')), ('-', tensor(0.3422, device='cuda:0')), ('years', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4529, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('cuts', tensor(0., device='cuda:0')), ('corresponds', tensor(0., device='cuda:0')), ('to', tensor(0.2049, device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('300', tensor(0., device='cuda:0')), ('man', tensor(0., device='cuda:0')), ('-', tensor(0.3422, device='cuda:0')), ('years', tensor(0., device='cuda:0'))]
idx: 684, example: The mall is part of the Baltic Pearl development project in the city of St Petersburg , where Baltic Pearl CJSC , a subsidiary of Shanghai Foreign Joint Investment Company , is developing homes for 35,000 people , prediction: 2, correct_label: 2, class_scores: [0.21581823 0.35446224 0.42971957], word_scores: ['the:6.3806996877247e-06', 'mall:0.0', 'is:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'baltic:0.0', 'pearl:0.0', 'development:0.0', 'project:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'city:0.0', 'of:3.4365734791208524e-06', 'st:0.0', 'petersburg:0.0', ',:7.986737728060689e-06', 'where:0.0', 'baltic:0.0', 'pearl:0.0', 'c:0.0', '##js:0.0', '##c:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'subsidiary:0.0', 'of:3.4365734791208524e-06', 'shanghai:0.0', 'foreign:0.0', 'joint:0.0', 'investment:0.0', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'is:0.0', 'developing:0.0', 'homes:0.0', 'for:0.0', '35:0.0', ',:7.986737728060689e-06', '000:0.0', 'people:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0800, device='cuda:0')), ('mall', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('the', tensor(0.0800, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('pearl', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0379, device='cuda:0')), ('the', tensor(0.0800, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('pearl', tensor(0., device='cuda:0')), ('cjsc', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('a', tensor(0.1082, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('shanghai', tensor(0., device='cuda:0')), ('foreign', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.0840, device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('homes', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0800, device='cuda:0')), ('mall', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('the', tensor(0.0800, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('pearl', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('in', tensor(0.0379, device='cuda:0')), ('the', tensor(0.0800, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('pearl', tensor(0., device='cuda:0')), ('cjsc', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('a', tensor(0.1082, device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), ('of', tensor(0.0431, device='cuda:0')), ('shanghai', tensor(0., device='cuda:0')), ('foreign', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.0840, device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('homes', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), (',', tensor(0.1002, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))]
idx: 685, example: The value of the contract is EUR 25mn , prediction: 2, correct_label: 2, class_scores: [0.190558   0.3584831  0.45095882], word_scores: ['the:6.3806996877247e-06', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'is:0.0', 'eu:0.0', '##r:0.0', '25:0.0', '##m:0.0', '##n:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2729, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1470, device='cuda:0')), ('the', tensor(0.2729, device='cuda:0')), ('contract', tensor(0.3073, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('25mn', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2729, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1470, device='cuda:0')), ('the', tensor(0.2729, device='cuda:0')), ('contract', tensor(0.3073, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('25mn', tensor(0., device='cuda:0'))]
idx: 686, example: Sales in Finland decreased by 2.0 % , and international sales decreased by 9.3 % in terms of euros , and by 15.1 % in terms of local currencies , prediction: 2, correct_label: 0, class_scores: [0.23563753 0.36055535 0.4038071 ], word_scores: ['sales:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', 'decreased:0.0', 'by:0.0', '2:0.0', '.:2.903296945078182e-06', '0:0.0', '%:0.0', ',:7.986737728060689e-06', 'and:0.0', 'international:0.0', 'sales:0.0', 'decreased:0.0', 'by:0.0', '9:0.0', '.:2.903296945078182e-06', '3:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'terms:0.0', 'of:3.4365734791208524e-06', 'euros:0.0', ',:7.986737728060689e-06', 'and:0.0', 'by:0.0', '15:0.0', '.:2.903296945078182e-06', '1:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'terms:0.0', 'of:3.4365734791208524e-06', 'local:0.0', 'cu:0.0', '##rre:0.0', '##ncies:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sales', tensor(0., device='cuda:0')), ('in', tensor(0.0676, device='cuda:0')), ('finland', tensor(0.0916, device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('0', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('in', tensor(0.0676, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.0769, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('in', tensor(0.0676, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.0769, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('currencies', tensor(0., device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('in', tensor(0.0676, device='cuda:0')), ('finland', tensor(0.0916, device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('0', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('in', tensor(0.0676, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.0769, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), (',', tensor(0.1786, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0649, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('in', tensor(0.0676, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('of', tensor(0.0769, device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('currencies', tensor(0., device='cuda:0'))]
idx: 687, example: Tyrvaan Sanomat , published twice a week by Tyrvaan Sanomat Oy , appears in Sastamala and Kiikoinen , prediction: 1, correct_label: 2, class_scores: [0.24838813 0.41560942 0.3360025 ], word_scores: ['ty:0.0', '##rva:0.0', '##an:0.0', 'san:0.0', '##oma:0.0', '##t:0.0', ',:7.986737728060689e-06', 'published:0.0', 'twice:0.0', 'a:8.62785782373976e-06', 'week:0.0', 'by:0.0', 'ty:0.0', '##rva:0.0', '##an:0.0', 'san:0.0', '##oma:0.0', '##t:0.0', 'o:0.0', '##y:1.832826342251792e-06', ',:7.986737728060689e-06', 'appears:0.0', 'in:3.0217122457543155e-06', 'sas:0.0', '##tama:0.0', '##la:0.0', 'and:0.0', 'ki:0.0', '##iko:0.0', '##inen:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tyrvaan', tensor(0., device='cuda:0')), ('sanomat', tensor(0., device='cuda:0')), (',', tensor(0.2891, device='cuda:0')), ('published', tensor(0., device='cuda:0')), ('twice', tensor(0., device='cuda:0')), ('a', tensor(0.3123, device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('tyrvaan', tensor(0., device='cuda:0')), ('sanomat', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), (',', tensor(0.2891, device='cuda:0')), ('appears', tensor(0., device='cuda:0')), ('in', tensor(0.1094, device='cuda:0')), ('sastamala', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kiikoinen', tensor(0., device='cuda:0'))],  word_scores_max: [('tyrvaan', tensor(0., device='cuda:0')), ('sanomat', tensor(0., device='cuda:0')), (',', tensor(0.2891, device='cuda:0')), ('published', tensor(0., device='cuda:0')), ('twice', tensor(0., device='cuda:0')), ('a', tensor(0.3123, device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('tyrvaan', tensor(0., device='cuda:0')), ('sanomat', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), (',', tensor(0.2891, device='cuda:0')), ('appears', tensor(0., device='cuda:0')), ('in', tensor(0.1094, device='cuda:0')), ('sastamala', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kiikoinen', tensor(0., device='cuda:0'))]
idx: 688, example: Panostaja owns a 68.77 pct of share capital and the voting rights of Suomen Helasto shares following an exchange of shares which was carried out on May 30 , 2007 , prediction: 2, correct_label: 2, class_scores: [0.13323225 0.33455983 0.5322079 ], word_scores: ['pan:0.0', '##osta:0.0', '##ja:0.0', 'owns:0.0', 'a:8.62785782373976e-06', '68:0.0', '.:2.903296945078182e-06', '77:0.0', 'pc:0.0', '##t:0.0', 'of:3.4365734791208524e-06', 'share:0.0', 'capital:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'voting:0.0', 'rights:0.0', 'of:3.4365734791208524e-06', 'su:0.0', '##ome:0.0', '##n:0.0', 'he:0.0', '##las:0.0', '##to:0.0', 'shares:0.0', 'following:0.0', 'an:0.0', 'exchange:0.0', 'of:3.4365734791208524e-06', 'shares:0.0', 'which:0.0', 'was:0.0', 'carried:0.0', 'out:0.0', 'on:0.0', 'may:0.0', '30:0.0', ',:7.986737728060689e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('panostaja', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('a', tensor(0.2383, device='cuda:0')), ('68', tensor(0., device='cuda:0')), ('.', tensor(0.0802, device='cuda:0')), ('77', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('of', tensor(0.0949, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1762, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('of', tensor(0.0949, device='cuda:0')), ('suomen', tensor(0., device='cuda:0')), ('helasto', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('of', tensor(0.0949, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('carried', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.2206, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('panostaja', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('a', tensor(0.2383, device='cuda:0')), ('68', tensor(0., device='cuda:0')), ('.', tensor(0.0802, device='cuda:0')), ('77', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('of', tensor(0.0949, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1762, device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('of', tensor(0.0949, device='cuda:0')), ('suomen', tensor(0., device='cuda:0')), ('helasto', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('of', tensor(0.0949, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('carried', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), (',', tensor(0.2206, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 689, example: Earnings per share EPS in the first quarter amounted to a loss of EUR0 .20 , prediction: 2, correct_label: 2, class_scores: [0.28322595 0.2947449  0.42202908], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', 'eps:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'amounted:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '20:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('in', tensor(0.1109, device='cuda:0')), ('the', tensor(0.2341, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.1059, device='cuda:0')), ('a', tensor(0.3165, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1261, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1065, device='cuda:0')), ('20', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('in', tensor(0.1109, device='cuda:0')), ('the', tensor(0.2341, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('amounted', tensor(0., device='cuda:0')), ('to', tensor(0.1059, device='cuda:0')), ('a', tensor(0.3165, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1261, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.1065, device='cuda:0')), ('20', tensor(0., device='cuda:0'))]
idx: 690, example: The company is in charge of all natural gas storage activities in France , Great Britain , and Germany , prediction: 2, correct_label: 2, class_scores: [0.207616   0.37860113 0.41378284], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'in:3.0217122457543155e-06', 'charge:0.0', 'of:3.4365734791208524e-06', 'all:0.0', 'natural:0.0', 'gas:0.0', 'storage:0.0', 'activities:0.0', 'in:3.0217122457543155e-06', 'france:0.0', ',:7.986737728060689e-06', 'great:0.0', 'britain:0.0', ',:7.986737728060689e-06', 'and:0.0', 'germany:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1656, device='cuda:0')), ('company', tensor(0.1738, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0784, device='cuda:0')), ('charge', tensor(0., device='cuda:0')), ('of', tensor(0.0892, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('storage', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('in', tensor(0.0784, device='cuda:0')), ('france', tensor(0., device='cuda:0')), (',', tensor(0.2073, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('britain', tensor(0., device='cuda:0')), (',', tensor(0.2073, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('germany', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1656, device='cuda:0')), ('company', tensor(0.1738, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0784, device='cuda:0')), ('charge', tensor(0., device='cuda:0')), ('of', tensor(0.0892, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('storage', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('in', tensor(0.0784, device='cuda:0')), ('france', tensor(0., device='cuda:0')), (',', tensor(0.2073, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('britain', tensor(0., device='cuda:0')), (',', tensor(0.2073, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('germany', tensor(0., device='cuda:0'))]
idx: 691, example: Ethanol would be made from barley , and production could start in 2008 , prediction: 2, correct_label: 2, class_scores: [0.18474393 0.38602555 0.42923054], word_scores: ['ethanol:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'made:0.0', 'from:4.495178018260049e-06', 'barley:0.0', ',:7.986737728060689e-06', 'and:0.0', 'production:0.0', 'could:0.0', 'start:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ethanol', tensor(0., device='cuda:0')), ('would', tensor(0.1191, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('from', tensor(0.2554, device='cuda:0')), ('barley', tensor(0., device='cuda:0')), (',', tensor(0.4538, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('in', tensor(0.1717, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('ethanol', tensor(0., device='cuda:0')), ('would', tensor(0.1191, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('from', tensor(0.2554, device='cuda:0')), ('barley', tensor(0., device='cuda:0')), (',', tensor(0.4538, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('in', tensor(0.1717, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 692, example: The iTunes-based material will be accessible on Windows-based or Macintosh computers and transferable to portable devices , including Apple 's iPods , prediction: 1, correct_label: 1, class_scores: [0.2951305  0.39098704 0.3138825 ], word_scores: ['the:6.3806996877247e-06', 'itunes:0.0', '-:4.821180027647642e-06', 'based:0.0', 'material:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'accessible:0.0', 'on:0.0', 'windows:0.0', '-:4.821180027647642e-06', 'based:0.0', 'or:0.0', 'macintosh:0.0', 'computers:0.0', 'and:0.0', 'transfer:0.0', '##able:0.0', 'to:2.886244146793615e-06', 'portable:0.0', 'devices:0.0', ',:7.986737728060689e-06', 'including:0.0', 'apple:0.0', "':0.0", 's:0.0', 'ipod:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2060, device='cuda:0')), ('itunes', tensor(0., device='cuda:0')), ('-', tensor(0.1557, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('will', tensor(0.1315, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('accessible', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('windows', tensor(0., device='cuda:0')), ('-', tensor(0.1557, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('macintosh', tensor(0., device='cuda:0')), ('computers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('transferable', tensor(0., device='cuda:0')), ('to', tensor(0.0932, device='cuda:0')), ('portable', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), (',', tensor(0.2579, device='cuda:0')), ('including', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2060, device='cuda:0')), ('itunes', tensor(0., device='cuda:0')), ('-', tensor(0.1557, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('will', tensor(0.1315, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('accessible', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('windows', tensor(0., device='cuda:0')), ('-', tensor(0.1557, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('macintosh', tensor(0., device='cuda:0')), ('computers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('transferable', tensor(0., device='cuda:0')), ('to', tensor(0.0932, device='cuda:0')), ('portable', tensor(0., device='cuda:0')), ('devices', tensor(0., device='cuda:0')), (',', tensor(0.2579, device='cuda:0')), ('including', tensor(0., device='cuda:0'))]
idx: 693, example: Net sales in 2007 totalled EUR 329 million and the operating margin was above 19 % , prediction: 2, correct_label: 2, class_scores: [0.18384835 0.3841325  0.43201908], word_scores: ['net:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', '2007:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '329:0.0', 'million:6.018835847498849e-06', 'and:0.0', 'the:6.3806996877247e-06', 'operating:0.0', 'margin:0.0', 'was:0.0', 'above:0.0', '19:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1959, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('329', tensor(0., device='cuda:0')), ('million', tensor(0.3903, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.1959, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('329', tensor(0., device='cuda:0')), ('million', tensor(0.3903, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('margin', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0'))]
idx: 694, example: Ixonos will finance the acquisition through a 3.8 mln euro $ 5.2 mln loan , prediction: 2, correct_label: 2, class_scores: [0.2305816  0.29995295 0.4694654 ], word_scores: ['ix:0.0', '##ono:0.0', '##s:4.601175078278175e-06', 'will:4.073096533829812e-06', 'finance:0.0', 'the:6.3806996877247e-06', 'acquisition:0.0', 'through:0.0', 'a:8.62785782373976e-06', '3:0.0', '.:2.903296945078182e-06', '8:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '5:0.0', '.:2.903296945078182e-06', '2:0.0', 'ml:0.0', '##n:0.0', 'loan:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ixonos', tensor(0., device='cuda:0')), ('will', tensor(0.1637, device='cuda:0')), ('finance', tensor(0., device='cuda:0')), ('the', tensor(0.2564, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('a', tensor(0.3467, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.1167, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1167, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0'))],  word_scores_max: [('ixonos', tensor(0., device='cuda:0')), ('will', tensor(0.1637, device='cuda:0')), ('finance', tensor(0., device='cuda:0')), ('the', tensor(0.2564, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('a', tensor(0.3467, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.1167, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1167, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0'))]
idx: 695, example: The order also includes start-up and commissioning services , prediction: 2, correct_label: 2, class_scores: [0.2804338 0.3572496 0.3623166], word_scores: ['the:6.3806996877247e-06', 'order:0.0', 'also:0.0', 'includes:0.0', 'start:0.0', '-:4.821180027647642e-06', 'up:1.4959460941099678e-06', 'and:0.0', 'commissioning:0.0', 'services:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.5025, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('-', tensor(0.3797, device='cuda:0')), ('up', tensor(0.1178, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('commissioning', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5025, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('-', tensor(0.3797, device='cuda:0')), ('up', tensor(0.1178, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('commissioning', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0'))]
idx: 696, example: Operating profit improved to EUR 20.3 mn from EUR 11.4 mn , prediction: 2, correct_label: 1, class_scores: [0.1845563  0.3737077  0.44173604], word_scores: ['operating:0.0', 'profit:0.0', 'improved:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '20:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '11:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 697, example: The project will be a 2 x 600 MW coal-fired power plant , located some 420 km south of Hanoi , the company said , prediction: 1, correct_label: 2, class_scores: [0.16572317 0.44712463 0.38715225], word_scores: ['the:6.3806996877247e-06', 'project:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'a:8.62785782373976e-06', '2:0.0', 'x:0.0', '600:0.0', 'mw:0.0', 'coal:0.0', '-:4.821180027647642e-06', 'fired:0.0', 'power:0.0', 'plant:0.0', ',:7.986737728060689e-06', 'located:0.0', 'some:0.0', '420:0.0', 'km:0.0', 'south:0.0', 'of:3.4365734791208524e-06', 'hanoi:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1132, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('will', tensor(0.0722, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('600', tensor(0., device='cuda:0')), ('mw', tensor(0., device='cuda:0')), ('coal', tensor(0., device='cuda:0')), ('-', tensor(0.0855, device='cuda:0')), ('fired', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('420', tensor(0., device='cuda:0')), ('km', tensor(0., device='cuda:0')), ('south', tensor(0., device='cuda:0')), ('of', tensor(0.0609, device='cuda:0')), ('hanoi', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('the', tensor(0.1132, device='cuda:0')), ('company', tensor(0.1187, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1132, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('will', tensor(0.0722, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('600', tensor(0., device='cuda:0')), ('mw', tensor(0., device='cuda:0')), ('coal', tensor(0., device='cuda:0')), ('-', tensor(0.0855, device='cuda:0')), ('fired', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('420', tensor(0., device='cuda:0')), ('km', tensor(0., device='cuda:0')), ('south', tensor(0., device='cuda:0')), ('of', tensor(0.0609, device='cuda:0')), ('hanoi', tensor(0., device='cuda:0')), (',', tensor(0.1416, device='cuda:0')), ('the', tensor(0.1132, device='cuda:0')), ('company', tensor(0.1187, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 698, example: The economic occupancy rate of Sponda 's property portfolio rose to 91.2 % from 88.8 % in 2006 , prediction: 2, correct_label: 1, class_scores: [0.13497554 0.372582   0.4924425 ], word_scores: ['the:6.3806996877247e-06', 'economic:0.0', 'o:0.0', '##cc:0.0', '##up:0.0', '##ancy:0.0', 'rate:0.0', 'of:3.4365734791208524e-06', 'sp:0.0', '##onda:0.0', "':0.0", 's:0.0', 'property:0.0', 'portfolio:0.0', 'rose:0.0', 'to:2.886244146793615e-06', '91:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', 'from:4.495178018260049e-06', '88:0.0', '.:2.903296945078182e-06', '8:0.0', '%:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.6499, device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('occupancy', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0'))],  word_scores_max: [('the', tensor(0.6499, device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('occupancy', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0'))]
idx: 699, example: The train is expected to cross the Russian territory in 9 days , reaching the Vostochny port , prediction: 2, correct_label: 2, class_scores: [0.17956762 0.37016577 0.45026663], word_scores: ['the:6.3806996877247e-06', 'train:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'cross:0.0', 'the:6.3806996877247e-06', 'russian:0.0', 'territory:0.0', 'in:3.0217122457543155e-06', '9:0.0', 'days:0.0', ',:7.986737728060689e-06', 'reaching:0.0', 'the:6.3806996877247e-06', 'vo:0.0', '##sto:0.0', '##ch:0.0', '##ny:0.0', 'port:5.874064754607389e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1640, device='cuda:0')), ('train', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.0742, device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('the', tensor(0.1640, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('territory', tensor(0., device='cuda:0')), ('in', tensor(0.0777, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), (',', tensor(0.2053, device='cuda:0')), ('reaching', tensor(0., device='cuda:0')), ('the', tensor(0.1640, device='cuda:0')), ('vostochny', tensor(0., device='cuda:0')), ('port', tensor(0.1510, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1640, device='cuda:0')), ('train', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.0742, device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('the', tensor(0.1640, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('territory', tensor(0., device='cuda:0')), ('in', tensor(0.0777, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), (',', tensor(0.2053, device='cuda:0')), ('reaching', tensor(0., device='cuda:0')), ('the', tensor(0.1640, device='cuda:0')), ('vostochny', tensor(0., device='cuda:0')), ('port', tensor(0.1510, device='cuda:0'))]
idx: 700, example: Finnish automation solutions developer Cencorp Corporation ( OMX Helsinki : CNC1V ) said on Friday ( 27 June ) that it has completed employee negotiations regarding a reorganisation of its operations , prediction: 2, correct_label: 1, class_scores: [0.19743903 0.34092033 0.4616406 ], word_scores: ['finnish:0.0', 'automation:0.0', 'solutions:0.0', 'developer:0.0', 'ce:0.0', '##nco:0.0', '##rp:0.0', 'corporation:0.0', '(:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'cn:0.0', '##c:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'on:0.0', 'friday:0.0', '(:0.0', '27:0.0', 'june:0.0', '):0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'completed:0.0', 'employee:0.0', 'negotiations:0.0', 'regarding:0.0', 'a:8.62785782373976e-06', 'reorganisation:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'operations:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('automation', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('cencorp', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('cnc1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('that', tensor(0.0616, device='cuda:0')), ('it', tensor(0.1361, device='cuda:0')), ('has', tensor(0.2411, device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('regarding', tensor(0., device='cuda:0')), ('a', tensor(0.3513, device='cuda:0')), ('reorganisation', tensor(0., device='cuda:0')), ('of', tensor(0.1399, device='cuda:0')), ('its', tensor(0.0700, device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('automation', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('cencorp', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('cnc1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('friday', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('that', tensor(0.0616, device='cuda:0')), ('it', tensor(0.1361, device='cuda:0')), ('has', tensor(0.2411, device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('regarding', tensor(0., device='cuda:0')), ('a', tensor(0.3513, device='cuda:0')), ('reorganisation', tensor(0., device='cuda:0')), ('of', tensor(0.1399, device='cuda:0')), ('its', tensor(0.0700, device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 701, example: ABN Amro Capital has agreed to sell its Helsinki-based designer homeware producer , Iittala Oyj , to crosstown consumer products group Fiskars Corp. , for EUR230 million to EUR235 million ( $ 310 million to $ 316 million ) , prediction: 1, correct_label: 2, class_scores: [0.21475805 0.41444972 0.37079224], word_scores: ['ab:0.0', '##n:0.0', 'am:0.0', '##ro:0.0', 'capital:0.0', 'has:5.9214244174654596e-06', 'agreed:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'its:1.7191393908433383e-06', 'helsinki:0.0', '-:4.821180027647642e-06', 'based:0.0', 'designer:0.0', 'home:0.0', '##ware:0.0', 'producer:0.0', ',:7.986737728060689e-06', 'ii:0.0', '##ttal:0.0', '##a:3.804580501309829e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'cross:0.0', '##town:0.0', 'consumer:0.0', 'products:0.0', 'group:0.0', 'fis:0.0', '##kar:0.0', '##s:4.601175078278175e-06', 'corp:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'for:0.0', 'eu:0.0', '##r:0.0', '##23:0.0', '##0:0.0', 'million:6.018835847498849e-06', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##23:0.0', '##5:0.0', 'million:6.018835847498849e-06', '(:0.0', '$:0.0', '310:0.0', 'million:6.018835847498849e-06', 'to:2.886244146793615e-06', '$:0.0', '316:0.0', 'million:6.018835847498849e-06', '):0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('abn', tensor(0., device='cuda:0')), ('amro', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('has', tensor(0.0771, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0224, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('-', tensor(0.0628, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('designer', tensor(0., device='cuda:0')), ('homeware', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('iittala', tensor(0., device='cuda:0')), ('oyj', tensor(0.0239, device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('crosstown', tensor(0., device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0378, device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('eur230', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('eur235', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0')), ('310', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('316', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0'))],  word_scores_max: [('abn', tensor(0., device='cuda:0')), ('amro', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('has', tensor(0.0771, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0224, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('-', tensor(0.0628, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('designer', tensor(0., device='cuda:0')), ('homeware', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('iittala', tensor(0., device='cuda:0')), ('oyj', tensor(0.0239, device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('crosstown', tensor(0., device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('fiskars', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('.', tensor(0.0378, device='cuda:0')), (',', tensor(0.1040, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('eur230', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('eur235', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0')), ('310', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0')), ('to', tensor(0.0376, device='cuda:0')), ('316', tensor(0., device='cuda:0')), ('million', tensor(0.0784, device='cuda:0'))]
idx: 702, example: Finnish retail software developer Aldata Solution Oyj reported a net loss of 11.7 mln euro $ 17.2 mln for 2007 versus a net profit of 2.5 mln euro $ 3.7 mln for 2006 , prediction: 2, correct_label: 0, class_scores: [0.27354416 0.30823755 0.41821828], word_scores: ['finnish:0.0', 'retail:0.0', 'software:0.0', 'developer:0.0', 'al:0.0', '##da:0.0', '##ta:0.0', 'solution:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'reported:0.0', 'a:8.62785782373976e-06', 'net:0.0', 'loss:0.0', 'of:3.4365734791208524e-06', '11:0.0', '.:2.903296945078182e-06', '7:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '17:0.0', '.:2.903296945078182e-06', '2:0.0', 'ml:0.0', '##n:0.0', 'for:0.0', '2007:0.0', 'versus:0.0', 'a:8.62785782373976e-06', 'net:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', '2:0.0', '.:2.903296945078182e-06', '5:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '$:0.0', '3:0.0', '.:2.903296945078182e-06', '7:0.0', 'ml:0.0', '##n:0.0', 'for:0.0', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('aldata', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('oyj', tensor(0.0488, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('a', tensor(0.2296, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0915, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('versus', tensor(0., device='cuda:0')), ('a', tensor(0.2296, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0915, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('developer', tensor(0., device='cuda:0')), ('aldata', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('oyj', tensor(0.0488, device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('a', tensor(0.2296, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0915, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('versus', tensor(0., device='cuda:0')), ('a', tensor(0.2296, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0915, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 703, example: Exel 's board of directors will propose a dividend of 0.2 euro $ 0.3 per share for 2006 at the annual general meeting on April 19 , 2007 , prediction: 2, correct_label: 2, class_scores: [0.21510825 0.336633   0.44825873], word_scores: ['ex:0.0', '##el:0.0', "':0.0", 's:0.0', 'board:0.0', 'of:3.4365734791208524e-06', 'directors:0.0', 'will:4.073096533829812e-06', 'propose:0.0', 'a:8.62785782373976e-06', 'divide:0.0', '##nd:0.0', 'of:3.4365734791208524e-06', '0:0.0', '.:2.903296945078182e-06', '2:0.0', 'euro:0.0', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '3:0.0', 'per:0.0', 'share:0.0', 'for:0.0', '2006:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'annual:0.0', 'general:0.0', 'meeting:0.0', 'on:0.0', 'april:0.0', '19:0.0', ',:7.986737728060689e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 704, example: As part of the reorganization , Kauko-Telko Ltd will be divided into Telko Ltd , Leipurin Ltd , Hamina Terminal Services Ltd and Kaukomarkkinat Ltd. , prediction: 2, correct_label: 2, class_scores: [0.20599216 0.39427552 0.39973232], word_scores: ['as:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'reorganization:0.0', ',:7.986737728060689e-06', 'ka:0.0', '##uk:0.0', '##o:0.0', '-:4.821180027647642e-06', 'tel:0.0', '##ko:0.0', 'ltd:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'divided:0.0', 'into:0.0', 'tel:0.0', '##ko:0.0', 'ltd:0.0', ',:7.986737728060689e-06', 'lei:0.0', '##puri:0.0', '##n:0.0', 'ltd:0.0', ',:7.986737728060689e-06', 'ham:0.0', '##ina:0.0', 'terminal:0.0', 'services:0.0', 'ltd:0.0', 'and:0.0', 'ka:0.0', '##uk:0.0', '##oma:0.0', '##rk:0.0', '##kin:0.0', '##at:0.0', 'ltd:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0754, device='cuda:0')), ('the', tensor(0.1400, device='cuda:0')), ('reorganization', tensor(0., device='cuda:0')), (',', tensor(0.1752, device='cuda:0')), ('kauko', tensor(0., device='cuda:0')), ('-', tensor(0.1058, device='cuda:0')), ('telko', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('will', tensor(0.0894, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('divided', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('telko', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1752, device='cuda:0')), ('leipurin', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1752, device='cuda:0')), ('hamina', tensor(0., device='cuda:0')), ('terminal', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kaukomarkkinat', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0637, device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0754, device='cuda:0')), ('the', tensor(0.1400, device='cuda:0')), ('reorganization', tensor(0., device='cuda:0')), (',', tensor(0.1752, device='cuda:0')), ('kauko', tensor(0., device='cuda:0')), ('-', tensor(0.1058, device='cuda:0')), ('telko', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('will', tensor(0.0894, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('divided', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('telko', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1752, device='cuda:0')), ('leipurin', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1752, device='cuda:0')), ('hamina', tensor(0., device='cuda:0')), ('terminal', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kaukomarkkinat', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0637, device='cuda:0'))]
idx: 705, example: A light , bright and pretty addition to your life , it will also keep a few pennies in your bank account , prediction: 2, correct_label: 2, class_scores: [0.19407304 0.34106338 0.46486357], word_scores: ['a:8.62785782373976e-06', 'light:0.0', ',:7.986737728060689e-06', 'bright:0.0', 'and:0.0', 'pretty:0.0', 'addition:0.0', 'to:2.886244146793615e-06', 'your:0.0', 'life:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'also:0.0', 'keep:0.0', 'a:8.62785782373976e-06', 'few:0.0', 'penn:0.0', '##ies:0.0', 'in:3.0217122457543155e-06', 'your:0.0', 'bank:0.0', 'account:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1853, device='cuda:0')), ('light', tensor(0., device='cuda:0')), (',', tensor(0.1716, device='cuda:0')), ('bright', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pretty', tensor(0., device='cuda:0')), ('addition', tensor(0., device='cuda:0')), ('to', tensor(0.0620, device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), (',', tensor(0.1716, device='cuda:0')), ('it', tensor(0.0718, device='cuda:0')), ('will', tensor(0.0875, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('a', tensor(0.1853, device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('pennies', tensor(0., device='cuda:0')), ('in', tensor(0.0649, device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('account', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.1853, device='cuda:0')), ('light', tensor(0., device='cuda:0')), (',', tensor(0.1716, device='cuda:0')), ('bright', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pretty', tensor(0., device='cuda:0')), ('addition', tensor(0., device='cuda:0')), ('to', tensor(0.0620, device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), (',', tensor(0.1716, device='cuda:0')), ('it', tensor(0.0718, device='cuda:0')), ('will', tensor(0.0875, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('a', tensor(0.1853, device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('pennies', tensor(0., device='cuda:0')), ('in', tensor(0.0649, device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('account', tensor(0., device='cuda:0'))]
idx: 706, example: This is the second successful effort for the financial investor this year , prediction: 1, correct_label: 1, class_scores: [0.22319067 0.43044722 0.34636208], word_scores: ['this:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'second:0.0', 'successful:0.0', 'effort:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'financial:0.0', 'investor:0.0', 'this:0.0', 'year:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('this', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('successful', tensor(0., device='cuda:0')), ('effort', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('successful', tensor(0., device='cuda:0')), ('effort', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('investor', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 707, example: The end-to-end delivery combines the competencies and services from TietoEnators Telecom & Media , Processing & Network and Digital Innovations Business Areas , prediction: 2, correct_label: 2, class_scores: [0.266197  0.3527621 0.3810409], word_scores: ['the:6.3806996877247e-06', 'end:0.0', '-:4.821180027647642e-06', 'to:2.886244146793615e-06', '-:4.821180027647642e-06', 'end:0.0', 'delivery:0.0', 'combines:0.0', 'the:6.3806996877247e-06', 'compete:0.0', '##ncies:0.0', 'and:0.0', 'services:0.0', 'from:4.495178018260049e-06', 'tie:0.0', '##to:0.0', '##ena:0.0', '##tors:0.0', 'telecom:0.0', '&:0.0', 'media:0.0', ',:7.986737728060689e-06', 'processing:0.0', '&:0.0', 'network:0.0', 'and:0.0', 'digital:0.0', 'innovations:0.0', 'business:0.0', 'areas:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1689, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('to', tensor(0.0764, device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('delivery', tensor(0., device='cuda:0')), ('combines', tensor(0., device='cuda:0')), ('the', tensor(0.1689, device='cuda:0')), ('competencies', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('from', tensor(0.1190, device='cuda:0')), ('tietoenators', tensor(0., device='cuda:0')), ('telecom', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), (',', tensor(0.2114, device='cuda:0')), ('processing', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('digital', tensor(0., device='cuda:0')), ('innovations', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1689, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('to', tensor(0.0764, device='cuda:0')), ('-', tensor(0.1276, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('delivery', tensor(0., device='cuda:0')), ('combines', tensor(0., device='cuda:0')), ('the', tensor(0.1689, device='cuda:0')), ('competencies', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('from', tensor(0.1190, device='cuda:0')), ('tietoenators', tensor(0., device='cuda:0')), ('telecom', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), (',', tensor(0.2114, device='cuda:0')), ('processing', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('digital', tensor(0., device='cuda:0')), ('innovations', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('areas', tensor(0., device='cuda:0'))]
idx: 708, example: The construction project is scheduled to start in the second quarter of 2009 and the new building is scheduled to be in place by the end of 2010 , prediction: 2, correct_label: 2, class_scores: [0.24433076 0.33562115 0.42004803], word_scores: ['the:6.3806996877247e-06', 'construction:0.0', 'project:0.0', 'is:0.0', 'scheduled:0.0', 'to:2.886244146793615e-06', 'start:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2009:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'building:0.0', 'is:0.0', 'scheduled:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'in:3.0217122457543155e-06', 'place:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1357, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.0614, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('in', tensor(0.0643, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('new', tensor(0.0595, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.0614, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('in', tensor(0.0643, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1357, device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.0614, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('in', tensor(0.0643, device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('new', tensor(0.0595, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('to', tensor(0.0614, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('in', tensor(0.0643, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1357, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0731, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 709, example: Finnish P+�yry has been awarded an engineering contract by CFR , the national railway company of Romania , prediction: 2, correct_label: 1, class_scores: [0.19272839 0.31389797 0.4933737 ], word_scores: ['finnish:0.0', 'p:0.0', '+:0.0', 'y:0.0', '##ry:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'awarded:0.0', 'an:0.0', 'engineering:0.0', 'contract:7.1864019446366e-06', 'by:0.0', 'cf:0.0', '##r:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'national:0.0', 'railway:0.0', 'company:6.695386673527537e-06', 'of:3.4365734791208524e-06', 'romania:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('yry', tensor(0., device='cuda:0')), ('has', tensor(0.1575, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('contract', tensor(0.1911, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('cfr', tensor(0., device='cuda:0')), (',', tensor(0.2124, device='cuda:0')), ('the', tensor(0.1697, device='cuda:0')), ('national', tensor(0., device='cuda:0')), ('railway', tensor(0., device='cuda:0')), ('company', tensor(0.1780, device='cuda:0')), ('of', tensor(0.0914, device='cuda:0')), ('romania', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('p', tensor(0., device='cuda:0')), ('yry', tensor(0., device='cuda:0')), ('has', tensor(0.1575, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('contract', tensor(0.1911, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('cfr', tensor(0., device='cuda:0')), (',', tensor(0.2124, device='cuda:0')), ('the', tensor(0.1697, device='cuda:0')), ('national', tensor(0., device='cuda:0')), ('railway', tensor(0., device='cuda:0')), ('company', tensor(0.1780, device='cuda:0')), ('of', tensor(0.0914, device='cuda:0')), ('romania', tensor(0., device='cuda:0'))]
idx: 710, example: A CUT ABOVE Bring the outdoors in with these birch-branch coasters , prediction: 2, correct_label: 2, class_scores: [0.18050842 0.35496378 0.4645278 ], word_scores: ['a:8.62785782373976e-06', 'cut:0.0', 'above:0.0', 'bring:0.0', 'the:6.3806996877247e-06', 'outdoors:0.0', 'in:3.0217122457543155e-06', 'with:4.733654350275174e-06', 'these:0.0', 'birch:0.0', '-:4.821180027647642e-06', 'branch:0.0', 'coaster:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('a', tensor(0.3128, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('the', tensor(0.2313, device='cuda:0')), ('outdoors', tensor(0., device='cuda:0')), ('in', tensor(0.1095, device='cuda:0')), ('with', tensor(0.1716, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('birch', tensor(0., device='cuda:0')), ('-', tensor(0.1748, device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('coasters', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.3128, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('the', tensor(0.2313, device='cuda:0')), ('outdoors', tensor(0., device='cuda:0')), ('in', tensor(0.1095, device='cuda:0')), ('with', tensor(0.1716, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('birch', tensor(0., device='cuda:0')), ('-', tensor(0.1748, device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('coasters', tensor(0., device='cuda:0'))]
idx: 711, example: I use natural fibers to make the clothes more comfortable , to allow your skin to breathe and to be eco-friendly , prediction: 2, correct_label: 1, class_scores: [0.14151697 0.36888382 0.48959923], word_scores: ['i:0.0', 'use:0.0', 'natural:0.0', 'fibers:0.0', 'to:2.886244146793615e-06', 'make:0.0', 'the:6.3806996877247e-06', 'clothes:0.0', 'more:0.0', 'comfortable:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'allow:0.0', 'your:0.0', 'skin:0.0', 'to:2.886244146793615e-06', 'breathe:0.0', 'and:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'eco:0.0', '-:4.821180027647642e-06', 'friendly:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('i', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('fibers', tensor(0., device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('the', tensor(0.2076, device='cuda:0')), ('clothes', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('comfortable', tensor(0., device='cuda:0')), (',', tensor(0.2599, device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('allow', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('skin', tensor(0., device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('breathe', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('eco', tensor(0., device='cuda:0')), ('-', tensor(0.1569, device='cuda:0')), ('friendly', tensor(0., device='cuda:0'))],  word_scores_max: [('i', tensor(0., device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('fibers', tensor(0., device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('the', tensor(0.2076, device='cuda:0')), ('clothes', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('comfortable', tensor(0., device='cuda:0')), (',', tensor(0.2599, device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('allow', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('skin', tensor(0., device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('breathe', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0939, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('eco', tensor(0., device='cuda:0')), ('-', tensor(0.1569, device='cuda:0')), ('friendly', tensor(0., device='cuda:0'))]
idx: 712, example: Solvay S.A. has engaged Poyry to provide project management , engineering , procurement , and site services for a hydrogen peroxide production plant to be built by a Solvay-BASF joint venture at BASF 's Zandvliet site , Belgium , prediction: 2, correct_label: 2, class_scores: [0.19944265 0.34426188 0.45629546], word_scores: ['sol:0.0', '##va:0.0', '##y:1.832826342251792e-06', 's:0.0', '.:2.903296945078182e-06', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', 'has:5.9214244174654596e-06', 'engaged:0.0', 'po:0.0', '##yr:0.0', '##y:1.832826342251792e-06', 'to:2.886244146793615e-06', 'provide:0.0', 'project:0.0', 'management:0.0', ',:7.986737728060689e-06', 'engineering:0.0', ',:7.986737728060689e-06', 'procurement:0.0', ',:7.986737728060689e-06', 'and:0.0', 'site:0.0', 'services:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'hydrogen:0.0', 'per:0.0', '##oxide:0.0', 'production:0.0', 'plant:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'built:0.0', 'by:0.0', 'a:8.62785782373976e-06', 'sol:0.0', '##va:0.0', '##y:1.832826342251792e-06', '-:4.821180027647642e-06', 'bas:0.0', '##f:0.0', 'joint:0.0', 'venture:0.0', 'at:0.0', 'bas:0.0', '##f:0.0', "':0.0", 's:0.0', 'za:0.0', '##nd:0.0', '##v:0.0', '##lie:0.0', '##t:0.0', 'site:0.0', ',:7.986737728060689e-06', 'belgium:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0'], word_scores_sum: [('solvay', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0402, device='cuda:0')), ('a', tensor(0.1196, device='cuda:0')), ('.', tensor(0.0402, device='cuda:0')), ('has', tensor(0.0821, device='cuda:0')), ('engaged', tensor(0., device='cuda:0')), ('poyry', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('procurement', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1196, device='cuda:0')), ('hydrogen', tensor(0., device='cuda:0')), ('peroxide', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('a', tensor(0.1196, device='cuda:0')), ('solvay', tensor(0., device='cuda:0')), ('-', tensor(0.0668, device='cuda:0')), ('basf', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))],  word_scores_max: [('solvay', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0402, device='cuda:0')), ('a', tensor(0.1196, device='cuda:0')), ('.', tensor(0.0402, device='cuda:0')), ('has', tensor(0.0821, device='cuda:0')), ('engaged', tensor(0., device='cuda:0')), ('poyry', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('procurement', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1196, device='cuda:0')), ('hydrogen', tensor(0., device='cuda:0')), ('peroxide', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('a', tensor(0.1196, device='cuda:0')), ('solvay', tensor(0., device='cuda:0')), ('-', tensor(0.0668, device='cuda:0')), ('basf', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))]
idx: 713, example: Operating profit rose to EUR2 .4 m from EUR1 .6 m year earlier , prediction: 2, correct_label: 1, class_scores: [0.18496548 0.28743154 0.527603  ], word_scores: ['operating:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##2:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##1:0.0', '.:2.903296945078182e-06', '6:0.0', 'm:0.0', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur2', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur2', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 714, example: Finnish forest machinery manufacturer Ponsse has issued a profit warning , prediction: 2, correct_label: 0, class_scores: [0.17581697 0.38207728 0.44210574], word_scores: ['finnish:0.0', 'forest:0.0', 'machinery:0.0', 'manufacturer:0.0', 'po:0.0', '##ns:0.0', '##se:0.0', 'has:5.9214244174654596e-06', 'issued:0.0', 'a:8.62785782373976e-06', 'profit:0.0', 'warning:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('forest', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('has', tensor(0.4070, device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('a', tensor(0.5930, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('warning', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('forest', tensor(0., device='cuda:0')), ('machinery', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('ponsse', tensor(0., device='cuda:0')), ('has', tensor(0.4070, device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('a', tensor(0.5930, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('warning', tensor(0., device='cuda:0'))]
idx: 715, example: - Profit before taxes was EUR 105.9 82.7 million , prediction: 2, correct_label: 2, class_scores: [0.21939951 0.38755155 0.393049  ], word_scores: ['-:4.821180027647642e-06', 'profit:0.0', 'before:0.0', 'taxes:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '105:0.0', '.:2.903296945078182e-06', '9:0.0', '82:0.0', '.:2.903296945078182e-06', '7:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('-', tensor(0.2896, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('105', tensor(0., device='cuda:0')), ('.', tensor(0.1744, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('82', tensor(0., device='cuda:0')), ('.', tensor(0.1744, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.3616, device='cuda:0'))],  word_scores_max: [('-', tensor(0.2896, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('105', tensor(0., device='cuda:0')), ('.', tensor(0.1744, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('82', tensor(0., device='cuda:0')), ('.', tensor(0.1744, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.3616, device='cuda:0'))]
idx: 716, example: After piloting , the instrument will be further developed according to the experiences gained , prediction: 2, correct_label: 2, class_scores: [0.25712916 0.3192119  0.42365894], word_scores: ['after:0.0', 'pilot:0.0', '##ing:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'instrument:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'further:0.0', 'developed:2.488632617314579e-06', 'according:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'experiences:0.0', 'gained:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('after', tensor(0., device='cuda:0')), ('piloting', tensor(0., device='cuda:0')), (',', tensor(0.2645, device='cuda:0')), ('the', tensor(0.2113, device='cuda:0')), ('instrument', tensor(0., device='cuda:0')), ('will', tensor(0.1349, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('developed', tensor(0.0824, device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0956, device='cuda:0')), ('the', tensor(0.2113, device='cuda:0')), ('experiences', tensor(0., device='cuda:0')), ('gained', tensor(0., device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('piloting', tensor(0., device='cuda:0')), (',', tensor(0.2645, device='cuda:0')), ('the', tensor(0.2113, device='cuda:0')), ('instrument', tensor(0., device='cuda:0')), ('will', tensor(0.1349, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('developed', tensor(0.0824, device='cuda:0')), ('according', tensor(0., device='cuda:0')), ('to', tensor(0.0956, device='cuda:0')), ('the', tensor(0.2113, device='cuda:0')), ('experiences', tensor(0., device='cuda:0')), ('gained', tensor(0., device='cuda:0'))]
idx: 717, example: Ingen is an established medical device manufacturer with an emerging new medical product line for the respiratory market worth an estimated $ 4 billion in the U.S. and $ 8 billion globally , prediction: 2, correct_label: 2, class_scores: [0.28653643 0.3390269  0.3744366 ], word_scores: ['ing:0.0', '##en:0.0', 'is:0.0', 'an:0.0', 'established:0.0', 'medical:0.0', 'device:0.0', 'manufacturer:0.0', 'with:4.733654350275174e-06', 'an:0.0', 'emerging:0.0', 'new:2.798587502184091e-06', 'medical:0.0', 'product:0.0', 'line:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'respiratory:0.0', 'market:0.0', 'worth:0.0', 'an:0.0', 'estimated:0.0', '$:0.0', '4:0.0', 'billion:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'and:0.0', '$:0.0', '8:0.0', 'billion:0.0', 'globally:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ingen', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('with', tensor(0.1625, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('emerging', tensor(0., device='cuda:0')), ('new', tensor(0.0961, device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2191, device='cuda:0')), ('respiratory', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('in', tensor(0.1038, device='cuda:0')), ('the', tensor(0.2191, device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.0997, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0997, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('globally', tensor(0., device='cuda:0'))],  word_scores_max: [('ingen', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('manufacturer', tensor(0., device='cuda:0')), ('with', tensor(0.1625, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('emerging', tensor(0., device='cuda:0')), ('new', tensor(0.0961, device='cuda:0')), ('medical', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2191, device='cuda:0')), ('respiratory', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('in', tensor(0.1038, device='cuda:0')), ('the', tensor(0.2191, device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.0997, device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('.', tensor(0.0997, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('globally', tensor(0., device='cuda:0'))]
idx: 718, example: Revenue grew by 2 percent to  x20ac 580 million $ 743 million , from  x20ac 569 million , prediction: 2, correct_label: 1, class_scores: [0.2716376  0.3124149  0.41594756], word_scores: ['revenue:0.0', 'grew:0.0', 'by:0.0', '2:0.0', 'percent:0.0', 'to:2.886244146793615e-06', 'x:0.0', '##20:0.0', '##ac:0.0', '580:0.0', 'million:6.018835847498849e-06', '$:0.0', '74:0.0', '##3:0.0', 'million:6.018835847498849e-06', ',:7.986737728060689e-06', 'from:4.495178018260049e-06', 'x:0.0', '##20:0.0', '##ac:0.0', '56:0.0', '##9:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('revenue', tensor(0., device='cuda:0')), ('grew', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('to', tensor(0.0864, device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('580', tensor(0., device='cuda:0')), ('million', tensor(0.1801, device='cuda:0')), ('743', tensor(0., device='cuda:0')), ('million', tensor(0.1801, device='cuda:0')), (',', tensor(0.2389, device='cuda:0')), ('from', tensor(0.1345, device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('569', tensor(0., device='cuda:0')), ('million', tensor(0.1801, device='cuda:0'))],  word_scores_max: [('revenue', tensor(0., device='cuda:0')), ('grew', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('to', tensor(0.0864, device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('580', tensor(0., device='cuda:0')), ('million', tensor(0.1801, device='cuda:0')), ('743', tensor(0., device='cuda:0')), ('million', tensor(0.1801, device='cuda:0')), (',', tensor(0.2389, device='cuda:0')), ('from', tensor(0.1345, device='cuda:0')), ('x20ac', tensor(0., device='cuda:0')), ('569', tensor(0., device='cuda:0')), ('million', tensor(0.1801, device='cuda:0'))]
idx: 719, example: Among paper issues , Stora Enso R was little changed -- up 0.08 pct at 12.03 eur , UPM-Kymmene was 0.48 pct higher at 18.77 eur and M-real B added 0.50 pct to 3.99 eur , prediction: 2, correct_label: 2, class_scores: [0.20027356 0.3117494  0.48797703], word_scores: ['among:0.0', 'paper:2.697490344871767e-06', 'issues:0.0', ',:7.986737728060689e-06', 'st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'r:0.0', 'was:0.0', 'little:0.0', 'changed:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', '##t:0.0', 'at:0.0', '12:0.0', '.:2.903296945078182e-06', '03:0.0', 'eu:0.0', '##r:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', 'was:0.0', '0:0.0', '.:2.903296945078182e-06', '48:0.0', 'pc:0.0', '##t:0.0', 'higher:0.0', 'at:0.0', '18:0.0', '.:2.903296945078182e-06', '77:0.0', 'eu:0.0', '##r:0.0', 'and:0.0', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', 'b:0.0', 'added:0.0', '0:0.0', '.:2.903296945078182e-06', '50:0.0', 'pc:0.0', '##t:0.0', 'to:2.886244146793615e-06', '3:0.0', '.:2.903296945078182e-06', '99:0.0', 'eu:0.0', '##r:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('among', tensor(0., device='cuda:0')), ('paper', tensor(0.0457, device='cuda:0')), ('issues', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0363, device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('changed', tensor(0., device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('upm', tensor(0.0254, device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('77', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('to', tensor(0.0489, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0'))],  word_scores_max: [('among', tensor(0., device='cuda:0')), ('paper', tensor(0.0457, device='cuda:0')), ('issues', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0363, device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('changed', tensor(0., device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('03', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.1354, device='cuda:0')), ('upm', tensor(0.0254, device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('77', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0817, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('to', tensor(0.0489, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.0492, device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0'))]
idx: 720, example: Tekla Group 's net sales for 2006 were approximately 50 million euros and operating result 13.6 million euros , prediction: 2, correct_label: 2, class_scores: [0.19785523 0.37636545 0.42577928], word_scores: ['te:0.0', '##kla:0.0', 'group:0.0', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'for:0.0', '2006:0.0', 'were:0.0', 'approximately:0.0', '50:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'and:0.0', 'operating:0.0', 'result:0.0', '13:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'euros:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tekla', tensor(nan, device='cuda:0'))],  word_scores_max: [('tekla', tensor(nan, device='cuda:0'))]
idx: 721, example: The acquisition will considerably increase Kemira 's sales and market position in the Russian metal industry coatings market , prediction: 2, correct_label: 1, class_scores: [0.19491184 0.27791712 0.5271711 ], word_scores: ['the:6.3806996877247e-06', 'acquisition:0.0', 'will:4.073096533829812e-06', 'considerably:0.0', 'increase:0.0', 'ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', "':0.0", 's:0.0', 'sales:0.0', 'and:0.0', 'market:0.0', 'position:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'russian:0.0', 'metal:0.0', 'industry:0.0', 'coating:0.0', '##s:4.601175078278175e-06', 'market:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.6104, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('considerably', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6104, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('considerably', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0'))]
idx: 722, example: Another firm Air Liquide was exempted because it left the market in 1998 , prediction: 2, correct_label: 2, class_scores: [0.16589561 0.36189142 0.47221306], word_scores: ['another:0.0', 'firm:0.0', 'air:0.0', 'liquid:0.0', '##e:0.0', 'was:0.0', 'exempt:0.0', '##ed:0.0', 'because:0.0', 'it:3.3415778943890473e-06', 'left:0.0', 'the:6.3806996877247e-06', 'market:0.0', 'in:3.0217122457543155e-06', '1998:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('another', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('liquide', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('exempted', tensor(0., device='cuda:0')), ('because', tensor(0., device='cuda:0')), ('it', tensor(0.2622, device='cuda:0')), ('left', tensor(0., device='cuda:0')), ('the', tensor(0.5007, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.2371, device='cuda:0')), ('1998', tensor(0., device='cuda:0'))],  word_scores_max: [('another', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('liquide', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('exempted', tensor(0., device='cuda:0')), ('because', tensor(0., device='cuda:0')), ('it', tensor(0.2622, device='cuda:0')), ('left', tensor(0., device='cuda:0')), ('the', tensor(0.5007, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.2371, device='cuda:0')), ('1998', tensor(0., device='cuda:0'))]
idx: 723, example: The total area of the Gorelovo plant is about 22,000 sq m. Atria invested about EURO 70mn in the plant , which should double Atria Russia 's production capacity in the St Petersburg area , prediction: 2, correct_label: 1, class_scores: [0.2032221  0.39051598 0.40626195], word_scores: ['the:6.3806996877247e-06', 'total:0.0', 'area:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'gore:0.0', '##lov:0.0', '##o:0.0', 'plant:0.0', 'is:0.0', 'about:0.0', '22:0.0', ',:7.986737728060689e-06', '000:0.0', 'sq:0.0', 'm:0.0', '.:2.903296945078182e-06', 'at:0.0', '##ria:0.0', 'invested:0.0', 'about:0.0', 'euro:0.0', '70:0.0', '##m:0.0', '##n:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'plant:0.0', ',:7.986737728060689e-06', 'which:0.0', 'should:0.0', 'double:0.0', 'at:0.0', '##ria:0.0', 'russia:0.0', "':0.0", 's:0.0', 'production:0.0', 'capacity:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'st:0.0', 'petersburg:0.0', 'area:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1435, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0773, device='cuda:0')), ('the', tensor(0.1435, device='cuda:0')), ('gorelovo', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), (',', tensor(0.1796, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0653, device='cuda:0')), ('atria', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('70mn', tensor(0., device='cuda:0')), ('in', tensor(0.0679, device='cuda:0')), ('the', tensor(0.1435, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1796, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('atria', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1435, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0773, device='cuda:0')), ('the', tensor(0.1435, device='cuda:0')), ('gorelovo', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('22', tensor(0., device='cuda:0')), (',', tensor(0.1796, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0653, device='cuda:0')), ('atria', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('70mn', tensor(0., device='cuda:0')), ('in', tensor(0.0679, device='cuda:0')), ('the', tensor(0.1435, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1796, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('atria', tensor(0., device='cuda:0'))]
idx: 724, example: In the Baltic states the company reports net sales of EUR 11.9 mn , down from EUR 14.2 mn , and an operative EBIT of EUR -2.2 mn , down from EUR -1.7 mn , prediction: 2, correct_label: 0, class_scores: [0.2050042  0.3550836  0.43991217], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'baltic:0.0', 'states:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'reports:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '11:0.0', '.:2.903296945078182e-06', '9:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '14:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'and:0.0', 'an:0.0', 'operative:0.0', 'e:0.0', '##bit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '-:4.821180027647642e-06', '2:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '-:4.821180027647642e-06', '1:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0362, device='cuda:0')), ('the', tensor(0.0764, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('states', tensor(0., device='cuda:0')), ('the', tensor(0.0764, device='cuda:0')), ('company', tensor(0.0801, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0411, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.0956, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0538, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.0956, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operative', tensor(0., device='cuda:0')), ('ebit', tensor(0., device='cuda:0')), ('of', tensor(0.0411, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('-', tensor(0.0577, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.0956, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0538, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('-', tensor(0.0577, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0362, device='cuda:0')), ('the', tensor(0.0764, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('states', tensor(0., device='cuda:0')), ('the', tensor(0.0764, device='cuda:0')), ('company', tensor(0.0801, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0411, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.0956, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0538, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.0956, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operative', tensor(0., device='cuda:0')), ('ebit', tensor(0., device='cuda:0')), ('of', tensor(0.0411, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('-', tensor(0.0577, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.0956, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0538, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('-', tensor(0.0577, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0347, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 725, example: Vaisala 's Present Weather Detector measures visibility up to 20 km , as well as precipitation type and intensity , prediction: 2, correct_label: 2, class_scores: [0.24899934 0.33376598 0.41723466], word_scores: ['va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', "':0.0", 's:0.0', 'present:0.0', 'weather:0.0', 'detector:0.0', 'measures:0.0', 'visibility:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '20:0.0', 'km:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'precipitation:0.0', 'type:0.0', 'and:0.0', 'intensity:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 726, example: In Finland , Alma Media will focus on quality and developing chain operations , prediction: 2, correct_label: 2, class_scores: [0.24273074 0.34306377 0.41420552], word_scores: ['in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'alma:0.0', 'media:0.0', 'will:4.073096533829812e-06', 'focus:0.0', 'on:0.0', 'quality:0.0', 'and:0.0', 'developing:0.0', 'chain:0.0', 'operations:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.1576, device='cuda:0')), ('finland', tensor(0.2136, device='cuda:0')), (',', tensor(0.4165, device='cuda:0')), ('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('will', tensor(0.2124, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.1576, device='cuda:0')), ('finland', tensor(0.2136, device='cuda:0')), (',', tensor(0.4165, device='cuda:0')), ('alma', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('will', tensor(0.2124, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('developing', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 727, example: Both operating profit and net sales for the 12-month period increased , respectively from EUR10 .5 m and EUR28 .8 m , as compared to the financial year 2004 , prediction: 2, correct_label: 1, class_scores: [0.2378525  0.2801652  0.48198235], word_scores: ['both:0.0', 'operating:0.0', 'profit:0.0', 'and:0.0', 'net:0.0', 'sales:0.0', 'for:0.0', 'the:6.3806996877247e-06', '12:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'increased:0.0', ',:7.986737728060689e-06', 'respectively:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##10:0.0', '.:2.903296945078182e-06', '5:0.0', 'm:0.0', 'and:0.0', 'eu:0.0', '##r:0.0', '##28:0.0', '.:2.903296945078182e-06', '8:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'financial:0.0', 'year:0.0', '2004:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0962, device='cuda:0')), ('eur10', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur28', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0962, device='cuda:0')), ('eur10', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur28', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1709, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 728, example: Simultaneously , his responsibility area is extended from legal affairs to cover also mergers and acquisitions , prediction: 2, correct_label: 2, class_scores: [0.21978682 0.3694369  0.41077626], word_scores: ['simultaneously:0.0', ',:7.986737728060689e-06', 'his:0.0', 'responsibility:0.0', 'area:0.0', 'is:0.0', 'extended:0.0', 'from:4.495178018260049e-06', 'legal:0.0', 'affairs:0.0', 'to:2.886244146793615e-06', 'cover:0.0', 'also:0.0', 'mergers:0.0', 'and:0.0', 'acquisitions:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('simultaneously', tensor(0., device='cuda:0')), (',', tensor(0.5197, device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('responsibility', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('from', tensor(0.2925, device='cuda:0')), ('legal', tensor(0., device='cuda:0')), ('affairs', tensor(0., device='cuda:0')), ('to', tensor(0.1878, device='cuda:0')), ('cover', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('mergers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0'))],  word_scores_max: [('simultaneously', tensor(0., device='cuda:0')), (',', tensor(0.5197, device='cuda:0')), ('his', tensor(0., device='cuda:0')), ('responsibility', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('extended', tensor(0., device='cuda:0')), ('from', tensor(0.2925, device='cuda:0')), ('legal', tensor(0., device='cuda:0')), ('affairs', tensor(0., device='cuda:0')), ('to', tensor(0.1878, device='cuda:0')), ('cover', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('mergers', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0'))]
idx: 729, example: The devices would be launched in the Chinese market in late 2006 , the company said , prediction: 2, correct_label: 2, class_scores: [0.29754254 0.27226478 0.43019265], word_scores: ['the:6.3806996877247e-06', 'devices:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'launched:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'chinese:0.0', 'market:0.0', 'in:3.0217122457543155e-06', 'late:0.0', '2006:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1521, device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('would', tensor(0.0499, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('launched', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('the', tensor(0.1521, device='cuda:0')), ('chinese', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('late', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.1903, device='cuda:0')), ('the', tensor(0.1521, device='cuda:0')), ('company', tensor(0.1596, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1521, device='cuda:0')), ('devices', tensor(0., device='cuda:0')), ('would', tensor(0.0499, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('launched', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('the', tensor(0.1521, device='cuda:0')), ('chinese', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0720, device='cuda:0')), ('late', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.1903, device='cuda:0')), ('the', tensor(0.1521, device='cuda:0')), ('company', tensor(0.1596, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 730, example: Significance : Teleste has emphasised that with its large size and growing economy , as well as the rapid development of its TV services distribution industry , Poland is viewed as an attractive market , prediction: 2, correct_label: 1, class_scores: [0.20477939 0.33798566 0.45723495], word_scores: ['significance:0.0', '::0.0', 'tel:0.0', '##est:0.0', '##e:0.0', 'has:5.9214244174654596e-06', 'emphasis:0.0', '##ed:0.0', 'that:1.5133816759771435e-06', 'with:4.733654350275174e-06', 'its:1.7191393908433383e-06', 'large:0.0', 'size:0.0', 'and:0.0', 'growing:0.0', 'economy:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'rapid:0.0', 'development:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'tv:0.0', 'services:0.0', 'distribution:0.0', 'industry:0.0', ',:7.986737728060689e-06', 'poland:0.0', 'is:0.0', 'viewed:0.0', 'as:0.0', 'an:0.0', 'attractive:0.0', 'market:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('significance', tensor(0., device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('has', tensor(0.1430, device='cuda:0')), ('emphasised', tensor(0., device='cuda:0')), ('that', tensor(0.0366, device='cuda:0')), ('with', tensor(0.1143, device='cuda:0')), ('its', tensor(0.0415, device='cuda:0')), ('large', tensor(0., device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('economy', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1541, device='cuda:0')), ('rapid', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('of', tensor(0.0830, device='cuda:0')), ('its', tensor(0.0415, device='cuda:0')), ('tv', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('poland', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('viewed', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('attractive', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))],  word_scores_max: [('significance', tensor(0., device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('has', tensor(0.1430, device='cuda:0')), ('emphasised', tensor(0., device='cuda:0')), ('that', tensor(0.0366, device='cuda:0')), ('with', tensor(0.1143, device='cuda:0')), ('its', tensor(0.0415, device='cuda:0')), ('large', tensor(0., device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('economy', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1541, device='cuda:0')), ('rapid', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('of', tensor(0.0830, device='cuda:0')), ('its', tensor(0.0415, device='cuda:0')), ('tv', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('poland', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('viewed', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('attractive', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0'))]
idx: 731, example: Our superior customer centricity and expertise in digital services set us apart from our competitors , prediction: 2, correct_label: 1, class_scores: [0.18997926 0.357961   0.45205975], word_scores: ['our:0.0', 'superior:0.0', 'customer:0.0', 'cent:0.0', '##ric:0.0', '##ity:0.0', 'and:0.0', 'expertise:0.0', 'in:3.0217122457543155e-06', 'digital:0.0', 'services:0.0', 'set:0.0', 'us:0.0', 'apart:0.0', 'from:4.495178018260049e-06', 'our:0.0', 'competitors:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('our', tensor(0., device='cuda:0')), ('superior', tensor(0., device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('centricity', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('in', tensor(0.4020, device='cuda:0')), ('digital', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('apart', tensor(0., device='cuda:0')), ('from', tensor(0.5980, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('competitors', tensor(0., device='cuda:0'))],  word_scores_max: [('our', tensor(0., device='cuda:0')), ('superior', tensor(0., device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('centricity', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('in', tensor(0.4020, device='cuda:0')), ('digital', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('apart', tensor(0., device='cuda:0')), ('from', tensor(0.5980, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('competitors', tensor(0., device='cuda:0'))]
idx: 732, example: Look out for vintage fabric cushion covers , '70s coffee pots , ceramic serving dishes , cocktail glasses , and stainless steel party dishes , prediction: 2, correct_label: 2, class_scores: [0.1741769  0.35464263 0.47118044], word_scores: ['look:0.0', 'out:0.0', 'for:0.0', 'vintage:0.0', 'fabric:0.0', 'cushion:0.0', 'covers:0.0', ',:7.986737728060689e-06', "':0.0", '70s:0.0', 'coffee:0.0', 'pots:0.0', ',:7.986737728060689e-06', 'ceramic:0.0', 'serving:0.0', 'dishes:0.0', ',:7.986737728060689e-06', 'cocktail:0.0', 'glasses:0.0', ',:7.986737728060689e-06', 'and:0.0', 'stainless:0.0', 'steel:0.0', 'party:0.0', 'dishes:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('look', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('vintage', tensor(0., device='cuda:0')), ('fabric', tensor(0., device='cuda:0')), ('cushion', tensor(0., device='cuda:0')), ('covers', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('look', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('vintage', tensor(0., device='cuda:0')), ('fabric', tensor(0., device='cuda:0')), ('cushion', tensor(0., device='cuda:0')), ('covers', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 733, example: Copper , lead and nickel also dropped ... HBOS ( HBOS ) plummeted 20 % to 70.3 pence after saying this year+� ?, prediction: 2, correct_label: 0, class_scores: [0.26691642 0.27631912 0.4567644 ], word_scores: ['copper:0.0', ',:7.986737728060689e-06', 'lead:0.0', 'and:0.0', 'nickel:0.0', 'also:0.0', 'dropped:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'hbo:0.0', '##s:4.601175078278175e-06', '(:0.0', 'hbo:0.0', '##s:4.601175078278175e-06', '):0.0', 'plum:0.0', '##met:0.0', '##ed:0.0', '20:0.0', '%:0.0', 'to:2.886244146793615e-06', '70:0.0', '.:2.903296945078182e-06', '3:0.0', 'pen:0.0', '##ce:0.0', 'after:0.0', 'saying:0.0', 'this:0.0', 'year:0.0', '+:0.0', '?:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('copper', tensor(0., device='cuda:0')), (',', tensor(0.3552, device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('dropped', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('hbos', tensor(0., device='cuda:0')), ('hbos', tensor(0., device='cuda:0')), ('plummeted', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('to', tensor(0.1284, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('pence', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('saying', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))],  word_scores_max: [('copper', tensor(0., device='cuda:0')), (',', tensor(0.3552, device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('dropped', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('hbos', tensor(0., device='cuda:0')), ('hbos', tensor(0., device='cuda:0')), ('plummeted', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('to', tensor(0.1284, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('pence', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('saying', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))]
idx: 734, example: Meanwhile , Nokia said that it will be able to deliver a complete range of services from deployment operations to consulting and integration to managed services as a result of the buyout , prediction: 2, correct_label: 1, class_scores: [0.2860286  0.34809768 0.36587372], word_scores: ['meanwhile:0.0', ',:7.986737728060689e-06', 'nokia:0.0', 'said:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'be:0.0', 'able:0.0', 'to:2.886244146793615e-06', 'deliver:0.0', 'a:8.62785782373976e-06', 'complete:0.0', 'range:0.0', 'of:3.4365734791208524e-06', 'services:0.0', 'from:4.495178018260049e-06', 'deployment:0.0', 'operations:0.0', 'to:2.886244146793615e-06', 'consulting:0.0', 'and:0.0', 'integration:0.0', 'to:2.886244146793615e-06', 'managed:0.0', 'services:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'result:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'buy:0.0', '##out:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('meanwhile', tensor(0., device='cuda:0')), (',', tensor(0.1318, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0250, device='cuda:0')), ('it', tensor(0.0552, device='cuda:0')), ('will', tensor(0.0672, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('able', tensor(0., device='cuda:0')), ('to', tensor(0.0476, device='cuda:0')), ('deliver', tensor(0., device='cuda:0')), ('a', tensor(0.1424, device='cuda:0')), ('complete', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0567, device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('from', tensor(0.0742, device='cuda:0')), ('deployment', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('to', tensor(0.0476, device='cuda:0')), ('consulting', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('integration', tensor(0., device='cuda:0')), ('to', tensor(0.0476, device='cuda:0')), ('managed', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1424, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0567, device='cuda:0')), ('the', tensor(0.1053, device='cuda:0')), ('buyout', tensor(0., device='cuda:0'))],  word_scores_max: [('meanwhile', tensor(0., device='cuda:0')), (',', tensor(0.1318, device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0250, device='cuda:0')), ('it', tensor(0.0552, device='cuda:0')), ('will', tensor(0.0672, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('able', tensor(0., device='cuda:0')), ('to', tensor(0.0476, device='cuda:0')), ('deliver', tensor(0., device='cuda:0')), ('a', tensor(0.1424, device='cuda:0')), ('complete', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0567, device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('from', tensor(0.0742, device='cuda:0')), ('deployment', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('to', tensor(0.0476, device='cuda:0')), ('consulting', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('integration', tensor(0., device='cuda:0')), ('to', tensor(0.0476, device='cuda:0')), ('managed', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1424, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0567, device='cuda:0')), ('the', tensor(0.1053, device='cuda:0')), ('buyout', tensor(0., device='cuda:0'))]
idx: 735, example: Passenger-related revenue rose by 5.1 % to EUR 460.8 mn from EUR 438.5 mn in 2009 , prediction: 2, correct_label: 1, class_scores: [0.26976377 0.26536208 0.46487406], word_scores: ['passenger:0.0', '-:4.821180027647642e-06', 'related:0.0', 'revenue:0.0', 'rose:0.0', 'by:0.0', '5:0.0', '.:2.903296945078182e-06', '1:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '460:0.0', '.:2.903296945078182e-06', '8:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '43:0.0', '##8:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('passenger', tensor(0., device='cuda:0')), ('-', tensor(0.2014, device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('to', tensor(0.1206, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('460', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1878, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('438', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1263, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('passenger', tensor(0., device='cuda:0')), ('-', tensor(0.2014, device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('to', tensor(0.1206, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('460', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1878, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('438', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1263, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 736, example: ND = Not disclosed , prediction: 2, correct_label: 2, class_scores: [0.17947659 0.35449386 0.46602952], word_scores: ['n:0.0', '##d:0.0', '=:0.0', 'not:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nd', tensor(nan, device='cuda:0')), ('not', tensor(nan, device='cuda:0')), ('disclosed', tensor(nan, device='cuda:0'))],  word_scores_max: [('nd', tensor(nan, device='cuda:0')), ('not', tensor(nan, device='cuda:0')), ('disclosed', tensor(nan, device='cuda:0'))]
idx: 737, example: Finnish GeoSentric 's net sales decreased to EUR 939,000 in January-March 2009 , prediction: 2, correct_label: 0, class_scores: [0.19026701 0.344938   0.464795  ], word_scores: ['finnish:0.0', 'geo:0.0', '##sen:0.0', '##tric:0.0', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '93:0.0', '##9:0.0', ',:7.986737728060689e-06', '000:0.0', 'in:3.0217122457543155e-06', 'january:0.0', '-:4.821180027647642e-06', 'march:0.0', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(nan, device='cuda:0'))],  word_scores_max: [('finnish', tensor(nan, device='cuda:0'))]
idx: 738, example: Teleste 's hybrid TV solution includes components for the whole process of delivering video services to consumers from content acquisition and service creation to delivery through a range of access solutions , including HFC ( hybrid fibre-coaxial ) , xDSL , EttH , and FttH , prediction: 1, correct_label: 2, class_scores: [0.1885807  0.4096307  0.40178856], word_scores: ['tel:0.0', '##est:0.0', '##e:0.0', "':0.0", 's:0.0', 'hybrid:0.0', 'tv:0.0', 'solution:0.0', 'includes:0.0', 'components:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'whole:0.0', 'process:0.0', 'of:3.4365734791208524e-06', 'delivering:0.0', 'video:0.0', 'services:0.0', 'to:2.886244146793615e-06', 'consumers:0.0', 'from:4.495178018260049e-06', 'content:0.0', 'acquisition:0.0', 'and:0.0', 'service:0.0', 'creation:0.0', 'to:2.886244146793615e-06', 'delivery:0.0', 'through:0.0', 'a:8.62785782373976e-06', 'range:0.0', 'of:3.4365734791208524e-06', 'access:0.0', 'solutions:0.0', ',:7.986737728060689e-06', 'including:0.0', 'h:0.0', '##fc:0.0', '(:0.0', 'hybrid:0.0', 'fibre:0.0', '-:4.821180027647642e-06', 'coa:0.0', '##xia:0.0', '##l:0.0', '):0.0', ',:7.986737728060689e-06', 'x:0.0', '##ds:0.0', '##l:0.0', ',:7.986737728060689e-06', 'et:0.0', '##th:0.0', ',:7.986737728060689e-06', 'and:0.0', 'ft:0.0', '##th:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 739, example: Of these shares 29,659,239 are held by the Company or its group companies and the number of outstanding shares and voting rights attached to the shares thus amounts to 322,705,218 , prediction: 2, correct_label: 2, class_scores: [0.23676753 0.35324857 0.40998393], word_scores: ['of:3.4365734791208524e-06', 'these:0.0', 'shares:0.0', '29:0.0', ',:7.986737728060689e-06', '65:0.0', '##9:0.0', ',:7.986737728060689e-06', '239:0.0', 'are:0.0', 'held:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'or:0.0', 'its:1.7191393908433383e-06', 'group:0.0', 'companies:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'outstanding:0.0', 'shares:0.0', 'and:0.0', 'voting:0.0', 'rights:0.0', 'attached:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'shares:0.0', 'thus:0.0', 'amounts:0.0', 'to:2.886244146793615e-06', '322:0.0', ',:7.986737728060689e-06', '70:0.0', '##5:0.0', ',:7.986737728060689e-06', '218:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('of', tensor(0.0476, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('659', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('239', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0884, device='cuda:0')), ('company', tensor(0.0928, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('its', tensor(0.0238, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0884, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0476, device='cuda:0')), ('outstanding', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('attached', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('the', tensor(0.0884, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('thus', tensor(0., device='cuda:0')), ('amounts', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('322', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('705', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('218', tensor(0., device='cuda:0'))],  word_scores_max: [('of', tensor(0.0476, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('659', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('239', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0884, device='cuda:0')), ('company', tensor(0.0928, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('its', tensor(0.0238, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0884, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.0476, device='cuda:0')), ('outstanding', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('voting', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('attached', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('the', tensor(0.0884, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('thus', tensor(0., device='cuda:0')), ('amounts', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('322', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('705', tensor(0., device='cuda:0')), (',', tensor(0.1107, device='cuda:0')), ('218', tensor(0., device='cuda:0'))]
idx: 740, example: Exports of goods fell by 59 % , and imports by 16.7 % , prediction: 1, correct_label: 0, class_scores: [0.22882141 0.4489557  0.32222286], word_scores: ['exports:0.0', 'of:3.4365734791208524e-06', 'goods:0.0', 'fell:0.0', 'by:0.0', '59:0.0', '%:0.0', ',:7.986737728060689e-06', 'and:0.0', 'imports:0.0', 'by:0.0', '16:0.0', '.:2.903296945078182e-06', '7:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('exports', tensor(0., device='cuda:0')), ('of', tensor(0.2399, device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), (',', tensor(0.5575, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('imports', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.2027, device='cuda:0')), ('7', tensor(0., device='cuda:0'))],  word_scores_max: [('exports', tensor(0., device='cuda:0')), ('of', tensor(0.2399, device='cuda:0')), ('goods', tensor(0., device='cuda:0')), ('fell', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), (',', tensor(0.5575, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('imports', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.2027, device='cuda:0')), ('7', tensor(0., device='cuda:0'))]
idx: 741, example: According to M-real 's CEO , Mikko Helander , this transaction will enable the company to proceed swiftly with its restructuring program , prediction: 1, correct_label: 1, class_scores: [0.19334485 0.4534535  0.35320163], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', "':0.0", 's:0.0', 'ceo:0.0', ',:7.986737728060689e-06', 'mi:0.0', '##kko:0.0', 'he:0.0', '##lander:0.0', ',:7.986737728060689e-06', 'this:0.0', 'transaction:0.0', 'will:4.073096533829812e-06', 'enable:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'to:2.886244146793615e-06', 'proceed:0.0', 'swiftly:0.0', 'with:4.733654350275174e-06', 'its:1.7191393908433383e-06', 'restructuring:0.0', 'program:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0'))]
idx: 742, example: Metsa-Botnia will finance the payment of dividends , the repayment of capital and the repurchase of its own shares with the funds deriving from its divestment of the Uruguay operations , and shares in Pohjolan Voima , and by utilising its existing financing facilities , prediction: 2, correct_label: 2, class_scores: [0.2369314  0.29119083 0.47187778], word_scores: ['mets:0.0', '##a:3.804580501309829e-06', '-:4.821180027647642e-06', 'bot:0.0', '##nia:0.0', 'will:4.073096533829812e-06', 'finance:0.0', 'the:6.3806996877247e-06', 'payment:0.0', 'of:3.4365734791208524e-06', 'divide:0.0', '##nds:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'capital:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'rep:0.0', '##ur:0.0', '##chase:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'own:0.0', 'shares:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'funds:0.0', 'der:0.0', '##iving:0.0', 'from:4.495178018260049e-06', 'its:1.7191393908433383e-06', 'dive:0.0', '##st:0.0', '##ment:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'uruguay:0.0', 'operations:0.0', ',:7.986737728060689e-06', 'and:0.0', 'shares:0.0', 'in:3.0217122457543155e-06', 'po:0.0', '##h:0.0', '##jo:0.0', '##lan:0.0', 'vo:0.0', '##ima:0.0', ',:7.986737728060689e-06', 'and:0.0', 'by:0.0', 'ut:0.0', '##ilis:0.0', '##ing:0.0', 'its:1.7191393908433383e-06', 'existing:0.0', 'financing:0.0', 'facilities:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('metsa', tensor(0., device='cuda:0')), ('-', tensor(0.0521, device='cuda:0')), ('botnia', tensor(0., device='cuda:0')), ('will', tensor(0.0440, device='cuda:0')), ('finance', tensor(0., device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('payment', tensor(0., device='cuda:0')), ('of', tensor(0.0372, device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), (',', tensor(0.0864, device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('repurchase', tensor(0., device='cuda:0')), ('of', tensor(0.0372, device='cuda:0')), ('its', tensor(0.0186, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('with', tensor(0.0512, device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('deriving', tensor(0., device='cuda:0')), ('from', tensor(0.0486, device='cuda:0')), ('its', tensor(0.0186, device='cuda:0')), ('divestment', tensor(0., device='cuda:0')), ('of', tensor(0.0372, device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('uruguay', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.0864, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0327, device='cuda:0')), ('pohjolan', tensor(0., device='cuda:0')), ('voima', tensor(0., device='cuda:0')), (',', tensor(0.0864, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('utilising', tensor(0., device='cuda:0')), ('its', tensor(0.0186, device='cuda:0')), ('existing', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0'))],  word_scores_max: [('metsa', tensor(0., device='cuda:0')), ('-', tensor(0.0521, device='cuda:0')), ('botnia', tensor(0., device='cuda:0')), ('will', tensor(0.0440, device='cuda:0')), ('finance', tensor(0., device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('payment', tensor(0., device='cuda:0')), ('of', tensor(0.0372, device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), (',', tensor(0.0864, device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('repurchase', tensor(0., device='cuda:0')), ('of', tensor(0.0372, device='cuda:0')), ('its', tensor(0.0186, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('with', tensor(0.0512, device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('deriving', tensor(0., device='cuda:0')), ('from', tensor(0.0486, device='cuda:0')), ('its', tensor(0.0186, device='cuda:0')), ('divestment', tensor(0., device='cuda:0')), ('of', tensor(0.0372, device='cuda:0')), ('the', tensor(0.0690, device='cuda:0')), ('uruguay', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), (',', tensor(0.0864, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('in', tensor(0.0327, device='cuda:0')), ('pohjolan', tensor(0., device='cuda:0')), ('voima', tensor(0., device='cuda:0')), (',', tensor(0.0864, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('utilising', tensor(0., device='cuda:0')), ('its', tensor(0.0186, device='cuda:0')), ('existing', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0'))]
idx: 743, example: The statutory negotiations at headquarters are part of this decrease , prediction: 2, correct_label: 2, class_scores: [0.15656705 0.41278794 0.430645  ], word_scores: ['the:6.3806996877247e-06', 'statutory:0.0', 'negotiations:0.0', 'at:0.0', 'headquarters:0.0', 'are:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'this:0.0', 'decrease:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6499, device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('headquarters', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('decrease', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6499, device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('headquarters', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('decrease', tensor(0., device='cuda:0'))]
idx: 744, example: Once your plants are in the ground they will continue to grow , but the success of any garden lies in how well it 's maintained , prediction: 2, correct_label: 2, class_scores: [0.2952382  0.30752584 0.39723596], word_scores: ['once:0.0', 'your:0.0', 'plants:0.0', 'are:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'ground:0.0', 'they:0.0', 'will:4.073096533829812e-06', 'continue:0.0', 'to:2.886244146793615e-06', 'grow:0.0', ',:7.986737728060689e-06', 'but:0.0', 'the:6.3806996877247e-06', 'success:0.0', 'of:3.4365734791208524e-06', 'any:0.0', 'garden:0.0', 'lies:0.0', 'in:3.0217122457543155e-06', 'how:0.0', 'well:0.0', 'it:3.3415778943890473e-06', "':0.0", 's:0.0', 'maintained:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('once', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('ground', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.1095, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.0776, device='cuda:0')), ('grow', tensor(0., device='cuda:0')), (',', tensor(0.2148, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('of', tensor(0.0924, device='cuda:0')), ('any', tensor(0., device='cuda:0')), ('garden', tensor(0., device='cuda:0')), ('lies', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0'))],  word_scores_max: [('once', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('plants', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('ground', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.1095, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.0776, device='cuda:0')), ('grow', tensor(0., device='cuda:0')), (',', tensor(0.2148, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('of', tensor(0.0924, device='cuda:0')), ('any', tensor(0., device='cuda:0')), ('garden', tensor(0., device='cuda:0')), ('lies', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0'))]
idx: 745, example: Sony Ericsson and Nokia dominated the list of best-selling handsets with five models each , prediction: 2, correct_label: 1, class_scores: [0.13168277 0.4253063  0.4430109 ], word_scores: ['sony:0.0', 'eric:0.0', '##sson:0.0', 'and:0.0', 'nokia:0.0', 'dominated:0.0', 'the:6.3806996877247e-06', 'list:0.0', 'of:3.4365734791208524e-06', 'best:0.0', '-:4.821180027647642e-06', 'selling:0.0', 'hands:0.0', '##ets:0.0', 'with:4.733654350275174e-06', 'five:0.0', 'models:0.0', 'each:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sony', tensor(0., device='cuda:0')), ('ericsson', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('dominated', tensor(0., device='cuda:0')), ('the', tensor(0.3294, device='cuda:0')), ('list', tensor(0., device='cuda:0')), ('of', tensor(0.1774, device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('-', tensor(0.2489, device='cuda:0')), ('selling', tensor(0., device='cuda:0')), ('handsets', tensor(0., device='cuda:0')), ('with', tensor(0.2444, device='cuda:0')), ('five', tensor(0., device='cuda:0')), ('models', tensor(0., device='cuda:0')), ('each', tensor(0., device='cuda:0'))],  word_scores_max: [('sony', tensor(0., device='cuda:0')), ('ericsson', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nokia', tensor(0., device='cuda:0')), ('dominated', tensor(0., device='cuda:0')), ('the', tensor(0.3294, device='cuda:0')), ('list', tensor(0., device='cuda:0')), ('of', tensor(0.1774, device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('-', tensor(0.2489, device='cuda:0')), ('selling', tensor(0., device='cuda:0')), ('handsets', tensor(0., device='cuda:0')), ('with', tensor(0.2444, device='cuda:0')), ('five', tensor(0., device='cuda:0')), ('models', tensor(0., device='cuda:0')), ('each', tensor(0., device='cuda:0'))]
idx: 746, example: The company 's profit before taxes fell to EUR 21.1 mn in the third quarter of 2008 , compared to EUR 35.8 mn in the corresponding period in 2007 , prediction: 2, correct_label: 0, class_scores: [0.23852049 0.35949948 0.40197995], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'profit:0.0', 'before:0.0', 'taxes:0.0', 'fell:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '21:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2008:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '35:0.0', '.:2.903296945078182e-06', '8:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 747, example: Efore 's CEO Reijo Maihaniemi said that the company has developed and already delivered power supply units to respective systems based on this technology to Chinese sector company ZTE Corp SHE : 000063 , prediction: 1, correct_label: 2, class_scores: [0.2089792  0.42529652 0.36572424], word_scores: ['e:0.0', '##for:0.0', '##e:0.0', "':0.0", 's:0.0', 'ceo:0.0', 'rei:0.0', '##jo:0.0', 'mai:0.0', '##hani:0.0', '##emi:0.0', 'said:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'developed:2.488632617314579e-06', 'and:0.0', 'already:0.0', 'delivered:0.0', 'power:0.0', 'supply:6.221108833415201e-06', 'units:2.8638919502554927e-06', 'to:2.886244146793615e-06', 'respective:0.0', 'systems:0.0', 'based:0.0', 'on:0.0', 'this:0.0', 'technology:0.0', 'to:2.886244146793615e-06', 'chinese:0.0', 'sector:0.0', 'company:6.695386673527537e-06', 'z:0.0', '##te:0.0', 'corp:0.0', 'she:0.0', '::0.0', '000:0.0', '##0:0.0', '##6:0.0', '##3:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 748, example: One of the headboxes will be equipped with a modern consistency control system to ensure cross machine profile of the plasterboard , company said in a statement received by Lesprom Network , prediction: 2, correct_label: 2, class_scores: [0.1711009  0.3730751  0.45582402], word_scores: ['one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'head:0.0', '##box:0.0', '##es:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'equipped:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'modern:0.0', 'consistency:0.0', 'control:0.0', 'system:2.472523192409426e-06', 'to:2.886244146793615e-06', 'ensure:0.0', 'cross:0.0', 'machine:0.0', 'profile:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'plaster:0.0', '##board:0.0', ',:7.986737728060689e-06', 'company:6.695386673527537e-06', 'said:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'statement:0.0', 'received:0.0', 'by:0.0', 'les:0.0', '##pro:0.0', '##m:0.0', 'network:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('one', tensor(0.0625, device='cuda:0')), ('of', tensor(0.0469, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('headboxes', tensor(0., device='cuda:0')), ('will', tensor(0.0555, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('equipped', tensor(0., device='cuda:0')), ('with', tensor(0.0645, device='cuda:0')), ('a', tensor(0.1176, device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('consistency', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('system', tensor(0.0337, device='cuda:0')), ('to', tensor(0.0394, device='cuda:0')), ('ensure', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('machine', tensor(0., device='cuda:0')), ('profile', tensor(0., device='cuda:0')), ('of', tensor(0.0469, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('plasterboard', tensor(0., device='cuda:0')), (',', tensor(0.1089, device='cuda:0')), ('company', tensor(0.0913, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0412, device='cuda:0')), ('a', tensor(0.1176, device='cuda:0')), ('statement', tensor(0., device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lesprom', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0'))],  word_scores_max: [('one', tensor(0.0625, device='cuda:0')), ('of', tensor(0.0469, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('headboxes', tensor(0., device='cuda:0')), ('will', tensor(0.0555, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('equipped', tensor(0., device='cuda:0')), ('with', tensor(0.0645, device='cuda:0')), ('a', tensor(0.1176, device='cuda:0')), ('modern', tensor(0., device='cuda:0')), ('consistency', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('system', tensor(0.0337, device='cuda:0')), ('to', tensor(0.0394, device='cuda:0')), ('ensure', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('machine', tensor(0., device='cuda:0')), ('profile', tensor(0., device='cuda:0')), ('of', tensor(0.0469, device='cuda:0')), ('the', tensor(0.0870, device='cuda:0')), ('plasterboard', tensor(0., device='cuda:0')), (',', tensor(0.1089, device='cuda:0')), ('company', tensor(0.0913, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0412, device='cuda:0')), ('a', tensor(0.1176, device='cuda:0')), ('statement', tensor(0., device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lesprom', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0'))]
idx: 749, example: The company , which makes garden tools , scissors and other consumer goods , said earnings were boosted by 6.9 mln eur of income it received from its 16.7 pct shareholding in Finnish engineering group Wartsila , prediction: 1, correct_label: 1, class_scores: [0.21180421 0.39433795 0.39385775], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', ',:7.986737728060689e-06', 'which:0.0', 'makes:0.0', 'garden:0.0', 'tools:0.0', ',:7.986737728060689e-06', 'scissors:0.0', 'and:0.0', 'other:0.0', 'consumer:0.0', 'goods:0.0', ',:7.986737728060689e-06', 'said:0.0', 'earnings:0.0', 'were:0.0', 'boosted:0.0', 'by:0.0', '6:0.0', '.:2.903296945078182e-06', '9:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', 'of:3.4365734791208524e-06', 'income:0.0', 'it:3.3415778943890473e-06', 'received:0.0', 'from:4.495178018260049e-06', 'its:1.7191393908433383e-06', '16:0.0', '.:2.903296945078182e-06', '7:0.0', 'pc:0.0', '##t:0.0', 'share:0.0', '##holding:0.0', 'in:3.0217122457543155e-06', 'finnish:0.0', 'engineering:0.0', 'group:0.0', 'war:0.0', '##ts:0.0', '##ila:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1084, device='cuda:0')), ('company', tensor(0.1138, device='cuda:0')), (',', tensor(0.1357, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('makes', tensor(0., device='cuda:0')), ('garden', tensor(0., device='cuda:0')), ('tools', tensor(0., device='cuda:0')), (',', tensor(0.1357, device='cuda:0')), ('scissors', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), (',', tensor(0.1357, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('boosted', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0493, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('of', tensor(0.0584, device='cuda:0')), ('income', tensor(0., device='cuda:0')), ('it', tensor(0.0568, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('from', tensor(0.0764, device='cuda:0')), ('its', tensor(0.0292, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.0493, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('shareholding', tensor(0., device='cuda:0')), ('in', tensor(0.0513, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('wartsila', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1084, device='cuda:0')), ('company', tensor(0.1138, device='cuda:0')), (',', tensor(0.1357, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('makes', tensor(0., device='cuda:0')), ('garden', tensor(0., device='cuda:0')), ('tools', tensor(0., device='cuda:0')), (',', tensor(0.1357, device='cuda:0')), ('scissors', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('consumer', tensor(0., device='cuda:0')), ('goods', tensor(0., device='cuda:0')), (',', tensor(0.1357, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('boosted', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0493, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('of', tensor(0.0584, device='cuda:0')), ('income', tensor(0., device='cuda:0')), ('it', tensor(0.0568, device='cuda:0')), ('received', tensor(0., device='cuda:0')), ('from', tensor(0.0764, device='cuda:0')), ('its', tensor(0.0292, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('.', tensor(0.0493, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('shareholding', tensor(0., device='cuda:0')), ('in', tensor(0.0513, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('wartsila', tensor(0., device='cuda:0'))]
idx: 750, example: The relocation of Ragot has already started and will be completed in the next few weeks , with the Waterqueen and Tortue moves planned for mid-2008 and VMC Europe during the third quarter of 2008 , prediction: 2, correct_label: 2, class_scores: [0.13563816 0.3836033  0.48075855], word_scores: ['the:6.3806996877247e-06', 'relocation:0.0', 'of:3.4365734791208524e-06', 'rag:0.0', '##ot:0.0', 'has:5.9214244174654596e-06', 'already:0.0', 'started:0.0', 'and:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'completed:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'next:0.0', 'few:0.0', 'weeks:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'water:0.0', '##que:0.0', '##en:0.0', 'and:0.0', 'tor:0.0', '##tu:0.0', '##e:0.0', 'moves:0.0', 'planned:0.0', 'for:0.0', 'mid:0.0', '-:4.821180027647642e-06', '2008:0.0', 'and:0.0', 'v:0.0', '##mc:0.0', 'europe:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1014, device='cuda:0')), ('relocation', tensor(0., device='cuda:0')), ('of', tensor(0.0546, device='cuda:0')), ('ragot', tensor(0., device='cuda:0')), ('has', tensor(0.0941, device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.0647, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.0480, device='cuda:0')), ('the', tensor(0.1014, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), (',', tensor(0.1269, device='cuda:0')), ('with', tensor(0.0752, device='cuda:0')), ('the', tensor(0.1014, device='cuda:0')), ('waterqueen', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('tortue', tensor(0., device='cuda:0')), ('moves', tensor(0., device='cuda:0')), ('planned', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.0766, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('vmc', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1014, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0546, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1014, device='cuda:0')), ('relocation', tensor(0., device='cuda:0')), ('of', tensor(0.0546, device='cuda:0')), ('ragot', tensor(0., device='cuda:0')), ('has', tensor(0.0941, device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.0647, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('in', tensor(0.0480, device='cuda:0')), ('the', tensor(0.1014, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), (',', tensor(0.1269, device='cuda:0')), ('with', tensor(0.0752, device='cuda:0')), ('the', tensor(0.1014, device='cuda:0')), ('waterqueen', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('tortue', tensor(0., device='cuda:0')), ('moves', tensor(0., device='cuda:0')), ('planned', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('-', tensor(0.0766, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('vmc', tensor(0., device='cuda:0')), ('europe', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1014, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0546, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 751, example: Operating loss totalled EUR 12.7 mn , compared to a profit of EUR 17.7 mn in the first half of 2008 , prediction: 2, correct_label: 0, class_scores: [0.32333875 0.29879013 0.37787107], word_scores: ['operating:0.0', 'loss:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '12:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '17:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1921, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0694, device='cuda:0')), ('a', tensor(0.2075, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0727, device='cuda:0')), ('the', tensor(0.1534, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1921, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0694, device='cuda:0')), ('a', tensor(0.2075, device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0727, device='cuda:0')), ('the', tensor(0.1534, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 752, example: The ongoing project where Tekla Structures is being used is the Vashi Exhibition Centre being developed by Insteel Engineers Pvt Ltd-IIVRCL Infrastructures & Projects Ltd & CIDCO , prediction: 2, correct_label: 2, class_scores: [0.19669957 0.37317216 0.43012825], word_scores: ['the:6.3806996877247e-06', 'ongoing:0.0', 'project:0.0', 'where:0.0', 'te:0.0', '##kla:0.0', 'structures:0.0', 'is:0.0', 'being:0.0', 'used:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'va:2.3812995095795486e-06', '##shi:0.0', 'exhibition:0.0', 'centre:0.0', 'being:0.0', 'developed:2.488632617314579e-06', 'by:0.0', 'ins:0.0', '##tee:0.0', '##l:0.0', 'engineers:0.0', 'pv:0.0', '##t:0.0', 'ltd:0.0', '-:4.821180027647642e-06', 'ii:0.0', '##vr:0.0', '##cl:0.0', 'infrastructure:0.0', '##s:4.601175078278175e-06', '&:0.0', 'projects:0.0', 'ltd:0.0', '&:0.0', 'cid:0.0', '##co:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2842, device='cuda:0')), ('ongoing', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('tekla', tensor(0., device='cuda:0')), ('structures', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2842, device='cuda:0')), ('vashi', tensor(0.1061, device='cuda:0')), ('exhibition', tensor(0., device='cuda:0')), ('centre', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('developed', tensor(0.1108, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('insteel', tensor(0., device='cuda:0')), ('engineers', tensor(0., device='cuda:0')), ('pvt', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('-', tensor(0.2147, device='cuda:0')), ('iivrcl', tensor(0., device='cuda:0')), ('infrastructures', tensor(0., device='cuda:0')), ('projects', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('cidco', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2842, device='cuda:0')), ('ongoing', tensor(0., device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('tekla', tensor(0., device='cuda:0')), ('structures', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.2842, device='cuda:0')), ('vashi', tensor(0.1061, device='cuda:0')), ('exhibition', tensor(0., device='cuda:0')), ('centre', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('developed', tensor(0.1108, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('insteel', tensor(0., device='cuda:0')), ('engineers', tensor(0., device='cuda:0')), ('pvt', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('-', tensor(0.2147, device='cuda:0')), ('iivrcl', tensor(0., device='cuda:0')), ('infrastructures', tensor(0., device='cuda:0')), ('projects', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('cidco', tensor(0., device='cuda:0'))]
idx: 753, example: ( ADPnews ) - May 4 , 2010 - Finnish cutlery and hand tools maker Fiskars Oyj Abp ( HEL : FISAS ) said today its net profit declined to EUR 12.9 million ( USD 17m ) in the first quarter of 2010 from EUR 17 million in the correspon, prediction: 1, correct_label: 0, class_scores: [0.22848922 0.40397054 0.3675402 ], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', '##ne:8.183636964531615e-06', '##ws:0.0', '):0.0', '-:4.821180027647642e-06', 'may:0.0', '4:0.0', ',:7.986737728060689e-06', '2010:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'cutler:0.0', 'ab:0.0', '##p:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'fis:0.0', '##as:0.0', '):0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'declined:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '12:0.0', '.:2.903296945078182e-06', '9:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '17:0.0', '##m:0.0', '):0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '17:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'co:0.0', '##rre:0.0', '##sp:0.0', '##on:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adpnews', tensor(0.1135, device='cuda:0')), ('-', tensor(0.0669, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), (',', tensor(0.1108, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0669, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('cutler', tensor(0., device='cuda:0')), ('abp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fisas', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0238, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('declined', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0403, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.0835, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('17m', tensor(0., device='cuda:0')), ('in', tensor(0.0419, device='cuda:0')), ('the', tensor(0.0885, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0477, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0624, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('million', tensor(0.0835, device='cuda:0')), ('in', tensor(0.0419, device='cuda:0')), ('the', tensor(0.0885, device='cuda:0')), ('correspon', tensor(0., device='cuda:0'))],  word_scores_max: [('adpnews', tensor(0.1135, device='cuda:0')), ('-', tensor(0.0669, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), (',', tensor(0.1108, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('-', tensor(0.0669, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('cutler', tensor(0., device='cuda:0')), ('abp', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('fisas', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0238, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('declined', tensor(0., device='cuda:0')), ('to', tensor(0.0400, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('.', tensor(0.0403, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('million', tensor(0.0835, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('17m', tensor(0., device='cuda:0')), ('in', tensor(0.0419, device='cuda:0')), ('the', tensor(0.0885, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0477, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0624, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('million', tensor(0.0835, device='cuda:0')), ('in', tensor(0.0419, device='cuda:0')), ('the', tensor(0.0885, device='cuda:0')), ('correspon', tensor(0., device='cuda:0'))]
idx: 754, example: In Finland , media group Talentum will start personnel negotiations to cut staff in parent company Talentum and publishing unit Talentum media , prediction: 2, correct_label: 0, class_scores: [0.21941966 0.34532067 0.43525967], word_scores: ['in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'media:0.0', 'group:0.0', 'talent:0.0', '##um:0.0', 'will:4.073096533829812e-06', 'start:0.0', 'personnel:0.0', 'negotiations:0.0', 'to:2.886244146793615e-06', 'cut:0.0', 'staff:0.0', 'in:3.0217122457543155e-06', 'parent:0.0', 'company:6.695386673527537e-06', 'talent:0.0', '##um:0.0', 'and:0.0', 'publishing:0.0', 'unit:0.0', 'talent:0.0', '##um:0.0', 'media:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0951, device='cuda:0')), ('finland', tensor(0.1289, device='cuda:0')), (',', tensor(0.2513, device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('will', tensor(0.1282, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('to', tensor(0.0908, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('in', tensor(0.0951, device='cuda:0')), ('parent', tensor(0., device='cuda:0')), ('company', tensor(0.2107, device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('publishing', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0951, device='cuda:0')), ('finland', tensor(0.1289, device='cuda:0')), (',', tensor(0.2513, device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('will', tensor(0.1282, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('to', tensor(0.0908, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('in', tensor(0.0951, device='cuda:0')), ('parent', tensor(0., device='cuda:0')), ('company', tensor(0.2107, device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('publishing', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('talentum', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0'))]
idx: 755, example: By acquiring RCP , we can combine our strong knowhow with the expertise of a solid local company , prediction: 2, correct_label: 1, class_scores: [0.19632092 0.38677505 0.41690403], word_scores: ['by:0.0', 'acquiring:0.0', 'rc:0.0', '##p:0.0', ',:7.986737728060689e-06', 'we:0.0', 'can:0.0', 'combine:0.0', 'our:0.0', 'strong:0.0', 'know:0.0', '##how:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'expertise:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'solid:0.0', 'local:0.0', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('by', tensor(0., device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('rcp', tensor(0., device='cuda:0')), (',', tensor(0.2109, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('combine', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('knowhow', tensor(0., device='cuda:0')), ('with', tensor(0.1250, device='cuda:0')), ('the', tensor(0.1685, device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('of', tensor(0.0908, device='cuda:0')), ('a', tensor(0.2279, device='cuda:0')), ('solid', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('company', tensor(0.1768, device='cuda:0'))],  word_scores_max: [('by', tensor(0., device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('rcp', tensor(0., device='cuda:0')), (',', tensor(0.2109, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('combine', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('knowhow', tensor(0., device='cuda:0')), ('with', tensor(0.1250, device='cuda:0')), ('the', tensor(0.1685, device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('of', tensor(0.0908, device='cuda:0')), ('a', tensor(0.2279, device='cuda:0')), ('solid', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('company', tensor(0.1768, device='cuda:0'))]
idx: 756, example: Teleste and Sentry 360 have formed an integration partnership between Sentry s advanced 360-degree immersive camera product line and Teleste s enterprise video management systems , prediction: 2, correct_label: 1, class_scores: [0.20816089 0.37320688 0.41863224], word_scores: ['tel:0.0', '##est:0.0', '##e:0.0', 'and:0.0', 'sent:0.0', '##ry:0.0', '360:0.0', 'have:2.910326429628185e-06', 'formed:0.0', 'an:0.0', 'integration:0.0', 'partnership:0.0', 'between:0.0', 'sent:0.0', '##ry:0.0', 's:0.0', 'advanced:0.0', '360:0.0', '-:4.821180027647642e-06', 'degree:0.0', 'im:0.0', '##mers:0.0', '##ive:0.0', 'camera:0.0', 'product:0.0', 'line:0.0', 'and:0.0', 'tel:0.0', '##est:0.0', '##e:0.0', 's:0.0', 'enterprise:0.0', 'video:0.0', 'management:0.0', 'systems:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('teleste', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sentry', tensor(0., device='cuda:0')), ('360', tensor(0., device='cuda:0')), ('have', tensor(0.3764, device='cuda:0')), ('formed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('integration', tensor(0., device='cuda:0')), ('partnership', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('sentry', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('advanced', tensor(0., device='cuda:0')), ('360', tensor(0., device='cuda:0')), ('-', tensor(0.6236, device='cuda:0')), ('degree', tensor(0., device='cuda:0')), ('immersive', tensor(0., device='cuda:0')), ('camera', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('enterprise', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0'))],  word_scores_max: [('teleste', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sentry', tensor(0., device='cuda:0')), ('360', tensor(0., device='cuda:0')), ('have', tensor(0.3764, device='cuda:0')), ('formed', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('integration', tensor(0., device='cuda:0')), ('partnership', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('sentry', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('advanced', tensor(0., device='cuda:0')), ('360', tensor(0., device='cuda:0')), ('-', tensor(0.6236, device='cuda:0')), ('degree', tensor(0., device='cuda:0')), ('immersive', tensor(0., device='cuda:0')), ('camera', tensor(0., device='cuda:0')), ('product', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('teleste', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('enterprise', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0'))]
idx: 757, example: Stora Enso said DeLight was suitable for a wide range of applications including food , cosmetics , home decoration and leisure products , prediction: 2, correct_label: 2, class_scores: [0.2764292  0.34773543 0.37583542], word_scores: ['st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'said:0.0', 'delight:0.0', 'was:0.0', 'suitable:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'wide:0.0', 'range:0.0', 'of:3.4365734791208524e-06', 'applications:0.0', 'including:0.0', 'food:0.0', ',:7.986737728060689e-06', 'cosmetics:0.0', ',:7.986737728060689e-06', 'home:0.0', 'decoration:0.0', 'and:0.0', 'leisure:0.0', 'products:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0710, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('delight', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('suitable', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2859, device='cuda:0')), ('wide', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.1139, device='cuda:0')), ('applications', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), (',', tensor(0.2646, device='cuda:0')), ('cosmetics', tensor(0., device='cuda:0')), (',', tensor(0.2646, device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('decoration', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('leisure', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))],  word_scores_max: [('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0710, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('delight', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('suitable', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2859, device='cuda:0')), ('wide', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.1139, device='cuda:0')), ('applications', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), (',', tensor(0.2646, device='cuda:0')), ('cosmetics', tensor(0., device='cuda:0')), (',', tensor(0.2646, device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('decoration', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('leisure', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))]
idx: 758, example: EuroChem CFO Andrey Ilyin said : `` This facility marks another important step for EuroChem in securing the long-term financing necessary for our potash and other strategic projects '' , prediction: 1, correct_label: 1, class_scores: [0.19109638 0.4233428  0.38556075], word_scores: ['euro:0.0', '##che:0.0', '##m:0.0', 'cf:0.0', '##o:0.0', 'andrey:0.0', 'il:0.0', '##yin:0.0', 'said:0.0', '::0.0', '`:0.0', '`:0.0', 'this:0.0', 'facility:0.0', 'marks:0.0', 'another:0.0', 'important:0.0', 'step:0.0', 'for:0.0', 'euro:0.0', '##che:0.0', '##m:0.0', 'in:3.0217122457543155e-06', 'securing:0.0', 'the:6.3806996877247e-06', 'long:0.0', '-:4.821180027647642e-06', 'term:0.0', 'financing:0.0', 'necessary:0.0', 'for:0.0', 'our:0.0', 'pot:0.0', '##ash:0.0', 'and:0.0', 'other:0.0', 'strategic:0.0', 'projects:0.0', "':0.0", "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('eurochem', tensor(0., device='cuda:0')), ('cfo', tensor(0., device='cuda:0')), ('andrey', tensor(0., device='cuda:0')), ('ilyin', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('marks', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('step', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('eurochem', tensor(0., device='cuda:0')), ('in', tensor(0.2124, device='cuda:0')), ('securing', tensor(0., device='cuda:0')), ('the', tensor(0.4486, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.3390, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('necessary', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('potash', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('strategic', tensor(0., device='cuda:0'))],  word_scores_max: [('eurochem', tensor(0., device='cuda:0')), ('cfo', tensor(0., device='cuda:0')), ('andrey', tensor(0., device='cuda:0')), ('ilyin', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('marks', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('step', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('eurochem', tensor(0., device='cuda:0')), ('in', tensor(0.2124, device='cuda:0')), ('securing', tensor(0., device='cuda:0')), ('the', tensor(0.4486, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.3390, device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('necessary', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('potash', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('strategic', tensor(0., device='cuda:0'))]
idx: 759, example: Uponor made an operating profit of EUR 151.0 mn , up from EUR 143.7 mn , which made 2007 a record year , prediction: 1, correct_label: 1, class_scores: [0.21009888 0.4226988  0.36720228], word_scores: ['upon:0.0', '##or:0.0', 'made:0.0', 'an:0.0', 'operating:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '151:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '143:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'which:0.0', 'made:0.0', '2007:0.0', 'a:8.62785782373976e-06', 'record:0.0', 'year:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('uponor', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0863, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('151', tensor(0., device='cuda:0')), ('.', tensor(0.0729, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2005, device='cuda:0')), ('up', tensor(0.0376, device='cuda:0')), ('from', tensor(0.1128, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('143', tensor(0., device='cuda:0')), ('.', tensor(0.0729, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2005, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('a', tensor(0.2166, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('uponor', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0863, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('151', tensor(0., device='cuda:0')), ('.', tensor(0.0729, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2005, device='cuda:0')), ('up', tensor(0.0376, device='cuda:0')), ('from', tensor(0.1128, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('143', tensor(0., device='cuda:0')), ('.', tensor(0.0729, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2005, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('a', tensor(0.2166, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 760, example: Pretax loss totaled EUR 117mn compared to a loss of EUR 65mn in the corresponding period , prediction: 2, correct_label: 0, class_scores: [0.14335594 0.42721206 0.429432  ], word_scores: ['pre:0.0', '##ta:0.0', '##x:0.0', 'loss:0.0', 'totaled:0.0', 'eu:0.0', '##r:0.0', '117:0.0', '##m:0.0', '##n:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '65:0.0', '##m:0.0', '##n:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pretax', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('117mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.1185, device='cuda:0')), ('a', tensor(0.3543, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1411, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('65mn', tensor(0., device='cuda:0')), ('in', tensor(0.1241, device='cuda:0')), ('the', tensor(0.2620, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0'))],  word_scores_max: [('pretax', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('totaled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('117mn', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.1185, device='cuda:0')), ('a', tensor(0.3543, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.1411, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('65mn', tensor(0., device='cuda:0')), ('in', tensor(0.1241, device='cuda:0')), ('the', tensor(0.2620, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0'))]
idx: 761, example: The Finnish company is building a 800,000 mt-year biodiesel plant in Singapore , prediction: 2, correct_label: 2, class_scores: [0.21188362 0.38705003 0.40106633], word_scores: ['the:6.3806996877247e-06', 'finnish:0.0', 'company:6.695386673527537e-06', 'is:0.0', 'building:0.0', 'a:8.62785782373976e-06', '800:0.0', ',:7.986737728060689e-06', '000:0.0', 'mt:0.0', '-:4.821180027647642e-06', 'year:0.0', 'bio:0.0', '##dies:0.0', '##el:0.0', 'plant:0.0', 'in:3.0217122457543155e-06', 'singapore:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1700, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('company', tensor(0.1784, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('a', tensor(0.2299, device='cuda:0')), ('800', tensor(0., device='cuda:0')), (',', tensor(0.2128, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('mt', tensor(0., device='cuda:0')), ('-', tensor(0.1284, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('biodiesel', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('in', tensor(0.0805, device='cuda:0')), ('singapore', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1700, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('company', tensor(0.1784, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('a', tensor(0.2299, device='cuda:0')), ('800', tensor(0., device='cuda:0')), (',', tensor(0.2128, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('mt', tensor(0., device='cuda:0')), ('-', tensor(0.1284, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('biodiesel', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('in', tensor(0.0805, device='cuda:0')), ('singapore', tensor(0., device='cuda:0'))]
idx: 762, example: `` The Intel Atom processor has had tremendous success in the marketplace since its launch over 2 years ago , '' said Pankaj Kedia , director of global ecosystem programs for Intel Corp. 's Ultra Mobility Group , prediction: 2, correct_label: 1, class_scores: [0.18103486 0.31986085 0.49910426], word_scores: ['`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'intel:0.0', 'atom:0.0', 'processor:0.0', 'has:5.9214244174654596e-06', 'had:0.0', 'tremendous:0.0', 'success:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'marketplace:0.0', 'since:0.0', 'its:1.7191393908433383e-06', 'launch:0.0', 'over:0.0', '2:0.0', 'years:0.0', 'ago:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'said:0.0', 'pan:0.0', '##ka:0.0', '##j:0.0', 'ked:0.0', '##ia:0.0', ',:7.986737728060689e-06', 'director:0.0', 'of:3.4365734791208524e-06', 'global:0.0', 'ecosystem:0.0', 'programs:0.0', 'for:0.0', 'intel:0.0', 'corp:0.0', '.:2.903296945078182e-06', "':0.0", 's:0.0', 'ultra:0.0', 'mobility:0.0', 'group:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2031, device='cuda:0')), ('intel', tensor(0., device='cuda:0')), ('atom', tensor(0., device='cuda:0')), ('processor', tensor(0., device='cuda:0')), ('has', tensor(0.1885, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('tremendous', tensor(0., device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('in', tensor(0.0962, device='cuda:0')), ('the', tensor(0.2031, device='cuda:0')), ('marketplace', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('its', tensor(0.0547, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0')), (',', tensor(0.2543, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2031, device='cuda:0')), ('intel', tensor(0., device='cuda:0')), ('atom', tensor(0., device='cuda:0')), ('processor', tensor(0., device='cuda:0')), ('has', tensor(0.1885, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('tremendous', tensor(0., device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('in', tensor(0.0962, device='cuda:0')), ('the', tensor(0.2031, device='cuda:0')), ('marketplace', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('its', tensor(0.0547, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0')), (',', tensor(0.2543, device='cuda:0'))]
idx: 763, example: mr Bakman sees also expansion options on the Tallinn-Helisnki link , claiming however , that operating the link with only a single ship is not enough , prediction: 2, correct_label: 2, class_scores: [0.27272972 0.26557115 0.46169913], word_scores: ['mr:0.0', 'ba:0.0', '##km:0.0', '##an:0.0', 'sees:0.0', 'also:0.0', 'expansion:0.0', 'options:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'tallinn:0.0', '-:4.821180027647642e-06', 'he:0.0', '##lis:0.0', '##nk:0.0', '##i:0.0', 'link:0.0', ',:7.986737728060689e-06', 'claiming:0.0', 'however:0.0', ',:7.986737728060689e-06', 'that:1.5133816759771435e-06', 'operating:0.0', 'the:6.3806996877247e-06', 'link:0.0', 'with:4.733654350275174e-06', 'only:0.0', 'a:8.62785782373976e-06', 'single:0.0', 'ship:0.0', 'is:0.0', 'not:0.0', 'enough:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('mr', tensor(0., device='cuda:0')), ('bakman', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1317, device='cuda:0')), ('tallinn', tensor(0., device='cuda:0')), ('-', tensor(0.0995, device='cuda:0')), ('helisnki', tensor(0., device='cuda:0')), ('link', tensor(0., device='cuda:0')), (',', tensor(0.1649, device='cuda:0')), ('claiming', tensor(0., device='cuda:0')), ('however', tensor(0., device='cuda:0')), (',', tensor(0.1649, device='cuda:0')), ('that', tensor(0.0312, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('the', tensor(0.1317, device='cuda:0')), ('link', tensor(0., device='cuda:0')), ('with', tensor(0.0977, device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('a', tensor(0.1781, device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('enough', tensor(0., device='cuda:0'))],  word_scores_max: [('mr', tensor(0., device='cuda:0')), ('bakman', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1317, device='cuda:0')), ('tallinn', tensor(0., device='cuda:0')), ('-', tensor(0.0995, device='cuda:0')), ('helisnki', tensor(0., device='cuda:0')), ('link', tensor(0., device='cuda:0')), (',', tensor(0.1649, device='cuda:0')), ('claiming', tensor(0., device='cuda:0')), ('however', tensor(0., device='cuda:0')), (',', tensor(0.1649, device='cuda:0')), ('that', tensor(0.0312, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('the', tensor(0.1317, device='cuda:0')), ('link', tensor(0., device='cuda:0')), ('with', tensor(0.0977, device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('a', tensor(0.1781, device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('enough', tensor(0., device='cuda:0'))]
idx: 764, example: Altimo and TeliaSonera said yesterday that Usmanov would be welcome to join the new company , prediction: 2, correct_label: 1, class_scores: [0.2383525  0.32278663 0.43886083], word_scores: ['alt:0.0', '##imo:0.0', 'and:0.0', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'said:0.0', 'yesterday:0.0', 'that:1.5133816759771435e-06', 'us:0.0', '##man:0.0', '##ov:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'welcome:0.0', 'to:2.886244146793615e-06', 'join:0.0', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('altimo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('that', tensor(0.0677, device='cuda:0')), ('usmanov', tensor(0., device='cuda:0')), ('would', tensor(0.0937, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('welcome', tensor(0., device='cuda:0')), ('to', tensor(0.1290, device='cuda:0')), ('join', tensor(0., device='cuda:0')), ('the', tensor(0.2852, device='cuda:0')), ('new', tensor(0.1251, device='cuda:0')), ('company', tensor(0.2993, device='cuda:0'))],  word_scores_max: [('altimo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('that', tensor(0.0677, device='cuda:0')), ('usmanov', tensor(0., device='cuda:0')), ('would', tensor(0.0937, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('welcome', tensor(0., device='cuda:0')), ('to', tensor(0.1290, device='cuda:0')), ('join', tensor(0., device='cuda:0')), ('the', tensor(0.2852, device='cuda:0')), ('new', tensor(0.1251, device='cuda:0')), ('company', tensor(0.2993, device='cuda:0'))]
idx: 765, example: Our standardised services have met with a positive reception among our customers as well as at Itella , prediction: 1, correct_label: 1, class_scores: [0.21740326 0.4173362  0.36526057], word_scores: ['our:0.0', 'standard:0.0', '##ised:5.989420969854109e-06', 'services:0.0', 'have:2.910326429628185e-06', 'met:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'positive:0.0', 'reception:0.0', 'among:0.0', 'our:0.0', 'customers:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'at:0.0', 'it:3.3415778943890473e-06', '##ella:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('our', tensor(0., device='cuda:0')), ('standardised', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('have', tensor(0.1484, device='cuda:0')), ('met', tensor(0., device='cuda:0')), ('with', tensor(0.2413, device='cuda:0')), ('a', tensor(0.4399, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('reception', tensor(0., device='cuda:0')), ('among', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('itella', tensor(0.1704, device='cuda:0'))],  word_scores_max: [('our', tensor(0., device='cuda:0')), ('standardised', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('have', tensor(0.1484, device='cuda:0')), ('met', tensor(0., device='cuda:0')), ('with', tensor(0.2413, device='cuda:0')), ('a', tensor(0.4399, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('reception', tensor(0., device='cuda:0')), ('among', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('itella', tensor(0.1704, device='cuda:0'))]
idx: 766, example: Aspo 's Group structure and business operations are developed persistently without any predefined schedules , prediction: 2, correct_label: 2, class_scores: [0.20374969 0.35047683 0.44577357], word_scores: ['as:0.0', '##po:0.0', "':0.0", 's:0.0', 'group:0.0', 'structure:0.0', 'and:0.0', 'business:0.0', 'operations:0.0', 'are:0.0', 'developed:2.488632617314579e-06', 'persistent:0.0', '##ly:0.0', 'without:0.0', 'any:0.0', 'pre:0.0', '##de:0.0', '##fine:0.0', '##d:0.0', 'schedules:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 767, example: As a domestic business , Best-In is already close to Finnish dog owners , prediction: 1, correct_label: 1, class_scores: [0.28393292 0.3846312  0.33143583], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'domestic:0.0', 'business:0.0', ',:7.986737728060689e-06', 'best:0.0', '-:4.821180027647642e-06', 'in:3.0217122457543155e-06', 'is:0.0', 'already:0.0', 'close:0.0', 'to:2.886244146793615e-06', 'finnish:0.0', 'dog:0.0', 'owners:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.3155, device='cuda:0')), ('domestic', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), (',', tensor(0.2921, device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('-', tensor(0.1763, device='cuda:0')), ('in', tensor(0.1105, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('to', tensor(0.1056, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('dog', tensor(0., device='cuda:0')), ('owners', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.3155, device='cuda:0')), ('domestic', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), (',', tensor(0.2921, device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('-', tensor(0.1763, device='cuda:0')), ('in', tensor(0.1105, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('to', tensor(0.1056, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('dog', tensor(0., device='cuda:0')), ('owners', tensor(0., device='cuda:0'))]
idx: 768, example: Den Bosch-based TomTom is Europe 's largest maker of automotive navigation devices , while Cayman Islands-based Garmin is larger in the U.S. and overall , prediction: 2, correct_label: 2, class_scores: [0.23819694 0.3395002  0.4223029 ], word_scores: ['den:0.0', 'bosch:0.0', '-:4.821180027647642e-06', 'based:0.0', 'tom:0.0', '##tom:0.0', 'is:0.0', 'europe:0.0', "':0.0", 's:0.0', 'largest:0.0', 'maker:0.0', 'of:3.4365734791208524e-06', 'automotive:0.0', 'navigation:0.0', 'devices:0.0', ',:7.986737728060689e-06', 'while:0.0', 'cayman:0.0', 'islands:0.0', '-:4.821180027647642e-06', 'based:0.0', 'ga:0.0', '##rmin:0.0', 'is:0.0', 'larger:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'u:0.0', '.:2.903296945078182e-06', 's:0.0', '.:2.903296945078182e-06', 'and:0.0', 'overall:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('den', tensor(0., device='cuda:0')), ('bosch', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('tomtom', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0'))],  word_scores_max: [('den', tensor(0., device='cuda:0')), ('bosch', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('tomtom', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0'))]
idx: 769, example: In the second quarter of 2010 , the group 's net profit rose to EUR 3.1 million from EUR 2.5 million in April-June 2009 , prediction: 2, correct_label: 1, class_scores: [0.18223567 0.36533475 0.45242956], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'net:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '3:0.0', '.:2.903296945078182e-06', '1:0.0', 'million:6.018835847498849e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', 'in:3.0217122457543155e-06', 'april:0.0', '-:4.821180027647642e-06', 'june:0.0', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1111, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1263, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2936, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1111, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.1263, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2936, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0'))]
idx: 770, example: Finnish communication electronics components supplier Scanfil Oyj Tuesday said sales in the first half of 2006 will be 15 % lower than during the same period a year ago , prediction: 1, correct_label: 0, class_scores: [0.16087231 0.4899501  0.3491775 ], word_scores: ['finnish:0.0', 'communication:3.43316605722066e-06', 'electronics:0.0', 'components:0.0', 'supplier:0.0', 'scan:0.0', '##fi:0.0', '##l:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'tuesday:0.0', 'said:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2006:0.0', 'will:4.073096533829812e-06', 'be:0.0', '15:0.0', '%:0.0', 'lower:0.0', 'than:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('communication', tensor(0.0923, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('components', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('scanfil', tensor(0., device='cuda:0')), ('oyj', tensor(0.0493, device='cuda:0')), ('tuesday', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0924, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('will', tensor(0.1095, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.2320, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('communication', tensor(0.0923, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), ('components', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('scanfil', tensor(0., device='cuda:0')), ('oyj', tensor(0.0493, device='cuda:0')), ('tuesday', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('in', tensor(0.0813, device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.0924, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('will', tensor(0.1095, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.1716, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.2320, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))]
idx: 771, example: All YIT Capital Markets Day materials will be available on the company 's Internet site at www.yitgroup.com/investors at 10:30 on September 26 , prediction: 2, correct_label: 2, class_scores: [0.14617467 0.40058887 0.45323643], word_scores: ['all:0.0', 'yi:0.0', '##t:0.0', 'capital:0.0', 'markets:0.0', 'day:0.0', 'materials:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'available:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'internet:0.0', 'site:0.0', 'at:0.0', 'www:0.0', '.:2.903296945078182e-06', 'yi:0.0', '##t:0.0', '##group:0.0', '.:2.903296945078182e-06', 'com:0.0', '/:0.0', 'investors:0.0', 'at:0.0', '10:0.0', '::0.0', '30:0.0', 'on:0.0', 'september:0.0', '26:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('all', tensor(0., device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0'))],  word_scores_max: [('all', tensor(0., device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('materials', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0'))]
idx: 772, example: ( ADP News ) - Feb 12 , 2009 - Finnish construction company Lemminkainen Oyj ( HEL : LEM1S ) said today its net profit decreased to EUR 63.5 million ( USD 81.1 m ) for 2008 from EUR 80.6 million for 2007 , prediction: 2, correct_label: 0, class_scores: [0.12594141 0.40034217 0.4737164 ], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', 'news:0.0', '):0.0', '-:4.821180027647642e-06', 'feb:0.0', '12:0.0', ',:7.986737728060689e-06', '2009:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'construction:0.0', 'company:6.695386673527537e-06', '##n:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'le:0.0', '##m:0.0', '##1:0.0', '##s:4.601175078278175e-06', '):0.0', 'said:0.0', 'today:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '63:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '81:0.0', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', '):0.0', 'for:0.0', '2008:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '80:0.0', '.:2.903296945078182e-06', '6:0.0', 'million:6.018835847498849e-06', 'for:0.0', '2007:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0861, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), (',', tensor(0.1426, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0861, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('companyn', tensor(0.1195, device='cuda:0')), ('oyj', tensor(0.0327, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('lem1s', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0307, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.0515, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('63', tensor(0., device='cuda:0')), ('.', tensor(0.0518, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.1075, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('81', tensor(0., device='cuda:0')), ('.', tensor(0.0518, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0803, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('.', tensor(0.0518, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1075, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0861, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), (',', tensor(0.1426, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.0861, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('construction', tensor(0., device='cuda:0')), ('companyn', tensor(0.1195, device='cuda:0')), ('oyj', tensor(0.0327, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('lem1s', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('its', tensor(0.0307, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.0515, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('63', tensor(0., device='cuda:0')), ('.', tensor(0.0518, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.1075, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('81', tensor(0., device='cuda:0')), ('.', tensor(0.0518, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0803, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('.', tensor(0.0518, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('million', tensor(0.1075, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 773, example: According to Ringman , Finnish paper companies have acquired know-how and capacity in paper recycling , which has turned out to be a successful strategy , prediction: 1, correct_label: 1, class_scores: [0.17208104 0.45188865 0.37603024], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'ring:0.0', '##man:0.0', ',:7.986737728060689e-06', 'finnish:0.0', 'paper:2.697490344871767e-06', 'companies:0.0', 'have:2.910326429628185e-06', 'acquired:0.0', 'know:0.0', '-:4.821180027647642e-06', 'how:0.0', 'and:0.0', 'capacity:0.0', 'in:3.0217122457543155e-06', 'paper:2.697490344871767e-06', 'recycling:0.0', ',:7.986737728060689e-06', 'which:0.0', 'has:5.9214244174654596e-06', 'turned:0.0', 'out:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'a:8.62785782373976e-06', 'successful:0.0', 'strategy:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.0550, device='cuda:0')), ('ringman', tensor(0., device='cuda:0')), (',', tensor(0.1523, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('paper', tensor(0.0514, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('have', tensor(0.0555, device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('know', tensor(0., device='cuda:0')), ('-', tensor(0.0919, device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('in', tensor(0.0576, device='cuda:0')), ('paper', tensor(0.0514, device='cuda:0')), ('recycling', tensor(0., device='cuda:0')), (',', tensor(0.1523, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('has', tensor(0.1129, device='cuda:0')), ('turned', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.0550, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1645, device='cuda:0')), ('successful', tensor(0., device='cuda:0')), ('strategy', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.0550, device='cuda:0')), ('ringman', tensor(0., device='cuda:0')), (',', tensor(0.1523, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('paper', tensor(0.0514, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('have', tensor(0.0555, device='cuda:0')), ('acquired', tensor(0., device='cuda:0')), ('know', tensor(0., device='cuda:0')), ('-', tensor(0.0919, device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('in', tensor(0.0576, device='cuda:0')), ('paper', tensor(0.0514, device='cuda:0')), ('recycling', tensor(0., device='cuda:0')), (',', tensor(0.1523, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('has', tensor(0.1129, device='cuda:0')), ('turned', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.0550, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.1645, device='cuda:0')), ('successful', tensor(0., device='cuda:0')), ('strategy', tensor(0., device='cuda:0'))]
idx: 774, example: Repair and maintenance business accounted for net sales of EUR 645.3 mn , up from EUR 563.6 mn , prediction: 2, correct_label: 1, class_scores: [0.24540943 0.33090925 0.42368138], word_scores: ['repair:0.0', 'and:0.0', 'maintenance:0.0', 'business:0.0', 'accounted:0.0', 'for:0.0', 'net:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '64:0.0', '##5:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '56:0.0', '##3:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('repair', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('accounted', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1480, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('645', tensor(0., device='cuda:0')), ('.', tensor(0.1250, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.3439, device='cuda:0')), ('up', tensor(0.0644, device='cuda:0')), ('from', tensor(0.1936, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('563', tensor(0., device='cuda:0')), ('.', tensor(0.1250, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('repair', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('maintenance', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('accounted', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.1480, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('645', tensor(0., device='cuda:0')), ('.', tensor(0.1250, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.3439, device='cuda:0')), ('up', tensor(0.0644, device='cuda:0')), ('from', tensor(0.1936, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('563', tensor(0., device='cuda:0')), ('.', tensor(0.1250, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 775, example: The company 's strength is its Apetit brand , prediction: 2, correct_label: 1, class_scores: [0.20476207 0.3230023  0.4722357 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'strength:0.0', 'is:0.0', 'its:1.7191393908433383e-06', 'ape:0.0', '##ti:2.5915114747476764e-06', '##t:0.0', 'brand:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0'))]
idx: 776, example: Nokia is requesting that the companies stop making and selling the mobile phones and pay monetary damages and costs , prediction: 2, correct_label: 2, class_scores: [0.15784404 0.32314628 0.51900965], word_scores: ['nokia:0.0', 'is:0.0', 'requesting:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'companies:0.0', 'stop:0.0', 'making:0.0', 'and:0.0', 'selling:0.0', 'the:6.3806996877247e-06', 'mobile:0.0', 'phones:0.0', 'and:0.0', 'pay:0.0', 'monetary:0.0', 'damages:0.0', 'and:0.0', 'costs:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('requesting', tensor(0., device='cuda:0')), ('that', tensor(0.1060, device='cuda:0')), ('the', tensor(0.4470, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('stop', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('selling', tensor(0., device='cuda:0')), ('the', tensor(0.4470, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phones', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('monetary', tensor(0., device='cuda:0')), ('damages', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('requesting', tensor(0., device='cuda:0')), ('that', tensor(0.1060, device='cuda:0')), ('the', tensor(0.4470, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('stop', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('selling', tensor(0., device='cuda:0')), ('the', tensor(0.4470, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('phones', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('monetary', tensor(0., device='cuda:0')), ('damages', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0'))]
idx: 777, example: Also Lemmink+�inen 's profit for accounting period went up to EUR 3.1 mn from EUR -24.5 mn a year ago , prediction: 2, correct_label: 1, class_scores: [0.21884166 0.3168372  0.46432117], word_scores: ['also:0.0', 'le:0.0', '##mm:0.0', '##ink:0.0', '+:0.0', 'in:3.0217122457543155e-06', '##en:0.0', "':0.0", 's:0.0', 'profit:0.0', 'for:0.0', 'accounting:0.0', 'period:0.0', 'went:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '3:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '-:4.821180027647642e-06', '24:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('also', tensor(nan, device='cuda:0')), ('lemmink', tensor(nan, device='cuda:0'))],  word_scores_max: [('also', tensor(nan, device='cuda:0')), ('lemmink', tensor(nan, device='cuda:0'))]
idx: 778, example: Apartments of YIT Home may be purchased in 5 regions of Russia , where YIT subsidiaries carry out their activities : Moscow and Moscow region , St. Petersburg , Ekaterinburg , Kazan and Rostov-on-Don , prediction: 2, correct_label: 2, class_scores: [0.15074822 0.35893205 0.49031976], word_scores: ['apartments:0.0', 'of:3.4365734791208524e-06', 'yi:0.0', '##t:0.0', 'home:0.0', 'may:0.0', 'be:0.0', 'purchased:0.0', 'in:3.0217122457543155e-06', '5:0.0', 'regions:0.0', 'of:3.4365734791208524e-06', 'russia:0.0', ',:7.986737728060689e-06', 'where:0.0', 'yi:0.0', '##t:0.0', 'subsidiaries:0.0', 'carry:0.0', 'out:0.0', 'their:0.0', 'activities:0.0', '::0.0', 'moscow:0.0', 'and:0.0', 'moscow:0.0', 'region:0.0', ',:7.986737728060689e-06', 'st:0.0', '.:2.903296945078182e-06', 'petersburg:0.0', ',:7.986737728060689e-06', 'ek:0.0', '##ater:0.0', '##in:0.0', '##burg:0.0', ',:7.986737728060689e-06', 'kazan:0.0', 'and:0.0', 'ro:0.0', '##stov:0.0', '-:4.821180027647642e-06', 'on:0.0', '-:4.821180027647642e-06', 'don:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('apartments', tensor(0., device='cuda:0')), ('of', tensor(0.0632, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('purchased', tensor(0., device='cuda:0')), ('in', tensor(0.0556, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('regions', tensor(0., device='cuda:0')), ('of', tensor(0.0632, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('subsidiaries', tensor(0., device='cuda:0')), ('carry', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('moscow', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('moscow', tensor(0., device='cuda:0')), ('region', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0534, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('ekaterinburg', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('kazan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('rostov', tensor(0., device='cuda:0')), ('-', tensor(0.0886, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0886, device='cuda:0')), ('don', tensor(0., device='cuda:0'))],  word_scores_max: [('apartments', tensor(0., device='cuda:0')), ('of', tensor(0.0632, device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('purchased', tensor(0., device='cuda:0')), ('in', tensor(0.0556, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('regions', tensor(0., device='cuda:0')), ('of', tensor(0.0632, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('yit', tensor(0., device='cuda:0')), ('subsidiaries', tensor(0., device='cuda:0')), ('carry', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('moscow', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('moscow', tensor(0., device='cuda:0')), ('region', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0534, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('ekaterinburg', tensor(0., device='cuda:0')), (',', tensor(0.1468, device='cuda:0')), ('kazan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('rostov', tensor(0., device='cuda:0')), ('-', tensor(0.0886, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('-', tensor(0.0886, device='cuda:0')), ('don', tensor(0., device='cuda:0'))]
idx: 779, example: In Finland , Sampo Bank , now part of the Danske Bank group , will lay off staff from the administrative and support functions , prediction: 1, correct_label: 0, class_scores: [0.23349285 0.47331852 0.29318863], word_scores: ['in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'sam:0.0', '##po:0.0', 'bank:0.0', ',:7.986737728060689e-06', 'now:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'dans:0.0', '##ke:0.0', 'bank:0.0', 'group:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'lay:0.0', 'off:0.0', 'staff:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'administrative:0.0', 'and:0.0', 'support:0.0', 'functions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0541, device='cuda:0')), ('finland', tensor(0.0733, device='cuda:0')), (',', tensor(0.1430, device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.1430, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0615, device='cuda:0')), ('the', tensor(0.1143, device='cuda:0')), ('danske', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1430, device='cuda:0')), ('will', tensor(0.0729, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('from', tensor(0.0805, device='cuda:0')), ('the', tensor(0.1143, device='cuda:0')), ('administrative', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('functions', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0541, device='cuda:0')), ('finland', tensor(0.0733, device='cuda:0')), (',', tensor(0.1430, device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.1430, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0615, device='cuda:0')), ('the', tensor(0.1143, device='cuda:0')), ('danske', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1430, device='cuda:0')), ('will', tensor(0.0729, device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('staff', tensor(0., device='cuda:0')), ('from', tensor(0.0805, device='cuda:0')), ('the', tensor(0.1143, device='cuda:0')), ('administrative', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('functions', tensor(0., device='cuda:0'))]
idx: 780, example: Finnish investment group Neomarkka Oyj ( HEL : NEMBV ) said today that it will buy the former production facilities of Kuitu Finland Ltd , as part of negotiations on the option to invest in specialty cellulose fiber business , prediction: 2, correct_label: 2, class_scores: [0.19600174 0.29317465 0.51082367], word_scores: ['finnish:0.0', 'investment:0.0', 'group:0.0', 'neo:0.0', '##mark:0.0', '##ka:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ne:0.0', '##mb:0.0', '##v:0.0', '):0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'buy:0.0', 'the:6.3806996877247e-06', 'former:0.0', 'production:0.0', 'facilities:0.0', 'of:3.4365734791208524e-06', 'ku:0.0', '##it:0.0', '##u:0.0', 'finland:4.096111752005527e-06', 'ltd:0.0', ',:7.986737728060689e-06', 'as:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'negotiations:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'option:0.0', 'to:2.886244146793615e-06', 'invest:0.0', 'in:3.0217122457543155e-06', 'specialty:0.0', 'cell:0.0', '##ulo:0.0', '##se:0.0', 'fiber:0.0', 'business:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('neomarkka', tensor(0., device='cuda:0')), ('oyj', tensor(0.0379, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('nembv', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0313, device='cuda:0')), ('it', tensor(0.0691, device='cuda:0')), ('will', tensor(0.0842, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('the', tensor(0.1319, device='cuda:0')), ('former', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0')), ('of', tensor(0.0710, device='cuda:0')), ('kuitu', tensor(0., device='cuda:0')), ('finland', tensor(0.0847, device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1651, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0710, device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1319, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('to', tensor(0.0597, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('in', tensor(0.0624, device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('cellulose', tensor(0., device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('neomarkka', tensor(0., device='cuda:0')), ('oyj', tensor(0.0379, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('nembv', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0313, device='cuda:0')), ('it', tensor(0.0691, device='cuda:0')), ('will', tensor(0.0842, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('the', tensor(0.1319, device='cuda:0')), ('former', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0')), ('of', tensor(0.0710, device='cuda:0')), ('kuitu', tensor(0., device='cuda:0')), ('finland', tensor(0.0847, device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), (',', tensor(0.1651, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0710, device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1319, device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('to', tensor(0.0597, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('in', tensor(0.0624, device='cuda:0')), ('specialty', tensor(0., device='cuda:0')), ('cellulose', tensor(0., device='cuda:0')), ('fiber', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 781, example: Customers wave cards in front of the reader to make payments , similar to `` touch and go '' cards used in transport systems , prediction: 1, correct_label: 2, class_scores: [0.23996985 0.38913822 0.37089202], word_scores: ['customers:0.0', 'wave:0.0', 'cards:0.0', 'in:3.0217122457543155e-06', 'front:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'reader:0.0', 'to:2.886244146793615e-06', 'make:0.0', 'payments:0.0', ',:7.986737728060689e-06', 'similar:0.0', 'to:2.886244146793615e-06', '`:0.0', '`:0.0', 'touch:0.0', 'and:0.0', 'go:0.0', "':0.0", "':0.0", 'cards:0.0', 'used:0.0', 'in:3.0217122457543155e-06', 'transport:0.0', 'systems:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('customers', tensor(0., device='cuda:0')), ('wave', tensor(0., device='cuda:0')), ('cards', tensor(0., device='cuda:0')), ('in', tensor(0.1136, device='cuda:0')), ('front', tensor(0., device='cuda:0')), ('of', tensor(0.1292, device='cuda:0')), ('the', tensor(0.2399, device='cuda:0')), ('reader', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('payments', tensor(0., device='cuda:0')), (',', tensor(0.3003, device='cuda:0')), ('similar', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('touch', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))],  word_scores_max: [('customers', tensor(0., device='cuda:0')), ('wave', tensor(0., device='cuda:0')), ('cards', tensor(0., device='cuda:0')), ('in', tensor(0.1136, device='cuda:0')), ('front', tensor(0., device='cuda:0')), ('of', tensor(0.1292, device='cuda:0')), ('the', tensor(0.2399, device='cuda:0')), ('reader', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('payments', tensor(0., device='cuda:0')), (',', tensor(0.3003, device='cuda:0')), ('similar', tensor(0., device='cuda:0')), ('to', tensor(0.1085, device='cuda:0')), ('touch', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))]
idx: 782, example: services supplier Efore Plc to streamline operations in Finland and the US Finnish electronic systems and services supplier Efore Plc ( OMX Helsinki : EFO1V ) said on Tuesday ( 3 February ) that it has initiated statutory negotiations regarding a streamlining of its operations in Finland , prediction: 2, correct_label: 1, class_scores: [0.1908264  0.327112   0.48206168], word_scores: ['services:0.0', 'supplier:0.0', 'e:0.0', '##for:0.0', '##e:0.0', 'plc:0.0', 'to:2.886244146793615e-06', 'stream:0.0', '##line:0.0', 'operations:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', 'and:0.0', 'the:6.3806996877247e-06', 'us:0.0', 'finnish:0.0', 'electronic:0.0', 'systems:0.0', 'and:0.0', 'services:0.0', 'supplier:0.0', 'e:0.0', '##for:0.0', '##e:0.0', 'plc:0.0', '(:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'e:0.0', '##fo:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'on:0.0', 'tuesday:0.0', '(:0.0', '3:0.0', 'february:0.0', '):0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'initiated:0.0', 'statutory:0.0', 'negotiations:0.0', 'regarding:0.0', 'a:8.62785782373976e-06', 'stream:0.0', '##lining:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'operations:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0'], word_scores_sum: [('services', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('efore', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('to', tensor(0.0601, device='cuda:0')), ('streamline', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0629, device='cuda:0')), ('finland', tensor(0.0852, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1328, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('efore', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('efo1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('tuesday', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('that', tensor(0.0315, device='cuda:0')), ('it', tensor(0.0695, device='cuda:0')), ('has', tensor(0.1232, device='cuda:0')), ('initiated', tensor(0., device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('regarding', tensor(0., device='cuda:0')), ('a', tensor(0.1795, device='cuda:0')), ('streamlining', tensor(0., device='cuda:0')), ('of', tensor(0.0715, device='cuda:0')), ('its', tensor(0.0358, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0629, device='cuda:0')), ('finland', tensor(0.0852, device='cuda:0'))],  word_scores_max: [('services', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('efore', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('to', tensor(0.0601, device='cuda:0')), ('streamline', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0629, device='cuda:0')), ('finland', tensor(0.0852, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1328, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('efore', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('efo1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('tuesday', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('that', tensor(0.0315, device='cuda:0')), ('it', tensor(0.0695, device='cuda:0')), ('has', tensor(0.1232, device='cuda:0')), ('initiated', tensor(0., device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('regarding', tensor(0., device='cuda:0')), ('a', tensor(0.1795, device='cuda:0')), ('streamlining', tensor(0., device='cuda:0')), ('of', tensor(0.0715, device='cuda:0')), ('its', tensor(0.0358, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0629, device='cuda:0')), ('finland', tensor(0.0852, device='cuda:0'))]
idx: 783, example: Finnish insurance company Fennia and Kesko Group are ending their loyal customer cooperation , prediction: 1, correct_label: 0, class_scores: [0.23281126 0.42813724 0.33905143], word_scores: ['finnish:0.0', 'insurance:0.0', 'company:6.695386673527537e-06', 'fen:0.0', '##nia:0.0', 'and:0.0', 'ke:0.0', '##sko:0.0', 'group:0.0', 'are:0.0', 'ending:0.0', 'their:0.0', 'loyal:0.0', 'customer:0.0', 'cooperation:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('insurance', tensor(0., device='cuda:0')), ('company', tensor(1., device='cuda:0')), ('fennia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kesko', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('ending', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('loyal', tensor(0., device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('insurance', tensor(0., device='cuda:0')), ('company', tensor(1., device='cuda:0')), ('fennia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('kesko', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('ending', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('loyal', tensor(0., device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('cooperation', tensor(0., device='cuda:0'))]
idx: 784, example: The order values at EUR 6.9 mn , and it consists of design services and hardware and software licences , prediction: 2, correct_label: 2, class_scores: [0.19215591 0.3051954  0.50264865], word_scores: ['the:6.3806996877247e-06', 'order:0.0', 'values:0.0', 'at:0.0', 'eu:0.0', '##r:0.0', '6:0.0', '.:2.903296945078182e-06', '9:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'and:0.0', 'it:3.3415778943890473e-06', 'consists:0.0', 'of:3.4365734791208524e-06', 'design:0.0', 'services:0.0', 'and:0.0', 'hardware:0.0', 'and:0.0', 'software:0.0', 'licence:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2653, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('values', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.1207, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.3321, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.1389, device='cuda:0')), ('consists', tensor(0., device='cuda:0')), ('of', tensor(0.1429, device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hardware', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('licences', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2653, device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('values', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.1207, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.3321, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.1389, device='cuda:0')), ('consists', tensor(0., device='cuda:0')), ('of', tensor(0.1429, device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('hardware', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('licences', tensor(0., device='cuda:0'))]
idx: 785, example: According to Finnish financial services group Sampo 's CEO , Bj+�rn Wahlroos , Danish Danske Bank 's acquisition of Sampo Bank for EUR 4bn was the largest cash deal in Finland 's economic history , prediction: 1, correct_label: 2, class_scores: [0.17759104 0.41639686 0.4060121 ], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'finnish:0.0', 'financial:0.0', 'services:0.0', 'group:0.0', 'sam:0.0', '##po:0.0', "':0.0", 's:0.0', 'ceo:0.0', ',:7.986737728060689e-06', 'b:0.0', '##j:0.0', '+:0.0', 'rn:0.0', 'wah:0.0', '##lr:0.0', '##oo:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'danish:0.0', 'dans:0.0', '##ke:0.0', 'bank:0.0', "':0.0", 's:0.0', 'acquisition:0.0', 'of:3.4365734791208524e-06', 'sam:0.0', '##po:0.0', 'bank:0.0', 'for:0.0', 'eu:0.0', '##r:0.0', '4:0.0', '##bn:0.0', 'was:0.0', 'the:6.3806996877247e-06', 'largest:0.0', 'cash:0.0', 'deal:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', "':0.0", 's:0.0', 'economic:0.0', 'history:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))]
idx: 786, example: Sales climbed 19.2 pct to 1.002 bln eur , surpassing the 953 mln eur consensus figure , prediction: 2, correct_label: 1, class_scores: [0.17284802 0.32121435 0.5059377 ], word_scores: ['sales:0.0', 'climbed:0.0', '19:0.0', '.:2.903296945078182e-06', '2:0.0', 'pc:0.0', '##t:0.0', 'to:2.886244146793615e-06', '1:0.0', '.:2.903296945078182e-06', '00:0.0', '##2:0.0', 'b:0.0', '##ln:0.0', 'eu:0.0', '##r:0.0', ',:7.986737728060689e-06', 'surpassing:0.0', 'the:6.3806996877247e-06', '95:0.0', '##3:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', 'consensus:0.0', 'figure:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sales', tensor(0., device='cuda:0')), ('climbed', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('.', tensor(0.1259, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('to', tensor(0.1252, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1259, device='cuda:0')), ('002', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.3463, device='cuda:0')), ('surpassing', tensor(0., device='cuda:0')), ('the', tensor(0.2767, device='cuda:0')), ('953', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('consensus', tensor(0., device='cuda:0')), ('figure', tensor(0., device='cuda:0'))],  word_scores_max: [('sales', tensor(0., device='cuda:0')), ('climbed', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('.', tensor(0.1259, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('to', tensor(0.1252, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1259, device='cuda:0')), ('002', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.3463, device='cuda:0')), ('surpassing', tensor(0., device='cuda:0')), ('the', tensor(0.2767, device='cuda:0')), ('953', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('consensus', tensor(0., device='cuda:0')), ('figure', tensor(0., device='cuda:0'))]
idx: 787, example: The contracts between Raute Corporation and Muling Kemian Wood Products Co. , Ltd. , which were announced on 3 November 2010 , have taken effect , prediction: 2, correct_label: 2, class_scores: [0.15664907 0.3873046  0.4560463 ], word_scores: ['the:6.3806996877247e-06', 'contracts:0.0', 'between:0.0', 'ra:0.0', '##ute:0.0', 'corporation:0.0', 'and:0.0', 'mu:0.0', '##ling:0.0', 'ke:0.0', '##mian:0.0', 'wood:0.0', 'products:0.0', 'co:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'ltd:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'which:0.0', 'were:0.0', 'announced:0.0', 'on:0.0', '3:0.0', 'november:0.0', '2010:0.0', ',:7.986737728060689e-06', 'have:2.910326429628185e-06', 'taken:0.0', 'effect:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1634, device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('raute', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('muling', tensor(0., device='cuda:0')), ('kemian', tensor(0., device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), (',', tensor(0.2045, device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), (',', tensor(0.2045, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2045, device='cuda:0')), ('have', tensor(0.0745, device='cuda:0')), ('taken', tensor(0., device='cuda:0')), ('effect', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1634, device='cuda:0')), ('contracts', tensor(0., device='cuda:0')), ('between', tensor(0., device='cuda:0')), ('raute', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('muling', tensor(0., device='cuda:0')), ('kemian', tensor(0., device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), (',', tensor(0.2045, device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0743, device='cuda:0')), (',', tensor(0.2045, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2045, device='cuda:0')), ('have', tensor(0.0745, device='cuda:0')), ('taken', tensor(0., device='cuda:0')), ('effect', tensor(0., device='cuda:0'))]
idx: 788, example: The company will release its 2010 results on 11 February 2011 , prediction: 2, correct_label: 2, class_scores: [0.19620885 0.36364633 0.44014475], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'release:0.0', 'its:1.7191393908433383e-06', '2010:0.0', 'results:0.0', 'on:0.0', '11:0.0', 'february:0.0', '2011:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3382, device='cuda:0')), ('company', tensor(0.3548, device='cuda:0')), ('will', tensor(0.2159, device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('its', tensor(0.0911, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('results', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3382, device='cuda:0')), ('company', tensor(0.3548, device='cuda:0')), ('will', tensor(0.2159, device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('its', tensor(0.0911, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('results', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('february', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0'))]
idx: 789, example: By the end of 2006 , the number of joint branch offices will total 170 , prediction: 2, correct_label: 2, class_scores: [0.21530199 0.3484877  0.43621027], word_scores: ['by:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', '2006:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'joint:0.0', 'branch:0.0', 'offices:0.0', 'will:4.073096533829812e-06', 'total:0.0', '170:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('by', tensor(0., device='cuda:0')), ('the', tensor(0.2013, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1084, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2520, device='cuda:0')), ('the', tensor(0.2013, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.1084, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('offices', tensor(0., device='cuda:0')), ('will', tensor(0.1285, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('170', tensor(0., device='cuda:0'))],  word_scores_max: [('by', tensor(0., device='cuda:0')), ('the', tensor(0.2013, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1084, device='cuda:0')), ('2006', tensor(0., device='cuda:0')), (',', tensor(0.2520, device='cuda:0')), ('the', tensor(0.2013, device='cuda:0')), ('number', tensor(0., device='cuda:0')), ('of', tensor(0.1084, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('offices', tensor(0., device='cuda:0')), ('will', tensor(0.1285, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('170', tensor(0., device='cuda:0'))]
idx: 790, example: As a result of these negotiations the company has decided to make 45 people redundant on financial and production grounds , prediction: 2, correct_label: 0, class_scores: [0.16002943 0.34556824 0.49440232], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'result:0.0', 'of:3.4365734791208524e-06', 'these:0.0', 'negotiations:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'decided:0.0', 'to:2.886244146793615e-06', 'make:0.0', '45:4.878051640844205e-06', 'people:0.0', 'redundant:0.0', 'on:0.0', 'financial:0.0', 'and:0.0', 'production:0.0', 'grounds:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.2222, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0885, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('the', tensor(0.1643, device='cuda:0')), ('company', tensor(0.1724, device='cuda:0')), ('has', tensor(0.1525, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0743, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('45', tensor(0.1256, device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('redundant', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('grounds', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.2222, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0885, device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('the', tensor(0.1643, device='cuda:0')), ('company', tensor(0.1724, device='cuda:0')), ('has', tensor(0.1525, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0743, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('45', tensor(0.1256, device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('redundant', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('grounds', tensor(0., device='cuda:0'))]
idx: 791, example: The personnel s expertise and high level of technology play a major role in Exel Composites operations , prediction: 1, correct_label: 2, class_scores: [0.2596012  0.38787484 0.35252398], word_scores: ['the:6.3806996877247e-06', 'personnel:0.0', 's:0.0', 'expertise:0.0', 'and:0.0', 'high:0.0', 'level:0.0', 'of:3.4365734791208524e-06', 'technology:0.0', 'play:0.0', 'a:8.62785782373976e-06', 'major:0.0', 'role:0.0', 'in:3.0217122457543155e-06', 'ex:0.0', '##el:0.0', 'composite:0.0', '##s:4.601175078278175e-06', 'operations:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2972, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('of', tensor(0.1601, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('a', tensor(0.4019, device='cuda:0')), ('major', tensor(0., device='cuda:0')), ('role', tensor(0., device='cuda:0')), ('in', tensor(0.1408, device='cuda:0')), ('exel', tensor(0., device='cuda:0')), ('composites', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2972, device='cuda:0')), ('personnel', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('expertise', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('of', tensor(0.1601, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('a', tensor(0.4019, device='cuda:0')), ('major', tensor(0., device='cuda:0')), ('role', tensor(0., device='cuda:0')), ('in', tensor(0.1408, device='cuda:0')), ('exel', tensor(0., device='cuda:0')), ('composites', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 792, example: The value of the deal has not been disclosed , prediction: 2, correct_label: 2, class_scores: [0.2262181  0.29516488 0.47861704], word_scores: ['the:6.3806996877247e-06', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'deal:0.0', 'has:5.9214244174654596e-06', 'not:0.0', 'been:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2885, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1554, device='cuda:0')), ('the', tensor(0.2885, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('has', tensor(0.2677, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2885, device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1554, device='cuda:0')), ('the', tensor(0.2885, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('has', tensor(0.2677, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))]
idx: 793, example: The current lay-offs are additional to the temporary lay-offs agreed in December 2008 and in May 2009 , prediction: 2, correct_label: 0, class_scores: [0.24280083 0.35198477 0.40521434], word_scores: ['the:6.3806996877247e-06', 'current:0.0', 'lay:0.0', '-:4.821180027647642e-06', 'offs:0.0', 'are:0.0', 'additional:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'temporary:0.0', 'lay:0.0', '-:4.821180027647642e-06', 'offs:0.0', 'agreed:0.0', 'in:3.0217122457543155e-06', 'december:0.0', '2008:0.0', 'and:0.0', 'in:3.0217122457543155e-06', 'may:0.0', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2036, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1539, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('additional', tensor(0., device='cuda:0')), ('to', tensor(0.0921, device='cuda:0')), ('the', tensor(0.2036, device='cuda:0')), ('temporary', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1539, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('in', tensor(0.0964, device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.0964, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2036, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1539, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('additional', tensor(0., device='cuda:0')), ('to', tensor(0.0921, device='cuda:0')), ('the', tensor(0.2036, device='cuda:0')), ('temporary', tensor(0., device='cuda:0')), ('lay', tensor(0., device='cuda:0')), ('-', tensor(0.1539, device='cuda:0')), ('offs', tensor(0., device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('in', tensor(0.0964, device='cuda:0')), ('december', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.0964, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 794, example: Jarmo Honkamaa , head of the oil refining business at Neste Oil , says the situation looks promising from their viewpoint , prediction: 2, correct_label: 1, class_scores: [0.15611888 0.35833368 0.4855475 ], word_scores: ['jar:0.0', '##mo:0.0', 'hon:0.0', '##kam:0.0', '##aa:0.0', ',:7.986737728060689e-06', 'head:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'oil:0.0', 'refining:0.0', 'business:0.0', 'at:0.0', 'nest:0.0', '##e:0.0', 'oil:0.0', ',:7.986737728060689e-06', 'says:0.0', 'the:6.3806996877247e-06', 'situation:0.0', 'looks:0.0', 'promising:0.0', 'from:4.495178018260049e-06', 'their:0.0', 'viewpoint:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('jarmo', tensor(0., device='cuda:0')), ('honkamaa', tensor(0., device='cuda:0')), (',', tensor(0.2178, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('of', tensor(0.0937, device='cuda:0')), ('the', tensor(0.1740, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('refining', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('neste', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), (',', tensor(0.2178, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.1740, device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('promising', tensor(0., device='cuda:0')), ('from', tensor(0.1226, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('viewpoint', tensor(0., device='cuda:0'))],  word_scores_max: [('jarmo', tensor(0., device='cuda:0')), ('honkamaa', tensor(0., device='cuda:0')), (',', tensor(0.2178, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('of', tensor(0.0937, device='cuda:0')), ('the', tensor(0.1740, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('refining', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('neste', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), (',', tensor(0.2178, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.1740, device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('promising', tensor(0., device='cuda:0')), ('from', tensor(0.1226, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('viewpoint', tensor(0., device='cuda:0'))]
idx: 795, example: The sellers were EOSS Innovationsmanagement and a group of private individuals , prediction: 2, correct_label: 2, class_scores: [0.18767592 0.39517802 0.41714606], word_scores: ['the:6.3806996877247e-06', 'sellers:0.0', 'were:0.0', 'e:0.0', '##oss:0.0', 'innovations:0.0', '##mana:0.0', '##gement:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'group:0.0', 'of:3.4365734791208524e-06', 'private:3.393340421098401e-06', 'individuals:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2922, device='cuda:0')), ('sellers', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('eoss', tensor(0., device='cuda:0')), ('innovationsmanagement', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.3951, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('of', tensor(0.1574, device='cuda:0')), ('private', tensor(0.1554, device='cuda:0')), ('individuals', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2922, device='cuda:0')), ('sellers', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('eoss', tensor(0., device='cuda:0')), ('innovationsmanagement', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.3951, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('of', tensor(0.1574, device='cuda:0')), ('private', tensor(0.1554, device='cuda:0')), ('individuals', tensor(0., device='cuda:0'))]
idx: 796, example: Terms of the acquisition were not disclosed , prediction: 2, correct_label: 2, class_scores: [0.23929583 0.36893755 0.39176667], word_scores: ['terms:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'acquisition:0.0', 'were:0.0', 'not:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('terms', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('the', tensor(0.6499, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))],  word_scores_max: [('terms', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('the', tensor(0.6499, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))]
idx: 797, example: Crucially , the decision to use ETSI ( European Telecommunication Standard Institute ) - backed DVB-H adds to the growing list of operators and equipment manufacturers opting for the standard ( see Global : 20 January 2006 : Competing Technologies Vie for Mobile TV ) , prediction: 2, correct_label: 2, class_scores: [0.10873082 0.4245969  0.4666723 ], word_scores: ['crucial:0.0', '##ly:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'decision:0.0', 'to:2.886244146793615e-06', 'use:0.0', 'et:0.0', '##si:0.0', '(:0.0', 'european:0.0', 'telecommunication:0.0', 'standard:0.0', 'institute:0.0', '):0.0', '-:4.821180027647642e-06', 'backed:0.0', 'd:0.0', '##vb:0.0', '-:4.821180027647642e-06', 'h:0.0', 'adds:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'growing:0.0', 'list:0.0', 'of:3.4365734791208524e-06', 'operators:0.0', 'and:0.0', 'equipment:0.0', 'manufacturers:0.0', 'opt:0.0', '##ing:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'standard:0.0', '(:0.0', 'see:0.0', 'global:0.0', '::0.0', '20:0.0', 'january:0.0', '2006:0.0', '::0.0', 'competing:0.0', 'technologies:0.0', 'vie:0.0', 'for:0.0', 'mobile:0.0', 'tv:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('crucially', tensor(0., device='cuda:0')), (',', tensor(0.1737, device='cuda:0')), ('the', tensor(0.1388, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('to', tensor(0.0628, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('etsi', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('telecommunication', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('institute', tensor(0., device='cuda:0')), ('-', tensor(0.1049, device='cuda:0')), ('backed', tensor(0., device='cuda:0')), ('dvb', tensor(0., device='cuda:0')), ('-', tensor(0.1049, device='cuda:0')), ('h', tensor(0., device='cuda:0')), ('adds', tensor(0., device='cuda:0')), ('to', tensor(0.0628, device='cuda:0')), ('the', tensor(0.1388, device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('list', tensor(0., device='cuda:0')), ('of', tensor(0.0747, device='cuda:0')), ('operators', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('manufacturers', tensor(0., device='cuda:0')), ('opting', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1388, device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('competing', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), ('vie', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('tv', tensor(0., device='cuda:0'))],  word_scores_max: [('crucially', tensor(0., device='cuda:0')), (',', tensor(0.1737, device='cuda:0')), ('the', tensor(0.1388, device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('to', tensor(0.0628, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('etsi', tensor(0., device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('telecommunication', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('institute', tensor(0., device='cuda:0')), ('-', tensor(0.1049, device='cuda:0')), ('backed', tensor(0., device='cuda:0')), ('dvb', tensor(0., device='cuda:0')), ('-', tensor(0.1049, device='cuda:0')), ('h', tensor(0., device='cuda:0')), ('adds', tensor(0., device='cuda:0')), ('to', tensor(0.0628, device='cuda:0')), ('the', tensor(0.1388, device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('list', tensor(0., device='cuda:0')), ('of', tensor(0.0747, device='cuda:0')), ('operators', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('equipment', tensor(0., device='cuda:0')), ('manufacturers', tensor(0., device='cuda:0')), ('opting', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1388, device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('competing', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), ('vie', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('tv', tensor(0., device='cuda:0'))]
idx: 798, example: Finnish Honkarakenne that specialises in the building of log houses is planning to use pine from Russian Karelia , prediction: 1, correct_label: 2, class_scores: [0.17127453 0.46788806 0.36083734], word_scores: ['finnish:0.0', 'hon:0.0', '##kara:0.0', '##ken:0.0', '##ne:8.183636964531615e-06', 'that:1.5133816759771435e-06', 'special:0.0', '##ises:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'building:0.0', 'of:3.4365734791208524e-06', 'log:0.0', 'houses:0.0', 'is:0.0', 'planning:0.0', 'to:2.886244146793615e-06', 'use:0.0', 'pine:0.0', 'from:4.495178018260049e-06', 'russian:0.0', 'karel:0.0', '##ia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('honkarakenne', tensor(0., device='cuda:0')), ('that', tensor(0.0696, device='cuda:0')), ('specialises', tensor(0., device='cuda:0')), ('in', tensor(0.1390, device='cuda:0')), ('the', tensor(0.2936, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('of', tensor(0.1581, device='cuda:0')), ('log', tensor(0., device='cuda:0')), ('houses', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('to', tensor(0.1328, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('pine', tensor(0., device='cuda:0')), ('from', tensor(0.2068, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('karelia', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('honkarakenne', tensor(0., device='cuda:0')), ('that', tensor(0.0696, device='cuda:0')), ('specialises', tensor(0., device='cuda:0')), ('in', tensor(0.1390, device='cuda:0')), ('the', tensor(0.2936, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('of', tensor(0.1581, device='cuda:0')), ('log', tensor(0., device='cuda:0')), ('houses', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('to', tensor(0.1328, device='cuda:0')), ('use', tensor(0., device='cuda:0')), ('pine', tensor(0., device='cuda:0')), ('from', tensor(0.2068, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('karelia', tensor(0., device='cuda:0'))]
idx: 799, example: Speaking to just-drinks today , a spokesperson for Olvi said : `` We have performed very well in all four countries we operate in - namely , Finland , Estonia , Latvia and Lithuania . ', prediction: 2, correct_label: 1, class_scores: [0.21415706 0.36570922 0.42013374], word_scores: ['speaking:0.0', 'to:2.886244146793615e-06', 'just:0.0', '-:4.821180027647642e-06', 'drinks:0.0', 'today:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'spokesperson:0.0', 'for:0.0', 'ol:0.0', '##vi:0.0', 'said:0.0', '::0.0', '`:0.0', '`:0.0', 'we:0.0', 'have:2.910326429628185e-06', 'performed:0.0', 'very:0.0', 'well:0.0', 'in:3.0217122457543155e-06', 'all:0.0', 'four:3.606506425057887e-06', 'countries:0.0', 'we:0.0', 'operate:0.0', 'in:3.0217122457543155e-06', '-:4.821180027647642e-06', 'namely:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'estonia:0.0', ',:7.986737728060689e-06', 'latvia:0.0', 'and:0.0', 'lithuania:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('speaking', tensor(0., device='cuda:0')), ('to', tensor(0.0397, device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('-', tensor(0.0663, device='cuda:0')), ('drinks', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('a', tensor(0.1187, device='cuda:0')), ('spokesperson', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.0401, device='cuda:0')), ('performed', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('four', tensor(0.0496, device='cuda:0')), ('countries', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('-', tensor(0.0663, device='cuda:0')), ('namely', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('finland', tensor(0.0564, device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('estonia', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('latvia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lithuania', tensor(0., device='cuda:0')), ('.', tensor(0.0400, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('speaking', tensor(0., device='cuda:0')), ('to', tensor(0.0397, device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('-', tensor(0.0663, device='cuda:0')), ('drinks', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('a', tensor(0.1187, device='cuda:0')), ('spokesperson', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.0401, device='cuda:0')), ('performed', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('four', tensor(0.0496, device='cuda:0')), ('countries', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('in', tensor(0.0416, device='cuda:0')), ('-', tensor(0.0663, device='cuda:0')), ('namely', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('finland', tensor(0.0564, device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('estonia', tensor(0., device='cuda:0')), (',', tensor(0.1099, device='cuda:0')), ('latvia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lithuania', tensor(0., device='cuda:0')), ('.', tensor(0.0400, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 800, example: The center offers a comprehensive range of device design services spanning from electronics , mechanics and software design to a full range of testing laboratory services , prediction: 2, correct_label: 2, class_scores: [0.14805321 0.31160548 0.54034126], word_scores: ['the:6.3806996877247e-06', 'center:0.0', 'offers:0.0', 'a:8.62785782373976e-06', 'comprehensive:0.0', 'range:0.0', 'of:3.4365734791208524e-06', 'device:0.0', 'design:0.0', 'services:0.0', 'spanning:0.0', 'from:4.495178018260049e-06', 'electronics:0.0', ',:7.986737728060689e-06', 'mechanics:0.0', 'and:0.0', 'software:0.0', 'design:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'full:3.0938992949813837e-06', 'range:0.0', 'of:3.4365734791208524e-06', 'testing:0.0', 'laboratory:0.0', 'services:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1303, device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('offers', tensor(0., device='cuda:0')), ('a', tensor(0.1762, device='cuda:0')), ('comprehensive', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0702, device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('spanning', tensor(0., device='cuda:0')), ('from', tensor(0.0918, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), (',', tensor(0.1631, device='cuda:0')), ('mechanics', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('to', tensor(0.0589, device='cuda:0')), ('a', tensor(0.1762, device='cuda:0')), ('full', tensor(0.0632, device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0702, device='cuda:0')), ('testing', tensor(0., device='cuda:0')), ('laboratory', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1303, device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('offers', tensor(0., device='cuda:0')), ('a', tensor(0.1762, device='cuda:0')), ('comprehensive', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0702, device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('spanning', tensor(0., device='cuda:0')), ('from', tensor(0.0918, device='cuda:0')), ('electronics', tensor(0., device='cuda:0')), (',', tensor(0.1631, device='cuda:0')), ('mechanics', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('design', tensor(0., device='cuda:0')), ('to', tensor(0.0589, device='cuda:0')), ('a', tensor(0.1762, device='cuda:0')), ('full', tensor(0.0632, device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0702, device='cuda:0')), ('testing', tensor(0., device='cuda:0')), ('laboratory', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0'))]
idx: 801, example: The amending of the proposal simplifies the proposed plan and increases the incentive for key employees to stay in the Company , prediction: 2, correct_label: 1, class_scores: [0.250299   0.31685007 0.4328509 ], word_scores: ['the:6.3806996877247e-06', 'amend:0.0', '##ing:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'proposal:0.0', 'sim:0.0', '##pl:0.0', '##ifies:0.0', 'the:6.3806996877247e-06', 'proposed:0.0', 'plan:0.0', 'and:0.0', 'increases:0.0', 'the:6.3806996877247e-06', 'incentive:0.0', 'for:0.0', 'key:0.0', 'employees:0.0', 'to:2.886244146793615e-06', 'stay:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1331, device='cuda:0')), ('amending', tensor(0., device='cuda:0')), ('of', tensor(0.0717, device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('proposal', tensor(0., device='cuda:0')), ('simplifies', tensor(0., device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('proposed', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increases', tensor(0., device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('incentive', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('to', tensor(0.0602, device='cuda:0')), ('stay', tensor(0., device='cuda:0')), ('in', tensor(0.0630, device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('company', tensor(0.1397, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1331, device='cuda:0')), ('amending', tensor(0., device='cuda:0')), ('of', tensor(0.0717, device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('proposal', tensor(0., device='cuda:0')), ('simplifies', tensor(0., device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('proposed', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('increases', tensor(0., device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('incentive', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('to', tensor(0.0602, device='cuda:0')), ('stay', tensor(0., device='cuda:0')), ('in', tensor(0.0630, device='cuda:0')), ('the', tensor(0.1331, device='cuda:0')), ('company', tensor(0.1397, device='cuda:0'))]
idx: 802, example: These new units will be built at Cargotec 's state of the art manufacturing facility in San Antonio , Texas , USA , which started operations in 2009 , prediction: 1, correct_label: 2, class_scores: [0.19052204 0.44531244 0.36416548], word_scores: ['these:0.0', 'new:2.798587502184091e-06', 'units:2.8638919502554927e-06', 'will:4.073096533829812e-06', 'be:0.0', 'built:0.0', 'at:0.0', 'cargo:0.0', '##tec:0.0', "':0.0", 's:0.0', 'state:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'art:0.0', 'manufacturing:0.0', 'facility:0.0', 'in:3.0217122457543155e-06', 'san:0.0', 'antonio:0.0', ',:7.986737728060689e-06', 'texas:0.0', ',:7.986737728060689e-06', 'usa:0.0', ',:7.986737728060689e-06', 'which:0.0', 'started:0.0', 'operations:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('these', tensor(0., device='cuda:0')), ('new', tensor(0.2875, device='cuda:0')), ('units', tensor(0.2942, device='cuda:0')), ('will', tensor(0.4184, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))],  word_scores_max: [('these', tensor(0., device='cuda:0')), ('new', tensor(0.2875, device='cuda:0')), ('units', tensor(0.2942, device='cuda:0')), ('will', tensor(0.4184, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))]
idx: 803, example: The Vaisala Group is a successful international technology company that develops , manufactures and markets electronic measurement systems and products , prediction: 2, correct_label: 1, class_scores: [0.19834195 0.35188645 0.44977152], word_scores: ['the:6.3806996877247e-06', 'va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', 'group:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'successful:0.0', 'international:0.0', 'technology:0.0', 'company:6.695386673527537e-06', 'that:1.5133816759771435e-06', 'develops:0.0', ',:7.986737728060689e-06', 'manufactures:0.0', 'and:0.0', 'markets:0.0', 'electronic:0.0', 'measurement:0.0', 'systems:0.0', 'and:0.0', 'products:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1900, device='cuda:0')), ('vaisala', tensor(0.0709, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2569, device='cuda:0')), ('successful', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1994, device='cuda:0')), ('that', tensor(0.0451, device='cuda:0')), ('develops', tensor(0., device='cuda:0')), (',', tensor(0.2378, device='cuda:0')), ('manufactures', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1900, device='cuda:0')), ('vaisala', tensor(0.0709, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2569, device='cuda:0')), ('successful', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1994, device='cuda:0')), ('that', tensor(0.0451, device='cuda:0')), ('develops', tensor(0., device='cuda:0')), (',', tensor(0.2378, device='cuda:0')), ('manufactures', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0'))]
idx: 804, example: The platen edges in contact with the band are provided with a seal having a protrusion directed towards the middle area of the platen , and means are provided to exert and maintain a pressure in the volume defined by the platen , the band and the seal . ', prediction: 2, correct_label: 2, class_scores: [0.2863853  0.30398563 0.40962908], word_scores: ['the:6.3806996877247e-06', 'plate:0.0', '##n:0.0', 'edges:0.0', 'in:3.0217122457543155e-06', 'contact:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'band:0.0', 'are:0.0', 'provided:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'seal:0.0', 'having:0.0', 'a:8.62785782373976e-06', 'pro:0.0', '##tr:0.0', '##usion:0.0', 'directed:0.0', 'towards:0.0', 'the:6.3806996877247e-06', 'middle:0.0', 'area:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'plate:0.0', '##n:0.0', ',:7.986737728060689e-06', 'and:0.0', 'means:0.0', 'are:0.0', 'provided:0.0', 'to:2.886244146793615e-06', 'ex:0.0', '##ert:0.0', 'and:0.0', 'maintain:0.0', 'a:8.62785782373976e-06', 'pressure:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'volume:0.0', 'defined:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'plate:0.0', '##n:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'band:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'seal:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0542, device='cuda:0')), ('platen', tensor(0., device='cuda:0')), ('edges', tensor(0., device='cuda:0')), ('in', tensor(0.0257, device='cuda:0')), ('contact', tensor(0., device='cuda:0')), ('with', tensor(0.0402, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('band', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('with', tensor(0.0402, device='cuda:0')), ('a', tensor(0.0733, device='cuda:0')), ('seal', tensor(0., device='cuda:0')), ('having', tensor(0., device='cuda:0')), ('a', tensor(0.0733, device='cuda:0')), ('protrusion', tensor(0., device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('towards', tensor(0., device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0292, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('platen', tensor(0., device='cuda:0')), (',', tensor(0.0679, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('means', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('to', tensor(0.0245, device='cuda:0')), ('exert', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('maintain', tensor(0., device='cuda:0')), ('a', tensor(0.0733, device='cuda:0')), ('pressure', tensor(0., device='cuda:0')), ('in', tensor(0.0257, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('defined', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('platen', tensor(0., device='cuda:0')), (',', tensor(0.0679, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('band', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('seal', tensor(0., device='cuda:0')), ('.', tensor(0.0247, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0542, device='cuda:0')), ('platen', tensor(0., device='cuda:0')), ('edges', tensor(0., device='cuda:0')), ('in', tensor(0.0257, device='cuda:0')), ('contact', tensor(0., device='cuda:0')), ('with', tensor(0.0402, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('band', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('with', tensor(0.0402, device='cuda:0')), ('a', tensor(0.0733, device='cuda:0')), ('seal', tensor(0., device='cuda:0')), ('having', tensor(0., device='cuda:0')), ('a', tensor(0.0733, device='cuda:0')), ('protrusion', tensor(0., device='cuda:0')), ('directed', tensor(0., device='cuda:0')), ('towards', tensor(0., device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0292, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('platen', tensor(0., device='cuda:0')), (',', tensor(0.0679, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('means', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('provided', tensor(0., device='cuda:0')), ('to', tensor(0.0245, device='cuda:0')), ('exert', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('maintain', tensor(0., device='cuda:0')), ('a', tensor(0.0733, device='cuda:0')), ('pressure', tensor(0., device='cuda:0')), ('in', tensor(0.0257, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('defined', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('platen', tensor(0., device='cuda:0')), (',', tensor(0.0679, device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('band', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0542, device='cuda:0')), ('seal', tensor(0., device='cuda:0')), ('.', tensor(0.0247, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 805, example: Finland-based companies , L+�nnen Tehtaat and Raisio , have decided to dissolve the joint venture company ZAO Scandic Feed , which was established to start local animal feed business and feed production in northwest Russia , prediction: 2, correct_label: 2, class_scores: [0.28935096 0.29298747 0.41766152], word_scores: ['finland:4.096111752005527e-06', '-:4.821180027647642e-06', 'based:0.0', 'companies:0.0', ',:7.986737728060689e-06', 'l:0.0', '+:0.0', 'n:0.0', '##nen:0.0', 'te:0.0', '##hta:0.0', '##at:0.0', 'and:0.0', 'rai:0.0', '##sio:0.0', ',:7.986737728060689e-06', 'have:2.910326429628185e-06', 'decided:0.0', 'to:2.886244146793615e-06', 'dissolve:0.0', 'the:6.3806996877247e-06', 'joint:0.0', 'venture:0.0', 'company:6.695386673527537e-06', 'za:0.0', '##o:0.0', 'scan:0.0', '##dic:0.0', 'feed:0.0', ',:7.986737728060689e-06', 'which:0.0', 'was:0.0', 'established:0.0', 'to:2.886244146793615e-06', 'start:0.0', 'local:0.0', 'animal:0.0', 'feed:0.0', 'business:0.0', 'and:0.0', 'feed:0.0', 'production:0.0', 'in:3.0217122457543155e-06', 'northwest:0.0', 'russia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finland', tensor(0.0710, device='cuda:0')), ('-', tensor(0.0836, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), (',', tensor(0.1385, device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nnen', tensor(0., device='cuda:0')), ('tehtaat', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('raisio', tensor(0., device='cuda:0')), (',', tensor(0.1385, device='cuda:0')), ('have', tensor(0.0505, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0501, device='cuda:0')), ('dissolve', tensor(0., device='cuda:0')), ('the', tensor(0.1107, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.1161, device='cuda:0')), ('zao', tensor(0., device='cuda:0')), ('scandic', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), (',', tensor(0.1385, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('to', tensor(0.0501, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('animal', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.0524, device='cuda:0')), ('northwest', tensor(0., device='cuda:0')), ('russia', tensor(0., device='cuda:0'))],  word_scores_max: [('finland', tensor(0.0710, device='cuda:0')), ('-', tensor(0.0836, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), (',', tensor(0.1385, device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nnen', tensor(0., device='cuda:0')), ('tehtaat', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('raisio', tensor(0., device='cuda:0')), (',', tensor(0.1385, device='cuda:0')), ('have', tensor(0.0505, device='cuda:0')), ('decided', tensor(0., device='cuda:0')), ('to', tensor(0.0501, device='cuda:0')), ('dissolve', tensor(0., device='cuda:0')), ('the', tensor(0.1107, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('company', tensor(0.1161, device='cuda:0')), ('zao', tensor(0., device='cuda:0')), ('scandic', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), (',', tensor(0.1385, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('established', tensor(0., device='cuda:0')), ('to', tensor(0.0501, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('local', tensor(0., device='cuda:0')), ('animal', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('in', tensor(0.0524, device='cuda:0')), ('northwest', tensor(0., device='cuda:0')), ('russia', tensor(0., device='cuda:0'))]
idx: 806, example: Antti Orkola , president of Kemira GrowHow 's Industrial Solutions unit , told Thomson Financial News the company has put off opening the mine as prices of phosphate have been ` quite depressed for a long time ' . , prediction: 2, correct_label: 0, class_scores: [0.23117992 0.3392221  0.429598  ], word_scores: ['ant:0.0', '##ti:2.5915114747476764e-06', 'or:0.0', '##ko:0.0', '##la:0.0', ',:7.986737728060689e-06', 'president:0.0', 'of:3.4365734791208524e-06', 'ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', 'grow:0.0', '##how:0.0', "':0.0", 's:0.0', 'industrial:0.0', 'solutions:0.0', 'unit:0.0', ',:7.986737728060689e-06', 'told:0.0', 'thomson:0.0', 'financial:0.0', 'news:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'has:5.9214244174654596e-06', 'put:0.0', 'off:0.0', 'opening:0.0', 'the:6.3806996877247e-06', 'mine:0.0', 'as:0.0', 'prices:0.0', 'of:3.4365734791208524e-06', 'phosphate:0.0', 'have:2.910326429628185e-06', 'been:0.0', '`:0.0', 'quite:0.0', 'depressed:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'long:0.0', 'time:0.0', "':0.0", '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('antti', tensor(0., device='cuda:0')), ('orkola', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0')), ('president', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('kemira', tensor(0., device='cuda:0'))],  word_scores_max: [('antti', tensor(0., device='cuda:0')), ('orkola', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0')), ('president', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('kemira', tensor(0., device='cuda:0'))]
idx: 807, example: Operating profit totalled EUR 21.1 mn , up from EUR 18.6 mn in 2007 , representing 9.7 % of net sales , prediction: 2, correct_label: 1, class_scores: [0.21984325 0.3005605  0.4795963 ], word_scores: ['operating:0.0', 'profit:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '21:0.0', '.:2.903296945078182e-06', '1:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '18:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', '2007:0.0', ',:7.986737728060689e-06', 'representing:0.0', '9:0.0', '.:2.903296945078182e-06', '7:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'net:0.0', 'sales:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0782, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2151, device='cuda:0')), ('up', tensor(0.0403, device='cuda:0')), ('from', tensor(0.1211, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0782, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0814, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.2151, device='cuda:0')), ('representing', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0782, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('of', tensor(0.0925, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('.', tensor(0.0782, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2151, device='cuda:0')), ('up', tensor(0.0403, device='cuda:0')), ('from', tensor(0.1211, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0782, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0814, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.2151, device='cuda:0')), ('representing', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0782, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('of', tensor(0.0925, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0'))]
idx: 808, example: Ms Laakso will be responsible for HKScan 's HR functions and for their development in all of the Group ` smarket areas , prediction: 2, correct_label: 2, class_scores: [0.23003119 0.27226225 0.49770662], word_scores: ['ms:0.0', 'la:0.0', '##aks:0.0', '##o:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'responsible:0.0', 'for:0.0', 'hk:0.0', '##scan:0.0', "':0.0", 's:0.0', 'hr:0.0', 'functions:0.0', 'and:0.0', 'for:0.0', 'their:0.0', 'development:0.0', 'in:3.0217122457543155e-06', 'all:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'group:0.0', '`:0.0', 'sm:0.0', '##ark:0.0', '##et:0.0', 'areas:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ms', tensor(0., device='cuda:0')), ('laakso', tensor(0., device='cuda:0')), ('will', tensor(1., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0'))],  word_scores_max: [('ms', tensor(0., device='cuda:0')), ('laakso', tensor(0., device='cuda:0')), ('will', tensor(1., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0'))]
idx: 809, example: We do hope that this will in the future turn out to be a novel method for the prevention of alcohol and tobacco smoking associated oral cancers , prediction: 1, correct_label: 2, class_scores: [0.1599834  0.42402232 0.41599432], word_scores: ['we:0.0', 'do:0.0', 'hope:0.0', 'that:1.5133816759771435e-06', 'this:0.0', 'will:4.073096533829812e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'future:0.0', 'turn:0.0', 'out:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'a:8.62785782373976e-06', 'novel:0.0', 'method:2.380315208938555e-06', 'for:0.0', 'the:6.3806996877247e-06', 'prevention:0.0', 'of:3.4365734791208524e-06', 'alcohol:0.0', 'and:0.0', 'tobacco:0.0', 'smoking:0.0', 'associated:0.0', 'oral:0.0', 'cancers:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('do', tensor(0., device='cuda:0')), ('hope', tensor(0., device='cuda:0')), ('that', tensor(0.0391, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('will', tensor(0.1052, device='cuda:0')), ('in', tensor(0.0781, device='cuda:0')), ('the', tensor(0.1649, device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.0746, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.2229, device='cuda:0')), ('novel', tensor(0., device='cuda:0')), ('method', tensor(0.0615, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1649, device='cuda:0')), ('prevention', tensor(0., device='cuda:0')), ('of', tensor(0.0888, device='cuda:0')), ('alcohol', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('tobacco', tensor(0., device='cuda:0')), ('smoking', tensor(0., device='cuda:0')), ('associated', tensor(0., device='cuda:0')), ('oral', tensor(0., device='cuda:0')), ('cancers', tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('do', tensor(0., device='cuda:0')), ('hope', tensor(0., device='cuda:0')), ('that', tensor(0.0391, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('will', tensor(0.1052, device='cuda:0')), ('in', tensor(0.0781, device='cuda:0')), ('the', tensor(0.1649, device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.0746, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.2229, device='cuda:0')), ('novel', tensor(0., device='cuda:0')), ('method', tensor(0.0615, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1649, device='cuda:0')), ('prevention', tensor(0., device='cuda:0')), ('of', tensor(0.0888, device='cuda:0')), ('alcohol', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('tobacco', tensor(0., device='cuda:0')), ('smoking', tensor(0., device='cuda:0')), ('associated', tensor(0., device='cuda:0')), ('oral', tensor(0., device='cuda:0')), ('cancers', tensor(0., device='cuda:0'))]
idx: 810, example: Argentine agricultural export company Calafate has tapped compatriot firm Finnegans for a software solution , the latter company said in a statement , prediction: 2, correct_label: 2, class_scores: [0.16628249 0.33810112 0.4956164 ], word_scores: ['argentine:0.0', 'agricultural:0.0', 'export:0.0', 'company:6.695386673527537e-06', 'cal:0.0', '##af:0.0', '##ate:0.0', 'has:5.9214244174654596e-06', 'tapped:0.0', 'com:0.0', '##pa:0.0', '##tri:0.0', '##ot:0.0', 'firm:0.0', 'finn:0.0', '##egan:0.0', '##s:4.601175078278175e-06', 'for:0.0', 'a:8.62785782373976e-06', 'software:0.0', 'solution:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'latter:0.0', 'company:6.695386673527537e-06', 'said:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'statement:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('argentine', tensor(0., device='cuda:0')), ('agricultural', tensor(0., device='cuda:0')), ('export', tensor(0., device='cuda:0')), ('company', tensor(0.1241, device='cuda:0')), ('calafate', tensor(0., device='cuda:0')), ('has', tensor(0.1097, device='cuda:0')), ('tapped', tensor(0., device='cuda:0')), ('compatriot', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('finnegans', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1599, device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), (',', tensor(0.1480, device='cuda:0')), ('the', tensor(0.1183, device='cuda:0')), ('latter', tensor(0., device='cuda:0')), ('company', tensor(0.1241, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0560, device='cuda:0')), ('a', tensor(0.1599, device='cuda:0')), ('statement', tensor(0., device='cuda:0'))],  word_scores_max: [('argentine', tensor(0., device='cuda:0')), ('agricultural', tensor(0., device='cuda:0')), ('export', tensor(0., device='cuda:0')), ('company', tensor(0.1241, device='cuda:0')), ('calafate', tensor(0., device='cuda:0')), ('has', tensor(0.1097, device='cuda:0')), ('tapped', tensor(0., device='cuda:0')), ('compatriot', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('finnegans', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.1599, device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), (',', tensor(0.1480, device='cuda:0')), ('the', tensor(0.1183, device='cuda:0')), ('latter', tensor(0., device='cuda:0')), ('company', tensor(0.1241, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('in', tensor(0.0560, device='cuda:0')), ('a', tensor(0.1599, device='cuda:0')), ('statement', tensor(0., device='cuda:0'))]
idx: 811, example: This will be done domestically and in neighboring markets , both organically and through acquisitions , prediction: 2, correct_label: 2, class_scores: [0.15364057 0.3182593  0.5281001 ], word_scores: ['this:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'done:0.0', 'domestically:0.0', 'and:0.0', 'in:3.0217122457543155e-06', 'neighboring:0.0', 'markets:0.0', ',:7.986737728060689e-06', 'both:0.0', 'organic:0.0', '##ally:0.0', 'and:0.0', 'through:0.0', 'acquisitions:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('this', tensor(0., device='cuda:0')), ('will', tensor(0.2701, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('done', tensor(0., device='cuda:0')), ('domestically', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.2004, device='cuda:0')), ('neighboring', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), (',', tensor(0.5296, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('organically', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('will', tensor(0.2701, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('done', tensor(0., device='cuda:0')), ('domestically', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('in', tensor(0.2004, device='cuda:0')), ('neighboring', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), (',', tensor(0.5296, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('organically', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0'))]
idx: 812, example: Furthermore , efficiency improvement measures initiated earlier are now bearing fruit , '' CEO Jan Lang said , prediction: 2, correct_label: 1, class_scores: [0.2133863  0.38762546 0.39898828], word_scores: ['furthermore:0.0', ',:7.986737728060689e-06', 'efficiency:0.0', 'improvement:0.0', 'measures:0.0', 'initiated:0.0', 'earlier:0.0', 'are:0.0', 'now:0.0', 'bearing:0.0', 'fruit:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'ceo:0.0', 'jan:0.0', 'lang:0.0', 'said:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('furthermore', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('improvement', tensor(0., device='cuda:0')), ('measures', tensor(0., device='cuda:0')), ('initiated', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('bearing', tensor(0., device='cuda:0')), ('fruit', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('furthermore', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('efficiency', tensor(0., device='cuda:0')), ('improvement', tensor(0., device='cuda:0')), ('measures', tensor(0., device='cuda:0')), ('initiated', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('bearing', tensor(0., device='cuda:0')), ('fruit', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0'))]
idx: 813, example: Earnings per share EPS rose to EUR 0.11 from EUR 0.03 , prediction: 2, correct_label: 1, class_scores: [0.18808365 0.32344392 0.48847234], word_scores: ['earnings:0.0', 'per:0.0', 'share:0.0', 'eps:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '11:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '0:0.0', '.:2.903296945078182e-06', '03:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('03', tensor(0., device='cuda:0'))],  word_scores_max: [('earnings', tensor(0., device='cuda:0')), ('per', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('03', tensor(0., device='cuda:0'))]
idx: 814, example: Operating profit rose to EUR 9.2 mn from EUR 6.8 mn in the corresponding period in 2007 , prediction: 2, correct_label: 1, class_scores: [0.2157932  0.36843967 0.4157671 ], word_scores: ['operating:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '9:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '6:0.0', '.:2.903296945078182e-06', '8:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.1127, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1755, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('the', tensor(0.2491, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.1127, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1755, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('the', tensor(0.2491, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 815, example: cents Scout for potential acquisition targets , with detailed insight into the companies financial and operational performance , prediction: 2, correct_label: 2, class_scores: [0.23049454 0.27595273 0.49355274], word_scores: ['cents:0.0', 'scout:0.0', 'for:0.0', 'potential:0.0', 'acquisition:0.0', 'targets:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'detailed:0.0', 'insight:0.0', 'into:0.0', 'the:6.3806996877247e-06', 'companies:0.0', 'financial:0.0', 'and:0.0', 'operational:0.0', 'performance:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cents', tensor(0., device='cuda:0')), ('scout', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('targets', tensor(0., device='cuda:0')), (',', tensor(0.4181, device='cuda:0')), ('with', tensor(0.2478, device='cuda:0')), ('detailed', tensor(0., device='cuda:0')), ('insight', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.3340, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('performance', tensor(0., device='cuda:0'))],  word_scores_max: [('cents', tensor(0., device='cuda:0')), ('scout', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('targets', tensor(0., device='cuda:0')), (',', tensor(0.4181, device='cuda:0')), ('with', tensor(0.2478, device='cuda:0')), ('detailed', tensor(0., device='cuda:0')), ('insight', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.3340, device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('performance', tensor(0., device='cuda:0'))]
idx: 816, example: According to Saarioinen 's Managing Director Ilkka M+�kel+� , the food industry sector has a significant excess of production machinery , prediction: 2, correct_label: 2, class_scores: [0.1988786 0.3286884 0.472433 ], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'sa:0.0', '##ario:0.0', '##inen:0.0', "':0.0", 's:0.0', 'managing:0.0', 'director:0.0', 'il:0.0', '##kka:0.0', 'm:0.0', '+:0.0', 'ke:0.0', '##l:0.0', '+:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'food:0.0', 'industry:0.0', 'sector:0.0', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'significant:0.0', 'excess:0.0', 'of:3.4365734791208524e-06', 'production:0.0', 'machinery:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0'))]
idx: 817, example: Nokia bought Chicago-based Navteq in 2008 , acquiring a maps database to compete with Google s maps as well as with navigation device companies such as TomTom NV and Garmin Ltd. , prediction: 1, correct_label: 1, class_scores: [0.14231908 0.46910274 0.38857818], word_scores: ['nokia:0.0', 'bought:0.0', 'chicago:0.0', '-:4.821180027647642e-06', 'based:0.0', 'na:0.0', '##v:0.0', '##te:0.0', '##q:0.0', 'in:3.0217122457543155e-06', '2008:0.0', ',:7.986737728060689e-06', 'acquiring:0.0', 'a:8.62785782373976e-06', 'maps:0.0', 'database:0.0', 'to:2.886244146793615e-06', 'compete:0.0', 'with:4.733654350275174e-06', 'google:0.0', 's:0.0', 'maps:0.0', 'as:0.0', 'well:0.0', 'as:0.0', 'with:4.733654350275174e-06', 'navigation:0.0', 'device:0.0', 'companies:0.0', 'such:0.0', 'as:0.0', 'tom:0.0', '##tom:0.0', 'n:0.0', '##v:0.0', 'and:0.0', 'ga:0.0', '##rmin:0.0', 'ltd:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('chicago', tensor(0., device='cuda:0')), ('-', tensor(0.1214, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('navteq', tensor(0., device='cuda:0')), ('in', tensor(0.0761, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), (',', tensor(0.2011, device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('a', tensor(0.2172, device='cuda:0')), ('maps', tensor(0., device='cuda:0')), ('database', tensor(0., device='cuda:0')), ('to', tensor(0.0727, device='cuda:0')), ('compete', tensor(0., device='cuda:0')), ('with', tensor(0.1192, device='cuda:0')), ('google', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('maps', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('with', tensor(0.1192, device='cuda:0')), ('navigation', tensor(0., device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('tomtom', tensor(0., device='cuda:0')), ('nv', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('garmin', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0731, device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('chicago', tensor(0., device='cuda:0')), ('-', tensor(0.1214, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('navteq', tensor(0., device='cuda:0')), ('in', tensor(0.0761, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), (',', tensor(0.2011, device='cuda:0')), ('acquiring', tensor(0., device='cuda:0')), ('a', tensor(0.2172, device='cuda:0')), ('maps', tensor(0., device='cuda:0')), ('database', tensor(0., device='cuda:0')), ('to', tensor(0.0727, device='cuda:0')), ('compete', tensor(0., device='cuda:0')), ('with', tensor(0.1192, device='cuda:0')), ('google', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('maps', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('with', tensor(0.1192, device='cuda:0')), ('navigation', tensor(0., device='cuda:0')), ('device', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('tomtom', tensor(0., device='cuda:0')), ('nv', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('garmin', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0731, device='cuda:0'))]
idx: 818, example: In addition , Lehdentekijat Oy will start producing a new membership magazine , Viisas Raha ( Wise Money ) for the Association , prediction: 1, correct_label: 1, class_scores: [0.15552251 0.47657678 0.3679007 ], word_scores: ['in:3.0217122457543155e-06', 'addition:0.0', ',:7.986737728060689e-06', 'le:0.0', '##hd:0.0', '##ente:0.0', '##ki:0.0', '##ja:0.0', '##t:0.0', 'o:0.0', '##y:1.832826342251792e-06', 'will:4.073096533829812e-06', 'start:0.0', 'producing:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'membership:0.0', 'magazine:0.0', ',:7.986737728060689e-06', 'vii:0.0', '##sas:0.0', 'ra:0.0', '##ha:0.0', '(:0.0', 'wise:0.0', 'money:0.0', '):0.0', 'for:0.0', 'the:6.3806996877247e-06', 'association:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0739, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.1954, device='cuda:0')), ('lehdentekijat', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('will', tensor(0.0996, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('producing', tensor(0., device='cuda:0')), ('a', tensor(0.2111, device='cuda:0')), ('new', tensor(0.0685, device='cuda:0')), ('membership', tensor(0., device='cuda:0')), ('magazine', tensor(0., device='cuda:0')), (',', tensor(0.1954, device='cuda:0')), ('viisas', tensor(0., device='cuda:0')), ('raha', tensor(0., device='cuda:0')), ('wise', tensor(0., device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1561, device='cuda:0')), ('association', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0739, device='cuda:0')), ('addition', tensor(0., device='cuda:0')), (',', tensor(0.1954, device='cuda:0')), ('lehdentekijat', tensor(0., device='cuda:0')), ('oy', tensor(0., device='cuda:0')), ('will', tensor(0.0996, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('producing', tensor(0., device='cuda:0')), ('a', tensor(0.2111, device='cuda:0')), ('new', tensor(0.0685, device='cuda:0')), ('membership', tensor(0., device='cuda:0')), ('magazine', tensor(0., device='cuda:0')), (',', tensor(0.1954, device='cuda:0')), ('viisas', tensor(0., device='cuda:0')), ('raha', tensor(0., device='cuda:0')), ('wise', tensor(0., device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1561, device='cuda:0')), ('association', tensor(0., device='cuda:0'))]
idx: 819, example: 55 workers in +�m+�l will be affected by the close-down , prediction: 2, correct_label: 0, class_scores: [0.23333074 0.3497026  0.41696662], word_scores: ['55:0.0', 'workers:0.0', 'in:3.0217122457543155e-06', '+:0.0', 'm:0.0', '+:0.0', 'l:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'affected:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'close:0.0', '-:4.821180027647642e-06', 'down:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('55', tensor(0., device='cuda:0')), ('workers', tensor(0., device='cuda:0')), ('in', tensor(0.1652, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('will', tensor(0.2226, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('affected', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.3487, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('-', tensor(0.2635, device='cuda:0')), ('down', tensor(0., device='cuda:0'))],  word_scores_max: [('55', tensor(0., device='cuda:0')), ('workers', tensor(0., device='cuda:0')), ('in', tensor(0.1652, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('will', tensor(0.2226, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('affected', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.3487, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('-', tensor(0.2635, device='cuda:0')), ('down', tensor(0., device='cuda:0'))]
idx: 820, example: Raffles Equities Ltd became a substantial holder in Archer Exploration Ltd on January 12 with 11.7 million shares ( 18.2 pc ) , prediction: 2, correct_label: 2, class_scores: [0.21758236 0.38088864 0.40152895], word_scores: ['raf:0.0', '##fles:0.0', 'e:0.0', '##qui:0.0', '##ties:0.0', 'ltd:0.0', 'became:0.0', 'a:8.62785782373976e-06', 'substantial:0.0', 'holder:0.0', 'in:3.0217122457543155e-06', 'archer:0.0', 'exploration:0.0', 'ltd:0.0', 'on:0.0', 'january:0.0', '12:0.0', 'with:4.733654350275174e-06', '11:0.0', '.:2.903296945078182e-06', '7:0.0', 'million:6.018835847498849e-06', 'shares:0.0', '(:0.0', '18:0.0', '.:2.903296945078182e-06', '2:0.0', 'pc:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('raffles', tensor(0., device='cuda:0')), ('equities', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('became', tensor(0., device='cuda:0')), ('a', tensor(0.3059, device='cuda:0')), ('substantial', tensor(0., device='cuda:0')), ('holder', tensor(0., device='cuda:0')), ('in', tensor(0.1071, device='cuda:0')), ('archer', tensor(0., device='cuda:0')), ('exploration', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('with', tensor(0.1678, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.1029, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.2134, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.1029, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('pc', tensor(0., device='cuda:0'))],  word_scores_max: [('raffles', tensor(0., device='cuda:0')), ('equities', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('became', tensor(0., device='cuda:0')), ('a', tensor(0.3059, device='cuda:0')), ('substantial', tensor(0., device='cuda:0')), ('holder', tensor(0., device='cuda:0')), ('in', tensor(0.1071, device='cuda:0')), ('archer', tensor(0., device='cuda:0')), ('exploration', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('with', tensor(0.1678, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.1029, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.2134, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.1029, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('pc', tensor(0., device='cuda:0'))]
idx: 821, example: Finnish Outotec has been awarded a contract to supply a new zinc roaster with gas cleaning and sulphuric acid plant for the OZK Kardzhali zinc smelter in Bulgaria , prediction: 2, correct_label: 1, class_scores: [0.23031132 0.30659255 0.4630961 ], word_scores: ['finnish:0.0', 'out:0.0', '##ote:0.0', '##c:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'awarded:0.0', 'a:8.62785782373976e-06', 'contract:7.1864019446366e-06', 'to:2.886244146793615e-06', 'supply:6.221108833415201e-06', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'zinc:0.0', 'roast:0.0', '##er:0.0', 'with:4.733654350275174e-06', 'gas:0.0', 'cleaning:0.0', 'and:0.0', 'sul:0.0', '##ph:0.0', '##uri:0.0', '##c:0.0', 'acid:0.0', 'plant:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'oz:0.0', '##k:0.0', 'ka:0.0', '##rd:0.0', '##zh:0.0', '##ali:0.0', 'zinc:0.0', 'sm:0.0', '##elt:0.0', '##er:0.0', 'in:3.0217122457543155e-06', 'bulgaria:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('outotec', tensor(0., device='cuda:0')), ('has', tensor(0.1050, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('contract', tensor(0.1274, device='cuda:0')), ('to', tensor(0.0512, device='cuda:0')), ('supply', tensor(0.1103, device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('new', tensor(0.0496, device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('roaster', tensor(0., device='cuda:0')), ('with', tensor(0.0839, device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('cleaning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sulphuric', tensor(0., device='cuda:0')), ('acid', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1131, device='cuda:0')), ('ozk', tensor(0., device='cuda:0')), ('kardzhali', tensor(0., device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('smelter', tensor(0., device='cuda:0')), ('in', tensor(0.0536, device='cuda:0')), ('bulgaria', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('outotec', tensor(0., device='cuda:0')), ('has', tensor(0.1050, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('contract', tensor(0.1274, device='cuda:0')), ('to', tensor(0.0512, device='cuda:0')), ('supply', tensor(0.1103, device='cuda:0')), ('a', tensor(0.1530, device='cuda:0')), ('new', tensor(0.0496, device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('roaster', tensor(0., device='cuda:0')), ('with', tensor(0.0839, device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('cleaning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sulphuric', tensor(0., device='cuda:0')), ('acid', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1131, device='cuda:0')), ('ozk', tensor(0., device='cuda:0')), ('kardzhali', tensor(0., device='cuda:0')), ('zinc', tensor(0., device='cuda:0')), ('smelter', tensor(0., device='cuda:0')), ('in', tensor(0.0536, device='cuda:0')), ('bulgaria', tensor(0., device='cuda:0'))]
idx: 822, example: The Brazilian unit of Finnish security solutions provider F-Secure signed up 1,500 new clients last year , online news source Reseller Web quoted the division 's commercial director , Vladimir Brand+�o , as saying , prediction: 2, correct_label: 1, class_scores: [0.20416476 0.37058887 0.42524633], word_scores: ['the:6.3806996877247e-06', 'brazilian:0.0', 'unit:0.0', 'of:3.4365734791208524e-06', 'finnish:0.0', 'security:0.0', 'solutions:0.0', 'provider:0.0', 'f:0.0', '-:4.821180027647642e-06', 'secure:0.0', 'signed:0.0', 'up:1.4959460941099678e-06', '1:0.0', ',:7.986737728060689e-06', '500:0.0', 'new:2.798587502184091e-06', 'clients:0.0', 'last:0.0', 'year:0.0', ',:7.986737728060689e-06', 'online:0.0', 'news:0.0', 'source:0.0', 'res:0.0', '##eller:0.0', 'web:0.0', 'quoted:0.0', 'the:6.3806996877247e-06', 'division:0.0', "':0.0", 's:0.0', 'commercial:0.0', 'director:0.0', ',:7.986737728060689e-06', 'vladimir:0.0', 'brand:0.0', '+:0.0', 'o:0.0', ',:7.986737728060689e-06', 'as:0.0', 'saying:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1545, device='cuda:0')), ('brazilian', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.0832, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('f', tensor(0., device='cuda:0')), ('-', tensor(0.1168, device='cuda:0')), ('secure', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('up', tensor(0.0362, device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1934, device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('new', tensor(0.0678, device='cuda:0')), ('clients', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.1934, device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('source', tensor(0., device='cuda:0')), ('reseller', tensor(0., device='cuda:0')), ('web', tensor(0., device='cuda:0')), ('quoted', tensor(0., device='cuda:0')), ('the', tensor(0.1545, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1545, device='cuda:0')), ('brazilian', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('of', tensor(0.0832, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('f', tensor(0., device='cuda:0')), ('-', tensor(0.1168, device='cuda:0')), ('secure', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('up', tensor(0.0362, device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1934, device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('new', tensor(0.0678, device='cuda:0')), ('clients', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), (',', tensor(0.1934, device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('source', tensor(0., device='cuda:0')), ('reseller', tensor(0., device='cuda:0')), ('web', tensor(0., device='cuda:0')), ('quoted', tensor(0., device='cuda:0')), ('the', tensor(0.1545, device='cuda:0'))]
idx: 823, example: The subscription period of Amer Sports ' 2002 warrant scheme will end on 31 December 2007 , prediction: 2, correct_label: 2, class_scores: [0.25970897 0.32578954 0.4145015 ], word_scores: ['the:6.3806996877247e-06', 'subscription:0.0', 'period:0.0', 'of:3.4365734791208524e-06', 'am:0.0', '##er:0.0', 'sports:0.0', "':0.0", '2002:0.0', 'warrant:0.0', 'scheme:0.0', 'will:4.073096533829812e-06', 'end:0.0', 'on:0.0', '31:0.0', 'december:0.0', '2007:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6499, device='cuda:0')), ('subscription', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('amer', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6499, device='cuda:0')), ('subscription', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0')), ('amer', tensor(0., device='cuda:0'))]
idx: 824, example: The enterprise value of Maritim Food AS has been determined as approximately EUR15m , prediction: 2, correct_label: 2, class_scores: [0.18525922 0.38233033 0.4324105 ], word_scores: ['the:6.3806996877247e-06', 'enterprise:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'mari:0.0', '##ti:2.5915114747476764e-06', '##m:0.0', 'food:0.0', 'as:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'determined:0.0', 'as:0.0', 'approximately:0.0', 'eu:0.0', '##r:0.0', '##15:0.0', '##m:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3481, device='cuda:0')), ('enterprise', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1875, device='cuda:0')), ('maritim', tensor(0.1414, device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('has', tensor(0.3230, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('determined', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('eur15m', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3481, device='cuda:0')), ('enterprise', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.1875, device='cuda:0')), ('maritim', tensor(0.1414, device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('has', tensor(0.3230, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('determined', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('eur15m', tensor(0., device='cuda:0'))]
idx: 825, example: Both operating profit and net sales for the six-month period increased , respectively from EUR0 .4 m and EUR3 .2 m , as compared to the corresponding period in 2005 , prediction: 2, correct_label: 1, class_scores: [0.1828949  0.28642645 0.53067863], word_scores: ['both:0.0', 'operating:0.0', 'profit:0.0', 'and:0.0', 'net:0.0', 'sales:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'six:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'increased:0.0', ',:7.986737728060689e-06', 'respectively:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##0:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', 'and:0.0', 'eu:0.0', '##r:0.0', '##3:0.0', '.:2.903296945078182e-06', '2:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2005:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('-', tensor(0.0969, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0903, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur3', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))],  word_scores_max: [('both', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('-', tensor(0.0969, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('respectively', tensor(0., device='cuda:0')), ('from', tensor(0.0903, device='cuda:0')), ('eur0', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('eur3', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('2005', tensor(0., device='cuda:0'))]
idx: 826, example: The company booked April-June new orders worth 949 mln eur , compared with 786 mln eur in the same period a year ago , prediction: 1, correct_label: 1, class_scores: [0.28724876 0.46344098 0.24931026], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'booked:0.0', 'april:0.0', '-:4.821180027647642e-06', 'june:0.0', 'new:2.798587502184091e-06', 'orders:0.0', 'worth:0.0', '94:0.0', '##9:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'with:4.733654350275174e-06', '78:0.0', '##6:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1240, device='cuda:0')), ('company', tensor(0.1301, device='cuda:0')), ('booked', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('-', tensor(0.0937, device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('new', tensor(0.0544, device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('949', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.1552, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.0920, device='cuda:0')), ('786', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('the', tensor(0.1240, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1677, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1240, device='cuda:0')), ('company', tensor(0.1301, device='cuda:0')), ('booked', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('-', tensor(0.0937, device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('new', tensor(0.0544, device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('949', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), (',', tensor(0.1552, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('with', tensor(0.0920, device='cuda:0')), ('786', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('the', tensor(0.1240, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1677, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('ago', tensor(0., device='cuda:0'))]
idx: 827, example: Meanwhile , minority shareholders , expecting TeliaSonera to retain the bid , sell shares now , prediction: 2, correct_label: 2, class_scores: [0.22926332 0.26672274 0.5040139 ], word_scores: ['meanwhile:0.0', ',:7.986737728060689e-06', 'minority:0.0', 'shareholders:0.0', ',:7.986737728060689e-06', 'expecting:0.0', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'to:2.886244146793615e-06', 'retain:0.0', 'the:6.3806996877247e-06', 'bid:0.0', ',:7.986737728060689e-06', 'sell:0.0', 'shares:0.0', 'now:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('meanwhile', tensor(0., device='cuda:0')), (',', tensor(0.2404, device='cuda:0')), ('minority', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), (',', tensor(0.2404, device='cuda:0')), ('expecting', tensor(0., device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('to', tensor(0.0869, device='cuda:0')), ('retain', tensor(0., device='cuda:0')), ('the', tensor(0.1920, device='cuda:0')), ('bid', tensor(0., device='cuda:0')), (',', tensor(0.2404, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0'))],  word_scores_max: [('meanwhile', tensor(0., device='cuda:0')), (',', tensor(0.2404, device='cuda:0')), ('minority', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), (',', tensor(0.2404, device='cuda:0')), ('expecting', tensor(0., device='cuda:0')), ('teliasonera', tensor(0., device='cuda:0')), ('to', tensor(0.0869, device='cuda:0')), ('retain', tensor(0., device='cuda:0')), ('the', tensor(0.1920, device='cuda:0')), ('bid', tensor(0., device='cuda:0')), (',', tensor(0.2404, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0'))]
idx: 828, example: MegaFon 's subscriber base increased 16.1 % in 2009 to 50.5 million users as of December 31 , while its market share by the number of customers amounted to 24 % as of late 2009 , up from 23 % as of late 2008 , according to TeliaSonera estimates , prediction: 2, correct_label: 1, class_scores: [0.22878736 0.37417245 0.3970402 ], word_scores: ['mega:0.0', '##fo:0.0', '##n:0.0', "':0.0", 's:0.0', 'sub:0.0', '##scribe:0.0', '##r:0.0', 'base:0.0', 'increased:0.0', '16:0.0', '.:2.903296945078182e-06', '1:0.0', '%:0.0', '50:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', 'users:0.0', 'as:0.0', 'of:3.4365734791208524e-06', 'december:0.0', '31:0.0', ',:7.986737728060689e-06', 'while:0.0', 'its:1.7191393908433383e-06', 'market:0.0', 'share:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'number:0.0', 'of:3.4365734791208524e-06', 'customers:0.0', 'amounted:0.0', 'to:2.886244146793615e-06', '24:0.0', '%:0.0', 'as:0.0', 'of:3.4365734791208524e-06', 'late:0.0', '2009:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', '23:3.2229838780040154e-06', '%:0.0', 'as:0.0', 'of:3.4365734791208524e-06', 'late:0.0', '2008:0.0', ',:7.986737728060689e-06', 'according:0.0', 'to:2.886244146793615e-06', 'tel:0.0', '##ias:0.0', '##one:0.0', '##ra:0.0', 'estimates:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [],  word_scores_max: []
idx: 829, example: The Bank is also examining the benefits of transferring the Swedish business to operate as a branch office so that the operations would be governed by Finland 's laws , prediction: 2, correct_label: 2, class_scores: [0.18841025 0.28772256 0.52386713], word_scores: ['the:6.3806996877247e-06', 'bank:0.0', 'is:0.0', 'also:0.0', 'examining:0.0', 'the:6.3806996877247e-06', 'benefits:0.0', 'of:3.4365734791208524e-06', 'transferring:0.0', 'the:6.3806996877247e-06', 'swedish:0.0', 'business:0.0', 'to:2.886244146793615e-06', 'operate:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'branch:0.0', 'office:0.0', 'so:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'operations:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'governed:0.0', 'by:0.0', 'finland:4.096111752005527e-06', "':0.0", 's:0.0', 'laws:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1447, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('examining', tensor(0., device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('benefits', tensor(0., device='cuda:0')), ('of', tensor(0.0780, device='cuda:0')), ('transferring', tensor(0., device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('to', tensor(0.0655, device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1957, device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('that', tensor(0.0343, device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('would', tensor(0.0475, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('governed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1447, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('examining', tensor(0., device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('benefits', tensor(0., device='cuda:0')), ('of', tensor(0.0780, device='cuda:0')), ('transferring', tensor(0., device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('to', tensor(0.0655, device='cuda:0')), ('operate', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1957, device='cuda:0')), ('branch', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('that', tensor(0.0343, device='cuda:0')), ('the', tensor(0.1447, device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('would', tensor(0.0475, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('governed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))]
idx: 830, example: `` The biggest challenge was to make the piece look raw , '' Hansen said , prediction: 2, correct_label: 2, class_scores: [0.18914475 0.37938514 0.43147007], word_scores: ['`:0.0', '`:0.0', 'the:6.3806996877247e-06', 'biggest:0.0', 'challenge:0.0', 'was:0.0', 'to:2.886244146793615e-06', 'make:0.0', 'the:6.3806996877247e-06', 'piece:0.0', 'look:0.0', 'raw:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'hansen:0.0', 'said:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2700, device='cuda:0')), ('biggest', tensor(0., device='cuda:0')), ('challenge', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('to', tensor(0.1221, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('the', tensor(0.2700, device='cuda:0')), ('piece', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('raw', tensor(0., device='cuda:0')), (',', tensor(0.3379, device='cuda:0'))],  word_scores_max: [('the', tensor(0.2700, device='cuda:0')), ('biggest', tensor(0., device='cuda:0')), ('challenge', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('to', tensor(0.1221, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('the', tensor(0.2700, device='cuda:0')), ('piece', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('raw', tensor(0., device='cuda:0')), (',', tensor(0.3379, device='cuda:0'))]
idx: 831, example: Olvi has posted a strong set of figures for the first six months of this year , prediction: 2, correct_label: 1, class_scores: [0.20830393 0.33248106 0.45921504], word_scores: ['ol:0.0', '##vi:0.0', 'has:5.9214244174654596e-06', 'posted:0.0', 'a:8.62785782373976e-06', 'strong:0.0', 'set:0.0', 'of:3.4365734791208524e-06', 'figures:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'six:0.0', 'months:0.0', 'of:3.4365734791208524e-06', 'this:0.0', 'year:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('olvi', tensor(0., device='cuda:0')), ('has', tensor(0.2130, device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.3103, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('of', tensor(0.1236, device='cuda:0')), ('figures', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2295, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.1236, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('olvi', tensor(0., device='cuda:0')), ('has', tensor(0.2130, device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.3103, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('of', tensor(0.1236, device='cuda:0')), ('figures', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2295, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.1236, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 832, example: Lemmink+�inen started the manufacture of roofing felt in 1920 and the production of asphalt in the 1930s , prediction: 2, correct_label: 2, class_scores: [0.12527761 0.3735833  0.5011391 ], word_scores: ['le:0.0', '##mm:0.0', '##ink:0.0', '+:0.0', 'in:3.0217122457543155e-06', '##en:0.0', 'started:0.0', 'the:6.3806996877247e-06', 'manufacture:0.0', 'of:3.4365734791208524e-06', 'roof:0.0', '##ing:0.0', 'felt:0.0', 'in:3.0217122457543155e-06', '1920:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'production:0.0', 'of:3.4365734791208524e-06', 'asphalt:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', '1930s:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lemmink', tensor(0., device='cuda:0')), ('inen', tensor(0.0861, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('manufacture', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('roofing', tensor(0., device='cuda:0')), ('felt', tensor(0., device='cuda:0')), ('in', tensor(0.0861, device='cuda:0')), ('1920', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('asphalt', tensor(0., device='cuda:0')), ('in', tensor(0.0861, device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('1930s', tensor(0., device='cuda:0'))],  word_scores_max: [('lemmink', tensor(0., device='cuda:0')), ('inen', tensor(0.0861, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('manufacture', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('roofing', tensor(0., device='cuda:0')), ('felt', tensor(0., device='cuda:0')), ('in', tensor(0.0861, device='cuda:0')), ('1920', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('of', tensor(0.0980, device='cuda:0')), ('asphalt', tensor(0., device='cuda:0')), ('in', tensor(0.0861, device='cuda:0')), ('the', tensor(0.1819, device='cuda:0')), ('1930s', tensor(0., device='cuda:0'))]
idx: 833, example: The deal will have no significant effect on the acquiring company 's equity ratio , prediction: 2, correct_label: 2, class_scores: [0.16427585 0.40253064 0.43319356], word_scores: ['the:6.3806996877247e-06', 'deal:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'no:0.0', 'significant:0.0', 'effect:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'acquiring:0.0', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'equity:0.0', 'ratio:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3232, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('will', tensor(0.2063, device='cuda:0')), ('have', tensor(0.1474, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3232, device='cuda:0')), ('acquiring', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.3232, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('will', tensor(0.2063, device='cuda:0')), ('have', tensor(0.1474, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('significant', tensor(0., device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3232, device='cuda:0')), ('acquiring', tensor(0., device='cuda:0'))]
idx: 834, example: Outotec 's net profit for the second quarter of 2007 jumped to 16.8 mln euro ( $ 23.1 mln ) from 4.6 mln euro ( $ 6.3 mln ) a year ago , prediction: 2, correct_label: 1, class_scores: [0.1705567 0.3754468 0.4539965], word_scores: ['out:0.0', '##ote:0.0', '##c:0.0', "':0.0", 's:0.0', 'net:0.0', 'profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'second:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2007:0.0', 'jumped:0.0', 'to:2.886244146793615e-06', '16:0.0', '.:2.903296945078182e-06', '8:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '(:0.0', '$:0.0', '23:3.2229838780040154e-06', '.:2.903296945078182e-06', '1:0.0', 'ml:0.0', '##n:0.0', '):0.0', 'from:4.495178018260049e-06', '4:0.0', '.:2.903296945078182e-06', '6:0.0', 'ml:0.0', '##n:0.0', 'euro:0.0', '(:0.0', '$:0.0', '6:0.0', '.:2.903296945078182e-06', '3:0.0', 'ml:0.0', '##n:0.0', '):0.0', 'a:8.62785782373976e-06', 'year:0.0', 'ago:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 835, example: The three year turn-around program is expected to ensure Salomon 's future competitiveness , the company said , prediction: 2, correct_label: 1, class_scores: [0.23116703 0.31240255 0.4564305 ], word_scores: ['the:6.3806996877247e-06', 'three:0.0', 'year:0.0', 'turn:0.0', '-:4.821180027647642e-06', 'around:0.0', 'program:0.0', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'ensure:0.0', 'sal:0.0', '##omo:0.0', '##n:0.0', "':0.0", 's:0.0', 'future:0.0', 'competitive:0.0', '##ness:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.4529, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('-', tensor(0.3422, device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.2049, device='cuda:0')), ('ensure', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4529, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('-', tensor(0.3422, device='cuda:0')), ('around', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.2049, device='cuda:0')), ('ensure', tensor(0., device='cuda:0'))]
idx: 836, example: Outotec 's delivery covers the engineering , supply and construction of a circulating fluid bed calcination plant with a capacity of 1,600 tons of alumina per day , prediction: 2, correct_label: 2, class_scores: [0.19389294 0.33708632 0.46902072], word_scores: ['out:0.0', '##ote:0.0', '##c:0.0', "':0.0", 's:0.0', 'delivery:0.0', 'covers:0.0', 'the:6.3806996877247e-06', 'engineering:0.0', ',:7.986737728060689e-06', 'supply:6.221108833415201e-06', 'and:0.0', 'construction:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'circulating:0.0', 'fluid:0.0', 'bed:0.0', 'cal:0.0', '##cina:0.0', '##tion:0.0', 'plant:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'capacity:0.0', 'of:3.4365734791208524e-06', '1:0.0', ',:7.986737728060689e-06', '600:0.0', 'tons:0.0', 'of:3.4365734791208524e-06', 'al:0.0', '##umi:0.0', '##na:0.0', 'per:0.0', 'day:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 837, example: The store is located in Poznan in a shopping center named Pestka , the company added , prediction: 1, correct_label: 2, class_scores: [0.19427286 0.41205522 0.39367187], word_scores: ['the:6.3806996877247e-06', 'store:0.0', 'is:0.0', 'located:0.0', 'in:3.0217122457543155e-06', 'poznan:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'shopping:0.0', 'center:0.0', 'named:0.0', 'pest:0.0', '##ka:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'added:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1515, device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('in', tensor(0.0717, device='cuda:0')), ('poznan', tensor(0., device='cuda:0')), ('in', tensor(0.0717, device='cuda:0')), ('a', tensor(0.2049, device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('named', tensor(0., device='cuda:0')), ('pestka', tensor(0., device='cuda:0')), (',', tensor(0.1896, device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('company', tensor(0.1590, device='cuda:0')), ('added', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1515, device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('in', tensor(0.0717, device='cuda:0')), ('poznan', tensor(0., device='cuda:0')), ('in', tensor(0.0717, device='cuda:0')), ('a', tensor(0.2049, device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('named', tensor(0., device='cuda:0')), ('pestka', tensor(0., device='cuda:0')), (',', tensor(0.1896, device='cuda:0')), ('the', tensor(0.1515, device='cuda:0')), ('company', tensor(0.1590, device='cuda:0')), ('added', tensor(0., device='cuda:0'))]
idx: 838, example: Okmetic has used the furnaces for the contract manufacturing of solar crystals , prediction: 2, correct_label: 2, class_scores: [0.19811498 0.35395572 0.44792926], word_scores: ['ok:0.0', '##met:0.0', '##ic:0.0', 'has:5.9214244174654596e-06', 'used:0.0', 'the:6.3806996877247e-06', 'furnace:0.0', '##s:4.601175078278175e-06', 'for:0.0', 'the:6.3806996877247e-06', 'contract:7.1864019446366e-06', 'manufacturing:0.0', 'of:3.4365734791208524e-06', 'solar:0.0', 'crystals:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('okmetic', tensor(0., device='cuda:0')), ('has', tensor(0.2021, device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('the', tensor(0.2177, device='cuda:0')), ('furnaces', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2177, device='cuda:0')), ('contract', tensor(0.2452, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('of', tensor(0.1173, device='cuda:0')), ('solar', tensor(0., device='cuda:0')), ('crystals', tensor(0., device='cuda:0'))],  word_scores_max: [('okmetic', tensor(0., device='cuda:0')), ('has', tensor(0.2021, device='cuda:0')), ('used', tensor(0., device='cuda:0')), ('the', tensor(0.2177, device='cuda:0')), ('furnaces', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2177, device='cuda:0')), ('contract', tensor(0.2452, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('of', tensor(0.1173, device='cuda:0')), ('solar', tensor(0., device='cuda:0')), ('crystals', tensor(0., device='cuda:0'))]
idx: 839, example: Cramo Group 's financial targets for 2010-2013 are sales growth higher than 10 percent per year ; return on equity above 15 percent , prediction: 2, correct_label: 1, class_scores: [0.16458496 0.39978525 0.43562973], word_scores: ['cr:0.0', '##amo:0.0', 'group:0.0', "':0.0", 's:0.0', 'financial:0.0', 'targets:0.0', 'for:0.0', '2010:0.0', '-:4.821180027647642e-06', '2013:0.0', 'are:0.0', 'sales:0.0', 'growth:0.0', 'higher:0.0', 'than:0.0', '10:0.0', 'percent:0.0', 'per:0.0', 'year:0.0', ';:0.0', 'return:0.0', 'on:0.0', 'equity:0.0', 'above:0.0', '15:0.0', 'percent:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cramo', tensor(nan, device='cuda:0'))],  word_scores_max: [('cramo', tensor(nan, device='cuda:0'))]
idx: 840, example: Technopolis said before the protocol was signed that the techno-park would be built at a site covering more than six hectares in the Neudorf special economic zone and that it planned to invest 200 million euros in the project until 2009 inclusive , prediction: 1, correct_label: 2, class_scores: [0.22234276 0.48892036 0.28873694], word_scores: ['techno:0.0', '##polis:0.0', 'said:0.0', 'before:0.0', 'the:6.3806996877247e-06', 'protocol:0.0', 'was:0.0', 'signed:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'techno:0.0', '-:4.821180027647642e-06', 'park:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'built:0.0', 'at:0.0', 'a:8.62785782373976e-06', 'site:0.0', 'covering:0.0', 'more:0.0', 'than:0.0', 'six:0.0', 'hectares:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'ne:0.0', '##ud:0.0', '##orf:0.0', 'special:0.0', 'economic:0.0', 'zone:0.0', 'and:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'planned:0.0', 'to:2.886244146793615e-06', 'invest:0.0', '200:0.0', 'million:6.018835847498849e-06', 'euros:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'project:0.0', 'until:0.0', '2009:0.0', 'inclusive:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('technopolis', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('protocol', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('that', tensor(0.0243, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('techno', tensor(0., device='cuda:0')), ('-', tensor(0.0773, device='cuda:0')), ('park', tensor(0., device='cuda:0')), ('would', tensor(0.0336, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.1383, device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('covering', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('hectares', tensor(0., device='cuda:0')), ('in', tensor(0.0484, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('neudorf', tensor(0., device='cuda:0')), ('special', tensor(0., device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('that', tensor(0.0243, device='cuda:0')), ('it', tensor(0.0536, device='cuda:0')), ('planned', tensor(0., device='cuda:0')), ('to', tensor(0.0463, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('million', tensor(0.0965, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.0484, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('inclusive', tensor(0., device='cuda:0'))],  word_scores_max: [('technopolis', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('protocol', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('that', tensor(0.0243, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('techno', tensor(0., device='cuda:0')), ('-', tensor(0.0773, device='cuda:0')), ('park', tensor(0., device='cuda:0')), ('would', tensor(0.0336, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('a', tensor(0.1383, device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('covering', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('six', tensor(0., device='cuda:0')), ('hectares', tensor(0., device='cuda:0')), ('in', tensor(0.0484, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('neudorf', tensor(0., device='cuda:0')), ('special', tensor(0., device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('that', tensor(0.0243, device='cuda:0')), ('it', tensor(0.0536, device='cuda:0')), ('planned', tensor(0., device='cuda:0')), ('to', tensor(0.0463, device='cuda:0')), ('invest', tensor(0., device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('million', tensor(0.0965, device='cuda:0')), ('euros', tensor(0., device='cuda:0')), ('in', tensor(0.0484, device='cuda:0')), ('the', tensor(0.1023, device='cuda:0')), ('project', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('inclusive', tensor(0., device='cuda:0'))]
idx: 841, example: We are honored to be acknowledged for our commitment to the industry , especially in Asia Pacific . ', prediction: 1, correct_label: 1, class_scores: [0.1743111 0.4561977 0.3694912], word_scores: ['we:0.0', 'are:0.0', 'honored:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'acknowledged:0.0', 'for:0.0', 'our:0.0', 'commitment:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'industry:0.0', ',:7.986737728060689e-06', 'especially:0.0', 'in:3.0217122457543155e-06', 'asia:0.0', 'pacific:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('honored', tensor(0., device='cuda:0')), ('to', tensor(0.1107, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('acknowledged', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0')), ('to', tensor(0.1107, device='cuda:0')), ('the', tensor(0.2448, device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.3064, device='cuda:0')), ('especially', tensor(0., device='cuda:0')), ('in', tensor(0.1159, device='cuda:0')), ('asia', tensor(0., device='cuda:0')), ('pacific', tensor(0., device='cuda:0')), ('.', tensor(0.1114, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('honored', tensor(0., device='cuda:0')), ('to', tensor(0.1107, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('acknowledged', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('commitment', tensor(0., device='cuda:0')), ('to', tensor(0.1107, device='cuda:0')), ('the', tensor(0.2448, device='cuda:0')), ('industry', tensor(0., device='cuda:0')), (',', tensor(0.3064, device='cuda:0')), ('especially', tensor(0., device='cuda:0')), ('in', tensor(0.1159, device='cuda:0')), ('asia', tensor(0., device='cuda:0')), ('pacific', tensor(0., device='cuda:0')), ('.', tensor(0.1114, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 842, example: The reductions will be implemented mainly in the course of the first half of 2009 , prediction: 2, correct_label: 2, class_scores: [0.1953053  0.35298508 0.45170963], word_scores: ['the:6.3806996877247e-06', 'reductions:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'implemented:0.0', 'mainly:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'course:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'first:0.0', 'half:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1927, device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('will', tensor(0.1230, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('implemented', tensor(0., device='cuda:0')), ('mainly', tensor(0., device='cuda:0')), ('in', tensor(0.0913, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('course', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1927, device='cuda:0')), ('reductions', tensor(0., device='cuda:0')), ('will', tensor(0.1230, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('implemented', tensor(0., device='cuda:0')), ('mainly', tensor(0., device='cuda:0')), ('in', tensor(0.0913, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('course', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('the', tensor(0.1927, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('of', tensor(0.1038, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 843, example: The manufacturing will begin in Pietarsaari in the beginning of the year 2009 and the delivery will take place in October 2009 , prediction: 1, correct_label: 2, class_scores: [0.2547827  0.39404178 0.3511755 ], word_scores: ['the:6.3806996877247e-06', 'manufacturing:0.0', 'will:4.073096533829812e-06', 'begin:0.0', 'in:3.0217122457543155e-06', 'pie:0.0', '##tar:0.0', '##sa:0.0', '##ari:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'beginning:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'year:0.0', '2009:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'delivery:0.0', 'will:4.073096533829812e-06', 'take:2.0325496734585613e-06', 'place:0.0', 'in:3.0217122457543155e-06', 'october:0.0', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1324, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('will', tensor(0.0845, device='cuda:0')), ('begin', tensor(0., device='cuda:0')), ('in', tensor(0.0627, device='cuda:0')), ('pietarsaari', tensor(0., device='cuda:0')), ('in', tensor(0.0627, device='cuda:0')), ('the', tensor(0.1324, device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('of', tensor(0.0713, device='cuda:0')), ('the', tensor(0.1324, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1324, device='cuda:0')), ('delivery', tensor(0., device='cuda:0')), ('will', tensor(0.0845, device='cuda:0')), ('take', tensor(0.0422, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('in', tensor(0.0627, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1324, device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('will', tensor(0.0845, device='cuda:0')), ('begin', tensor(0., device='cuda:0')), ('in', tensor(0.0627, device='cuda:0')), ('pietarsaari', tensor(0., device='cuda:0')), ('in', tensor(0.0627, device='cuda:0')), ('the', tensor(0.1324, device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('of', tensor(0.0713, device='cuda:0')), ('the', tensor(0.1324, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.1324, device='cuda:0')), ('delivery', tensor(0., device='cuda:0')), ('will', tensor(0.0845, device='cuda:0')), ('take', tensor(0.0422, device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('in', tensor(0.0627, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 844, example: The newly-completed Allure of the Seas and its identical sister ship , Oasis of the Seas , which was completed last year are the world 's largest cruise ships , prediction: 1, correct_label: 2, class_scores: [0.19113272 0.47827637 0.33059084], word_scores: ['the:6.3806996877247e-06', 'newly:0.0', '-:4.821180027647642e-06', 'completed:0.0', 'all:0.0', '##ure:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'seas:0.0', 'and:0.0', 'its:1.7191393908433383e-06', 'identical:0.0', 'sister:0.0', 'ship:0.0', ',:7.986737728060689e-06', 'oasis:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'seas:0.0', ',:7.986737728060689e-06', 'which:0.0', 'was:0.0', 'completed:0.0', 'last:0.0', 'year:0.0', 'are:0.0', 'the:6.3806996877247e-06', 'world:0.0', "':0.0", 's:0.0', 'largest:0.0', 'cruise:0.0', 'ships:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1162, device='cuda:0')), ('newly', tensor(0., device='cuda:0')), ('-', tensor(0.0878, device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('allure', tensor(0., device='cuda:0')), ('of', tensor(0.0626, device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('seas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('its', tensor(0.0313, device='cuda:0')), ('identical', tensor(0., device='cuda:0')), ('sister', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('oasis', tensor(0., device='cuda:0')), ('of', tensor(0.0626, device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('seas', tensor(0., device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('the', tensor(0.1162, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1162, device='cuda:0')), ('newly', tensor(0., device='cuda:0')), ('-', tensor(0.0878, device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('allure', tensor(0., device='cuda:0')), ('of', tensor(0.0626, device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('seas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('its', tensor(0.0313, device='cuda:0')), ('identical', tensor(0., device='cuda:0')), ('sister', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('oasis', tensor(0., device='cuda:0')), ('of', tensor(0.0626, device='cuda:0')), ('the', tensor(0.1162, device='cuda:0')), ('seas', tensor(0., device='cuda:0')), (',', tensor(0.1455, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('the', tensor(0.1162, device='cuda:0'))]
idx: 845, example: These sections will be put into place to form the load-bearing steel structure of the bridge , '' says Sami Eronen , Senior Vice President , Infrastructure and Northern Europe , Ruukki Construction , prediction: 1, correct_label: 2, class_scores: [0.14023143 0.44229403 0.41747457], word_scores: ['these:0.0', 'sections:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'put:0.0', 'into:0.0', 'place:0.0', 'to:2.886244146793615e-06', 'form:0.0', 'the:6.3806996877247e-06', 'load:0.0', '-:4.821180027647642e-06', 'bearing:0.0', 'steel:0.0', 'structure:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'bridge:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'says:0.0', 'sami:0.0', 'er:0.0', '##one:0.0', '##n:0.0', ',:7.986737728060689e-06', 'senior:0.0', 'vice:0.0', 'president:0.0', ',:7.986737728060689e-06', 'infrastructure:0.0', 'and:0.0', 'northern:0.0', 'europe:0.0', ',:7.986737728060689e-06', 'ru:0.0', '##uk:0.0', '##ki:0.0', 'construction:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('these', tensor(0., device='cuda:0')), ('sections', tensor(0., device='cuda:0')), ('will', tensor(0.1133, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('to', tensor(0.0803, device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('the', tensor(0.1774, device='cuda:0')), ('load', tensor(0., device='cuda:0')), ('-', tensor(0.1341, device='cuda:0')), ('bearing', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('structure', tensor(0., device='cuda:0')), ('of', tensor(0.0956, device='cuda:0')), ('the', tensor(0.1774, device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), (',', tensor(0.2221, device='cuda:0'))],  word_scores_max: [('these', tensor(0., device='cuda:0')), ('sections', tensor(0., device='cuda:0')), ('will', tensor(0.1133, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('to', tensor(0.0803, device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('the', tensor(0.1774, device='cuda:0')), ('load', tensor(0., device='cuda:0')), ('-', tensor(0.1341, device='cuda:0')), ('bearing', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('structure', tensor(0., device='cuda:0')), ('of', tensor(0.0956, device='cuda:0')), ('the', tensor(0.1774, device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), (',', tensor(0.2221, device='cuda:0'))]
idx: 846, example: Jun. 14 , 2009 ( AOL Weblogs delivered by Newstex ) -- Looks like the E71 is about to be upstaged as Nokia 's ( NYSE : NOK ) premier business-class smartphone -- someone in Espoo 's just hit the corporate YouTube account with this promo video for an E72 , prediction: 1, correct_label: 2, class_scores: [0.26406807 0.44804984 0.28788203], word_scores: ['jun:0.0', '.:2.903296945078182e-06', '14:0.0', ',:7.986737728060689e-06', '2009:0.0', '(:0.0', 'ao:0.0', '##l:0.0', 'web:0.0', '##log:0.0', '##s:4.601175078278175e-06', 'delivered:0.0', 'by:0.0', 'news:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'ups:0.0', '##tage:0.0', '##d:0.0', 'as:0.0', 'nokia:0.0', "':0.0", 's:0.0', '(:0.0', 'ny:0.0', '##se:0.0', '::0.0', 'no:0.0', '##k:0.0', '):0.0', 'premier:0.0', 'business:0.0', '-:4.821180027647642e-06', 'class:0.0', 'smartphone:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'someone:0.0', 'in:3.0217122457543155e-06', 'es:2.450917691021459e-06', '##poo:4.037954568048008e-06', "':0.0", 's:0.0', 'just:0.0', 'hit:0.0', 'the:6.3806996877247e-06', 'corporate:0.0', 'youtube:0.0', 'account:0.0', 'with:4.733654350275174e-06', 'this:0.0', 'promo:0.0', 'video:0.0', 'for:0.0', 'an:0.0', 'e:0.0', '##7:0.0', '##2:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('jun', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0')), ('14', tensor(0., device='cuda:0')), (',', tensor(0.5797, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('aol', tensor(0., device='cuda:0')), ('weblogs', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('to', tensor(0.2095, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('upstaged', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0'))],  word_scores_max: [('jun', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0')), ('14', tensor(0., device='cuda:0')), (',', tensor(0.5797, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('aol', tensor(0., device='cuda:0')), ('weblogs', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('to', tensor(0.2095, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('upstaged', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0'))]
idx: 847, example: The fair value of the property portfolio doubled as a result of the Kapiteeli acquisition and totalled EUR 2,686.2 1,259.7 million , prediction: 1, correct_label: 1, class_scores: [0.2095744  0.41094342 0.3794822 ], word_scores: ['the:6.3806996877247e-06', 'fair:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'property:0.0', 'portfolio:0.0', 'doubled:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'result:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'ka:0.0', '##pit:0.0', '##ee:0.0', '##li:0.0', 'acquisition:0.0', 'and:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '2:0.0', ',:7.986737728060689e-06', '68:0.0', '##6:0.0', '.:2.903296945078182e-06', '2:0.0', '1:0.0', ',:7.986737728060689e-06', '259:0.0', '.:2.903296945078182e-06', '7:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1022, device='cuda:0')), ('fair', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.0550, device='cuda:0')), ('the', tensor(0.1022, device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('portfolio', tensor(0., device='cuda:0')), ('doubled', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1382, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0550, device='cuda:0')), ('the', tensor(0.1022, device='cuda:0')), ('kapiteeli', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.1279, device='cuda:0')), ('686', tensor(0., device='cuda:0')), ('.', tensor(0.0465, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1279, device='cuda:0')), ('259', tensor(0., device='cuda:0')), ('.', tensor(0.0465, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.0964, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1022, device='cuda:0')), ('fair', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.0550, device='cuda:0')), ('the', tensor(0.1022, device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('portfolio', tensor(0., device='cuda:0')), ('doubled', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1382, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('of', tensor(0.0550, device='cuda:0')), ('the', tensor(0.1022, device='cuda:0')), ('kapiteeli', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.1279, device='cuda:0')), ('686', tensor(0., device='cuda:0')), ('.', tensor(0.0465, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1279, device='cuda:0')), ('259', tensor(0., device='cuda:0')), ('.', tensor(0.0465, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('million', tensor(0.0964, device='cuda:0'))]
idx: 848, example: Nokia Siemens Networks provides mobile and fixed network infrastructure , communications and networks service platforms , as well as professional services , to operators and service providers , prediction: 1, correct_label: 2, class_scores: [0.21802321 0.40167788 0.38029885], word_scores: ['nokia:0.0', 'siemens:0.0', 'networks:0.0', 'provides:0.0', 'mobile:0.0', 'and:0.0', 'fixed:0.0', 'network:0.0', 'infrastructure:0.0', ',:7.986737728060689e-06', 'communications:0.0', 'and:0.0', 'networks:0.0', 'service:0.0', 'platforms:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'professional:0.0', 'services:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'operators:0.0', 'and:0.0', 'service:0.0', 'providers:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nokia', tensor(0., device='cuda:0')), ('siemens', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), (',', tensor(0.2975, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('platforms', tensor(0., device='cuda:0')), (',', tensor(0.2975, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('professional', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.2975, device='cuda:0')), ('to', tensor(0.1075, device='cuda:0')), ('operators', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('providers', tensor(0., device='cuda:0'))],  word_scores_max: [('nokia', tensor(0., device='cuda:0')), ('siemens', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('provides', tensor(0., device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fixed', tensor(0., device='cuda:0')), ('network', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), (',', tensor(0.2975, device='cuda:0')), ('communications', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('platforms', tensor(0., device='cuda:0')), (',', tensor(0.2975, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('professional', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.2975, device='cuda:0')), ('to', tensor(0.1075, device='cuda:0')), ('operators', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('providers', tensor(0., device='cuda:0'))]
idx: 849, example: The company aims to maintain this trend in profitability during the current year , prediction: 2, correct_label: 1, class_scores: [0.21253538 0.36871305 0.41875157], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'aims:0.0', 'to:2.886244146793615e-06', 'maintain:0.0', 'this:0.0', 'trend:0.0', 'in:3.0217122457543155e-06', 'profit:0.0', '##ability:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'current:0.0', 'year:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2516, device='cuda:0')), ('company', tensor(0.2640, device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.1138, device='cuda:0')), ('maintain', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('in', tensor(0.1191, device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.2516, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2516, device='cuda:0')), ('company', tensor(0.2640, device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.1138, device='cuda:0')), ('maintain', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('in', tensor(0.1191, device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.2516, device='cuda:0')), ('current', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 850, example: The terms and conditions of the year 2003 stock option scheme were published in a stock exchange release on 31 March 2003 , prediction: 2, correct_label: 2, class_scores: [0.25639945 0.3571777  0.38642278], word_scores: ['the:6.3806996877247e-06', 'terms:0.0', 'and:0.0', 'conditions:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'year:0.0', '2003:0.0', 'stock:0.0', 'option:0.0', 'scheme:0.0', 'were:0.0', 'published:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'stock:0.0', 'exchange:0.0', 'release:0.0', 'on:0.0', '31:0.0', 'march:0.0', '2003:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2291, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('of', tensor(0.1234, device='cuda:0')), ('the', tensor(0.2291, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2003', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('scheme', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('published', tensor(0., device='cuda:0')), ('in', tensor(0.1085, device='cuda:0')), ('a', tensor(0.3098, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2003', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2291, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('of', tensor(0.1234, device='cuda:0')), ('the', tensor(0.2291, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2003', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('scheme', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('published', tensor(0., device='cuda:0')), ('in', tensor(0.1085, device='cuda:0')), ('a', tensor(0.3098, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('release', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2003', tensor(0., device='cuda:0'))]
idx: 851, example: It will focus on improving its profitability next year by streamlining operations , prediction: 1, correct_label: 1, class_scores: [0.18634196 0.4660434  0.34761468], word_scores: ['it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'focus:0.0', 'on:0.0', 'improving:0.0', 'its:1.7191393908433383e-06', 'profit:0.0', '##ability:0.0', 'next:0.0', 'year:0.0', 'by:0.0', 'stream:0.0', '##lining:0.0', 'operations:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('it', tensor(0.3658, device='cuda:0')), ('will', tensor(0.4459, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('improving', tensor(0., device='cuda:0')), ('its', tensor(0.1882, device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('streamlining', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.3658, device='cuda:0')), ('will', tensor(0.4459, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('improving', tensor(0., device='cuda:0')), ('its', tensor(0.1882, device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('streamlining', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0'))]
idx: 852, example: Microsoft last week also issued the first patch for the Windows 7 operating system beta it had released days earlier , prediction: 2, correct_label: 2, class_scores: [0.20413911 0.3538694  0.44199145], word_scores: ['microsoft:0.0', 'last:0.0', 'week:0.0', 'also:0.0', 'issued:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'patch:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'windows:0.0', '7:0.0', 'operating:0.0', 'system:2.472523192409426e-06', 'beta:0.0', 'it:3.3415778943890473e-06', 'had:0.0', 'released:0.0', 'days:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('microsoft', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('the', tensor(0.3435, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('patch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3435, device='cuda:0')), ('windows', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('system', tensor(0.1331, device='cuda:0')), ('beta', tensor(0., device='cuda:0')), ('it', tensor(0.1799, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('released', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('microsoft', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('issued', tensor(0., device='cuda:0')), ('the', tensor(0.3435, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('patch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3435, device='cuda:0')), ('windows', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('system', tensor(0.1331, device='cuda:0')), ('beta', tensor(0., device='cuda:0')), ('it', tensor(0.1799, device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('released', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 853, example: Profit before taxes was EUR 4.0 mn , down from EUR 4.9 mn , prediction: 2, correct_label: 0, class_scores: [0.2577788  0.32009077 0.42213044], word_scores: ['profit:0.0', 'before:0.0', 'taxes:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '4:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '4:0.0', '.:2.903296945078182e-06', '9:0.0', 'mn:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('profit', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.4367, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.2458, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))],  word_scores_max: [('profit', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.4367, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.2458, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0'))]
idx: 854, example: Seventy-three of those also have more extensive training in products built on the latest ArchestrA technologies , such as the Wonderware System Platform , prediction: 2, correct_label: 2, class_scores: [0.2189169  0.3736669  0.40741614], word_scores: ['seventy:0.0', '-:4.821180027647642e-06', 'three:0.0', 'of:3.4365734791208524e-06', 'those:0.0', 'also:0.0', 'have:2.910326429628185e-06', 'more:0.0', 'extensive:0.0', 'training:0.0', 'in:3.0217122457543155e-06', 'products:0.0', 'built:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'latest:0.0', 'arches:0.0', '##tra:0.0', 'technologies:0.0', ',:7.986737728060689e-06', 'such:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'wonder:0.0', '##ware:0.0', 'system:2.472523192409426e-06', 'platform:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('seventy', tensor(0., device='cuda:0')), ('-', tensor(0.1289, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('of', tensor(0.0919, device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('have', tensor(0.0778, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('extensive', tensor(0., device='cuda:0')), ('training', tensor(0., device='cuda:0')), ('in', tensor(0.0808, device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1706, device='cuda:0')), ('latest', tensor(0., device='cuda:0')), ('archestra', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), (',', tensor(0.2135, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1706, device='cuda:0')), ('wonderware', tensor(0., device='cuda:0')), ('system', tensor(0.0661, device='cuda:0')), ('platform', tensor(0., device='cuda:0'))],  word_scores_max: [('seventy', tensor(0., device='cuda:0')), ('-', tensor(0.1289, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('of', tensor(0.0919, device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('have', tensor(0.0778, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('extensive', tensor(0., device='cuda:0')), ('training', tensor(0., device='cuda:0')), ('in', tensor(0.0808, device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('built', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1706, device='cuda:0')), ('latest', tensor(0., device='cuda:0')), ('archestra', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), (',', tensor(0.2135, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.1706, device='cuda:0')), ('wonderware', tensor(0., device='cuda:0')), ('system', tensor(0.0661, device='cuda:0')), ('platform', tensor(0., device='cuda:0'))]
idx: 855, example: The plant will go on stream in November 2008 and its estimated daily production will be 120,000 litres of bioethanol , prediction: 2, correct_label: 2, class_scores: [0.15310475 0.3333491  0.51354617], word_scores: ['the:6.3806996877247e-06', 'plant:0.0', 'will:4.073096533829812e-06', 'go:0.0', 'on:0.0', 'stream:0.0', 'in:3.0217122457543155e-06', 'november:0.0', '2008:0.0', 'and:0.0', 'its:1.7191393908433383e-06', 'estimated:0.0', 'daily:0.0', 'production:0.0', 'will:4.073096533829812e-06', 'be:0.0', '120:0.0', ',:7.986737728060689e-06', '000:0.0', 'litres:0.0', 'of:3.4365734791208524e-06', 'bio:0.0', '##eth:0.0', '##ano:0.0', '##l:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.2079, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('will', tensor(0.1327, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('stream', tensor(0., device='cuda:0')), ('in', tensor(0.0985, device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('its', tensor(0.0560, device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('will', tensor(0.1327, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('120', tensor(0., device='cuda:0')), (',', tensor(0.2602, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('litres', tensor(0., device='cuda:0')), ('of', tensor(0.1120, device='cuda:0')), ('bioethanol', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2079, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('will', tensor(0.1327, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('stream', tensor(0., device='cuda:0')), ('in', tensor(0.0985, device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('its', tensor(0.0560, device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('will', tensor(0.1327, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('120', tensor(0., device='cuda:0')), (',', tensor(0.2602, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('litres', tensor(0., device='cuda:0')), ('of', tensor(0.1120, device='cuda:0')), ('bioethanol', tensor(0., device='cuda:0'))]
idx: 856, example: Pretax profit totalled EUR 2.0 mn , compared to a loss of EUR 159.2 mn in the fourth quarter of 2008 , prediction: 2, correct_label: 1, class_scores: [0.2242901  0.38155296 0.39415693], word_scores: ['pre:0.0', '##ta:0.0', '##x:0.0', 'profit:0.0', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'compared:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '159:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'fourth:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1921, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0694, device='cuda:0')), ('a', tensor(0.2075, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('159', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0727, device='cuda:0')), ('the', tensor(0.1534, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('pretax', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1921, device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0694, device='cuda:0')), ('a', tensor(0.2075, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('159', tensor(0., device='cuda:0')), ('.', tensor(0.0698, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0727, device='cuda:0')), ('the', tensor(0.1534, device='cuda:0')), ('fourth', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0826, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 857, example: Juha Haapakoski will continue as Editor-in-Chief with budget responsibility also with the new publisher , prediction: 2, correct_label: 2, class_scores: [0.21857312 0.34678847 0.4346385 ], word_scores: ['ju:0.0', '##ha:0.0', 'ha:0.0', '##apa:0.0', '##kos:0.0', '##ki:0.0', 'will:4.073096533829812e-06', 'continue:0.0', 'as:0.0', 'editor:0.0', '-:4.821180027647642e-06', 'in:3.0217122457543155e-06', '-:4.821180027647642e-06', 'chief:0.0', 'with:4.733654350275174e-06', 'budget:0.0', 'responsibility:0.0', 'also:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'publisher:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('juha', tensor(0., device='cuda:0')), ('haapakoski', tensor(0., device='cuda:0')), ('will', tensor(0.1151, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('editor', tensor(0., device='cuda:0')), ('-', tensor(0.1363, device='cuda:0')), ('in', tensor(0.0854, device='cuda:0')), ('-', tensor(0.1363, device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('with', tensor(0.1338, device='cuda:0')), ('budget', tensor(0., device='cuda:0')), ('responsibility', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('with', tensor(0.1338, device='cuda:0')), ('the', tensor(0.1803, device='cuda:0')), ('new', tensor(0.0791, device='cuda:0')), ('publisher', tensor(0., device='cuda:0'))],  word_scores_max: [('juha', tensor(0., device='cuda:0')), ('haapakoski', tensor(0., device='cuda:0')), ('will', tensor(0.1151, device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('editor', tensor(0., device='cuda:0')), ('-', tensor(0.1363, device='cuda:0')), ('in', tensor(0.0854, device='cuda:0')), ('-', tensor(0.1363, device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('with', tensor(0.1338, device='cuda:0')), ('budget', tensor(0., device='cuda:0')), ('responsibility', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('with', tensor(0.1338, device='cuda:0')), ('the', tensor(0.1803, device='cuda:0')), ('new', tensor(0.0791, device='cuda:0')), ('publisher', tensor(0., device='cuda:0'))]
idx: 858, example: Viking Line has also been forced to alter its timetable so that ferries traveling from Stockholm to Helsinki , Finland , only depart at night , prediction: 1, correct_label: 2, class_scores: [0.2344142  0.42315972 0.3424261 ], word_scores: ['viking:0.0', 'line:0.0', 'has:5.9214244174654596e-06', 'also:0.0', 'been:0.0', 'forced:0.0', 'to:2.886244146793615e-06', 'alter:0.0', 'its:1.7191393908433383e-06', 'timetable:0.0', 'so:0.0', 'that:1.5133816759771435e-06', 'ferries:0.0', 'traveling:0.0', 'from:4.495178018260049e-06', 'stockholm:0.0', 'to:2.886244146793615e-06', 'helsinki:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'only:0.0', 'depart:0.0', 'at:0.0', 'night:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('viking', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('has', tensor(0.1499, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('forced', tensor(0., device='cuda:0')), ('to', tensor(0.0731, device='cuda:0')), ('alter', tensor(0., device='cuda:0')), ('its', tensor(0.0435, device='cuda:0')), ('timetable', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('that', tensor(0.0383, device='cuda:0')), ('ferries', tensor(0., device='cuda:0')), ('traveling', tensor(0., device='cuda:0')), ('from', tensor(0.1138, device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), ('to', tensor(0.0731, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.2022, device='cuda:0')), ('finland', tensor(0.1037, device='cuda:0')), (',', tensor(0.2022, device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('depart', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('night', tensor(0., device='cuda:0'))],  word_scores_max: [('viking', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('has', tensor(0.1499, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('forced', tensor(0., device='cuda:0')), ('to', tensor(0.0731, device='cuda:0')), ('alter', tensor(0., device='cuda:0')), ('its', tensor(0.0435, device='cuda:0')), ('timetable', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('that', tensor(0.0383, device='cuda:0')), ('ferries', tensor(0., device='cuda:0')), ('traveling', tensor(0., device='cuda:0')), ('from', tensor(0.1138, device='cuda:0')), ('stockholm', tensor(0., device='cuda:0')), ('to', tensor(0.0731, device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), (',', tensor(0.2022, device='cuda:0')), ('finland', tensor(0.1037, device='cuda:0')), (',', tensor(0.2022, device='cuda:0')), ('only', tensor(0., device='cuda:0')), ('depart', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('night', tensor(0., device='cuda:0'))]
idx: 859, example: Operating profit , excluding non-recurring items , totalled EUR 2.2 mn , down from EUR 2.7 mn in the corresponding period in 2008 , prediction: 2, correct_label: 0, class_scores: [0.20717119 0.3626593  0.4301695 ], word_scores: ['operating:0.0', 'profit:0.0', ',:7.986737728060689e-06', 'excluding:0.0', 'non:0.0', '-:4.821180027647642e-06', 'recurring:0.0', 'items:0.0', ',:7.986737728060689e-06', 'total:0.0', '##led:0.0', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '2:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '2:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2008:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.0936, device='cuda:0')), ('recurring', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0564, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0873, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0564, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('non', tensor(0., device='cuda:0')), ('-', tensor(0.0936, device='cuda:0')), ('recurring', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('totalled', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0564, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1551, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.0873, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.0564, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('the', tensor(0.1239, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0587, device='cuda:0')), ('2008', tensor(0., device='cuda:0'))]
idx: 860, example: Gearing was 43 % compared to 67 % in 2004 , prediction: 2, correct_label: 2, class_scores: [0.23441271 0.31204888 0.4535384 ], word_scores: ['gear:0.0', '##ing:0.0', 'was:0.0', '43:0.0', '%:0.0', 'compared:0.0', 'to:2.886244146793615e-06', '67:0.0', '%:0.0', 'in:3.0217122457543155e-06', '2004:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gearing', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('67', tensor(0., device='cuda:0')), ('in', tensor(0.5115, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('gearing', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('67', tensor(0., device='cuda:0')), ('in', tensor(0.5115, device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 861, example: Nokia OYJ 's production site at Bochum , Germany , posted profit before interest of 134 mln eur for 2007 , Capital reported in an excerpt of an article to be released tomorrow , citing internal documents , prediction: 1, correct_label: 2, class_scores: [0.20601523 0.4424671  0.35151768], word_scores: ['nokia:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', "':0.0", 's:0.0', 'production:0.0', 'site:0.0', 'at:0.0', 'bo:0.0', '##chu:0.0', '##m:0.0', ',:7.986737728060689e-06', 'germany:0.0', ',:7.986737728060689e-06', 'posted:0.0', 'profit:0.0', 'before:0.0', 'interest:0.0', 'of:3.4365734791208524e-06', '134:0.0', 'ml:0.0', '##n:0.0', 'eu:0.0', '##r:0.0', 'for:0.0', '2007:0.0', ',:7.986737728060689e-06', 'capital:0.0', 'reported:0.0', 'in:3.0217122457543155e-06', 'an:0.0', 'excerpt:0.0', 'of:3.4365734791208524e-06', 'an:0.0', 'article:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'released:0.0', 'tomorrow:0.0', ',:7.986737728060689e-06', 'citing:0.0', 'internal:0.0', 'documents:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nokia', tensor(nan, device='cuda:0'))],  word_scores_max: [('nokia', tensor(nan, device='cuda:0'))]
idx: 862, example: A comprehensive range of cut-to-length and slitting services will allow Ruukki in particular to serve light engineering customers who relocate their production to the St. Petersburg area , prediction: 2, correct_label: 2, class_scores: [0.25218564 0.31758028 0.43023404], word_scores: ['a:8.62785782373976e-06', 'comprehensive:0.0', 'range:0.0', 'of:3.4365734791208524e-06', 'cut:0.0', '-:4.821180027647642e-06', 'to:2.886244146793615e-06', '-:4.821180027647642e-06', 'length:0.0', 'and:0.0', 'slit:0.0', '##ting:0.0', 'services:0.0', 'will:4.073096533829812e-06', 'allow:0.0', 'ru:0.0', '##uk:0.0', '##ki:0.0', 'in:3.0217122457543155e-06', 'particular:0.0', 'to:2.886244146793615e-06', 'serve:0.0', 'light:0.0', 'engineering:0.0', 'customers:0.0', 'who:0.0', 'relocate:0.0', 'their:0.0', 'production:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'st:0.0', '.:2.903296945078182e-06', 'petersburg:0.0', 'area:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1846, device='cuda:0')), ('comprehensive', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0735, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('length', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('slitting', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('will', tensor(0.0871, device='cuda:0')), ('allow', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('in', tensor(0.0646, device='cuda:0')), ('particular', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('serve', tensor(0., device='cuda:0')), ('light', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('relocate', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.1846, device='cuda:0')), ('comprehensive', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.0735, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('-', tensor(0.1031, device='cuda:0')), ('length', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('slitting', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('will', tensor(0.0871, device='cuda:0')), ('allow', tensor(0., device='cuda:0')), ('ruukki', tensor(0., device='cuda:0')), ('in', tensor(0.0646, device='cuda:0')), ('particular', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('serve', tensor(0., device='cuda:0')), ('light', tensor(0., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('customers', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('relocate', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('to', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1365, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0621, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0'))]
idx: 863, example: We are adjusting to the present situation by cutting our capacity and costs without , however , jeopardising our Asia strategy over the longer term , prediction: 1, correct_label: 2, class_scores: [0.2174278  0.4814613  0.30111086], word_scores: ['we:0.0', 'are:0.0', 'adjusting:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'present:0.0', 'situation:0.0', 'by:0.0', 'cutting:0.0', 'our:0.0', 'capacity:0.0', 'and:0.0', 'costs:0.0', 'without:0.0', ',:7.986737728060689e-06', 'however:0.0', ',:7.986737728060689e-06', 'je:0.0', '##opa:0.0', '##rdi:0.0', '##sing:0.0', 'our:0.0', 'asia:0.0', 'strategy:0.0', 'over:0.0', 'the:6.3806996877247e-06', 'longer:0.0', 'term:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('adjusting', tensor(0., device='cuda:0')), ('to', tensor(0.0913, device='cuda:0')), ('the', tensor(0.2018, device='cuda:0')), ('present', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), (',', tensor(0.2526, device='cuda:0')), ('however', tensor(0., device='cuda:0')), (',', tensor(0.2526, device='cuda:0')), ('jeopardising', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('asia', tensor(0., device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.2018, device='cuda:0')), ('longer', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('adjusting', tensor(0., device='cuda:0')), ('to', tensor(0.0913, device='cuda:0')), ('the', tensor(0.2018, device='cuda:0')), ('present', tensor(0., device='cuda:0')), ('situation', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), (',', tensor(0.2526, device='cuda:0')), ('however', tensor(0., device='cuda:0')), (',', tensor(0.2526, device='cuda:0')), ('jeopardising', tensor(0., device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('asia', tensor(0., device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.2018, device='cuda:0')), ('longer', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0'))]
idx: 864, example: The company plans to close two of the three lines at the plant , where some 450 jobs are under threat , prediction: 1, correct_label: 0, class_scores: [0.1725954  0.47640675 0.3509979 ], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'plans:0.0', 'to:2.886244146793615e-06', 'close:0.0', 'two:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'three:0.0', 'lines:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'plant:0.0', ',:7.986737728060689e-06', 'where:0.0', 'some:0.0', '450:0.0', 'jobs:0.0', 'are:0.0', 'under:0.0', 'threat:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1589, device='cuda:0')), ('company', tensor(0.1668, device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('of', tensor(0.0856, device='cuda:0')), ('the', tensor(0.1589, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1589, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1989, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('450', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('threat', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1589, device='cuda:0')), ('company', tensor(0.1668, device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('of', tensor(0.0856, device='cuda:0')), ('the', tensor(0.1589, device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1589, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.1989, device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('450', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('threat', tensor(0., device='cuda:0'))]
idx: 865, example: However , the company saw its net profit for the third quarter down to EUR 1.4 million from EUR 1.5 million for the corresponding period of 2009 , prediction: 2, correct_label: 0, class_scores: [0.19799237 0.37497872 0.42702892], word_scores: ['however:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'saw:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'down:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '4:0.0', 'million:6.018835847498849e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '5:0.0', 'million:6.018835847498849e-06', 'for:0.0', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('however', tensor(0., device='cuda:0')), (',', tensor(0.1244, device='cuda:0')), ('the', tensor(0.0994, device='cuda:0')), ('company', tensor(0.1043, device='cuda:0')), ('saw', tensor(0., device='cuda:0')), ('its', tensor(0.0268, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0994, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('to', tensor(0.0450, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0452, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.0937, device='cuda:0')), ('from', tensor(0.0700, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0452, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.0937, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0994, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0535, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('however', tensor(0., device='cuda:0')), (',', tensor(0.1244, device='cuda:0')), ('the', tensor(0.0994, device='cuda:0')), ('company', tensor(0.1043, device='cuda:0')), ('saw', tensor(0., device='cuda:0')), ('its', tensor(0.0268, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0994, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('to', tensor(0.0450, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0452, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('million', tensor(0.0937, device='cuda:0')), ('from', tensor(0.0700, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0452, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('million', tensor(0.0937, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0994, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('of', tensor(0.0535, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 866, example: The electricity requirement of networks will grow with the new mobile generation , prediction: 1, correct_label: 2, class_scores: [0.2515359  0.37799883 0.37046534], word_scores: ['the:6.3806996877247e-06', 'electricity:0.0', 'requirement:0.0', 'of:3.4365734791208524e-06', 'networks:0.0', 'will:4.073096533829812e-06', 'grow:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'mobile:0.0', 'generation:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2295, device='cuda:0')), ('electricity', tensor(0., device='cuda:0')), ('requirement', tensor(0., device='cuda:0')), ('of', tensor(0.1236, device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('will', tensor(0.1465, device='cuda:0')), ('grow', tensor(0., device='cuda:0')), ('with', tensor(0.1703, device='cuda:0')), ('the', tensor(0.2295, device='cuda:0')), ('new', tensor(0.1007, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('generation', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2295, device='cuda:0')), ('electricity', tensor(0., device='cuda:0')), ('requirement', tensor(0., device='cuda:0')), ('of', tensor(0.1236, device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('will', tensor(0.1465, device='cuda:0')), ('grow', tensor(0., device='cuda:0')), ('with', tensor(0.1703, device='cuda:0')), ('the', tensor(0.2295, device='cuda:0')), ('new', tensor(0.1007, device='cuda:0')), ('mobile', tensor(0., device='cuda:0')), ('generation', tensor(0., device='cuda:0'))]
idx: 867, example: A total of $ 78 million will be invested in the project , prediction: 2, correct_label: 2, class_scores: [0.1658743 0.2770666 0.5570591], word_scores: ['a:8.62785782373976e-06', 'total:0.0', 'of:3.4365734791208524e-06', '$:0.0', '78:0.0', 'million:6.018835847498849e-06', 'will:4.073096533829812e-06', 'be:0.0', 'invested:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'project:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('a', tensor(0.2734, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.1089, device='cuda:0')), ('78', tensor(0., device='cuda:0')), ('million', tensor(0.1907, device='cuda:0')), ('will', tensor(0.1291, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('in', tensor(0.0957, device='cuda:0')), ('the', tensor(0.2022, device='cuda:0')), ('project', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.2734, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('of', tensor(0.1089, device='cuda:0')), ('78', tensor(0., device='cuda:0')), ('million', tensor(0.1907, device='cuda:0')), ('will', tensor(0.1291, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('in', tensor(0.0957, device='cuda:0')), ('the', tensor(0.2022, device='cuda:0')), ('project', tensor(0., device='cuda:0'))]
idx: 868, example: Published by Globes online , Israel business news - www.globes-online.com - on November 16 , 2009 -� Copyright of Globes Publisher Itonut 1983 Ltd. 200, prediction: 2, correct_label: 2, class_scores: [0.20521568 0.38112584 0.41365847], word_scores: ['published:0.0', 'by:0.0', 'globe:0.0', '##s:4.601175078278175e-06', 'online:0.0', ',:7.986737728060689e-06', 'israel:0.0', 'business:0.0', 'news:0.0', '-:4.821180027647642e-06', 'www:0.0', '.:2.903296945078182e-06', 'globe:0.0', '##s:4.601175078278175e-06', '-:4.821180027647642e-06', 'online:0.0', '.:2.903296945078182e-06', 'com:0.0', '-:4.821180027647642e-06', 'on:0.0', 'november:0.0', '16:0.0', ',:7.986737728060689e-06', '2009:0.0', '-:4.821180027647642e-06', 'copyright:0.0', 'of:3.4365734791208524e-06', 'globe:0.0', '##s:4.601175078278175e-06', 'publisher:0.0', 'ito:0.0', '##nut:0.0', '1983:0.0', 'ltd:0.0', '.:2.903296945078182e-06', '200:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('published', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('globes', tensor(0., device='cuda:0')), ('online', tensor(0., device='cuda:0')), (',', tensor(0.1685, device='cuda:0')), ('israel', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.0612, device='cuda:0')), ('globes', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('.', tensor(0.0612, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), (',', tensor(0.1685, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('copyright', tensor(0., device='cuda:0')), ('of', tensor(0.0725, device='cuda:0')), ('globes', tensor(0., device='cuda:0')), ('publisher', tensor(0., device='cuda:0')), ('itonut', tensor(0., device='cuda:0')), ('1983', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0612, device='cuda:0')), ('200', tensor(0., device='cuda:0'))],  word_scores_max: [('published', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('globes', tensor(0., device='cuda:0')), ('online', tensor(0., device='cuda:0')), (',', tensor(0.1685, device='cuda:0')), ('israel', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('www', tensor(0., device='cuda:0')), ('.', tensor(0.0612, device='cuda:0')), ('globes', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('online', tensor(0., device='cuda:0')), ('.', tensor(0.0612, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), (',', tensor(0.1685, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1017, device='cuda:0')), ('copyright', tensor(0., device='cuda:0')), ('of', tensor(0.0725, device='cuda:0')), ('globes', tensor(0., device='cuda:0')), ('publisher', tensor(0., device='cuda:0')), ('itonut', tensor(0., device='cuda:0')), ('1983', tensor(0., device='cuda:0')), ('ltd', tensor(0., device='cuda:0')), ('.', tensor(0.0612, device='cuda:0')), ('200', tensor(0., device='cuda:0'))]
idx: 869, example: Affecto will provide a new EFI Data Warehouse and reporting solution , behavioural scoring system supporting operational decision processes and Data Migration from old legacy systems to the new EFI system , prediction: 1, correct_label: 2, class_scores: [0.19212772 0.4124832  0.39538905], word_scores: ['affect:0.0', '##o:0.0', 'will:4.073096533829812e-06', 'provide:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'e:0.0', '##fi:0.0', 'data:0.0', 'warehouse:0.0', 'and:0.0', 'reporting:0.0', 'solution:0.0', ',:7.986737728060689e-06', 'behaviour:0.0', '##al:0.0', 'scoring:0.0', 'system:2.472523192409426e-06', 'supporting:0.0', 'operational:0.0', 'decision:0.0', 'processes:0.0', 'and:0.0', 'data:0.0', 'migration:0.0', 'from:4.495178018260049e-06', 'old:0.0', 'legacy:0.0', 'systems:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'new:2.798587502184091e-06', 'e:0.0', '##fi:0.0', 'system:2.472523192409426e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('affecto', tensor(0., device='cuda:0')), ('will', tensor(0.0905, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('a', tensor(0.1918, device='cuda:0')), ('new', tensor(0.0622, device='cuda:0')), ('efi', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reporting', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), (',', tensor(0.1775, device='cuda:0')), ('behavioural', tensor(0., device='cuda:0')), ('scoring', tensor(0., device='cuda:0')), ('system', tensor(0.0550, device='cuda:0')), ('supporting', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('migration', tensor(0., device='cuda:0')), ('from', tensor(0.0999, device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('legacy', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('to', tensor(0.0642, device='cuda:0')), ('the', tensor(0.1418, device='cuda:0')), ('new', tensor(0.0622, device='cuda:0')), ('efi', tensor(0., device='cuda:0')), ('system', tensor(0.0550, device='cuda:0'))],  word_scores_max: [('affecto', tensor(0., device='cuda:0')), ('will', tensor(0.0905, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('a', tensor(0.1918, device='cuda:0')), ('new', tensor(0.0622, device='cuda:0')), ('efi', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('reporting', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0')), (',', tensor(0.1775, device='cuda:0')), ('behavioural', tensor(0., device='cuda:0')), ('scoring', tensor(0., device='cuda:0')), ('system', tensor(0.0550, device='cuda:0')), ('supporting', tensor(0., device='cuda:0')), ('operational', tensor(0., device='cuda:0')), ('decision', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('migration', tensor(0., device='cuda:0')), ('from', tensor(0.0999, device='cuda:0')), ('old', tensor(0., device='cuda:0')), ('legacy', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('to', tensor(0.0642, device='cuda:0')), ('the', tensor(0.1418, device='cuda:0')), ('new', tensor(0.0622, device='cuda:0')), ('efi', tensor(0., device='cuda:0')), ('system', tensor(0.0550, device='cuda:0'))]
idx: 870, example: Community gardening has become a popular activity , especially to raise vegetables , prediction: 2, correct_label: 2, class_scores: [0.24966848 0.35857007 0.39176145], word_scores: ['community:0.0', 'gardening:0.0', 'has:5.9214244174654596e-06', 'become:0.0', 'a:8.62785782373976e-06', 'popular:0.0', 'activity:0.0', ',:7.986737728060689e-06', 'especially:0.0', 'to:2.886244146793615e-06', 'raise:0.0', 'vegetables:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('community', tensor(0., device='cuda:0')), ('gardening', tensor(0., device='cuda:0')), ('has', tensor(0.2329, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('a', tensor(0.3394, device='cuda:0')), ('popular', tensor(0., device='cuda:0')), ('activity', tensor(0., device='cuda:0')), (',', tensor(0.3142, device='cuda:0')), ('especially', tensor(0., device='cuda:0')), ('to', tensor(0.1135, device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('vegetables', tensor(0., device='cuda:0'))],  word_scores_max: [('community', tensor(0., device='cuda:0')), ('gardening', tensor(0., device='cuda:0')), ('has', tensor(0.2329, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('a', tensor(0.3394, device='cuda:0')), ('popular', tensor(0., device='cuda:0')), ('activity', tensor(0., device='cuda:0')), (',', tensor(0.3142, device='cuda:0')), ('especially', tensor(0., device='cuda:0')), ('to', tensor(0.1135, device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('vegetables', tensor(0., device='cuda:0'))]
idx: 871, example: Suominen Corporation estimates that the cost-cutting program that started in autumn 2005 , higher sales prices , and expected growth in volume of Wet Wipes , will make the company 's operations more profitable , prediction: 0, correct_label: 1, class_scores: [0.385681   0.25977537 0.35454366], word_scores: ['su:0.0', '##omi:0.0', '##nen:0.0', 'corporation:0.0', 'estimates:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'cost:0.0', '-:4.821180027647642e-06', 'cutting:0.0', 'program:0.0', 'that:1.5133816759771435e-06', 'started:0.0', 'in:3.0217122457543155e-06', 'autumn:0.0', '2005:0.0', ',:7.986737728060689e-06', 'higher:0.0', 'sales:0.0', 'prices:0.0', ',:7.986737728060689e-06', 'and:0.0', 'expected:0.0', 'growth:0.0', 'in:3.0217122457543155e-06', 'volume:0.0', 'of:3.4365734791208524e-06', 'wet:0.0', 'wipe:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'make:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'operations:0.0', 'more:0.0', 'profitable:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('suominen', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('that', tensor(0.0260, device='cuda:0')), ('the', tensor(0.1098, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('-', tensor(0.0829, device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('that', tensor(0.0260, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('in', tensor(0.0520, device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('2005', tensor(0., device='cuda:0')), (',', tensor(0.1374, device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), (',', tensor(0.1374, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0520, device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('of', tensor(0.0591, device='cuda:0')), ('wet', tensor(0., device='cuda:0')), ('wipes', tensor(0., device='cuda:0')), (',', tensor(0.1374, device='cuda:0')), ('will', tensor(0.0701, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('the', tensor(0.1098, device='cuda:0'))],  word_scores_max: [('suominen', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('that', tensor(0.0260, device='cuda:0')), ('the', tensor(0.1098, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('-', tensor(0.0829, device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('program', tensor(0., device='cuda:0')), ('that', tensor(0.0260, device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('in', tensor(0.0520, device='cuda:0')), ('autumn', tensor(0., device='cuda:0')), ('2005', tensor(0., device='cuda:0')), (',', tensor(0.1374, device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), (',', tensor(0.1374, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0520, device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('of', tensor(0.0591, device='cuda:0')), ('wet', tensor(0., device='cuda:0')), ('wipes', tensor(0., device='cuda:0')), (',', tensor(0.1374, device='cuda:0')), ('will', tensor(0.0701, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('the', tensor(0.1098, device='cuda:0'))]
idx: 872, example: Finnish Sampo Bank , of Danish Danske Bank group , reports profit before taxes of EUR 152.3 mn in 2010 , up from EUR 32.7 mn in 2009 , prediction: 2, correct_label: 1, class_scores: [0.23587163 0.27095875 0.4931696 ], word_scores: ['finnish:0.0', 'sam:0.0', '##po:0.0', 'bank:0.0', ',:7.986737728060689e-06', 'of:3.4365734791208524e-06', 'danish:0.0', 'dans:0.0', '##ke:0.0', 'bank:0.0', 'group:0.0', ',:7.986737728060689e-06', 'reports:0.0', 'profit:0.0', 'before:0.0', 'taxes:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '152:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', '2010:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '32:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.1641, device='cuda:0')), ('of', tensor(0.0706, device='cuda:0')), ('danish', tensor(0., device='cuda:0')), ('danske', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1641, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('of', tensor(0.0706, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('152', tensor(0., device='cuda:0')), ('.', tensor(0.0596, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0621, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1641, device='cuda:0')), ('up', tensor(0.0307, device='cuda:0')), ('from', tensor(0.0924, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('32', tensor(0., device='cuda:0')), ('.', tensor(0.0596, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0621, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('sampo', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), (',', tensor(0.1641, device='cuda:0')), ('of', tensor(0.0706, device='cuda:0')), ('danish', tensor(0., device='cuda:0')), ('danske', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1641, device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('before', tensor(0., device='cuda:0')), ('taxes', tensor(0., device='cuda:0')), ('of', tensor(0.0706, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('152', tensor(0., device='cuda:0')), ('.', tensor(0.0596, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0621, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1641, device='cuda:0')), ('up', tensor(0.0307, device='cuda:0')), ('from', tensor(0.0924, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('32', tensor(0., device='cuda:0')), ('.', tensor(0.0596, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0621, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 873, example: The inventors are Bylander Johan , Ponten Fredrik and Lundberg Jorgen , prediction: 2, correct_label: 2, class_scores: [0.26103982 0.2773623  0.46159792], word_scores: ['the:6.3806996877247e-06', 'inventor:0.0', '##s:4.601175078278175e-06', 'are:0.0', 'by:0.0', '##lander:0.0', 'johan:0.0', ',:7.986737728060689e-06', 'pont:0.0', '##en:0.0', 'fredrik:0.0', 'and:0.0', 'lund:0.0', '##berg:0.0', 'jorge:0.0', '##n:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4441, device='cuda:0')), ('inventors', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('bylander', tensor(0., device='cuda:0')), ('johan', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('ponten', tensor(0., device='cuda:0')), ('fredrik', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lundberg', tensor(0., device='cuda:0')), ('jorgen', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4441, device='cuda:0')), ('inventors', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('bylander', tensor(0., device='cuda:0')), ('johan', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('ponten', tensor(0., device='cuda:0')), ('fredrik', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lundberg', tensor(0., device='cuda:0')), ('jorgen', tensor(0., device='cuda:0'))]
idx: 874, example: 30 November 2009 - Finnish office furniture maker Martela Oyj HEL : MARAS said today that it will make redundant three people and other nine will be laid off permanently from the company 's office staff and factory workers , prediction: 2, correct_label: 0, class_scores: [0.22374989 0.30440053 0.4718496 ], word_scores: ['30:0.0', 'november:0.0', '2009:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'office:0.0', 'furniture:0.0', 'maker:0.0', 'mart:0.0', '##ela:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'mara:0.0', '##s:4.601175078278175e-06', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'will:4.073096533829812e-06', 'make:0.0', 'redundant:0.0', 'three:0.0', 'people:0.0', 'and:0.0', 'other:0.0', 'nine:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'laid:0.0', 'off:0.0', 'permanently:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'office:0.0', 'staff:0.0', 'and:0.0', 'factory:0.0', 'workers:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('30', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1579, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('martela', tensor(0., device='cuda:0')), ('oyj', tensor(0.0600, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('maras', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0496, device='cuda:0')), ('it', tensor(0.1094, device='cuda:0')), ('will', tensor(0.1334, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('redundant', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('will', tensor(0.1334, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('permanently', tensor(0., device='cuda:0')), ('from', tensor(0.1472, device='cuda:0')), ('the', tensor(0.2090, device='cuda:0'))],  word_scores_max: [('30', tensor(0., device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1579, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('martela', tensor(0., device='cuda:0')), ('oyj', tensor(0.0600, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('maras', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0496, device='cuda:0')), ('it', tensor(0.1094, device='cuda:0')), ('will', tensor(0.1334, device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('redundant', tensor(0., device='cuda:0')), ('three', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('will', tensor(0.1334, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('permanently', tensor(0., device='cuda:0')), ('from', tensor(0.1472, device='cuda:0')), ('the', tensor(0.2090, device='cuda:0'))]
idx: 875, example: However , in March 2009 , the government of St. Petersburg passed the front part of the building with the area 1,900 square metres and a land plot for a hotel worth USD 10-15mn to the company Delta , prediction: 2, correct_label: 2, class_scores: [0.24358916 0.35001135 0.4063995 ], word_scores: ['however:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'march:0.0', '2009:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'government:0.0', 'of:3.4365734791208524e-06', 'st:0.0', '.:2.903296945078182e-06', 'petersburg:0.0', 'passed:0.0', 'the:6.3806996877247e-06', 'front:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'building:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'area:0.0', '1:0.0', ',:7.986737728060689e-06', '900:0.0', 'square:0.0', 'metres:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'land:0.0', 'plot:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'hotel:0.0', 'worth:0.0', 'usd:0.0', '10:0.0', '-:4.821180027647642e-06', '15:0.0', '##m:0.0', '##n:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'delta:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('however', tensor(0., device='cuda:0')), (',', tensor(0.0760, device='cuda:0')), ('in', tensor(0.0288, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.0760, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('of', tensor(0.0327, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0276, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), ('passed', tensor(0., device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('front', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0327, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('with', tensor(0.0451, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.0760, device='cuda:0')), ('900', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metres', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.0821, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('plot', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.0821, device='cuda:0')), ('hotel', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.0459, device='cuda:0')), ('15mn', tensor(0., device='cuda:0')), ('to', tensor(0.0275, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('company', tensor(0.0637, device='cuda:0')), ('delta', tensor(0., device='cuda:0'))],  word_scores_max: [('however', tensor(0., device='cuda:0')), (',', tensor(0.0760, device='cuda:0')), ('in', tensor(0.0288, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), (',', tensor(0.0760, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('government', tensor(0., device='cuda:0')), ('of', tensor(0.0327, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0276, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), ('passed', tensor(0., device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('front', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0327, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('with', tensor(0.0451, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.0760, device='cuda:0')), ('900', tensor(0., device='cuda:0')), ('square', tensor(0., device='cuda:0')), ('metres', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.0821, device='cuda:0')), ('land', tensor(0., device='cuda:0')), ('plot', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.0821, device='cuda:0')), ('hotel', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.0459, device='cuda:0')), ('15mn', tensor(0., device='cuda:0')), ('to', tensor(0.0275, device='cuda:0')), ('the', tensor(0.0607, device='cuda:0')), ('company', tensor(0.0637, device='cuda:0')), ('delta', tensor(0., device='cuda:0'))]
idx: 876, example: The company said that the fall in turnover had been planned , prediction: 2, correct_label: 0, class_scores: [0.1702674  0.39139718 0.43833542], word_scores: ['the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'said:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'fall:0.0', 'in:3.0217122457543155e-06', 'turnover:0.0', 'had:0.0', 'been:0.0', 'planned:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2660, device='cuda:0')), ('company', tensor(0.2791, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0631, device='cuda:0')), ('the', tensor(0.2660, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.1259, device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('planned', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2660, device='cuda:0')), ('company', tensor(0.2791, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('that', tensor(0.0631, device='cuda:0')), ('the', tensor(0.2660, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.1259, device='cuda:0')), ('turnover', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('planned', tensor(0., device='cuda:0'))]
idx: 877, example: Operating profit for the 12-month period decreased from EUR5 .4 m while net sales increased from EUR62 .0 m , as compared to the financial year 2004 , prediction: 2, correct_label: 0, class_scores: [0.1908537  0.39718398 0.41196227], word_scores: ['operating:0.0', 'profit:0.0', 'for:0.0', 'the:6.3806996877247e-06', '12:0.0', '-:4.821180027647642e-06', 'month:0.0', 'period:0.0', 'decreased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##5:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', 'while:0.0', 'net:0.0', 'sales:0.0', 'increased:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##6:0.0', '##2:0.0', '.:2.903296945078182e-06', '0:0.0', 'm:0.0', ',:7.986737728060689e-06', 'as:0.0', 'compared:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'financial:0.0', 'year:0.0', '2004:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1475, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1115, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('from', tensor(0.1039, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.0671, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.1039, device='cuda:0')), ('eur62', tensor(0., device='cuda:0')), ('.', tensor(0.0671, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1847, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0667, device='cuda:0')), ('the', tensor(0.1475, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1475, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1115, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('from', tensor(0.1039, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.0671, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('from', tensor(0.1039, device='cuda:0')), ('eur62', tensor(0., device='cuda:0')), ('.', tensor(0.0671, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), (',', tensor(0.1847, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('compared', tensor(0., device='cuda:0')), ('to', tensor(0.0667, device='cuda:0')), ('the', tensor(0.1475, device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0'))]
idx: 878, example: Thus the method will cut working costs , and will fasten the planning and building processes , prediction: 2, correct_label: 1, class_scores: [0.25816977 0.2843015  0.45752874], word_scores: ['thus:0.0', 'the:6.3806996877247e-06', 'method:2.380315208938555e-06', 'will:4.073096533829812e-06', 'cut:0.0', 'working:0.0', 'costs:0.0', ',:7.986737728060689e-06', 'and:0.0', 'will:4.073096533829812e-06', 'fast:0.0', '##en:0.0', 'the:6.3806996877247e-06', 'planning:0.0', 'and:0.0', 'building:0.0', 'processes:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('thus', tensor(0., device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('method', tensor(0.0761, device='cuda:0')), ('will', tensor(0.1302, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), (',', tensor(0.2554, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.1302, device='cuda:0')), ('fasten', tensor(0., device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0'))],  word_scores_max: [('thus', tensor(0., device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('method', tensor(0.0761, device='cuda:0')), ('will', tensor(0.1302, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), (',', tensor(0.2554, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('will', tensor(0.1302, device='cuda:0')), ('fasten', tensor(0., device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('processes', tensor(0., device='cuda:0'))]
idx: 879, example: Juha Jordan , chief engineer at Glaston , said one of the reasons for choosing Vacon as a global AC drives supplier is that it has service and support centres in the same countries where Glaston operates , prediction: 2, correct_label: 1, class_scores: [0.24280252 0.3012538  0.4559437 ], word_scores: ['ju:0.0', '##ha:0.0', 'jordan:0.0', ',:7.986737728060689e-06', 'chief:0.0', 'engineer:0.0', 'at:0.0', 'g:0.0', '##las:0.0', '##ton:0.0', ',:7.986737728060689e-06', 'said:0.0', 'one:4.584404450724833e-06', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'reasons:0.0', 'for:0.0', 'choosing:0.0', 'va:2.3812995095795486e-06', '##con:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'global:0.0', 'ac:0.0', 'drives:0.0', 'supplier:0.0', 'is:0.0', 'that:1.5133816759771435e-06', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'service:0.0', 'and:0.0', 'support:0.0', 'centres:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'same:0.0', 'countries:0.0', 'where:0.0', 'g:0.0', '##las:0.0', '##ton:0.0', 'operates:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('juha', tensor(0., device='cuda:0')), ('jordan', tensor(0., device='cuda:0')), (',', tensor(0.1297, device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('engineer', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), (',', tensor(0.1297, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('one', tensor(0.0745, device='cuda:0')), ('of', tensor(0.0558, device='cuda:0')), ('the', tensor(0.1036, device='cuda:0')), ('reasons', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('choosing', tensor(0., device='cuda:0')), ('vacon', tensor(0.0387, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1401, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('ac', tensor(0., device='cuda:0')), ('drives', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0246, device='cuda:0')), ('it', tensor(0.0543, device='cuda:0')), ('has', tensor(0.0962, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('centres', tensor(0., device='cuda:0')), ('in', tensor(0.0491, device='cuda:0')), ('the', tensor(0.1036, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0'))],  word_scores_max: [('juha', tensor(0., device='cuda:0')), ('jordan', tensor(0., device='cuda:0')), (',', tensor(0.1297, device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('engineer', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), (',', tensor(0.1297, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('one', tensor(0.0745, device='cuda:0')), ('of', tensor(0.0558, device='cuda:0')), ('the', tensor(0.1036, device='cuda:0')), ('reasons', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('choosing', tensor(0., device='cuda:0')), ('vacon', tensor(0.0387, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.1401, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('ac', tensor(0., device='cuda:0')), ('drives', tensor(0., device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0246, device='cuda:0')), ('it', tensor(0.0543, device='cuda:0')), ('has', tensor(0.0962, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('centres', tensor(0., device='cuda:0')), ('in', tensor(0.0491, device='cuda:0')), ('the', tensor(0.1036, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('glaston', tensor(0., device='cuda:0')), ('operates', tensor(0., device='cuda:0'))]
idx: 880, example: The sale price was not disclosed , prediction: 1, correct_label: 2, class_scores: [0.21180803 0.43130404 0.35688794], word_scores: ['the:6.3806996877247e-06', 'sale:0.0', 'price:0.0', 'was:0.0', 'not:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))]
idx: 881, example: The power generated annually by Loviisa covers about 10 % of Finland 's electricity consumption , prediction: 1, correct_label: 2, class_scores: [0.1491854  0.5664537  0.28436083], word_scores: ['the:6.3806996877247e-06', 'power:0.0', 'generated:0.0', 'annually:0.0', 'by:0.0', 'lo:0.0', '##vi:0.0', '##isa:0.0', 'covers:0.0', 'about:0.0', '10:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'finland:4.096111752005527e-06', "':0.0", 's:0.0', 'electricity:0.0', 'consumption:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.6499, device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('annually', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('loviisa', tensor(0., device='cuda:0')), ('covers', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0'))],  word_scores_max: [('the', tensor(0.6499, device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('annually', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('loviisa', tensor(0., device='cuda:0')), ('covers', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('of', tensor(0.3501, device='cuda:0'))]
idx: 882, example: M-real will start statutory employer-employee negotiations at the +�+�nekoski board mill that concern about 130 people , prediction: 2, correct_label: 2, class_scores: [0.22134452 0.35765585 0.42099965], word_scores: ['m:0.0', '-:4.821180027647642e-06', 'real:0.0', 'will:4.073096533829812e-06', 'start:0.0', 'statutory:0.0', 'employer:0.0', '-:4.821180027647642e-06', 'employee:0.0', 'negotiations:0.0', 'at:0.0', 'the:6.3806996877247e-06', '+:0.0', '+:0.0', 'ne:0.0', '##kos:0.0', '##ki:0.0', 'board:0.0', 'mill:2.6564571271592285e-06', 'that:1.5133816759771435e-06', 'concern:0.0', 'about:0.0', '130:0.0', 'people:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('m', tensor(0., device='cuda:0')), ('-', tensor(0.1987, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('will', tensor(0.1679, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('employer', tensor(0., device='cuda:0')), ('-', tensor(0.1987, device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2629, device='cuda:0')), ('nekoski', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('mill', tensor(0.1095, device='cuda:0')), ('that', tensor(0.0624, device='cuda:0')), ('concern', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('130', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))],  word_scores_max: [('m', tensor(0., device='cuda:0')), ('-', tensor(0.1987, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('will', tensor(0.1679, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('statutory', tensor(0., device='cuda:0')), ('employer', tensor(0., device='cuda:0')), ('-', tensor(0.1987, device='cuda:0')), ('employee', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.2629, device='cuda:0')), ('nekoski', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('mill', tensor(0.1095, device='cuda:0')), ('that', tensor(0.0624, device='cuda:0')), ('concern', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('130', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0'))]
idx: 883, example: Thus the group 's balance sheet will have about EUR25 .8 m in goodwill for 2010 , the company added , prediction: 2, correct_label: 2, class_scores: [0.22354949 0.33580908 0.44064146], word_scores: ['thus:0.0', 'the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'balance:0.0', 'sheet:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'about:0.0', 'eu:0.0', '##r:0.0', '##25:0.0', '.:2.903296945078182e-06', '8:0.0', 'm:0.0', 'in:3.0217122457543155e-06', 'goodwill:0.0', 'for:0.0', '2010:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'added:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('thus', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0'))],  word_scores_max: [('thus', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0'))]
idx: 884, example: Device volume in the area decreased by 21 % to 2.7 mn units , prediction: 2, correct_label: 0, class_scores: [0.18441853 0.34248537 0.4730961 ], word_scores: ['device:0.0', 'volume:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'area:0.0', 'decreased:0.0', 'by:0.0', '21:0.0', '%:0.0', 'to:2.886244146793615e-06', '2:0.0', '.:2.903296945078182e-06', '7:0.0', 'mn:0.0', 'units:2.8638919502554927e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('device', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('in', tensor(0.1674, device='cuda:0')), ('the', tensor(0.3534, device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('to', tensor(0.1599, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1608, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('units', tensor(0.1586, device='cuda:0'))],  word_scores_max: [('device', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('in', tensor(0.1674, device='cuda:0')), ('the', tensor(0.3534, device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('to', tensor(0.1599, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1608, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('units', tensor(0.1586, device='cuda:0'))]
idx: 885, example: The tanks will be delivered to a company which is currently building a chemical tank farm in Antwerp , northern Belgium , prediction: 1, correct_label: 2, class_scores: [0.17537661 0.4432034  0.38142   ], word_scores: ['the:6.3806996877247e-06', 'tanks:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'delivered:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'company:6.695386673527537e-06', 'which:0.0', 'is:0.0', 'currently:0.0', 'building:0.0', 'a:8.62785782373976e-06', 'chemical:0.0', 'tank:0.0', 'farm:0.0', 'in:3.0217122457543155e-06', 'antwerp:0.0', ',:7.986737728060689e-06', 'northern:0.0', 'belgium:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1321, device='cuda:0')), ('tanks', tensor(0., device='cuda:0')), ('will', tensor(0.0843, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('to', tensor(0.0598, device='cuda:0')), ('a', tensor(0.1786, device='cuda:0')), ('company', tensor(0.1386, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('a', tensor(0.1786, device='cuda:0')), ('chemical', tensor(0., device='cuda:0')), ('tank', tensor(0., device='cuda:0')), ('farm', tensor(0., device='cuda:0')), ('in', tensor(0.0626, device='cuda:0')), ('antwerp', tensor(0., device='cuda:0')), (',', tensor(0.1654, device='cuda:0')), ('northern', tensor(0., device='cuda:0')), ('belgium', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1321, device='cuda:0')), ('tanks', tensor(0., device='cuda:0')), ('will', tensor(0.0843, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('delivered', tensor(0., device='cuda:0')), ('to', tensor(0.0598, device='cuda:0')), ('a', tensor(0.1786, device='cuda:0')), ('company', tensor(0.1386, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('a', tensor(0.1786, device='cuda:0')), ('chemical', tensor(0., device='cuda:0')), ('tank', tensor(0., device='cuda:0')), ('farm', tensor(0., device='cuda:0')), ('in', tensor(0.0626, device='cuda:0')), ('antwerp', tensor(0., device='cuda:0')), (',', tensor(0.1654, device='cuda:0')), ('northern', tensor(0., device='cuda:0')), ('belgium', tensor(0., device='cuda:0'))]
idx: 886, example: In a letter to Economic Affairs Minister , the listed Estonian shipping company Tallink asks for the approval to be entitled to a 15 % cut in port fees in 2010 , prediction: 1, correct_label: 2, class_scores: [0.25752422 0.38960916 0.35286653], word_scores: ['in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'letter:0.0', 'to:2.886244146793615e-06', 'economic:0.0', 'affairs:0.0', 'minister:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'listed:0.0', 'estonian:0.0', 'shipping:0.0', 'company:6.695386673527537e-06', 'tall:0.0', '##ink:0.0', 'asks:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'approval:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'entitled:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', '15:0.0', '%:0.0', 'cut:0.0', 'in:3.0217122457543155e-06', 'port:5.874064754607389e-06', 'fees:0.0', 'in:3.0217122457543155e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.0442, device='cuda:0')), ('a', tensor(0.1263, device='cuda:0')), ('letter', tensor(0., device='cuda:0')), ('to', tensor(0.0423, device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('affairs', tensor(0., device='cuda:0')), ('minister', tensor(0., device='cuda:0')), (',', tensor(0.1169, device='cuda:0')), ('the', tensor(0.0934, device='cuda:0')), ('listed', tensor(0., device='cuda:0')), ('estonian', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('company', tensor(0.0980, device='cuda:0')), ('tallink', tensor(0., device='cuda:0')), ('asks', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0934, device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('to', tensor(0.0423, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('entitled', tensor(0., device='cuda:0')), ('to', tensor(0.0423, device='cuda:0')), ('a', tensor(0.1263, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('in', tensor(0.0442, device='cuda:0')), ('port', tensor(0.0860, device='cuda:0')), ('fees', tensor(0., device='cuda:0')), ('in', tensor(0.0442, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0442, device='cuda:0')), ('a', tensor(0.1263, device='cuda:0')), ('letter', tensor(0., device='cuda:0')), ('to', tensor(0.0423, device='cuda:0')), ('economic', tensor(0., device='cuda:0')), ('affairs', tensor(0., device='cuda:0')), ('minister', tensor(0., device='cuda:0')), (',', tensor(0.1169, device='cuda:0')), ('the', tensor(0.0934, device='cuda:0')), ('listed', tensor(0., device='cuda:0')), ('estonian', tensor(0., device='cuda:0')), ('shipping', tensor(0., device='cuda:0')), ('company', tensor(0.0980, device='cuda:0')), ('tallink', tensor(0., device='cuda:0')), ('asks', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0934, device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('to', tensor(0.0423, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('entitled', tensor(0., device='cuda:0')), ('to', tensor(0.0423, device='cuda:0')), ('a', tensor(0.1263, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('in', tensor(0.0442, device='cuda:0')), ('port', tensor(0.0860, device='cuda:0')), ('fees', tensor(0., device='cuda:0')), ('in', tensor(0.0442, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 887, example: `` We know there are some of our own people out there . ', prediction: 2, correct_label: 2, class_scores: [0.1735325  0.3800912  0.44637635], word_scores: ['`:0.0', '`:0.0', 'we:0.0', 'know:0.0', 'there:0.0', 'are:0.0', 'some:0.0', 'of:3.4365734791208524e-06', 'our:0.0', 'own:0.0', 'people:0.0', 'out:0.0', 'there:0.0', '.:2.903296945078182e-06', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('we', tensor(0., device='cuda:0')), ('know', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('of', tensor(0.5421, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('.', tensor(0.4579, device='cuda:0')), ("'", tensor(0., device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('know', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('of', tensor(0.5421, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('.', tensor(0.4579, device='cuda:0')), ("'", tensor(0., device='cuda:0'))]
idx: 888, example: However , two of the previously ordered sets will start producing electricity at the end of October 2010 , it said , prediction: 2, correct_label: 2, class_scores: [0.23208058 0.33112785 0.43679166], word_scores: ['however:0.0', ',:7.986737728060689e-06', 'two:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'previously:0.0', 'ordered:0.0', 'sets:0.0', 'will:4.073096533829812e-06', 'start:0.0', 'producing:0.0', 'electricity:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'end:0.0', 'of:3.4365734791208524e-06', 'october:0.0', '2010:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('however', tensor(0., device='cuda:0')), (',', tensor(0.1856, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('of', tensor(0.0799, device='cuda:0')), ('the', tensor(0.1483, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('ordered', tensor(0., device='cuda:0')), ('sets', tensor(0., device='cuda:0')), ('will', tensor(0.0947, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('producing', tensor(0., device='cuda:0')), ('electricity', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1483, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0799, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1856, device='cuda:0')), ('it', tensor(0.0777, device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('however', tensor(0., device='cuda:0')), (',', tensor(0.1856, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('of', tensor(0.0799, device='cuda:0')), ('the', tensor(0.1483, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('ordered', tensor(0., device='cuda:0')), ('sets', tensor(0., device='cuda:0')), ('will', tensor(0.0947, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('producing', tensor(0., device='cuda:0')), ('electricity', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.1483, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.0799, device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.1856, device='cuda:0')), ('it', tensor(0.0777, device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 889, example: The share sale , to foreign and Finnish investors , is expected to raise some euro300 million ( US$ 380 million ) , prediction: 2, correct_label: 2, class_scores: [0.25591156 0.31698382 0.42710462], word_scores: ['the:6.3806996877247e-06', 'share:0.0', 'sale:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'foreign:0.0', 'and:0.0', 'finnish:0.0', 'investors:0.0', ',:7.986737728060689e-06', 'is:0.0', 'expected:0.0', 'to:2.886244146793615e-06', 'raise:0.0', 'some:0.0', 'euro:0.0', '##30:0.0', '##0:0.0', 'million:6.018835847498849e-06', '(:0.0', 'us:0.0', '$:0.0', '380:0.0', 'million:6.018835847498849e-06', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1589, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), (',', tensor(0.1989, device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('foreign', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('investors', tensor(0., device='cuda:0')), (',', tensor(0.1989, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('euro300', tensor(0., device='cuda:0')), ('million', tensor(0.1499, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('380', tensor(0., device='cuda:0')), ('million', tensor(0.1499, device='cuda:0'))],  word_scores_max: [('the', tensor(0.1589, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), (',', tensor(0.1989, device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('foreign', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('investors', tensor(0., device='cuda:0')), (',', tensor(0.1989, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('to', tensor(0.0719, device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('euro300', tensor(0., device='cuda:0')), ('million', tensor(0.1499, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('380', tensor(0., device='cuda:0')), ('million', tensor(0.1499, device='cuda:0'))]
idx: 890, example: Marimekko is considering further measures in the matter , prediction: 2, correct_label: 2, class_scores: [0.27020687 0.32985714 0.39993605], word_scores: ['mari:0.0', '##me:0.0', '##kko:0.0', 'is:0.0', 'considering:0.0', 'further:0.0', 'measures:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'matter:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('marimekko', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('considering', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('measures', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('matter', tensor(0., device='cuda:0'))],  word_scores_max: [('marimekko', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('considering', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('measures', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('matter', tensor(0., device='cuda:0'))]
idx: 891, example: Furthermore , the company will sell the warehouse and office buildings in Loudeac and Saint Marcel and lease new joint premises for these operations in Morvillars , prediction: 2, correct_label: 2, class_scores: [0.2695651  0.3259322  0.40450272], word_scores: ['furthermore:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'sell:0.0', 'the:6.3806996877247e-06', 'warehouse:0.0', 'and:0.0', 'office:0.0', 'buildings:0.0', 'in:3.0217122457543155e-06', 'loud:0.0', '##ea:0.0', '##c:0.0', 'and:0.0', 'saint:0.0', 'marcel:0.0', 'and:0.0', 'lease:0.0', 'new:2.798587502184091e-06', 'joint:0.0', 'premises:0.0', 'for:0.0', 'these:0.0', 'operations:0.0', 'in:3.0217122457543155e-06', 'mor:0.0', '##vill:0.0', '##ars:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('furthermore', tensor(0., device='cuda:0')), (',', tensor(0.1979, device='cuda:0')), ('the', tensor(0.1581, device='cuda:0')), ('company', tensor(0.1659, device='cuda:0')), ('will', tensor(0.1009, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('the', tensor(0.1581, device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('buildings', tensor(0., device='cuda:0')), ('in', tensor(0.0749, device='cuda:0')), ('loudeac', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('saint', tensor(0., device='cuda:0')), ('marcel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lease', tensor(0., device='cuda:0')), ('new', tensor(0.0693, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('premises', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0749, device='cuda:0')), ('morvillars', tensor(0., device='cuda:0'))],  word_scores_max: [('furthermore', tensor(0., device='cuda:0')), (',', tensor(0.1979, device='cuda:0')), ('the', tensor(0.1581, device='cuda:0')), ('company', tensor(0.1659, device='cuda:0')), ('will', tensor(0.1009, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('the', tensor(0.1581, device='cuda:0')), ('warehouse', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), ('buildings', tensor(0., device='cuda:0')), ('in', tensor(0.0749, device='cuda:0')), ('loudeac', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('saint', tensor(0., device='cuda:0')), ('marcel', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lease', tensor(0., device='cuda:0')), ('new', tensor(0.0693, device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('premises', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('these', tensor(0., device='cuda:0')), ('operations', tensor(0., device='cuda:0')), ('in', tensor(0.0749, device='cuda:0')), ('morvillars', tensor(0., device='cuda:0'))]
idx: 892, example: As a condition to the deal , Savcor Alfa has to have bought Photonium and Akseli Lahtinen Inc. 's business operations prior to the deal , prediction: 2, correct_label: 2, class_scores: [0.17744492 0.3512706  0.47128445], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'condition:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'deal:0.0', ',:7.986737728060689e-06', 'sa:0.0', '##vc:0.0', '##or:0.0', 'alfa:0.0', 'has:5.9214244174654596e-06', 'to:2.886244146793615e-06', 'have:2.910326429628185e-06', 'bought:0.0', 'photon:0.0', '##ium:0.0', 'and:0.0', 'ak:0.0', '##sel:0.0', '##i:0.0', 'la:0.0', '##ht:0.0', '##inen:0.0', 'inc:0.0', '.:2.903296945078182e-06', "':0.0", 's:0.0', 'business:0.0', 'operations:0.0', 'prior:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'deal:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.2130, device='cuda:0')), ('condition', tensor(0., device='cuda:0')), ('to', tensor(0.0713, device='cuda:0')), ('the', tensor(0.1575, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), (',', tensor(0.1972, device='cuda:0')), ('savcor', tensor(0., device='cuda:0')), ('alfa', tensor(0., device='cuda:0')), ('has', tensor(0.1462, device='cuda:0')), ('to', tensor(0.0713, device='cuda:0')), ('have', tensor(0.0719, device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('photonium', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('akseli', tensor(0., device='cuda:0')), ('lahtinen', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.0717, device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.2130, device='cuda:0')), ('condition', tensor(0., device='cuda:0')), ('to', tensor(0.0713, device='cuda:0')), ('the', tensor(0.1575, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), (',', tensor(0.1972, device='cuda:0')), ('savcor', tensor(0., device='cuda:0')), ('alfa', tensor(0., device='cuda:0')), ('has', tensor(0.1462, device='cuda:0')), ('to', tensor(0.0713, device='cuda:0')), ('have', tensor(0.0719, device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('photonium', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('akseli', tensor(0., device='cuda:0')), ('lahtinen', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.0717, device='cuda:0'))]
idx: 893, example: Industry Investment is very interested in Glaston 's solar energy projects , prediction: 2, correct_label: 1, class_scores: [0.19841667 0.33223343 0.4693499 ], word_scores: ['industry:0.0', 'investment:0.0', 'is:0.0', 'very:0.0', 'interested:0.0', 'in:3.0217122457543155e-06', 'g:0.0', '##las:0.0', '##ton:0.0', "':0.0", 's:0.0', 'solar:0.0', 'energy:0.0', 'projects:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('industry', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('interested', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0'))],  word_scores_max: [('industry', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('interested', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0'))]
idx: 894, example: The city will invite , however , a public procurement tender for the tailor-made public furniture , such as park benches , litter receptacles , public toilets , as well as bus shelters , street lights , and other , prediction: 2, correct_label: 2, class_scores: [0.23627001 0.34835    0.41538   ], word_scores: ['the:6.3806996877247e-06', 'city:0.0', 'will:4.073096533829812e-06', 'invite:0.0', ',:7.986737728060689e-06', 'however:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'public:0.0', 'procurement:0.0', 'tender:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'tailor:0.0', '-:4.821180027647642e-06', 'made:0.0', 'public:0.0', 'furniture:0.0', ',:7.986737728060689e-06', 'such:0.0', 'as:0.0', 'park:0.0', 'benches:0.0', ',:7.986737728060689e-06', 'litter:0.0', 'rec:0.0', '##ept:0.0', '##acle:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'public:0.0', 'toilets:0.0', ',:7.986737728060689e-06', 'as:0.0', 'well:0.0', 'as:0.0', 'bus:0.0', 'shelters:0.0', ',:7.986737728060689e-06', 'street:0.0', 'lights:0.0', ',:7.986737728060689e-06', 'and:0.0', 'other:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0678, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('will', tensor(0.0432, device='cuda:0')), ('invite', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('however', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('a', tensor(0.0916, device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('procurement', tensor(0., device='cuda:0')), ('tender', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0678, device='cuda:0')), ('tailor', tensor(0., device='cuda:0')), ('-', tensor(0.0512, device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('park', tensor(0., device='cuda:0')), ('benches', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('litter', tensor(0., device='cuda:0')), ('receptacles', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('toilets', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bus', tensor(0., device='cuda:0')), ('shelters', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('lights', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0678, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('will', tensor(0.0432, device='cuda:0')), ('invite', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('however', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('a', tensor(0.0916, device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('procurement', tensor(0., device='cuda:0')), ('tender', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0678, device='cuda:0')), ('tailor', tensor(0., device='cuda:0')), ('-', tensor(0.0512, device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('furniture', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('such', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('park', tensor(0., device='cuda:0')), ('benches', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('litter', tensor(0., device='cuda:0')), ('receptacles', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('public', tensor(0., device='cuda:0')), ('toilets', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bus', tensor(0., device='cuda:0')), ('shelters', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('lights', tensor(0., device='cuda:0')), (',', tensor(0.0848, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0'))]
idx: 895, example: The contract , which was signed yesterday , will run for five years and includes a two-year extension option , prediction: 2, correct_label: 2, class_scores: [0.16613291 0.37979588 0.45407122], word_scores: ['the:6.3806996877247e-06', 'contract:7.1864019446366e-06', ',:7.986737728060689e-06', 'which:0.0', 'was:0.0', 'signed:0.0', 'yesterday:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'run:0.0', 'for:0.0', 'five:0.0', 'years:0.0', 'and:0.0', 'includes:0.0', 'a:8.62785782373976e-06', 'two:0.0', '-:4.821180027647642e-06', 'year:0.0', 'extension:0.0', 'option:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1356, device='cuda:0')), ('contract', tensor(0.1527, device='cuda:0')), (',', tensor(0.1697, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.1697, device='cuda:0')), ('will', tensor(0.0865, device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('five', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('a', tensor(0.1833, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('-', tensor(0.1024, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('extension', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1356, device='cuda:0')), ('contract', tensor(0.1527, device='cuda:0')), (',', tensor(0.1697, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.1697, device='cuda:0')), ('will', tensor(0.0865, device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('five', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('a', tensor(0.1833, device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('-', tensor(0.1024, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('extension', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0'))]
idx: 896, example: It is also 7.7 pct above the 12-month volume weighted average price of the stock , prediction: 2, correct_label: 1, class_scores: [0.1714589  0.3345442  0.49399698], word_scores: ['it:3.3415778943890473e-06', 'is:0.0', 'also:0.0', '7:0.0', '.:2.903296945078182e-06', '7:0.0', 'pc:0.0', '##t:0.0', 'above:0.0', 'the:6.3806996877247e-06', '12:0.0', '-:4.821180027647642e-06', 'month:0.0', 'volume:0.0', 'weighted:0.0', 'average:0.0', 'price:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'stock:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('it', tensor(0.1226, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.1065, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('the', tensor(0.2340, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1768, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('weighted', tensor(0., device='cuda:0')), ('average', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('of', tensor(0.1260, device='cuda:0')), ('the', tensor(0.2340, device='cuda:0')), ('stock', tensor(0., device='cuda:0'))],  word_scores_max: [('it', tensor(0.1226, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.1065, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('the', tensor(0.2340, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('-', tensor(0.1768, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('weighted', tensor(0., device='cuda:0')), ('average', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('of', tensor(0.1260, device='cuda:0')), ('the', tensor(0.2340, device='cuda:0')), ('stock', tensor(0., device='cuda:0'))]
idx: 897, example: Consolidated operating profit excluding one-off items was EUR 30.6 mn , up from EUR 29.6 mn a year earlier , prediction: 2, correct_label: 1, class_scores: [0.17036419 0.41349837 0.41613752], word_scores: ['consolidated:0.0', 'operating:0.0', 'profit:0.0', 'excluding:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'off:0.0', 'items:0.0', 'was:0.0', 'eu:0.0', '##r:0.0', '30:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '29:0.0', '.:2.903296945078182e-06', '6:0.0', 'mn:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('consolidated', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.1212, device='cuda:0')), ('-', tensor(0.1275, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('.', tensor(0.0768, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2112, device='cuda:0')), ('up', tensor(0.0396, device='cuda:0')), ('from', tensor(0.1189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('.', tensor(0.0768, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('a', tensor(0.2281, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('consolidated', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('excluding', tensor(0., device='cuda:0')), ('one', tensor(0.1212, device='cuda:0')), ('-', tensor(0.1275, device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('.', tensor(0.0768, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.2112, device='cuda:0')), ('up', tensor(0.0396, device='cuda:0')), ('from', tensor(0.1189, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('.', tensor(0.0768, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('a', tensor(0.2281, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 898, example: Established in 1989 , CapMan manages Nordic buyout , mezzanine , technology , life science and real estate funds with approximately EURO 3 billion $ 4 billion in total capital , prediction: 2, correct_label: 2, class_scores: [0.25543985 0.33915392 0.40540624], word_scores: ['established:0.0', 'in:3.0217122457543155e-06', '1989:0.0', ',:7.986737728060689e-06', 'cap:0.0', '##man:0.0', 'manages:0.0', 'nordic:0.0', 'buy:0.0', '##out:0.0', ',:7.986737728060689e-06', 'me:0.0', '##zza:0.0', '##nine:0.0', ',:7.986737728060689e-06', 'technology:0.0', ',:7.986737728060689e-06', 'life:0.0', 'science:0.0', 'and:0.0', 'real:0.0', 'estate:0.0', 'funds:0.0', 'with:4.733654350275174e-06', 'approximately:0.0', 'euro:0.0', '3:0.0', 'billion:0.0', '$:0.0', '4:0.0', 'billion:0.0', 'in:3.0217122457543155e-06', 'total:0.0', 'capital:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('established', tensor(0., device='cuda:0')), ('in', tensor(0.0707, device='cuda:0')), ('1989', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('capman', tensor(0., device='cuda:0')), ('manages', tensor(0., device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('buyout', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('mezzanine', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('science', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('with', tensor(0.1108, device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('in', tensor(0.0707, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0'))],  word_scores_max: [('established', tensor(0., device='cuda:0')), ('in', tensor(0.0707, device='cuda:0')), ('1989', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('capman', tensor(0., device='cuda:0')), ('manages', tensor(0., device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('buyout', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('mezzanine', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), (',', tensor(0.1869, device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('science', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('estate', tensor(0., device='cuda:0')), ('funds', tensor(0., device='cuda:0')), ('with', tensor(0.1108, device='cuda:0')), ('approximately', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('in', tensor(0.0707, device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0'))]
idx: 899, example: And earlier this month , the company signed a deal with India-based information technology services giant Wipro Technologies to transfer and sell its radio access related R&D activities in Berlin , prediction: 2, correct_label: 1, class_scores: [0.19017136 0.2345839  0.5752447 ], word_scores: ['and:0.0', 'earlier:0.0', 'this:0.0', 'month:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'signed:0.0', 'a:8.62785782373976e-06', 'deal:0.0', 'with:4.733654350275174e-06', 'india:0.0', '-:4.821180027647642e-06', 'based:0.0', 'information:0.0', 'technology:0.0', 'services:0.0', 'giant:0.0', 'wi:0.0', '##pro:0.0', 'technologies:0.0', 'to:2.886244146793615e-06', 'transfer:0.0', 'and:0.0', 'sell:0.0', 'its:1.7191393908433383e-06', 'radio:2.7861385660798987e-06', 'access:0.0', 'related:0.0', 'r:0.0', '&:0.0', 'd:0.0', 'activities:0.0', 'in:3.0217122457543155e-06', 'berlin:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('and', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0')), (',', tensor(0.1608, device='cuda:0')), ('the', tensor(0.1285, device='cuda:0')), ('company', tensor(0.1348, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1737, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('with', tensor(0.0953, device='cuda:0')), ('india', tensor(0., device='cuda:0')), ('-', tensor(0.0971, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('giant', tensor(0., device='cuda:0')), ('wipro', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), ('to', tensor(0.0581, device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0346, device='cuda:0')), ('radio', tensor(0.0561, device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('d', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('in', tensor(0.0608, device='cuda:0')), ('berlin', tensor(0., device='cuda:0'))],  word_scores_max: [('and', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0')), (',', tensor(0.1608, device='cuda:0')), ('the', tensor(0.1285, device='cuda:0')), ('company', tensor(0.1348, device='cuda:0')), ('signed', tensor(0., device='cuda:0')), ('a', tensor(0.1737, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('with', tensor(0.0953, device='cuda:0')), ('india', tensor(0., device='cuda:0')), ('-', tensor(0.0971, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('giant', tensor(0., device='cuda:0')), ('wipro', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), ('to', tensor(0.0581, device='cuda:0')), ('transfer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0346, device='cuda:0')), ('radio', tensor(0.0561, device='cuda:0')), ('access', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('d', tensor(0., device='cuda:0')), ('activities', tensor(0., device='cuda:0')), ('in', tensor(0.0608, device='cuda:0')), ('berlin', tensor(0., device='cuda:0'))]
idx: 900, example: Travel expenses would be reimbursed in accordance with the travel policy of the company , prediction: 1, correct_label: 2, class_scores: [0.18297127 0.4566823  0.36034638], word_scores: ['travel:0.0', 'expenses:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'rei:0.0', '##mb:0.0', '##urse:0.0', '##d:0.0', 'in:3.0217122457543155e-06', 'accordance:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'travel:0.0', 'policy:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('travel', tensor(0., device='cuda:0')), ('expenses', tensor(0., device='cuda:0')), ('would', tensor(0.0640, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('reimbursed', tensor(0., device='cuda:0')), ('in', tensor(0.0923, device='cuda:0')), ('accordance', tensor(0., device='cuda:0')), ('with', tensor(0.1446, device='cuda:0')), ('the', tensor(0.1949, device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('policy', tensor(0., device='cuda:0')), ('of', tensor(0.1050, device='cuda:0')), ('the', tensor(0.1949, device='cuda:0')), ('company', tensor(0.2045, device='cuda:0'))],  word_scores_max: [('travel', tensor(0., device='cuda:0')), ('expenses', tensor(0., device='cuda:0')), ('would', tensor(0.0640, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('reimbursed', tensor(0., device='cuda:0')), ('in', tensor(0.0923, device='cuda:0')), ('accordance', tensor(0., device='cuda:0')), ('with', tensor(0.1446, device='cuda:0')), ('the', tensor(0.1949, device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('policy', tensor(0., device='cuda:0')), ('of', tensor(0.1050, device='cuda:0')), ('the', tensor(0.1949, device='cuda:0')), ('company', tensor(0.2045, device='cuda:0'))]
idx: 901, example: The purpose of this action is to ensure company 's cost effectiveness this year and in the near future , prediction: 2, correct_label: 1, class_scores: [0.19929181 0.37266588 0.42804235], word_scores: ['the:6.3806996877247e-06', 'purpose:0.0', 'of:3.4365734791208524e-06', 'this:0.0', 'action:0.0', 'is:0.0', 'to:2.886244146793615e-06', 'ensure:0.0', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'cost:0.0', 'effectiveness:0.0', 'this:0.0', 'year:0.0', 'and:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'near:0.0', 'future:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.5023, device='cuda:0')), ('purpose', tensor(0., device='cuda:0')), ('of', tensor(0.2705, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.2272, device='cuda:0')), ('ensure', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.5023, device='cuda:0')), ('purpose', tensor(0., device='cuda:0')), ('of', tensor(0.2705, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('to', tensor(0.2272, device='cuda:0')), ('ensure', tensor(0., device='cuda:0'))]
idx: 902, example: Operating profit of Kauppalehti group rose to EUR 1.5 mn from EUR 1.3 mn , and that of Marketplaces to EUR 1.3 mn from EUR 1.0 mn in the third quarter of 2006 , prediction: 2, correct_label: 1, class_scores: [0.1304745  0.3923036  0.47722188], word_scores: ['operating:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'ka:0.0', '##up:0.0', '##pal:0.0', '##eh:0.0', '##ti:2.5915114747476764e-06', 'group:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'and:0.0', 'that:1.5133816759771435e-06', 'of:3.4365734791208524e-06', 'marketplace:0.0', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '3:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '1:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'third:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0618, device='cuda:0')), ('kauppalehti', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0519, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.0809, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1437, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('that', tensor(0.0272, device='cuda:0')), ('of', tensor(0.0618, device='cuda:0')), ('marketplaces', tensor(0., device='cuda:0')), ('to', tensor(0.0519, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.0809, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0544, device='cuda:0')), ('the', tensor(0.1148, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0618, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0618, device='cuda:0')), ('kauppalehti', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0519, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.0809, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), (',', tensor(0.1437, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('that', tensor(0.0272, device='cuda:0')), ('of', tensor(0.0618, device='cuda:0')), ('marketplaces', tensor(0., device='cuda:0')), ('to', tensor(0.0519, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.0809, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0522, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.0544, device='cuda:0')), ('the', tensor(0.1148, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0618, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 903, example: Finnish power company Fortum reports 89 % of its electricity was generated without carbon dioxide emissions in 2007 , prediction: 2, correct_label: 2, class_scores: [0.25172418 0.31585371 0.4324221 ], word_scores: ['finnish:0.0', 'power:0.0', 'company:6.695386673527537e-06', 'fort:0.0', '##um:0.0', 'reports:0.0', '89:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'electricity:0.0', 'was:0.0', 'generated:0.0', 'without:0.0', 'carbon:0.0', 'dioxide:0.0', 'emissions:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('company', tensor(0.4502, device='cuda:0')), ('fortum', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('89', tensor(0., device='cuda:0')), ('of', tensor(0.2311, device='cuda:0')), ('its', tensor(0.1156, device='cuda:0')), ('electricity', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('carbon', tensor(0., device='cuda:0')), ('dioxide', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0')), ('in', tensor(0.2032, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('power', tensor(0., device='cuda:0')), ('company', tensor(0.4502, device='cuda:0')), ('fortum', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('89', tensor(0., device='cuda:0')), ('of', tensor(0.2311, device='cuda:0')), ('its', tensor(0.1156, device='cuda:0')), ('electricity', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('generated', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('carbon', tensor(0., device='cuda:0')), ('dioxide', tensor(0., device='cuda:0')), ('emissions', tensor(0., device='cuda:0')), ('in', tensor(0.2032, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 904, example: Like all other mechanical pipettors from Biohit , also Proline Plus is CE-IVD marked and comes with a 3-year warranty , prediction: 2, correct_label: 2, class_scores: [0.2220723  0.355246   0.42268172], word_scores: ['like:0.0', 'all:0.0', 'other:0.0', 'mechanical:0.0', 'pipe:0.0', '##tto:0.0', '##rs:0.0', 'from:4.495178018260049e-06', 'bio:0.0', '##hit:0.0', ',:7.986737728060689e-06', 'also:0.0', 'pro:0.0', '##line:0.0', 'plus:0.0', 'is:0.0', 'ce:0.0', '-:4.821180027647642e-06', 'iv:0.0', '##d:0.0', 'marked:0.0', 'and:0.0', 'comes:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', '3:0.0', '-:4.821180027647642e-06', 'year:0.0', 'warrant:0.0', '##y:1.832826342251792e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('like', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('mechanical', tensor(0., device='cuda:0')), ('pipettors', tensor(0., device='cuda:0')), ('from', tensor(0.1267, device='cuda:0')), ('biohit', tensor(0., device='cuda:0')), (',', tensor(0.2251, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('proline', tensor(0., device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('ce', tensor(0., device='cuda:0')), ('-', tensor(0.1359, device='cuda:0')), ('ivd', tensor(0., device='cuda:0')), ('marked', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('comes', tensor(0., device='cuda:0')), ('with', tensor(0.1334, device='cuda:0')), ('a', tensor(0.2431, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.1359, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('warranty', tensor(0., device='cuda:0'))],  word_scores_max: [('like', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('mechanical', tensor(0., device='cuda:0')), ('pipettors', tensor(0., device='cuda:0')), ('from', tensor(0.1267, device='cuda:0')), ('biohit', tensor(0., device='cuda:0')), (',', tensor(0.2251, device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('proline', tensor(0., device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('ce', tensor(0., device='cuda:0')), ('-', tensor(0.1359, device='cuda:0')), ('ivd', tensor(0., device='cuda:0')), ('marked', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('comes', tensor(0., device='cuda:0')), ('with', tensor(0.1334, device='cuda:0')), ('a', tensor(0.2431, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.1359, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('warranty', tensor(0., device='cuda:0'))]
idx: 905, example: Panostaja Oyj 's Board also decided at its organisational meeting held upon completion of the AGM to implement the AGM decision concerning Board member fees paid as shares in such a way that shares are transferred on a quarterly basis on the date following publication of the quarterly-annual report , prediction: 2, correct_label: 2, class_scores: [0.2688396  0.35484052 0.37631992], word_scores: ['pan:0.0', '##osta:0.0', '##ja:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', "':0.0", 's:0.0', 'board:0.0', 'also:0.0', 'decided:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'organisation:0.0', 'meeting:0.0', 'held:0.0', 'upon:0.0', 'completion:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'ag:0.0', '##m:0.0', 'to:2.886244146793615e-06', 'implement:0.0', 'the:6.3806996877247e-06', 'ag:0.0', '##m:0.0', 'decision:0.0', 'concerning:0.0', 'board:0.0', 'member:0.0', 'fees:0.0', 'paid:0.0', 'as:0.0', 'shares:0.0', 'in:3.0217122457543155e-06', 'such:0.0', 'a:8.62785782373976e-06', 'way:0.0', 'that:1.5133816759771435e-06', 'shares:0.0', 'are:0.0', 'transferred:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'quarterly:0.0', 'basis:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'date:0.0', 'following:0.0', 'publication:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'quarterly:0.0', '-:4.821180027647642e-06', 'annual:0.0', 'report:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('panostaja', tensor(nan, device='cuda:0'))],  word_scores_max: [('panostaja', tensor(nan, device='cuda:0'))]
idx: 906, example: The workforce will be reduced also in the Amsterdam office , in the Netherlands , prediction: 1, correct_label: 0, class_scores: [0.26316303 0.44000152 0.29683545], word_scores: ['the:6.3806996877247e-06', 'workforce:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'reduced:0.0', 'also:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'amsterdam:0.0', 'office:0.0', ',:7.986737728060689e-06', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'netherlands:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1713, device='cuda:0')), ('workforce', tensor(0., device='cuda:0')), ('will', tensor(0.1094, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('reduced', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('in', tensor(0.0811, device='cuda:0')), ('the', tensor(0.1713, device='cuda:0')), ('amsterdam', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), (',', tensor(0.2144, device='cuda:0')), ('in', tensor(0.0811, device='cuda:0')), ('the', tensor(0.1713, device='cuda:0')), ('netherlands', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1713, device='cuda:0')), ('workforce', tensor(0., device='cuda:0')), ('will', tensor(0.1094, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('reduced', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('in', tensor(0.0811, device='cuda:0')), ('the', tensor(0.1713, device='cuda:0')), ('amsterdam', tensor(0., device='cuda:0')), ('office', tensor(0., device='cuda:0')), (',', tensor(0.2144, device='cuda:0')), ('in', tensor(0.0811, device='cuda:0')), ('the', tensor(0.1713, device='cuda:0')), ('netherlands', tensor(0., device='cuda:0'))]
idx: 907, example: The Russian gas giant invested another 46 million litas in the company in late 2004 and now owns 99.5 percent of its stock capital , which amounts to 86.936 million litas , prediction: 2, correct_label: 2, class_scores: [0.25496158 0.28964823 0.4553902 ], word_scores: ['the:6.3806996877247e-06', 'russian:0.0', 'gas:0.0', 'giant:0.0', 'invested:0.0', 'another:0.0', '46:0.0', 'million:6.018835847498849e-06', 'lit:0.0', '##as:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'in:3.0217122457543155e-06', 'late:0.0', '2004:0.0', 'and:0.0', 'now:0.0', 'owns:0.0', '99:0.0', '.:2.903296945078182e-06', '5:0.0', 'percent:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'stock:0.0', 'capital:0.0', ',:7.986737728060689e-06', 'which:0.0', 'amounts:0.0', 'to:2.886244146793615e-06', '86:0.0', '.:2.903296945078182e-06', '93:0.0', '##6:0.0', 'million:6.018835847498849e-06', 'lit:0.0', '##as:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1075, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('giant', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('million', tensor(0.1014, device='cuda:0')), ('litas', tensor(0., device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('the', tensor(0.1075, device='cuda:0')), ('company', tensor(0.1128, device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('late', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('.', tensor(0.0489, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('of', tensor(0.0579, device='cuda:0')), ('its', tensor(0.0290, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), (',', tensor(0.1345, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('amounts', tensor(0., device='cuda:0')), ('to', tensor(0.0486, device='cuda:0')), ('86', tensor(0., device='cuda:0')), ('.', tensor(0.0489, device='cuda:0')), ('936', tensor(0., device='cuda:0')), ('million', tensor(0.1014, device='cuda:0')), ('litas', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1075, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('giant', tensor(0., device='cuda:0')), ('invested', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('million', tensor(0.1014, device='cuda:0')), ('litas', tensor(0., device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('the', tensor(0.1075, device='cuda:0')), ('company', tensor(0.1128, device='cuda:0')), ('in', tensor(0.0509, device='cuda:0')), ('late', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('.', tensor(0.0489, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('of', tensor(0.0579, device='cuda:0')), ('its', tensor(0.0290, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), (',', tensor(0.1345, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('amounts', tensor(0., device='cuda:0')), ('to', tensor(0.0486, device='cuda:0')), ('86', tensor(0., device='cuda:0')), ('.', tensor(0.0489, device='cuda:0')), ('936', tensor(0., device='cuda:0')), ('million', tensor(0.1014, device='cuda:0')), ('litas', tensor(0., device='cuda:0'))]
idx: 908, example: A maximum of 20 employees , who work in Karttakeskus and are responsible for producing Geographic Information Services , will be affected , the company added , prediction: 1, correct_label: 2, class_scores: [0.15355523 0.43112656 0.41531816], word_scores: ['a:8.62785782373976e-06', 'maximum:0.0', 'of:3.4365734791208524e-06', '20:0.0', 'employees:0.0', ',:7.986737728060689e-06', 'who:0.0', 'work:0.0', 'in:3.0217122457543155e-06', 'ka:0.0', '##rt:0.0', '##take:0.0', '##sk:0.0', '##us:0.0', 'and:0.0', 'are:0.0', 'responsible:0.0', 'for:0.0', 'producing:0.0', 'geographic:0.0', 'information:0.0', 'services:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'be:0.0', 'affected:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'added:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('a', tensor(0.1535, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0612, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), (',', tensor(0.1421, device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('in', tensor(0.0538, device='cuda:0')), ('karttakeskus', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('producing', tensor(0., device='cuda:0')), ('geographic', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.1421, device='cuda:0')), ('will', tensor(0.0725, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('affected', tensor(0., device='cuda:0')), (',', tensor(0.1421, device='cuda:0')), ('the', tensor(0.1135, device='cuda:0')), ('company', tensor(0.1191, device='cuda:0')), ('added', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.1535, device='cuda:0')), ('maximum', tensor(0., device='cuda:0')), ('of', tensor(0.0612, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), (',', tensor(0.1421, device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('work', tensor(0., device='cuda:0')), ('in', tensor(0.0538, device='cuda:0')), ('karttakeskus', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('responsible', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('producing', tensor(0., device='cuda:0')), ('geographic', tensor(0., device='cuda:0')), ('information', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), (',', tensor(0.1421, device='cuda:0')), ('will', tensor(0.0725, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('affected', tensor(0., device='cuda:0')), (',', tensor(0.1421, device='cuda:0')), ('the', tensor(0.1135, device='cuda:0')), ('company', tensor(0.1191, device='cuda:0')), ('added', tensor(0., device='cuda:0'))]
idx: 909, example: The Finnish company previously said its operating result will be lower than the break-even posted a year earlier , prediction: 2, correct_label: 0, class_scores: [0.2943097 0.2828401 0.4228502], word_scores: ['the:6.3806996877247e-06', 'finnish:0.0', 'company:6.695386673527537e-06', 'previously:0.0', 'said:0.0', 'its:1.7191393908433383e-06', 'operating:0.0', 'result:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'lower:0.0', 'than:0.0', 'the:6.3806996877247e-06', 'break:0.0', '-:4.821180027647642e-06', 'even:0.0', 'posted:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.1649, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('company', tensor(0.1730, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0444, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('will', tensor(0.1053, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('the', tensor(0.1649, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('-', tensor(0.1246, device='cuda:0')), ('even', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.2230, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1649, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('company', tensor(0.1730, device='cuda:0')), ('previously', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('its', tensor(0.0444, device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('will', tensor(0.1053, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('the', tensor(0.1649, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('-', tensor(0.1246, device='cuda:0')), ('even', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.2230, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 910, example: `` We have a group of 120 volunteers made up of Digicel employees who will manage the distribution ... Over the next week , they will distribute the 19,000 tents to more than 150 organizations , '' Digicel Haiti CEO Maarten Boute said , prediction: 2, correct_label: 2, class_scores: [0.19884214 0.3314217  0.46973625], word_scores: ['`:0.0', '`:0.0', 'we:0.0', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'group:0.0', 'of:3.4365734791208524e-06', '120:0.0', 'volunteers:0.0', 'made:0.0', 'up:1.4959460941099678e-06', 'of:3.4365734791208524e-06', 'dig:0.0', '##ice:0.0', '##l:0.0', 'employees:0.0', 'who:0.0', 'will:4.073096533829812e-06', 'manage:0.0', 'the:6.3806996877247e-06', 'distribution:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'over:0.0', 'the:6.3806996877247e-06', 'next:0.0', 'week:0.0', ',:7.986737728060689e-06', 'they:0.0', 'will:4.073096533829812e-06', 'distribute:0.0', 'the:6.3806996877247e-06', '19:0.0', ',:7.986737728060689e-06', '000:0.0', 'tents:0.0', 'to:2.886244146793615e-06', 'more:0.0', 'than:0.0', '150:0.0', 'organizations:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'dig:0.0', '##ice:0.0', '##l:0.0', 'haiti:0.0', 'ceo:0.0', 'ma:0.0', '##arte:0.0', '##n:0.0', 'bout:0.0', '##e:0.0', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('we', tensor(0., device='cuda:0')), ('have', tensor(0.0352, device='cuda:0')), ('a', tensor(0.1043, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('120', tensor(0., device='cuda:0')), ('volunteers', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('up', tensor(0.0181, device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('digicel', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('will', tensor(0.0492, device='cuda:0')), ('manage', tensor(0., device='cuda:0')), ('the', tensor(0.0771, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('.', tensor(0.0351, device='cuda:0')), ('.', tensor(0.0351, device='cuda:0')), ('.', tensor(0.0351, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.0771, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), (',', tensor(0.0965, device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.0492, device='cuda:0')), ('distribute', tensor(0., device='cuda:0')), ('the', tensor(0.0771, device='cuda:0')), ('19', tensor(0., device='cuda:0')), (',', tensor(0.0965, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('tents', tensor(0., device='cuda:0')), ('to', tensor(0.0349, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('150', tensor(0., device='cuda:0')), ('organizations', tensor(0., device='cuda:0')), (',', tensor(0.0965, device='cuda:0'))],  word_scores_max: [('we', tensor(0., device='cuda:0')), ('have', tensor(0.0352, device='cuda:0')), ('a', tensor(0.1043, device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('120', tensor(0., device='cuda:0')), ('volunteers', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('up', tensor(0.0181, device='cuda:0')), ('of', tensor(0.0415, device='cuda:0')), ('digicel', tensor(0., device='cuda:0')), ('employees', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('will', tensor(0.0492, device='cuda:0')), ('manage', tensor(0., device='cuda:0')), ('the', tensor(0.0771, device='cuda:0')), ('distribution', tensor(0., device='cuda:0')), ('.', tensor(0.0351, device='cuda:0')), ('.', tensor(0.0351, device='cuda:0')), ('.', tensor(0.0351, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('the', tensor(0.0771, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), (',', tensor(0.0965, device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.0492, device='cuda:0')), ('distribute', tensor(0., device='cuda:0')), ('the', tensor(0.0771, device='cuda:0')), ('19', tensor(0., device='cuda:0')), (',', tensor(0.0965, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('tents', tensor(0., device='cuda:0')), ('to', tensor(0.0349, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('150', tensor(0., device='cuda:0')), ('organizations', tensor(0., device='cuda:0')), (',', tensor(0.0965, device='cuda:0'))]
idx: 911, example: Aldata to Share Space Optimization Vision at Apollo User Group and 2009 Category Management Association Conferences ; Company Will Unveil New Solution that Combines Business Intelligence with Space Planning Data at Conference, prediction: 2, correct_label: 2, class_scores: [0.24557704 0.25231177 0.50211114], word_scores: ['al:0.0', '##da:0.0', '##ta:0.0', 'to:2.886244146793615e-06', 'share:0.0', 'space:0.0', 'optimization:0.0', 'vision:0.0', 'at:0.0', 'apollo:0.0', 'user:0.0', 'group:0.0', 'and:0.0', '2009:0.0', 'category:0.0', 'management:0.0', 'association:0.0', 'conferences:0.0', ';:0.0', 'company:6.695386673527537e-06', 'will:4.073096533829812e-06', 'un:0.0', '##ve:0.0', '##il:0.0', 'new:2.798587502184091e-06', 'solution:0.0', 'that:1.5133816759771435e-06', 'combines:0.0', 'business:0.0', 'intelligence:0.0', 'with:4.733654350275174e-06', 'space:0.0', 'planning:0.0', 'data:0.0', 'at:0.0', 'conference:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aldata', tensor(0., device='cuda:0')), ('to', tensor(0.1271, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('space', tensor(0., device='cuda:0')), ('optimization', tensor(0., device='cuda:0')), ('vision', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('apollo', tensor(0., device='cuda:0')), ('user', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('category', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('association', tensor(0., device='cuda:0')), ('conferences', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('company', tensor(0.2949, device='cuda:0')), ('will', tensor(0.1794, device='cuda:0')), ('unveil', tensor(0., device='cuda:0')), ('new', tensor(0.1233, device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('that', tensor(0.0667, device='cuda:0')), ('combines', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('intelligence', tensor(0., device='cuda:0')), ('with', tensor(0.2085, device='cuda:0')), ('space', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('conference', tensor(0., device='cuda:0'))],  word_scores_max: [('aldata', tensor(0., device='cuda:0')), ('to', tensor(0.1271, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('space', tensor(0., device='cuda:0')), ('optimization', tensor(0., device='cuda:0')), ('vision', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('apollo', tensor(0., device='cuda:0')), ('user', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('category', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('association', tensor(0., device='cuda:0')), ('conferences', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('company', tensor(0.2949, device='cuda:0')), ('will', tensor(0.1794, device='cuda:0')), ('unveil', tensor(0., device='cuda:0')), ('new', tensor(0.1233, device='cuda:0')), ('solution', tensor(0., device='cuda:0')), ('that', tensor(0.0667, device='cuda:0')), ('combines', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('intelligence', tensor(0., device='cuda:0')), ('with', tensor(0.2085, device='cuda:0')), ('space', tensor(0., device='cuda:0')), ('planning', tensor(0., device='cuda:0')), ('data', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('conference', tensor(0., device='cuda:0'))]
idx: 912, example: Another noticeable thing is that the search for Tata and Airtel brands was mostly related to ` broadband connections ' , prediction: 2, correct_label: 2, class_scores: [0.21987945 0.34610495 0.43401563], word_scores: ['another:0.0', 'noticeable:0.0', 'thing:0.0', 'is:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'search:0.0', 'for:0.0', 'tata:0.0', 'and:0.0', 'air:0.0', '##tel:0.0', 'brands:0.0', 'was:0.0', 'mostly:0.0', 'related:0.0', 'to:2.886244146793615e-06', '`:0.0', 'broadband:0.0', 'connections:0.0', "':0.0", '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('another', tensor(0., device='cuda:0')), ('noticeable', tensor(0., device='cuda:0')), ('thing', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.1404, device='cuda:0')), ('the', tensor(0.5919, device='cuda:0')), ('search', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('tata', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('airtel', tensor(0., device='cuda:0')), ('brands', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('mostly', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('to', tensor(0.2677, device='cuda:0')), ('broadband', tensor(0., device='cuda:0'))],  word_scores_max: [('another', tensor(0., device='cuda:0')), ('noticeable', tensor(0., device='cuda:0')), ('thing', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.1404, device='cuda:0')), ('the', tensor(0.5919, device='cuda:0')), ('search', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('tata', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('airtel', tensor(0., device='cuda:0')), ('brands', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('mostly', tensor(0., device='cuda:0')), ('related', tensor(0., device='cuda:0')), ('to', tensor(0.2677, device='cuda:0')), ('broadband', tensor(0., device='cuda:0'))]
idx: 913, example: After the transaction , M-real will own 30 % in Metsa-Botnia and UPM -- 17 % , prediction: 1, correct_label: 2, class_scores: [0.23082232 0.43639326 0.33278447], word_scores: ['after:0.0', 'the:6.3806996877247e-06', 'transaction:0.0', ',:7.986737728060689e-06', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', 'will:4.073096533829812e-06', 'own:0.0', '30:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'mets:0.0', '##a:3.804580501309829e-06', '-:4.821180027647642e-06', 'bot:0.0', '##nia:0.0', 'and:0.0', 'up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', '17:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.1510, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1891, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('will', tensor(0.0964, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('in', tensor(0.0715, device='cuda:0')), ('metsa', tensor(0., device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('botnia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('upm', tensor(0.0354, device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('17', tensor(0., device='cuda:0'))],  word_scores_max: [('after', tensor(0., device='cuda:0')), ('the', tensor(0.1510, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1891, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('will', tensor(0.0964, device='cuda:0')), ('own', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('in', tensor(0.0715, device='cuda:0')), ('metsa', tensor(0., device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('botnia', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('upm', tensor(0.0354, device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('-', tensor(0.1141, device='cuda:0')), ('17', tensor(0., device='cuda:0'))]
idx: 914, example: The deal is subject to approval by the Norwegian competition authorities , prediction: 1, correct_label: 2, class_scores: [0.17850062 0.50336474 0.31813467], word_scores: ['the:6.3806996877247e-06', 'deal:0.0', 'is:0.0', 'subject:0.0', 'to:2.886244146793615e-06', 'approval:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'norwegian:0.0', 'competition:0.0', 'authorities:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.4078, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('subject', tensor(0., device='cuda:0')), ('to', tensor(0.1845, device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.4078, device='cuda:0')), ('norwegian', tensor(0., device='cuda:0')), ('competition', tensor(0., device='cuda:0')), ('authorities', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.4078, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('subject', tensor(0., device='cuda:0')), ('to', tensor(0.1845, device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.4078, device='cuda:0')), ('norwegian', tensor(0., device='cuda:0')), ('competition', tensor(0., device='cuda:0')), ('authorities', tensor(0., device='cuda:0'))]
idx: 915, example: The services also give the supplier opportunity to key-in invoices , receive orders electronically , to send order confirmations and to upload and create electronic catalogues , prediction: 2, correct_label: 1, class_scores: [0.29915163 0.27994314 0.42090526], word_scores: ['the:6.3806996877247e-06', 'services:0.0', 'also:0.0', 'give:0.0', 'the:6.3806996877247e-06', 'supplier:0.0', 'opportunity:0.0', 'to:2.886244146793615e-06', 'key:0.0', '-:4.821180027647642e-06', 'in:3.0217122457543155e-06', 'in:3.0217122457543155e-06', '##vo:0.0', '##ices:0.0', ',:7.986737728060689e-06', 'receive:0.0', 'orders:0.0', 'electronically:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', 'send:0.0', 'order:0.0', 'confirmation:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'to:2.886244146793615e-06', 'up:1.4959460941099678e-06', '##load:0.0', 'and:0.0', 'create:0.0', 'electronic:0.0', 'catalogue:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1282, device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('opportunity', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('-', tensor(0.0969, device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('invoices', tensor(0.0607, device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('receive', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('electronically', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('send', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('confirmations', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('upload', tensor(0.0301, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('create', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('catalogues', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1282, device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('the', tensor(0.1282, device='cuda:0')), ('supplier', tensor(0., device='cuda:0')), ('opportunity', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('-', tensor(0.0969, device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('invoices', tensor(0.0607, device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('receive', tensor(0., device='cuda:0')), ('orders', tensor(0., device='cuda:0')), ('electronically', tensor(0., device='cuda:0')), (',', tensor(0.1605, device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('send', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('confirmations', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('to', tensor(0.0580, device='cuda:0')), ('upload', tensor(0.0301, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('create', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('catalogues', tensor(0., device='cuda:0'))]
idx: 916, example: The service is intended to allow the people of thirteen Mediterranean countries to reach the Baltic more rapidly , with a single carrier , prediction: 1, correct_label: 1, class_scores: [0.18247493 0.44481492 0.37271023], word_scores: ['the:6.3806996877247e-06', 'service:0.0', 'is:0.0', 'intended:0.0', 'to:2.886244146793615e-06', 'allow:0.0', 'the:6.3806996877247e-06', 'people:0.0', 'of:3.4365734791208524e-06', 'thirteen:0.0', 'mediterranean:0.0', 'countries:0.0', 'to:2.886244146793615e-06', 'reach:8.23132722871378e-06', 'the:6.3806996877247e-06', 'baltic:0.0', 'more:0.0', 'rapidly:0.0', ',:7.986737728060689e-06', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'single:0.0', 'carrier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1101, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('intended', tensor(0., device='cuda:0')), ('to', tensor(0.0498, device='cuda:0')), ('allow', tensor(0., device='cuda:0')), ('the', tensor(0.1101, device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('of', tensor(0.0593, device='cuda:0')), ('thirteen', tensor(0., device='cuda:0')), ('mediterranean', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0')), ('to', tensor(0.0498, device='cuda:0')), ('reach', tensor(0.1421, device='cuda:0')), ('the', tensor(0.1101, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('rapidly', tensor(0., device='cuda:0')), (',', tensor(0.1379, device='cuda:0')), ('with', tensor(0.0817, device='cuda:0')), ('a', tensor(0.1489, device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('carrier', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1101, device='cuda:0')), ('service', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('intended', tensor(0., device='cuda:0')), ('to', tensor(0.0498, device='cuda:0')), ('allow', tensor(0., device='cuda:0')), ('the', tensor(0.1101, device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('of', tensor(0.0593, device='cuda:0')), ('thirteen', tensor(0., device='cuda:0')), ('mediterranean', tensor(0., device='cuda:0')), ('countries', tensor(0., device='cuda:0')), ('to', tensor(0.0498, device='cuda:0')), ('reach', tensor(0.1421, device='cuda:0')), ('the', tensor(0.1101, device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('rapidly', tensor(0., device='cuda:0')), (',', tensor(0.1379, device='cuda:0')), ('with', tensor(0.0817, device='cuda:0')), ('a', tensor(0.1489, device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('carrier', tensor(0., device='cuda:0'))]
idx: 917, example: In April 2010 , Olvi 's range of ciders will expand with a strawberry-rhubarb and an apple-pear cider in green bottles with a new shape , prediction: 2, correct_label: 2, class_scores: [0.23281021 0.3280019  0.43918788], word_scores: ['in:3.0217122457543155e-06', 'april:0.0', '2010:0.0', ',:7.986737728060689e-06', 'ol:0.0', '##vi:0.0', "':0.0", 's:0.0', 'range:0.0', 'of:3.4365734791208524e-06', 'cid:0.0', '##ers:5.0093617574020755e-06', 'will:4.073096533829812e-06', 'expand:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'strawberry:0.0', '-:4.821180027647642e-06', 'r:0.0', '##hu:0.0', '##bar:0.0', '##b:0.0', 'and:0.0', 'an:0.0', 'apple:0.0', '-:4.821180027647642e-06', 'pear:0.0', 'cid:0.0', '##er:0.0', 'in:3.0217122457543155e-06', 'green:0.0', 'bottles:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'shape:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.2745, device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.7255, device='cuda:0'))],  word_scores_max: [('in', tensor(0.2745, device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.7255, device='cuda:0'))]
idx: 918, example: Originally posted to the PCMag.com security blog , Security Watch , prediction: 2, correct_label: 2, class_scores: [0.14594479 0.4139595  0.4400956 ], word_scores: ['originally:0.0', 'posted:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'pc:0.0', '##ma:0.0', '##g:0.0', '.:2.903296945078182e-06', 'com:0.0', 'security:0.0', 'blog:0.0', ',:7.986737728060689e-06', 'security:0.0', 'watch:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('originally', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('to', tensor(0.1432, device='cuda:0')), ('the', tensor(0.3166, device='cuda:0')), ('pcmag', tensor(0., device='cuda:0')), ('.', tensor(0.1440, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('blog', tensor(0., device='cuda:0')), (',', tensor(0.3962, device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0'))],  word_scores_max: [('originally', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('to', tensor(0.1432, device='cuda:0')), ('the', tensor(0.3166, device='cuda:0')), ('pcmag', tensor(0., device='cuda:0')), ('.', tensor(0.1440, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('blog', tensor(0., device='cuda:0')), (',', tensor(0.3962, device='cuda:0')), ('security', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0'))]
idx: 919, example: ( ADP News ) - Nov 5 , 2008 - Finnish electronic measurement products and solutions maker Vaisala Oyj ( OMX : VAIAS ) said today that its net profit rose to EUR 18 million ( USD 23.1 m ) for the first nine months of 2008 from EUR , prediction: 2, correct_label: 1, class_scores: [0.29395157 0.33359107 0.37245736], word_scores: ['(:0.0', 'ad:0.0', '##p:0.0', 'news:0.0', '):0.0', '-:4.821180027647642e-06', 'nov:0.0', '5:0.0', ',:7.986737728060689e-06', '2008:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'electronic:0.0', 'measurement:0.0', 'solutions:0.0', 'maker:0.0', 'va:2.3812995095795486e-06', '##isa:0.0', '##la:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'om:0.0', '##x:0.0', '::0.0', 'va:2.3812995095795486e-06', '##ias:0.0', '):0.0', 'said:0.0', 'today:0.0', 'that:1.5133816759771435e-06', 'its:1.7191393908433383e-06', 'net:0.0', 'profit:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '18:0.0', 'million:6.018835847498849e-06', '(:0.0', 'usd:0.0', '23:3.2229838780040154e-06', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', '):0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'nine:0.0', 'months:0.0', 'of:3.4365734791208524e-06', '2008:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0849, device='cuda:0')), ('nov', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), (',', tensor(0.1406, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('-', tensor(0.0849, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('vaisala', tensor(0.0419, device='cuda:0')), ('oyj', tensor(0.0323, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('vaias', tensor(0.0419, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0266, device='cuda:0')), ('its', tensor(0.0303, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0508, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('million', tensor(0.1060, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('23', tensor(0.0567, device='cuda:0')), ('.', tensor(0.0511, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1123, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0605, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0791, device='cuda:0')), ('eur', tensor(0., device='cuda:0'))],  word_scores_max: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.0849, device='cuda:0')), ('nov', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), (',', tensor(0.1406, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('-', tensor(0.0849, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('electronic', tensor(0., device='cuda:0')), ('measurement', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('vaisala', tensor(0.0419, device='cuda:0')), ('oyj', tensor(0.0323, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('vaias', tensor(0.0419, device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('that', tensor(0.0266, device='cuda:0')), ('its', tensor(0.0303, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rose', tensor(0., device='cuda:0')), ('to', tensor(0.0508, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('million', tensor(0.1060, device='cuda:0')), ('usd', tensor(0., device='cuda:0')), ('23', tensor(0.0567, device='cuda:0')), ('.', tensor(0.0511, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1123, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.0605, device='cuda:0')), ('2008', tensor(0., device='cuda:0')), ('from', tensor(0.0791, device='cuda:0')), ('eur', tensor(0., device='cuda:0'))]
idx: 920, example: The broker highlights Cargotec as its preferred stock in the sector , as it is a pure play on global cargo and container handling , and it expects it to play an active role in further consolidating the industry , prediction: 2, correct_label: 1, class_scores: [0.2868149  0.28363004 0.42955506], word_scores: ['the:6.3806996877247e-06', 'broker:0.0', 'highlights:0.0', 'cargo:0.0', '##tec:0.0', 'as:0.0', 'its:1.7191393908433383e-06', 'preferred:0.0', 'stock:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'sector:0.0', ',:7.986737728060689e-06', 'as:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'a:8.62785782373976e-06', 'pure:0.0', 'play:0.0', 'on:0.0', 'global:0.0', 'cargo:0.0', 'and:0.0', 'container:0.0', 'handling:8.843817340675741e-06', ',:7.986737728060689e-06', 'and:0.0', 'it:3.3415778943890473e-06', 'expects:0.0', 'it:3.3415778943890473e-06', 'to:2.886244146793615e-06', 'play:0.0', 'an:0.0', 'active:0.0', 'role:0.0', 'in:3.0217122457543155e-06', 'further:0.0', 'con:0.0', '##sol:0.0', '##ida:0.0', '##ting:0.0', 'the:6.3806996877247e-06', 'industry:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0871, device='cuda:0')), ('broker', tensor(0., device='cuda:0')), ('highlights', tensor(0., device='cuda:0')), ('cargotec', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('its', tensor(0.0235, device='cuda:0')), ('preferred', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('in', tensor(0.0412, device='cuda:0')), ('the', tensor(0.0871, device='cuda:0')), ('sector', tensor(0., device='cuda:0')), (',', tensor(0.1090, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('it', tensor(0.0456, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.1178, device='cuda:0')), ('pure', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('cargo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('container', tensor(0., device='cuda:0')), ('handling', tensor(0.1207, device='cuda:0')), (',', tensor(0.1090, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0456, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('it', tensor(0.0456, device='cuda:0')), ('to', tensor(0.0394, device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('active', tensor(0., device='cuda:0')), ('role', tensor(0., device='cuda:0')), ('in', tensor(0.0412, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('consolidating', tensor(0., device='cuda:0')), ('the', tensor(0.0871, device='cuda:0')), ('industry', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0871, device='cuda:0')), ('broker', tensor(0., device='cuda:0')), ('highlights', tensor(0., device='cuda:0')), ('cargotec', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('its', tensor(0.0235, device='cuda:0')), ('preferred', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('in', tensor(0.0412, device='cuda:0')), ('the', tensor(0.0871, device='cuda:0')), ('sector', tensor(0., device='cuda:0')), (',', tensor(0.1090, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('it', tensor(0.0456, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.1178, device='cuda:0')), ('pure', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('cargo', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('container', tensor(0., device='cuda:0')), ('handling', tensor(0.1207, device='cuda:0')), (',', tensor(0.1090, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0456, device='cuda:0')), ('expects', tensor(0., device='cuda:0')), ('it', tensor(0.0456, device='cuda:0')), ('to', tensor(0.0394, device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('active', tensor(0., device='cuda:0')), ('role', tensor(0., device='cuda:0')), ('in', tensor(0.0412, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('consolidating', tensor(0., device='cuda:0')), ('the', tensor(0.0871, device='cuda:0')), ('industry', tensor(0., device='cuda:0'))]
idx: 921, example: Juhani J+�rvi , Corporate Executive Vice President of Kesko , says the Russian food retail sector is fragmented , prediction: 2, correct_label: 2, class_scores: [0.32815    0.28514707 0.3867029 ], word_scores: ['ju:0.0', '##hani:0.0', 'j:0.0', '+:0.0', 'rv:0.0', '##i:0.0', ',:7.986737728060689e-06', 'corporate:0.0', 'executive:0.0', 'vice:0.0', 'president:0.0', 'of:3.4365734791208524e-06', 'ke:0.0', '##sko:0.0', ',:7.986737728060689e-06', 'says:0.0', 'the:6.3806996877247e-06', 'russian:0.0', 'food:0.0', 'retail:0.0', 'sector:0.0', 'is:0.0', 'fragmented:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('juhani', tensor(0., device='cuda:0')), ('j', tensor(0., device='cuda:0')), ('rvi', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('corporate', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('vice', tensor(0., device='cuda:0')), ('president', tensor(0., device='cuda:0')), ('of', tensor(0.1332, device='cuda:0')), ('kesko', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.2474, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('fragmented', tensor(0., device='cuda:0'))],  word_scores_max: [('juhani', tensor(0., device='cuda:0')), ('j', tensor(0., device='cuda:0')), ('rvi', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('corporate', tensor(0., device='cuda:0')), ('executive', tensor(0., device='cuda:0')), ('vice', tensor(0., device='cuda:0')), ('president', tensor(0., device='cuda:0')), ('of', tensor(0.1332, device='cuda:0')), ('kesko', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('the', tensor(0.2474, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('fragmented', tensor(0., device='cuda:0'))]
idx: 922, example: Svyturys-Utenos Alus , which is controlled by the Nordic group Baltic Beverages Holding ( BBH ) , posted a 6.1 percent growth in beer sales for January-September to 101.99 million liters , prediction: 2, correct_label: 1, class_scores: [0.1942784  0.3884557  0.41726592], word_scores: ['sv:0.0', '##yt:0.0', '##ury:0.0', '##s:4.601175078278175e-06', '-:4.821180027647642e-06', 'ut:0.0', '##eno:0.0', '##s:4.601175078278175e-06', 'al:0.0', '##us:0.0', ',:7.986737728060689e-06', 'which:0.0', 'is:0.0', 'controlled:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'nordic:0.0', 'group:0.0', 'baltic:0.0', 'beverages:0.0', 'holding:0.0', '(:0.0', 'bb:0.0', '##h:0.0', '):0.0', ',:7.986737728060689e-06', 'posted:0.0', 'a:8.62785782373976e-06', '6:0.0', '.:2.903296945078182e-06', '1:0.0', 'percent:0.0', 'growth:0.0', 'in:3.0217122457543155e-06', 'beer:0.0', 'sales:0.0', 'for:0.0', 'january:0.0', '-:4.821180027647642e-06', 'september:0.0', 'to:2.886244146793615e-06', '101:0.0', '.:2.903296945078182e-06', '99:0.0', 'million:6.018835847498849e-06', 'liter:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('svyturys', tensor(0., device='cuda:0')), ('-', tensor(0.0826, device='cuda:0')), ('utenos', tensor(0., device='cuda:0')), ('alus', tensor(0., device='cuda:0')), (',', tensor(0.1369, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('controlled', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1093, device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('beverages', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('bbh', tensor(0., device='cuda:0')), (',', tensor(0.1369, device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1478, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0497, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0518, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.0826, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('to', tensor(0.0495, device='cuda:0')), ('101', tensor(0., device='cuda:0')), ('.', tensor(0.0497, device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('million', tensor(0.1031, device='cuda:0')), ('liters', tensor(0., device='cuda:0'))],  word_scores_max: [('svyturys', tensor(0., device='cuda:0')), ('-', tensor(0.0826, device='cuda:0')), ('utenos', tensor(0., device='cuda:0')), ('alus', tensor(0., device='cuda:0')), (',', tensor(0.1369, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('controlled', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.1093, device='cuda:0')), ('nordic', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('baltic', tensor(0., device='cuda:0')), ('beverages', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('bbh', tensor(0., device='cuda:0')), (',', tensor(0.1369, device='cuda:0')), ('posted', tensor(0., device='cuda:0')), ('a', tensor(0.1478, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.0497, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('in', tensor(0.0518, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.0826, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('to', tensor(0.0495, device='cuda:0')), ('101', tensor(0., device='cuda:0')), ('.', tensor(0.0497, device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('million', tensor(0.1031, device='cuda:0')), ('liters', tensor(0., device='cuda:0'))]
idx: 923, example: Almost two thirds of Olvi 's net sales come from outside Finland , prediction: 2, correct_label: 2, class_scores: [0.20155953 0.28524023 0.51320016], word_scores: ['almost:0.0', 'two:0.0', 'thirds:0.0', 'of:3.4365734791208524e-06', 'ol:0.0', '##vi:0.0', "':0.0", 's:0.0', 'net:0.0', 'sales:0.0', 'come:0.0', 'from:4.495178018260049e-06', 'outside:0.0', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('almost', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('thirds', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))],  word_scores_max: [('almost', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('thirds', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))]
idx: 924, example: A huge issue for us is the button placement , prediction: 2, correct_label: 2, class_scores: [0.17546032 0.39944547 0.4250942 ], word_scores: ['a:8.62785782373976e-06', 'huge:0.0', 'issue:0.0', 'for:0.0', 'us:0.0', 'is:0.0', 'the:6.3806996877247e-06', 'button:0.0', 'placement:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('a', tensor(0.5749, device='cuda:0')), ('huge', tensor(0., device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.4251, device='cuda:0')), ('button', tensor(0., device='cuda:0')), ('placement', tensor(0., device='cuda:0'))],  word_scores_max: [('a', tensor(0.5749, device='cuda:0')), ('huge', tensor(0., device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('the', tensor(0.4251, device='cuda:0')), ('button', tensor(0., device='cuda:0')), ('placement', tensor(0., device='cuda:0'))]
idx: 925, example: The agreement will provide The Switch with double the converter capacity , whilst opening up further manufacturing locations in China , prediction: 2, correct_label: 1, class_scores: [0.18873864 0.32323694 0.48802447], word_scores: ['the:6.3806996877247e-06', 'agreement:0.0', 'will:4.073096533829812e-06', 'provide:0.0', 'the:6.3806996877247e-06', 'switch:0.0', 'with:4.733654350275174e-06', 'double:0.0', 'the:6.3806996877247e-06', 'convert:0.0', '##er:0.0', 'capacity:0.0', ',:7.986737728060689e-06', 'whilst:0.0', 'opening:0.0', 'up:1.4959460941099678e-06', 'further:0.0', 'manufacturing:0.0', 'locations:0.0', 'in:3.0217122457543155e-06', 'china:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1577, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('will', tensor(0.1007, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('the', tensor(0.1577, device='cuda:0')), ('switch', tensor(0., device='cuda:0')), ('with', tensor(0.1170, device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('the', tensor(0.1577, device='cuda:0')), ('converter', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), (',', tensor(0.1974, device='cuda:0')), ('whilst', tensor(0., device='cuda:0')), ('opening', tensor(0., device='cuda:0')), ('up', tensor(0.0370, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('locations', tensor(0., device='cuda:0')), ('in', tensor(0.0747, device='cuda:0')), ('china', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1577, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('will', tensor(0.1007, device='cuda:0')), ('provide', tensor(0., device='cuda:0')), ('the', tensor(0.1577, device='cuda:0')), ('switch', tensor(0., device='cuda:0')), ('with', tensor(0.1170, device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('the', tensor(0.1577, device='cuda:0')), ('converter', tensor(0., device='cuda:0')), ('capacity', tensor(0., device='cuda:0')), (',', tensor(0.1974, device='cuda:0')), ('whilst', tensor(0., device='cuda:0')), ('opening', tensor(0., device='cuda:0')), ('up', tensor(0.0370, device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('manufacturing', tensor(0., device='cuda:0')), ('locations', tensor(0., device='cuda:0')), ('in', tensor(0.0747, device='cuda:0')), ('china', tensor(0., device='cuda:0'))]
idx: 926, example: Talvivaara Mining Company PLC ( Talvivaara Mining ) ( LSE : TALV ) , a Finland-based nickel mining business , has installed its second production line at its metals recovery plant on June 9 , 2010 , prediction: 2, correct_label: 2, class_scores: [0.21934623 0.3334291  0.44722465], word_scores: ['tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', 'mining:0.0', 'company:6.695386673527537e-06', 'plc:0.0', '(:0.0', 'tal:0.0', '##vi:0.0', '##va:0.0', '##ara:0.0', 'mining:0.0', '):0.0', '(:0.0', 'l:0.0', '##se:0.0', '::0.0', 'tal:0.0', '##v:0.0', '):0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'finland:4.096111752005527e-06', '-:4.821180027647642e-06', 'based:0.0', 'nickel:0.0', 'mining:0.0', 'business:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'installed:0.0', 'its:1.7191393908433383e-06', 'second:0.0', 'production:0.0', 'line:0.0', 'at:0.0', 'its:1.7191393908433383e-06', 'metals:0.0', 'recovery:0.0', 'plant:0.0', 'on:0.0', 'june:0.0', '9:0.0', ',:7.986737728060689e-06', '2010:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('company', tensor(0.1163, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('talv', tensor(0., device='cuda:0')), (',', tensor(0.1388, device='cuda:0')), ('a', tensor(0.1499, device='cuda:0')), ('finland', tensor(0.0712, device='cuda:0')), ('-', tensor(0.0838, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), (',', tensor(0.1388, device='cuda:0')), ('has', tensor(0.1029, device='cuda:0')), ('installed', tensor(0., device='cuda:0')), ('its', tensor(0.0299, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0299, device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('recovery', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), (',', tensor(0.1388, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))],  word_scores_max: [('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('company', tensor(0.1163, device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('talvivaara', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('talv', tensor(0., device='cuda:0')), (',', tensor(0.1388, device='cuda:0')), ('a', tensor(0.1499, device='cuda:0')), ('finland', tensor(0.0712, device='cuda:0')), ('-', tensor(0.0838, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('mining', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), (',', tensor(0.1388, device='cuda:0')), ('has', tensor(0.1029, device='cuda:0')), ('installed', tensor(0., device='cuda:0')), ('its', tensor(0.0299, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.0299, device='cuda:0')), ('metals', tensor(0., device='cuda:0')), ('recovery', tensor(0., device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('june', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), (',', tensor(0.1388, device='cuda:0')), ('2010', tensor(0., device='cuda:0'))]
idx: 927, example: The measures taken will cause one-time costs during the final part of 2006 , prediction: 2, correct_label: 2, class_scores: [0.22116505 0.36208907 0.4167459 ], word_scores: ['the:6.3806996877247e-06', 'measures:0.0', 'taken:0.0', 'will:4.073096533829812e-06', 'cause:0.0', 'one:4.584404450724833e-06', '-:4.821180027647642e-06', 'time:0.0', 'costs:0.0', 'during:0.0', 'the:6.3806996877247e-06', 'final:0.0', 'part:0.0', 'of:3.4365734791208524e-06', '2006:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2150, device='cuda:0')), ('measures', tensor(0., device='cuda:0')), ('taken', tensor(0., device='cuda:0')), ('will', tensor(0.1372, device='cuda:0')), ('cause', tensor(0., device='cuda:0')), ('one', tensor(0.1545, device='cuda:0')), ('-', tensor(0.1625, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.2150, device='cuda:0')), ('final', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1158, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2150, device='cuda:0')), ('measures', tensor(0., device='cuda:0')), ('taken', tensor(0., device='cuda:0')), ('will', tensor(0.1372, device='cuda:0')), ('cause', tensor(0., device='cuda:0')), ('one', tensor(0.1545, device='cuda:0')), ('-', tensor(0.1625, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('the', tensor(0.2150, device='cuda:0')), ('final', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.1158, device='cuda:0')), ('2006', tensor(0., device='cuda:0'))]
idx: 928, example: You need to be ready when the window opens up , Rosberg said , prediction: 2, correct_label: 2, class_scores: [0.26163945 0.34810448 0.39025602], word_scores: ['you:0.0', 'need:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'ready:0.0', 'when:0.0', 'the:6.3806996877247e-06', 'window:0.0', 'opens:0.0', 'up:1.4959460941099678e-06', ',:7.986737728060689e-06', 'ro:0.0', '##sberg:0.0', 'said:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('you', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('to', tensor(0.1539, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('the', tensor(0.3403, device='cuda:0')), ('window', tensor(0., device='cuda:0')), ('opens', tensor(0., device='cuda:0')), ('up', tensor(0.0798, device='cuda:0')), (',', tensor(0.4260, device='cuda:0')), ('rosberg', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))],  word_scores_max: [('you', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('to', tensor(0.1539, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('the', tensor(0.3403, device='cuda:0')), ('window', tensor(0., device='cuda:0')), ('opens', tensor(0., device='cuda:0')), ('up', tensor(0.0798, device='cuda:0')), (',', tensor(0.4260, device='cuda:0')), ('rosberg', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0'))]
idx: 929, example: 26 January 2011 - Finnish metal products company Componenta Oyj ( HEL : CTH1V ) said yesterday its net loss narrowed to EUR500 ,000 in the last quarter of 2010 from EUR5 .3 m for the same period a year earlier , prediction: 2, correct_label: 1, class_scores: [0.20453826 0.3537149  0.44174677], word_scores: ['26:0.0', 'january:0.0', '2011:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'metal:0.0', 'products:0.0', 'company:6.695386673527537e-06', 'component:0.0', '##a:3.804580501309829e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ct:0.0', '##h:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'yesterday:0.0', 'its:1.7191393908433383e-06', 'net:0.0', 'loss:0.0', 'narrowed:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '##500:0.0', ',:7.986737728060689e-06', '000:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'last:0.0', 'quarter:0.0', 'of:3.4365734791208524e-06', '2010:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##5:0.0', '.:2.903296945078182e-06', '3:0.0', 'm:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'same:0.0', 'period:0.0', 'a:8.62785782373976e-06', 'year:0.0', 'earlier:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('26', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('-', tensor(0.0788, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('company', tensor(0.1094, device='cuda:0')), ('componenta', tensor(0., device='cuda:0')), ('oyj', tensor(0.0300, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('cth1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('its', tensor(0.0281, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('narrowed', tensor(0., device='cuda:0')), ('to', tensor(0.0472, device='cuda:0')), ('eur500', tensor(0., device='cuda:0')), (',', tensor(0.1305, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0494, device='cuda:0')), ('the', tensor(0.1043, device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0562, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0735, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.0474, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1043, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1410, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))],  word_scores_max: [('26', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('-', tensor(0.0788, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('company', tensor(0.1094, device='cuda:0')), ('componenta', tensor(0., device='cuda:0')), ('oyj', tensor(0.0300, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('cth1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('its', tensor(0.0281, device='cuda:0')), ('net', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('narrowed', tensor(0., device='cuda:0')), ('to', tensor(0.0472, device='cuda:0')), ('eur500', tensor(0., device='cuda:0')), (',', tensor(0.1305, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('in', tensor(0.0494, device='cuda:0')), ('the', tensor(0.1043, device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('of', tensor(0.0562, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('from', tensor(0.0735, device='cuda:0')), ('eur5', tensor(0., device='cuda:0')), ('.', tensor(0.0474, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1043, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('a', tensor(0.1410, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('earlier', tensor(0., device='cuda:0'))]
idx: 930, example: Finnish silicon wafer technology company Okmetic Oyj OMX Helsinki : OKM1V reported on Thursday 30 October an operating profit of EUR7 .4 m for January-September 2008 , up from EUR6 .1 m in the corresponding period in 2007 , prediction: 2, correct_label: 1, class_scores: [0.21755527 0.35435632 0.42808846], word_scores: ['finnish:0.0', 'silicon:0.0', 'wa:0.0', '##fer:0.0', 'technology:0.0', 'company:6.695386673527537e-06', 'ok:0.0', '##met:0.0', '##ic:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '::0.0', 'ok:0.0', '##m:0.0', '##1:0.0', '##v:0.0', 'reported:0.0', 'on:0.0', 'thursday:0.0', '30:0.0', 'october:0.0', 'an:0.0', 'operating:0.0', 'profit:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##7:0.0', '.:2.903296945078182e-06', '4:0.0', 'm:0.0', 'for:0.0', 'january:0.0', '-:4.821180027647642e-06', 'september:0.0', '2008:0.0', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '##6:0.0', '.:2.903296945078182e-06', '1:0.0', 'm:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2007:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('finnish', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('wafer', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1367, device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('oyj', tensor(0.0374, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('okm1v', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursday', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0701, device='cuda:0')), ('eur7', tensor(0., device='cuda:0')), ('.', tensor(0.0593, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.0984, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), (',', tensor(0.1630, device='cuda:0')), ('up', tensor(0.0305, device='cuda:0')), ('from', tensor(0.0917, device='cuda:0')), ('eur6', tensor(0., device='cuda:0')), ('.', tensor(0.0593, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1302, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0617, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))],  word_scores_max: [('finnish', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('wafer', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1367, device='cuda:0')), ('okmetic', tensor(0., device='cuda:0')), ('oyj', tensor(0.0374, device='cuda:0')), ('omx', tensor(0., device='cuda:0')), ('helsinki', tensor(0., device='cuda:0')), ('okm1v', tensor(0., device='cuda:0')), ('reported', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('thursday', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('october', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('operating', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('of', tensor(0.0701, device='cuda:0')), ('eur7', tensor(0., device='cuda:0')), ('.', tensor(0.0593, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.0984, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2008', tensor(0., device='cuda:0')), (',', tensor(0.1630, device='cuda:0')), ('up', tensor(0.0305, device='cuda:0')), ('from', tensor(0.0917, device='cuda:0')), ('eur6', tensor(0., device='cuda:0')), ('.', tensor(0.0593, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('in', tensor(0.0617, device='cuda:0')), ('the', tensor(0.1302, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.0617, device='cuda:0')), ('2007', tensor(0., device='cuda:0'))]
idx: 931, example: Viking Line 's cargo revenue increased by 5.4 % to EUR 21.46 mn , and cargo volume increased by 2.4 % to 70,116 cargo units , prediction: 2, correct_label: 1, class_scores: [0.17307274 0.30218565 0.5247416 ], word_scores: ['viking:0.0', 'line:0.0', "':0.0", 's:0.0', 'cargo:0.0', 'revenue:0.0', 'increased:0.0', 'by:0.0', '5:0.0', '.:2.903296945078182e-06', '4:0.0', '%:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '21:0.0', '.:2.903296945078182e-06', '46:0.0', 'mn:0.0', ',:7.986737728060689e-06', 'and:0.0', 'cargo:0.0', 'volume:0.0', 'increased:0.0', 'by:0.0', '2:0.0', '.:2.903296945078182e-06', '4:0.0', '%:0.0', 'to:2.886244146793615e-06', '70:0.0', ',:7.986737728060689e-06', '116:0.0', 'cargo:0.0', 'units:2.8638919502554927e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('viking', tensor(nan, device='cuda:0'))],  word_scores_max: [('viking', tensor(nan, device='cuda:0'))]
idx: 932, example: The facility will have a lettable area of some 19,000 sq m. The plot for the plant , located in the Ratasmaki business park , will be purchased from the City of Forssa , prediction: 2, correct_label: 2, class_scores: [0.14651689 0.3598562  0.49362698], word_scores: ['the:6.3806996877247e-06', 'facility:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'let:0.0', '##table:0.0', 'area:0.0', 'of:3.4365734791208524e-06', 'some:0.0', '19:0.0', ',:7.986737728060689e-06', '000:0.0', 'sq:0.0', 'm:0.0', '.:2.903296945078182e-06', 'the:6.3806996877247e-06', 'plot:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'plant:0.0', ',:7.986737728060689e-06', 'located:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'rat:0.0', '##as:0.0', '##ma:0.0', '##ki:0.0', 'business:0.0', 'park:0.0', ',:7.986737728060689e-06', 'will:4.073096533829812e-06', 'be:0.0', 'purchased:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'city:0.0', 'of:3.4365734791208524e-06', 'for:0.0', '##ssa:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0687, device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('will', tensor(0.0439, device='cuda:0')), ('have', tensor(0.0313, device='cuda:0')), ('a', tensor(0.0929, device='cuda:0')), ('lettable', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0370, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), (',', tensor(0.0860, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0313, device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('plot', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.0860, device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('in', tensor(0.0325, device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('ratasmaki', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('park', tensor(0., device='cuda:0')), (',', tensor(0.0860, device='cuda:0')), ('will', tensor(0.0439, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('purchased', tensor(0., device='cuda:0')), ('from', tensor(0.0484, device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0370, device='cuda:0')), ('forssa', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0687, device='cuda:0')), ('facility', tensor(0., device='cuda:0')), ('will', tensor(0.0439, device='cuda:0')), ('have', tensor(0.0313, device='cuda:0')), ('a', tensor(0.0929, device='cuda:0')), ('lettable', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('of', tensor(0.0370, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('19', tensor(0., device='cuda:0')), (',', tensor(0.0860, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('sq', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0313, device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('plot', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), (',', tensor(0.0860, device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('in', tensor(0.0325, device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('ratasmaki', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('park', tensor(0., device='cuda:0')), (',', tensor(0.0860, device='cuda:0')), ('will', tensor(0.0439, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('purchased', tensor(0., device='cuda:0')), ('from', tensor(0.0484, device='cuda:0')), ('the', tensor(0.0687, device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('of', tensor(0.0370, device='cuda:0')), ('forssa', tensor(0., device='cuda:0'))]
idx: 933, example: According to L+�nnen Tehtaat 's CEO Matti Karppinen , the company aims to deliver fish products to its customers a day earlier than it currently does , prediction: 1, correct_label: 2, class_scores: [0.17390864 0.4263991  0.3996923 ], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'l:0.0', '+:0.0', 'n:0.0', '##nen:0.0', 'te:0.0', '##hta:0.0', '##at:0.0', "':0.0", 's:0.0', 'ceo:0.0', 'matt:0.0', '##i:0.0', 'ka:0.0', '##rp:0.0', '##pine:0.0', '##n:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'aims:0.0', 'to:2.886244146793615e-06', 'deliver:0.0', 'fish:0.0', 'products:0.0', 'to:2.886244146793615e-06', 'its:1.7191393908433383e-06', 'customers:0.0', 'a:8.62785782373976e-06', 'day:0.0', 'earlier:0.0', 'than:0.0', 'it:3.3415778943890473e-06', 'currently:0.0', 'does:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nnen', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('l', tensor(0., device='cuda:0')), ('nnen', tensor(0., device='cuda:0'))]
idx: 934, example: Tikkurila , a division of Kemira group , controls about 23 % of the Russian market in its field and owns St. Petersburg paint producer TEX. , prediction: 1, correct_label: 2, class_scores: [0.21523944 0.46288124 0.32187933], word_scores: ['ti:0.0', '##kk:0.0', '##uri:0.0', '##la:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'division:0.0', 'of:3.4365734791208524e-06', 'ke:0.0', '##mir:0.0', '##a:3.804580501309829e-06', 'group:0.0', ',:7.986737728060689e-06', 'controls:0.0', 'about:0.0', '23:3.2229838780040154e-06', '%:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'russian:0.0', 'market:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'field:0.0', 'and:0.0', 'owns:0.0', 'st:0.0', '.:2.903296945078182e-06', 'petersburg:0.0', 'paint:0.0', 'producer:0.0', 'tex:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tikkurila', tensor(0., device='cuda:0')), (',', tensor(0.1547, device='cuda:0')), ('a', tensor(0.1671, device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('of', tensor(0.0666, device='cuda:0')), ('kemira', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1547, device='cuda:0')), ('controls', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('23', tensor(0.0624, device='cuda:0')), ('of', tensor(0.0666, device='cuda:0')), ('the', tensor(0.1236, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0585, device='cuda:0')), ('its', tensor(0.0333, device='cuda:0')), ('field', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0562, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), ('paint', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), ('tex', tensor(0., device='cuda:0')), ('.', tensor(0.0562, device='cuda:0'))],  word_scores_max: [('tikkurila', tensor(0., device='cuda:0')), (',', tensor(0.1547, device='cuda:0')), ('a', tensor(0.1671, device='cuda:0')), ('division', tensor(0., device='cuda:0')), ('of', tensor(0.0666, device='cuda:0')), ('kemira', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), (',', tensor(0.1547, device='cuda:0')), ('controls', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('23', tensor(0.0624, device='cuda:0')), ('of', tensor(0.0666, device='cuda:0')), ('the', tensor(0.1236, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0585, device='cuda:0')), ('its', tensor(0.0333, device='cuda:0')), ('field', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('owns', tensor(0., device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0562, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), ('paint', tensor(0., device='cuda:0')), ('producer', tensor(0., device='cuda:0')), ('tex', tensor(0., device='cuda:0')), ('.', tensor(0.0562, device='cuda:0'))]
idx: 935, example: The shopping center to be opened in St. Petersburg , Russia in November 2010 will turn the cash flow of Finnish department store chain Stockmann 's Russian operations positive for the first time in 2011 , prediction: 2, correct_label: 1, class_scores: [0.2747948  0.35541877 0.36978647], word_scores: ['the:6.3806996877247e-06', 'shopping:0.0', 'center:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'opened:0.0', 'in:3.0217122457543155e-06', 'st:0.0', '.:2.903296945078182e-06', 'petersburg:0.0', ',:7.986737728060689e-06', 'russia:0.0', 'in:3.0217122457543155e-06', 'november:0.0', '2010:0.0', 'will:4.073096533829812e-06', 'turn:0.0', 'the:6.3806996877247e-06', 'cash:0.0', 'flow:0.0', 'of:3.4365734791208524e-06', 'finnish:0.0', 'department:0.0', 'store:0.0', 'chain:0.0', 'stock:0.0', '##mann:0.0', "':0.0", 's:0.0', 'russian:0.0', 'operations:0.0', 'positive:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'first:0.0', 'time:0.0', 'in:3.0217122457543155e-06', '2011:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1592, device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('to', tensor(0.0720, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('opened', tensor(0., device='cuda:0')), ('in', tensor(0.0754, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0724, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), (',', tensor(0.1992, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('in', tensor(0.0754, device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('will', tensor(0.1016, device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('the', tensor(0.1592, device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('of', tensor(0.0857, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('department', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1592, device='cuda:0')), ('shopping', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('to', tensor(0.0720, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('opened', tensor(0., device='cuda:0')), ('in', tensor(0.0754, device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.0724, device='cuda:0')), ('petersburg', tensor(0., device='cuda:0')), (',', tensor(0.1992, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('in', tensor(0.0754, device='cuda:0')), ('november', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('will', tensor(0.1016, device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('the', tensor(0.1592, device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('of', tensor(0.0857, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('department', tensor(0., device='cuda:0')), ('store', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0'))]
idx: 936, example: `` Indo-Russia trade can cross the targeted 10 billion dollars by 2010 and double to 20 billion dollars by 2015 , if trade irritants and procedural hassles are resolved , '' the chamber said in its survey on obstacles to trade with Russia , prediction: 2, correct_label: 1, class_scores: [0.22977088 0.2923478  0.47788137], word_scores: ['`:0.0', '`:0.0', 'indo:0.0', '-:4.821180027647642e-06', 'russia:0.0', 'trade:0.0', 'can:0.0', 'cross:0.0', 'the:6.3806996877247e-06', 'targeted:0.0', '10:0.0', 'billion:0.0', 'dollars:0.0', 'by:0.0', '2010:0.0', 'and:0.0', 'double:0.0', 'to:2.886244146793615e-06', '20:0.0', 'billion:0.0', 'dollars:0.0', 'by:0.0', '2015:0.0', ',:7.986737728060689e-06', 'if:0.0', 'trade:0.0', 'ir:0.0', '##ritan:0.0', '##ts:0.0', 'and:0.0', 'procedural:0.0', 'has:5.9214244174654596e-06', '##sle:0.0', '##s:4.601175078278175e-06', 'are:0.0', 'resolved:0.0', ',:7.986737728060689e-06', "':0.0", "':0.0", 'the:6.3806996877247e-06', 'chamber:0.0', 'said:0.0', 'in:3.0217122457543155e-06', 'its:1.7191393908433383e-06', 'survey:0.0', 'on:0.0', 'obstacles:0.0', 'to:2.886244146793615e-06', 'trade:0.0', 'with:4.733654350275174e-06', 'russia:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('indo', tensor(0., device='cuda:0')), ('-', tensor(0.1340, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('the', tensor(0.1773, device='cuda:0')), ('targeted', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('to', tensor(0.0802, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2015', tensor(0., device='cuda:0')), (',', tensor(0.2220, device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('irritants', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('procedural', tensor(0., device='cuda:0')), ('hassles', tensor(0.1646, device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('resolved', tensor(0., device='cuda:0')), (',', tensor(0.2220, device='cuda:0'))],  word_scores_max: [('indo', tensor(0., device='cuda:0')), ('-', tensor(0.1340, device='cuda:0')), ('russia', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('the', tensor(0.1773, device='cuda:0')), ('targeted', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2010', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('to', tensor(0.0802, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('2015', tensor(0., device='cuda:0')), (',', tensor(0.2220, device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('irritants', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('procedural', tensor(0., device='cuda:0')), ('hassles', tensor(0.1646, device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('resolved', tensor(0., device='cuda:0')), (',', tensor(0.2220, device='cuda:0'))]
idx: 937, example: In Europe , the paper industry 's situation is paradoxical , prediction: 1, correct_label: 2, class_scores: [0.26159132 0.37440425 0.3640044 ], word_scores: ['in:3.0217122457543155e-06', 'europe:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'paper:2.697490344871767e-06', 'industry:0.0', "':0.0", 's:0.0', 'situation:0.0', 'is:0.0', 'paradox:0.0', '##ical:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.1504, device='cuda:0')), ('europe', tensor(0., device='cuda:0')), (',', tensor(0.3976, device='cuda:0')), ('the', tensor(0.3177, device='cuda:0')), ('paper', tensor(0.1343, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1504, device='cuda:0')), ('europe', tensor(0., device='cuda:0')), (',', tensor(0.3976, device='cuda:0')), ('the', tensor(0.3177, device='cuda:0')), ('paper', tensor(0.1343, device='cuda:0'))]
idx: 938, example: The business development initiatives in North America are headed by Lynn Shanahan , prediction: 2, correct_label: 2, class_scores: [0.18168058 0.3975155  0.4208039 ], word_scores: ['the:6.3806996877247e-06', 'business:0.0', 'development:0.0', 'initiatives:0.0', 'in:3.0217122457543155e-06', 'north:0.0', 'america:0.0', 'are:0.0', 'headed:0.0', 'by:0.0', 'lynn:0.0', 'shan:0.0', '##aha:0.0', '##n:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.6786, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('initiatives', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('headed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lynn', tensor(0., device='cuda:0')), ('shanahan', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.6786, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('initiatives', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('headed', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lynn', tensor(0., device='cuda:0')), ('shanahan', tensor(0., device='cuda:0'))]
idx: 939, example: The terms and conditions of Stock Option Scheme 2004 are available on the Group 's website , prediction: 2, correct_label: 2, class_scores: [0.23330365 0.23622508 0.5304713 ], word_scores: ['the:6.3806996877247e-06', 'terms:0.0', 'and:0.0', 'conditions:0.0', 'of:3.4365734791208524e-06', 'stock:0.0', 'option:0.0', 'scheme:0.0', '2004:0.0', 'are:0.0', 'available:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'group:0.0', "':0.0", 's:0.0', 'website:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.3939, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('scheme', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3939, device='cuda:0')), ('terms', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('of', tensor(0.2122, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('scheme', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('available', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3939, device='cuda:0'))]
idx: 940, example: M-real Corporation Stock Exchange Announcement 29 September 2006 at 4.15 p.m. Kyro Corporation and M-real Corporation , a Metsaliitto Group subsidiary , have agreed on an arrangement which gives M-real option to purchase the Kyroskoski natural gas powerplant from Kyro , prediction: 2, correct_label: 2, class_scores: [0.25563568 0.36240092 0.38196334], word_scores: ['m:0.0', '-:4.821180027647642e-06', 'real:0.0', 'corporation:0.0', 'stock:0.0', 'exchange:0.0', 'announcement:0.0', '29:0.0', 'september:0.0', '2006:0.0', 'at:0.0', '4:0.0', '.:2.903296945078182e-06', '15:0.0', '.:2.903296945078182e-06', 'm:0.0', '.:2.903296945078182e-06', 'ky:0.0', '##ro:0.0', 'corporation:0.0', 'and:0.0', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', 'corporation:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'mets:0.0', '##ali:0.0', '##itt:0.0', '##o:0.0', 'group:0.0', 'subsidiary:0.0', ',:7.986737728060689e-06', 'have:2.910326429628185e-06', 'agreed:0.0', 'on:0.0', 'an:0.0', 'arrangement:0.0', 'which:0.0', 'gives:0.0', 'm:0.0', '-:4.821180027647642e-06', 'real:0.0', 'option:0.0', 'to:2.886244146793615e-06', 'purchase:0.0', 'the:6.3806996877247e-06', 'ky:0.0', '##ros:0.0', '##kos:0.0', '##ki:0.0', 'natural:0.0', 'gas:0.0', 'powerplant:0.0', 'from:4.495178018260049e-06', 'ky:0.0', '##ro:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('m', tensor(0., device='cuda:0')), ('-', tensor(0.0748, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0450, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0450, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0450, device='cuda:0')), ('kyro', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0748, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), (',', tensor(0.1239, device='cuda:0')), ('a', tensor(0.1339, device='cuda:0')), ('metsaliitto', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), (',', tensor(0.1239, device='cuda:0')), ('have', tensor(0.0452, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('arrangement', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0748, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('to', tensor(0.0448, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('the', tensor(0.0990, device='cuda:0')), ('kyroskoski', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('powerplant', tensor(0., device='cuda:0')), ('from', tensor(0.0697, device='cuda:0')), ('kyro', tensor(0., device='cuda:0'))],  word_scores_max: [('m', tensor(0., device='cuda:0')), ('-', tensor(0.0748, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('exchange', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2006', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.0450, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0450, device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0450, device='cuda:0')), ('kyro', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0748, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), (',', tensor(0.1239, device='cuda:0')), ('a', tensor(0.1339, device='cuda:0')), ('metsaliitto', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), (',', tensor(0.1239, device='cuda:0')), ('have', tensor(0.0452, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('arrangement', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('-', tensor(0.0748, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('to', tensor(0.0448, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('the', tensor(0.0990, device='cuda:0')), ('kyroskoski', tensor(0., device='cuda:0')), ('natural', tensor(0., device='cuda:0')), ('gas', tensor(0., device='cuda:0')), ('powerplant', tensor(0., device='cuda:0')), ('from', tensor(0.0697, device='cuda:0')), ('kyro', tensor(0., device='cuda:0'))]
idx: 941, example: BasWare Invoice Processing , BasWare Contract Matching , BasWare Order Matching and BasWare KPI Reporting Tool are part of the BasWare 's Enterprise Purchase to Pay product suite , prediction: 2, correct_label: 2, class_scores: [0.18549746 0.33968532 0.47481716], word_scores: ['bas:0.0', '##ware:0.0', 'in:3.0217122457543155e-06', '##vo:0.0', '##ice:0.0', 'processing:0.0', ',:7.986737728060689e-06', 'bas:0.0', '##ware:0.0', 'contract:7.1864019446366e-06', 'matching:0.0', ',:7.986737728060689e-06', 'bas:0.0', '##ware:0.0', 'order:0.0', 'matching:0.0', 'and:0.0', 'bas:0.0', '##ware:0.0', 'k:0.0', '##pi:0.0', 'reporting:0.0', 'tool:0.0', 'are:0.0', 'part:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'bas:0.0', '##ware:0.0', "':0.0", 's:0.0', 'enterprise:0.0', 'purchase:0.0', 'to:2.886244146793615e-06', 'pay:0.0', 'product:0.0', 'suite:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('basware', tensor(0., device='cuda:0')), ('invoice', tensor(0.0839, device='cuda:0')), ('processing', tensor(0., device='cuda:0')), (',', tensor(0.2219, device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('contract', tensor(0.1996, device='cuda:0')), ('matching', tensor(0., device='cuda:0')), (',', tensor(0.2219, device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('matching', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('kpi', tensor(0., device='cuda:0')), ('reporting', tensor(0., device='cuda:0')), ('tool', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0955, device='cuda:0')), ('the', tensor(0.1772, device='cuda:0'))],  word_scores_max: [('basware', tensor(0., device='cuda:0')), ('invoice', tensor(0.0839, device='cuda:0')), ('processing', tensor(0., device='cuda:0')), (',', tensor(0.2219, device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('contract', tensor(0.1996, device='cuda:0')), ('matching', tensor(0., device='cuda:0')), (',', tensor(0.2219, device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('order', tensor(0., device='cuda:0')), ('matching', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('kpi', tensor(0., device='cuda:0')), ('reporting', tensor(0., device='cuda:0')), ('tool', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.0955, device='cuda:0')), ('the', tensor(0.1772, device='cuda:0'))]
idx: 942, example: Ahlstrom 's share is quoted on the NASDAQ OMX Helsinki , prediction: 2, correct_label: 2, class_scores: [0.22011147 0.35269436 0.42719418], word_scores: ['ahl:0.0', '##strom:0.0', "':0.0", 's:0.0', 'share:0.0', 'is:0.0', 'quoted:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'nas:0.0', '##da:0.0', '##q:0.0', 'om:0.0', '##x:0.0', 'helsinki:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 943, example: In January-September 2007 , Finnlines ' net sales rose to EUR 505.4 mn from EUR 473.5 mn in the corresponding period in 2006 , prediction: 2, correct_label: 1, class_scores: [0.18526423 0.31087652 0.5038592 ], word_scores: ['in:3.0217122457543155e-06', 'january:0.0', '-:4.821180027647642e-06', 'september:0.0', '2007:0.0', ',:7.986737728060689e-06', 'finn:0.0', '##lines:0.0', "':0.0", 'net:0.0', 'sales:0.0', 'rose:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '505:0.0', '.:2.903296945078182e-06', '4:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '47:0.0', '##3:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2006:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1909, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.3046, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.5045, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1909, device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('-', tensor(0.3046, device='cuda:0')), ('september', tensor(0., device='cuda:0')), ('2007', tensor(0., device='cuda:0')), (',', tensor(0.5045, device='cuda:0'))]
idx: 944, example: In future , the plant will focus on the production of flange profiles for wind farm towers , prediction: 2, correct_label: 2, class_scores: [0.20307755 0.36799723 0.42892522], word_scores: ['in:3.0217122457543155e-06', 'future:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'plant:0.0', 'will:4.073096533829812e-06', 'focus:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'production:0.0', 'of:3.4365734791208524e-06', 'fl:0.0', '##ange:0.0', 'profiles:0.0', 'for:0.0', 'wind:0.0', 'farm:0.0', 'towers:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.0966, device='cuda:0')), ('future', tensor(0., device='cuda:0')), (',', tensor(0.2553, device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('will', tensor(0.1302, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('of', tensor(0.1099, device='cuda:0')), ('flange', tensor(0., device='cuda:0')), ('profiles', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('wind', tensor(0., device='cuda:0')), ('farm', tensor(0., device='cuda:0')), ('towers', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.0966, device='cuda:0')), ('future', tensor(0., device='cuda:0')), (',', tensor(0.2553, device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('will', tensor(0.1302, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2040, device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('of', tensor(0.1099, device='cuda:0')), ('flange', tensor(0., device='cuda:0')), ('profiles', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('wind', tensor(0., device='cuda:0')), ('farm', tensor(0., device='cuda:0')), ('towers', tensor(0., device='cuda:0'))]
idx: 945, example: The Finnish investment company Sponda is conducting negotiations to acquire the business center Dukat Palace-2 located in the center of Moscow , from London & Regional Properties , prediction: 1, correct_label: 2, class_scores: [0.2173753  0.42225564 0.36036912], word_scores: ['the:6.3806996877247e-06', 'finnish:0.0', 'investment:0.0', 'company:6.695386673527537e-06', 'sp:0.0', '##onda:0.0', 'is:0.0', 'conducting:0.0', 'negotiations:0.0', 'to:2.886244146793615e-06', 'acquire:0.0', 'the:6.3806996877247e-06', 'business:0.0', 'center:0.0', 'du:0.0', '##kat:0.0', 'palace:0.0', '-:4.821180027647642e-06', '2:0.0', 'located:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'center:0.0', 'of:3.4365734791208524e-06', 'moscow:0.0', ',:7.986737728060689e-06', 'from:4.495178018260049e-06', 'london:0.0', '&:0.0', 'regional:0.0', 'properties:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1216, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.1276, device='cuda:0')), ('sponda', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('conducting', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('to', tensor(0.0550, device='cuda:0')), ('acquire', tensor(0., device='cuda:0')), ('the', tensor(0.1216, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('dukat', tensor(0., device='cuda:0')), ('palace', tensor(0., device='cuda:0')), ('-', tensor(0.0919, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('in', tensor(0.0576, device='cuda:0')), ('the', tensor(0.1216, device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('of', tensor(0.0655, device='cuda:0')), ('moscow', tensor(0., device='cuda:0')), (',', tensor(0.1522, device='cuda:0')), ('from', tensor(0.0856, device='cuda:0')), ('london', tensor(0., device='cuda:0')), ('regional', tensor(0., device='cuda:0')), ('properties', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1216, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('company', tensor(0.1276, device='cuda:0')), ('sponda', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('conducting', tensor(0., device='cuda:0')), ('negotiations', tensor(0., device='cuda:0')), ('to', tensor(0.0550, device='cuda:0')), ('acquire', tensor(0., device='cuda:0')), ('the', tensor(0.1216, device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('dukat', tensor(0., device='cuda:0')), ('palace', tensor(0., device='cuda:0')), ('-', tensor(0.0919, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('located', tensor(0., device='cuda:0')), ('in', tensor(0.0576, device='cuda:0')), ('the', tensor(0.1216, device='cuda:0')), ('center', tensor(0., device='cuda:0')), ('of', tensor(0.0655, device='cuda:0')), ('moscow', tensor(0., device='cuda:0')), (',', tensor(0.1522, device='cuda:0')), ('from', tensor(0.0856, device='cuda:0')), ('london', tensor(0., device='cuda:0')), ('regional', tensor(0., device='cuda:0')), ('properties', tensor(0., device='cuda:0'))]
idx: 946, example: The cosmetics collection includes an eye shadow , face powder , lip gloss , mascara and accessories , prediction: 2, correct_label: 2, class_scores: [0.34854552 0.24131007 0.41014445], word_scores: ['the:6.3806996877247e-06', 'cosmetics:0.0', 'collection:0.0', 'includes:0.0', 'an:0.0', 'eye:0.0', 'shadow:0.0', ',:7.986737728060689e-06', 'face:0.0', 'powder:0.0', ',:7.986737728060689e-06', 'lip:0.0', 'gloss:0.0', ',:7.986737728060689e-06', 'mascara:0.0', 'and:0.0', 'accessories:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.2103, device='cuda:0')), ('cosmetics', tensor(0., device='cuda:0')), ('collection', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('eye', tensor(0., device='cuda:0')), ('shadow', tensor(0., device='cuda:0')), (',', tensor(0.2632, device='cuda:0')), ('face', tensor(0., device='cuda:0')), ('powder', tensor(0., device='cuda:0')), (',', tensor(0.2632, device='cuda:0')), ('lip', tensor(0., device='cuda:0')), ('gloss', tensor(0., device='cuda:0')), (',', tensor(0.2632, device='cuda:0')), ('mascara', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('accessories', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.2103, device='cuda:0')), ('cosmetics', tensor(0., device='cuda:0')), ('collection', tensor(0., device='cuda:0')), ('includes', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('eye', tensor(0., device='cuda:0')), ('shadow', tensor(0., device='cuda:0')), (',', tensor(0.2632, device='cuda:0')), ('face', tensor(0., device='cuda:0')), ('powder', tensor(0., device='cuda:0')), (',', tensor(0.2632, device='cuda:0')), ('lip', tensor(0., device='cuda:0')), ('gloss', tensor(0., device='cuda:0')), (',', tensor(0.2632, device='cuda:0')), ('mascara', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('accessories', tensor(0., device='cuda:0'))]
idx: 947, example: The recent troubles simply make NETeller cheaper , prediction: 2, correct_label: 0, class_scores: [0.22663715 0.37744948 0.39591333], word_scores: ['the:6.3806996877247e-06', 'recent:0.0', 'troubles:0.0', 'simply:0.0', 'make:0.0', 'net:0.0', '##eller:0.0', 'cheaper:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0')), ('recent', tensor(0., device='cuda:0')), ('troubles', tensor(0., device='cuda:0')), ('simply', tensor(0., device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('neteller', tensor(0., device='cuda:0')), ('cheaper', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('recent', tensor(0., device='cuda:0')), ('troubles', tensor(0., device='cuda:0')), ('simply', tensor(0., device='cuda:0')), ('make', tensor(0., device='cuda:0')), ('neteller', tensor(0., device='cuda:0')), ('cheaper', tensor(0., device='cuda:0'))]
idx: 948, example: Okmetic closed its plant in Espoo in early 2004 , and all production lines from the site were moved to Okmetic 's plants in Vantaa , Finland and Texas , USA , prediction: 1, correct_label: 2, class_scores: [0.23298045 0.46921673 0.2978028 ], word_scores: ['ok:0.0', '##met:0.0', '##ic:0.0', 'closed:0.0', 'its:1.7191393908433383e-06', 'plant:0.0', 'in:3.0217122457543155e-06', 'es:2.450917691021459e-06', '##poo:4.037954568048008e-06', 'in:3.0217122457543155e-06', 'early:0.0', '2004:0.0', ',:7.986737728060689e-06', 'and:0.0', 'all:0.0', 'production:0.0', 'lines:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'site:0.0', 'were:0.0', 'moved:0.0', 'to:2.886244146793615e-06', 'ok:0.0', '##met:0.0', '##ic:0.0', "':0.0", 's:0.0', 'plants:0.0', 'in:3.0217122457543155e-06', 'van:0.0', '##ta:0.0', '##a:3.804580501309829e-06', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', 'and:0.0', 'texas:0.0', ',:7.986737728060689e-06', 'usa:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('okmetic', tensor(0., device='cuda:0')), ('closed', tensor(0., device='cuda:0')), ('its', tensor(0.0538, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('in', tensor(0.0945, device='cuda:0')), ('espoo', tensor(0.0767, device='cuda:0')), ('in', tensor(0.0945, device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0')), (',', tensor(0.2499, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0')), ('from', tensor(0.1406, device='cuda:0')), ('the', tensor(0.1996, device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('moved', tensor(0., device='cuda:0')), ('to', tensor(0.0903, device='cuda:0'))],  word_scores_max: [('okmetic', tensor(0., device='cuda:0')), ('closed', tensor(0., device='cuda:0')), ('its', tensor(0.0538, device='cuda:0')), ('plant', tensor(0., device='cuda:0')), ('in', tensor(0.0945, device='cuda:0')), ('espoo', tensor(0.0767, device='cuda:0')), ('in', tensor(0.0945, device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('2004', tensor(0., device='cuda:0')), (',', tensor(0.2499, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('lines', tensor(0., device='cuda:0')), ('from', tensor(0.1406, device='cuda:0')), ('the', tensor(0.1996, device='cuda:0')), ('site', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('moved', tensor(0., device='cuda:0')), ('to', tensor(0.0903, device='cuda:0'))]
idx: 949, example: According to Heikkil+� , more than just `` refreshment and energy '' will soon be found in soft drinks also in Finland , prediction: 1, correct_label: 2, class_scores: [0.18841745 0.4209578  0.39062473], word_scores: ['according:0.0', 'to:2.886244146793615e-06', 'he:0.0', '##ik:0.0', '##ki:0.0', '##l:0.0', '+:0.0', ',:7.986737728060689e-06', 'more:0.0', 'than:0.0', 'just:0.0', '`:0.0', '`:0.0', 'ref:0.0', '##resh:0.0', '##ment:0.0', 'and:0.0', 'energy:0.0', "':0.0", "':0.0", 'will:4.073096533829812e-06', 'soon:4.303194600652205e-06', 'be:0.0', 'found:0.0', 'in:3.0217122457543155e-06', 'soft:0.0', 'drinks:0.0', 'also:0.0', 'in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('heikkil', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('refreshment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))],  word_scores_max: [('according', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('heikkil', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('refreshment', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))]
idx: 950, example: This would be a huge process , prediction: 2, correct_label: 2, class_scores: [0.2403326  0.34952882 0.41013864], word_scores: ['this:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'a:8.62785782373976e-06', 'huge:0.0', 'process:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('this', tensor(0., device='cuda:0')), ('would', tensor(0.1954, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.8046, device='cuda:0')), ('huge', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('would', tensor(0.1954, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.8046, device='cuda:0')), ('huge', tensor(0., device='cuda:0')), ('process', tensor(0., device='cuda:0'))]
idx: 951, example: The purchase price will be paid in cash upon the closure of the transaction , scheduled for April 1 , 2009 , prediction: 2, correct_label: 2, class_scores: [0.26609322 0.33652905 0.39737773], word_scores: ['the:6.3806996877247e-06', 'purchase:0.0', 'price:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'paid:0.0', 'in:3.0217122457543155e-06', 'cash:0.0', 'upon:0.0', 'the:6.3806996877247e-06', 'closure:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'transaction:0.0', ',:7.986737728060689e-06', 'scheduled:0.0', 'for:0.0', 'april:0.0', '1:0.0', ',:7.986737728060689e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.1398, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('will', tensor(0.0892, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('paid', tensor(0., device='cuda:0')), ('in', tensor(0.0662, device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('upon', tensor(0., device='cuda:0')), ('the', tensor(0.1398, device='cuda:0')), ('closure', tensor(0., device='cuda:0')), ('of', tensor(0.0753, device='cuda:0')), ('the', tensor(0.1398, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1750, device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1750, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.1398, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('will', tensor(0.0892, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('paid', tensor(0., device='cuda:0')), ('in', tensor(0.0662, device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('upon', tensor(0., device='cuda:0')), ('the', tensor(0.1398, device='cuda:0')), ('closure', tensor(0., device='cuda:0')), ('of', tensor(0.0753, device='cuda:0')), ('the', tensor(0.1398, device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), (',', tensor(0.1750, device='cuda:0')), ('scheduled', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('april', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.1750, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 952, example: However , the bottom-line result improved thanks to positive financial items , prediction: 1, correct_label: 1, class_scores: [0.19433258 0.40812856 0.3975389 ], word_scores: ['however:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'bottom:0.0', '-:4.821180027647642e-06', 'line:0.0', 'result:0.0', 'improved:0.0', 'thanks:0.0', 'to:2.886244146793615e-06', 'positive:0.0', 'financial:0.0', 'items:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('however', tensor(0., device='cuda:0')), (',', tensor(0.3618, device='cuda:0')), ('the', tensor(0.2890, device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('-', tensor(0.2184, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('thanks', tensor(0., device='cuda:0')), ('to', tensor(0.1307, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0'))],  word_scores_max: [('however', tensor(0., device='cuda:0')), (',', tensor(0.3618, device='cuda:0')), ('the', tensor(0.2890, device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('-', tensor(0.2184, device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('improved', tensor(0., device='cuda:0')), ('thanks', tensor(0., device='cuda:0')), ('to', tensor(0.1307, device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('items', tensor(0., device='cuda:0'))]
idx: 953, example: In the first nine months of 2010 , the company 's net loss narrowed to EUR 415,000 from EUR 7.4 million for the corresponding period of 2009 , prediction: 2, correct_label: 1, class_scores: [0.18356712 0.3270095  0.48942342], word_scores: ['in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'first:0.0', 'nine:0.0', 'months:0.0', 'of:3.4365734791208524e-06', '2010:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'net:0.0', 'loss:0.0', 'narrowed:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '415:0.0', ',:7.986737728060689e-06', '000:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '7:0.0', '.:2.903296945078182e-06', '4:0.0', 'million:6.018835847498849e-06', 'for:0.0', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'of:3.4365734791208524e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('in', tensor(0.1111, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.1263, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2936, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0'))],  word_scores_max: [('in', tensor(0.1111, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('nine', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('of', tensor(0.1263, device='cuda:0')), ('2010', tensor(0., device='cuda:0')), (',', tensor(0.2936, device='cuda:0')), ('the', tensor(0.2345, device='cuda:0'))]
idx: 954, example: The veneer and plywood industry in Sweden is quite small despite the raw material resources , prediction: 2, correct_label: 2, class_scores: [0.2611885  0.33210033 0.4067112 ], word_scores: ['the:6.3806996877247e-06', 've:0.0', '##neer:0.0', 'and:0.0', 'pl:0.0', '##ywood:0.0', 'industry:0.0', 'in:3.0217122457543155e-06', 'sweden:0.0', 'is:0.0', 'quite:0.0', 'small:0.0', 'despite:0.0', 'the:6.3806996877247e-06', 'raw:0.0', 'material:0.0', 'resources:3.8971406866039615e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(0.3242, device='cuda:0')), ('veneer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('plywood', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('in', tensor(0.1535, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('quite', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('despite', tensor(0., device='cuda:0')), ('the', tensor(0.3242, device='cuda:0')), ('raw', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('resources', tensor(0.1980, device='cuda:0'))],  word_scores_max: [('the', tensor(0.3242, device='cuda:0')), ('veneer', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('plywood', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('in', tensor(0.1535, device='cuda:0')), ('sweden', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('quite', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('despite', tensor(0., device='cuda:0')), ('the', tensor(0.3242, device='cuda:0')), ('raw', tensor(0., device='cuda:0')), ('material', tensor(0., device='cuda:0')), ('resources', tensor(0.1980, device='cuda:0'))]
idx: 955, example: The airline estimated that the cancellation of its flights due to the closure of European airspace , and the process of recommencing traffic , have caused a the company a loss of EUR20m , including the costs of stranded passengers ' accommodation , prediction: 2, correct_label: 0, class_scores: [0.16135715 0.34153295 0.4971099 ], word_scores: ['the:6.3806996877247e-06', 'airline:0.0', 'estimated:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'cancellation:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'flights:0.0', 'due:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'closure:0.0', 'of:3.4365734791208524e-06', 'european:0.0', 'airspace:0.0', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'process:0.0', 'of:3.4365734791208524e-06', 'rec:0.0', '##om:0.0', '##men:0.0', '##cing:0.0', 'traffic:0.0', ',:7.986737728060689e-06', 'have:2.910326429628185e-06', 'caused:0.0', 'a:8.62785782373976e-06', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'a:8.62785782373976e-06', 'loss:0.0', 'of:3.4365734791208524e-06', 'eu:0.0', '##r:0.0', '##20:0.0', '##m:0.0', ',:7.986737728060689e-06', 'including:0.0', 'the:6.3806996877247e-06', 'costs:0.0', 'of:3.4365734791208524e-06', 'stranded:0.0', 'passengers:0.0', "':0.0", 'accommodation:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(0.0568, device='cuda:0')), ('airline', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('that', tensor(0.0135, device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('cancellation', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('its', tensor(0.0153, device='cuda:0')), ('flights', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.0257, device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('closure', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('airspace', tensor(0., device='cuda:0')), (',', tensor(0.0711, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('recommencing', tensor(0., device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), (',', tensor(0.0711, device='cuda:0')), ('have', tensor(0.0259, device='cuda:0')), ('caused', tensor(0., device='cuda:0')), ('a', tensor(0.0768, device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('company', tensor(0.0596, device='cuda:0')), ('a', tensor(0.0768, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('eur20m', tensor(0., device='cuda:0')), (',', tensor(0.0711, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('stranded', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(0.0568, device='cuda:0')), ('airline', tensor(0., device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('that', tensor(0.0135, device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('cancellation', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('its', tensor(0.0153, device='cuda:0')), ('flights', tensor(0., device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.0257, device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('closure', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('european', tensor(0., device='cuda:0')), ('airspace', tensor(0., device='cuda:0')), (',', tensor(0.0711, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('process', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('recommencing', tensor(0., device='cuda:0')), ('traffic', tensor(0., device='cuda:0')), (',', tensor(0.0711, device='cuda:0')), ('have', tensor(0.0259, device='cuda:0')), ('caused', tensor(0., device='cuda:0')), ('a', tensor(0.0768, device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('company', tensor(0.0596, device='cuda:0')), ('a', tensor(0.0768, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('eur20m', tensor(0., device='cuda:0')), (',', tensor(0.0711, device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('the', tensor(0.0568, device='cuda:0')), ('costs', tensor(0., device='cuda:0')), ('of', tensor(0.0306, device='cuda:0')), ('stranded', tensor(0., device='cuda:0'))]
idx: 956, example: Seven-month sales of Ragutis , which is controlled by the Finnish brewery Olvi , declined by 11.2 percent , to 15.41 million liters , and the company held 9.89 percent of the market , prediction: 2, correct_label: 0, class_scores: [0.28311005 0.35716856 0.3597214 ], word_scores: ['seven:0.0', '-:4.821180027647642e-06', 'month:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'rag:0.0', '##uti:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'which:0.0', 'is:0.0', 'controlled:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'finnish:0.0', 'brewery:0.0', 'ol:0.0', '##vi:0.0', ',:7.986737728060689e-06', 'declined:0.0', 'by:0.0', '11:0.0', '.:2.903296945078182e-06', '2:0.0', 'percent:0.0', ',:7.986737728060689e-06', 'to:2.886244146793615e-06', '15:0.0', '.:2.903296945078182e-06', '41:0.0', 'million:6.018835847498849e-06', 'liter:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'held:0.0', '9:0.0', '.:2.903296945078182e-06', '89:0.0', 'percent:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'market:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('seven', tensor(0., device='cuda:0')), ('-', tensor(0.0554, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0395, device='cuda:0')), ('ragutis', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('controlled', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0733, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('brewery', tensor(0., device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('declined', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0333, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('to', tensor(0.0331, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0333, device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('million', tensor(0.0691, device='cuda:0')), ('liters', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0733, device='cuda:0')), ('company', tensor(0.0769, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0333, device='cuda:0')), ('89', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('of', tensor(0.0395, device='cuda:0')), ('the', tensor(0.0733, device='cuda:0')), ('market', tensor(0., device='cuda:0'))],  word_scores_max: [('seven', tensor(0., device='cuda:0')), ('-', tensor(0.0554, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('of', tensor(0.0395, device='cuda:0')), ('ragutis', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('controlled', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(0.0733, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('brewery', tensor(0., device='cuda:0')), ('olvi', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('declined', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0333, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('to', tensor(0.0331, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.0333, device='cuda:0')), ('41', tensor(0., device='cuda:0')), ('million', tensor(0.0691, device='cuda:0')), ('liters', tensor(0., device='cuda:0')), (',', tensor(0.0917, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.0733, device='cuda:0')), ('company', tensor(0.0769, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0333, device='cuda:0')), ('89', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('of', tensor(0.0395, device='cuda:0')), ('the', tensor(0.0733, device='cuda:0')), ('market', tensor(0., device='cuda:0'))]
idx: 957, example: Citigroup , Inc ( NYSE : C ) has announced that its Global Transaction Services ( GTS ) business has been awarded a new mandate by Finland-based Pohjola Bank Group , prediction: 1, correct_label: 1, class_scores: [0.20691517 0.44400585 0.3490789 ], word_scores: ['ci:0.0', '##ti:2.5915114747476764e-06', '##group:0.0', ',:7.986737728060689e-06', 'inc:0.0', '(:0.0', 'ny:0.0', '##se:0.0', '::0.0', 'c:0.0', '):0.0', 'has:5.9214244174654596e-06', 'announced:0.0', 'that:1.5133816759771435e-06', 'its:1.7191393908433383e-06', 'global:0.0', 'transaction:0.0', 'services:0.0', '(:0.0', 'gt:0.0', '##s:4.601175078278175e-06', '):0.0', 'business:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'awarded:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'mandate:0.0', 'by:0.0', 'finland:4.096111752005527e-06', '-:4.821180027647642e-06', 'based:0.0', 'po:0.0', '##h:0.0', '##jo:0.0', '##la:0.0', 'bank:0.0', 'group:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('citigroup', tensor(0.0563, device='cuda:0')), (',', tensor(0.1736, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('c', tensor(0., device='cuda:0')), ('has', tensor(0.1287, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('that', tensor(0.0329, device='cuda:0')), ('its', tensor(0.0374, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('gts', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('has', tensor(0.1287, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('a', tensor(0.1876, device='cuda:0')), ('new', tensor(0.0608, device='cuda:0')), ('mandate', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('finland', tensor(0.0891, device='cuda:0')), ('-', tensor(0.1048, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))],  word_scores_max: [('citigroup', tensor(0.0563, device='cuda:0')), (',', tensor(0.1736, device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0')), ('c', tensor(0., device='cuda:0')), ('has', tensor(0.1287, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('that', tensor(0.0329, device='cuda:0')), ('its', tensor(0.0374, device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('transaction', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('gts', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('has', tensor(0.1287, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('awarded', tensor(0., device='cuda:0')), ('a', tensor(0.1876, device='cuda:0')), ('new', tensor(0.0608, device='cuda:0')), ('mandate', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('finland', tensor(0.0891, device='cuda:0')), ('-', tensor(0.1048, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('pohjola', tensor(0., device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0'))]
idx: 958, example: 26 January 2011 - Finnish software solutions provider Basware ( HEL : BAS1V ) said yesterday it adjusted its strategy and goals for the next four years with focus on international growth mainly via acquisitions , prediction: 2, correct_label: 2, class_scores: [0.22806633 0.22298454 0.54894906], word_scores: ['26:0.0', 'january:0.0', '2011:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'software:0.0', 'solutions:0.0', 'provider:0.0', 'bas:0.0', '##ware:0.0', '(:0.0', 'he:0.0', '##l:0.0', '::0.0', 'bas:0.0', '##1:0.0', '##v:0.0', '):0.0', 'said:0.0', 'yesterday:0.0', 'it:3.3415778943890473e-06', 'adjusted:0.0', 'its:1.7191393908433383e-06', 'strategy:0.0', 'and:0.0', 'goals:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'next:0.0', 'four:3.606506425057887e-06', 'years:0.0', 'with:4.733654350275174e-06', 'focus:0.0', 'on:0.0', 'international:0.0', 'growth:0.0', 'mainly:0.0', 'via:0.0', 'acquisitions:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('26', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('-', tensor(0.1960, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('bas1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('it', tensor(0.1358, device='cuda:0')), ('adjusted', tensor(0., device='cuda:0')), ('its', tensor(0.0699, device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('goals', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2593, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('four', tensor(0.1466, device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('with', tensor(0.1924, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('mainly', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0'))],  word_scores_max: [('26', tensor(0., device='cuda:0')), ('january', tensor(0., device='cuda:0')), ('2011', tensor(0., device='cuda:0')), ('-', tensor(0.1960, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('provider', tensor(0., device='cuda:0')), ('basware', tensor(0., device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('bas1v', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('it', tensor(0.1358, device='cuda:0')), ('adjusted', tensor(0., device='cuda:0')), ('its', tensor(0.0699, device='cuda:0')), ('strategy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('goals', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2593, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('four', tensor(0.1466, device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('with', tensor(0.1924, device='cuda:0')), ('focus', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('mainly', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('acquisitions', tensor(0., device='cuda:0'))]
idx: 959, example: In Finland , 71 % of paper and paperboard is reclaimed , prediction: 2, correct_label: 2, class_scores: [0.2543725  0.27203125 0.47359622], word_scores: ['in:3.0217122457543155e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', '71:0.0', '%:0.0', 'of:3.4365734791208524e-06', 'paper:2.697490344871767e-06', 'and:0.0', 'paper:2.697490344871767e-06', '##board:0.0', 'is:0.0', 'reclaimed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('in', tensor(0.1262, device='cuda:0')), ('finland', tensor(0.1711, device='cuda:0')), (',', tensor(0.3337, device='cuda:0')), ('71', tensor(0., device='cuda:0')), ('of', tensor(0.1436, device='cuda:0')), ('paper', tensor(0.1127, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('paperboard', tensor(0.1127, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('reclaimed', tensor(0., device='cuda:0'))],  word_scores_max: [('in', tensor(0.1262, device='cuda:0')), ('finland', tensor(0.1711, device='cuda:0')), (',', tensor(0.3337, device='cuda:0')), ('71', tensor(0., device='cuda:0')), ('of', tensor(0.1436, device='cuda:0')), ('paper', tensor(0.1127, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('paperboard', tensor(0.1127, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('reclaimed', tensor(0., device='cuda:0'))]
idx: 960, example: Auburn 's sales in 2007 were CAD 41 million ( approximately EUR 27 million ) , and the company employs some 150 people , prediction: 2, correct_label: 2, class_scores: [0.22854622 0.29503217 0.47642162], word_scores: ['auburn:0.0', "':0.0", 's:0.0', 'sales:0.0', 'in:3.0217122457543155e-06', '2007:0.0', 'were:0.0', 'cad:0.0', '41:0.0', 'million:6.018835847498849e-06', '(:0.0', 'approximately:0.0', 'eu:0.0', '##r:0.0', '27:0.0', 'million:6.018835847498849e-06', '):0.0', ',:7.986737728060689e-06', 'and:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'employs:0.0', 'some:0.0', '150:0.0', 'people:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 961, example: ADP News - May 29 , 2009 - Bank of America BofA downgraded today its ratings on Swedish-Finnish paper maker Stora Enso Oyj HEL : STERV and on Finnish sector player UPM-Kymmene Oyj HEL : UPM1V to `` underper, prediction: 2, correct_label: 0, class_scores: [0.13974346 0.3890524  0.47120413], word_scores: ['ad:0.0', '##p:0.0', 'news:0.0', '-:4.821180027647642e-06', 'may:0.0', '29:0.0', ',:7.986737728060689e-06', '2009:0.0', '-:4.821180027647642e-06', 'bank:0.0', 'of:3.4365734791208524e-06', 'america:0.0', 'bo:0.0', '##fa:0.0', 'swedish:0.0', '-:4.821180027647642e-06', 'finnish:0.0', 'paper:2.697490344871767e-06', 'maker:0.0', 'st:0.0', '##ora:0.0', 'en:2.1442599518195493e-06', '##so:0.0', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'ste:0.0', '##r:0.0', '##v:0.0', 'and:0.0', 'on:0.0', 'finnish:0.0', 'sector:0.0', 'player:0.0', 'up:1.4959460941099678e-06', '##m:0.0', '-:4.821180027647642e-06', 'ky:0.0', '##mme:0.0', '##ne:8.183636964531615e-06', 'o:0.0', '##y:1.832826342251792e-06', '##j:0.0', 'he:0.0', '##l:0.0', '::0.0', 'up:1.4959460941099678e-06', '##m:0.0', '##1:0.0', '##v:0.0', 'to:2.886244146793615e-06', '`:0.0', '`:0.0', 'under:0.0', '##per:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), (',', tensor(0.1771, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.0762, device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('bofa', tensor(0., device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('paper', tensor(0.0598, device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0476, device='cuda:0')), ('oyj', tensor(0.0406, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('sterv', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('player', tensor(0., device='cuda:0')), ('upm', tensor(0.0332, device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('oyj', tensor(0.0406, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('upm1v', tensor(0.0332, device='cuda:0')), ('to', tensor(0.0640, device='cuda:0')), ('underper', tensor(0., device='cuda:0'))],  word_scores_max: [('adp', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('29', tensor(0., device='cuda:0')), (',', tensor(0.1771, device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.0762, device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('bofa', tensor(0., device='cuda:0')), ('swedish', tensor(0., device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('paper', tensor(0.0598, device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('stora', tensor(0., device='cuda:0')), ('enso', tensor(0.0476, device='cuda:0')), ('oyj', tensor(0.0406, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('sterv', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('finnish', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('player', tensor(0., device='cuda:0')), ('upm', tensor(0.0332, device='cuda:0')), ('-', tensor(0.1069, device='cuda:0')), ('kymmene', tensor(0., device='cuda:0')), ('oyj', tensor(0.0406, device='cuda:0')), ('hel', tensor(0., device='cuda:0')), ('upm1v', tensor(0.0332, device='cuda:0')), ('to', tensor(0.0640, device='cuda:0')), ('underper', tensor(0., device='cuda:0'))]
idx: 962, example: Proha Plc ( Euronext :7327 ) announced today ( 19 May ) that its fully-owned subsidiary , Safran Software Solutions AS , has agreed to sell its 49 % share of Safran North America LLC to a SNA Holding AS , an investment group based in Norway , prediction: 2, correct_label: 2, class_scores: [0.24276677 0.35818246 0.3990507 ], word_scores: ['pro:0.0', '##ha:0.0', 'plc:0.0', '(:0.0', 'euro:0.0', '##ne:8.183636964531615e-06', '##xt:0.0', '::0.0', '73:0.0', '##27:0.0', '):0.0', 'announced:0.0', 'today:0.0', '(:0.0', 'may:0.0', '):0.0', 'that:1.5133816759771435e-06', 'its:1.7191393908433383e-06', 'fully:0.0', '-:4.821180027647642e-06', 'owned:0.0', 'subsidiary:0.0', ',:7.986737728060689e-06', 'sa:0.0', '##fra:0.0', '##n:0.0', 'software:0.0', 'solutions:0.0', 'as:0.0', ',:7.986737728060689e-06', 'has:5.9214244174654596e-06', 'agreed:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'its:1.7191393908433383e-06', '49:0.0', '%:0.0', 'share:0.0', 'of:3.4365734791208524e-06', 'sa:0.0', '##fra:0.0', '##n:0.0', 'north:0.0', 'america:0.0', 'llc:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 's:0.0', '##na:0.0', 'holding:0.0', 'as:0.0', ',:7.986737728060689e-06', 'an:0.0', 'investment:0.0', 'group:0.0', 'based:0.0', 'in:3.0217122457543155e-06', 'norway:0.0', '[SEP]:1.4596897017327137e-05'], word_scores_sum: [('proha', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('euronext', tensor(0.1191, device='cuda:0')), ('7327', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('that', tensor(0.0220, device='cuda:0')), ('its', tensor(0.0250, device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('-', tensor(0.0702, device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), (',', tensor(0.1163, device='cuda:0')), ('safran', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), (',', tensor(0.1163, device='cuda:0')), ('has', tensor(0.0862, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0420, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0250, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.0500, device='cuda:0')), ('safran', tensor(0., device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('llc', tensor(0., device='cuda:0')), ('to', tensor(0.0420, device='cuda:0')), ('a', tensor(0.1256, device='cuda:0')), ('sna', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), (',', tensor(0.1163, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.0440, device='cuda:0')), ('norway', tensor(0., device='cuda:0'))],  word_scores_max: [('proha', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('euronext', tensor(0.1191, device='cuda:0')), ('7327', tensor(0., device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('that', tensor(0.0220, device='cuda:0')), ('its', tensor(0.0250, device='cuda:0')), ('fully', tensor(0., device='cuda:0')), ('-', tensor(0.0702, device='cuda:0')), ('owned', tensor(0., device='cuda:0')), ('subsidiary', tensor(0., device='cuda:0')), (',', tensor(0.1163, device='cuda:0')), ('safran', tensor(0., device='cuda:0')), ('software', tensor(0., device='cuda:0')), ('solutions', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), (',', tensor(0.1163, device='cuda:0')), ('has', tensor(0.0862, device='cuda:0')), ('agreed', tensor(0., device='cuda:0')), ('to', tensor(0.0420, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('its', tensor(0.0250, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('of', tensor(0.0500, device='cuda:0')), ('safran', tensor(0., device='cuda:0')), ('north', tensor(0., device='cuda:0')), ('america', tensor(0., device='cuda:0')), ('llc', tensor(0., device='cuda:0')), ('to', tensor(0.0420, device='cuda:0')), ('a', tensor(0.1256, device='cuda:0')), ('sna', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), (',', tensor(0.1163, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('in', tensor(0.0440, device='cuda:0')), ('norway', tensor(0., device='cuda:0'))]
idx: 963, example: The purchase price was not disclosed , prediction: 2, correct_label: 2, class_scores: [0.19471358 0.31754047 0.48774594], word_scores: ['the:6.3806996877247e-06', 'purchase:0.0', 'price:0.0', 'was:0.0', 'not:0.0', 'disclosed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('the', tensor(1., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('disclosed', tensor(0., device='cuda:0'))]
idx: 964, example: GENEVA , Feb. 10 -- Tero Aaltonen , Finland has developed a radio resource control method , prediction: 2, correct_label: 2, class_scores: [0.20877641 0.3692791  0.42194453], word_scores: ['geneva:0.0', ',:7.986737728060689e-06', 'feb:0.0', '.:2.903296945078182e-06', '10:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'ter:0.0', '##o:0.0', 'aa:0.0', '##lton:0.0', '##en:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', 'has:5.9214244174654596e-06', 'developed:2.488632617314579e-06', 'a:8.62785782373976e-06', 'radio:2.7861385660798987e-06', 'resource:0.0', 'control:0.0', 'method:2.380315208938555e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('geneva', tensor(0., device='cuda:0')), (',', tensor(0.1457, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.0879, device='cuda:0')), ('-', tensor(0.0879, device='cuda:0')), ('tero', tensor(0., device='cuda:0')), ('aaltonen', tensor(0., device='cuda:0')), (',', tensor(0.1457, device='cuda:0')), ('finland', tensor(0.0747, device='cuda:0')), ('has', tensor(0.1080, device='cuda:0')), ('developed', tensor(0.0454, device='cuda:0')), ('a', tensor(0.1574, device='cuda:0')), ('radio', tensor(0.0508, device='cuda:0')), ('resource', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('method', tensor(0.0434, device='cuda:0'))],  word_scores_max: [('geneva', tensor(0., device='cuda:0')), (',', tensor(0.1457, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('.', tensor(0.0530, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.0879, device='cuda:0')), ('-', tensor(0.0879, device='cuda:0')), ('tero', tensor(0., device='cuda:0')), ('aaltonen', tensor(0., device='cuda:0')), (',', tensor(0.1457, device='cuda:0')), ('finland', tensor(0.0747, device='cuda:0')), ('has', tensor(0.1080, device='cuda:0')), ('developed', tensor(0.0454, device='cuda:0')), ('a', tensor(0.1574, device='cuda:0')), ('radio', tensor(0.0508, device='cuda:0')), ('resource', tensor(0., device='cuda:0')), ('control', tensor(0., device='cuda:0')), ('method', tensor(0.0434, device='cuda:0'))]
idx: 965, example: Raute , headquartered in Nastola , Finland , is a technology company serving the wood products industry worldwide , prediction: 2, correct_label: 2, class_scores: [0.12194541 0.25688854 0.62116605], word_scores: ['ra:0.0', '##ute:0.0', ',:7.986737728060689e-06', 'headquartered:0.0', 'in:3.0217122457543155e-06', 'nas:0.0', '##to:0.0', '##la:0.0', ',:7.986737728060689e-06', 'finland:4.096111752005527e-06', ',:7.986737728060689e-06', 'is:0.0', 'a:8.62785782373976e-06', 'technology:0.0', 'company:6.695386673527537e-06', 'serving:0.0', 'the:6.3806996877247e-06', 'wood:0.0', 'products:0.0', 'industry:0.0', 'worldwide:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('raute', tensor(0., device='cuda:0')), (',', tensor(0.1513, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0572, device='cuda:0')), ('nastola', tensor(0., device='cuda:0')), (',', tensor(0.1513, device='cuda:0')), ('finland', tensor(0.0776, device='cuda:0')), (',', tensor(0.1513, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.1635, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1268, device='cuda:0')), ('serving', tensor(0., device='cuda:0')), ('the', tensor(0.1209, device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('worldwide', tensor(0., device='cuda:0'))],  word_scores_max: [('raute', tensor(0., device='cuda:0')), (',', tensor(0.1513, device='cuda:0')), ('headquartered', tensor(0., device='cuda:0')), ('in', tensor(0.0572, device='cuda:0')), ('nastola', tensor(0., device='cuda:0')), (',', tensor(0.1513, device='cuda:0')), ('finland', tensor(0.0776, device='cuda:0')), (',', tensor(0.1513, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.1635, device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('company', tensor(0.1268, device='cuda:0')), ('serving', tensor(0., device='cuda:0')), ('the', tensor(0.1209, device='cuda:0')), ('wood', tensor(0., device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('industry', tensor(0., device='cuda:0')), ('worldwide', tensor(0., device='cuda:0'))]
idx: 966, example: LONDON MarketWatch -- Share prices ended lower in London Monday as a rebound in bank stocks failed to offset broader weakness for the FTSE 100 , prediction: 2, correct_label: 0, class_scores: [0.29412934 0.3017576  0.4041131 ], word_scores: ['london:0.0', 'market:0.0', '##watch:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', 'share:0.0', 'prices:0.0', 'ended:0.0', 'lower:0.0', 'in:3.0217122457543155e-06', 'london:0.0', 'monday:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'rebound:0.0', 'in:3.0217122457543155e-06', 'bank:0.0', 'stocks:0.0', 'failed:0.0', 'to:2.886244146793615e-06', 'offset:0.0', 'broader:0.0', 'weakness:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'ft:0.0', '##se:0.0', '100:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('london', tensor(0., device='cuda:0')), ('marketwatch', tensor(0., device='cuda:0')), ('-', tensor(0.1436, device='cuda:0')), ('-', tensor(0.1436, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('ended', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('in', tensor(0.0900, device='cuda:0')), ('london', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.2569, device='cuda:0')), ('rebound', tensor(0., device='cuda:0')), ('in', tensor(0.0900, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('failed', tensor(0., device='cuda:0')), ('to', tensor(0.0859, device='cuda:0')), ('offset', tensor(0., device='cuda:0')), ('broader', tensor(0., device='cuda:0')), ('weakness', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1900, device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0'))],  word_scores_max: [('london', tensor(0., device='cuda:0')), ('marketwatch', tensor(0., device='cuda:0')), ('-', tensor(0.1436, device='cuda:0')), ('-', tensor(0.1436, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('ended', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('in', tensor(0.0900, device='cuda:0')), ('london', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.2569, device='cuda:0')), ('rebound', tensor(0., device='cuda:0')), ('in', tensor(0.0900, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('failed', tensor(0., device='cuda:0')), ('to', tensor(0.0859, device='cuda:0')), ('offset', tensor(0., device='cuda:0')), ('broader', tensor(0., device='cuda:0')), ('weakness', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.1900, device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0'))]
idx: 967, example: Net sales decreased to EUR 220.5 mn from EUR 470.0 mn in the corresponding period in 2009 , prediction: 2, correct_label: 0, class_scores: [0.18048273 0.38706464 0.4324526 ], word_scores: ['net:0.0', 'sales:0.0', 'decreased:0.0', 'to:2.886244146793615e-06', 'eu:0.0', '##r:0.0', '220:0.0', '.:2.903296945078182e-06', '5:0.0', 'mn:0.0', 'from:4.495178018260049e-06', 'eu:0.0', '##r:0.0', '470:0.0', '.:2.903296945078182e-06', '0:0.0', 'mn:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'corresponding:0.0', 'period:0.0', 'in:3.0217122457543155e-06', '2009:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.1127, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('220', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1755, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('470', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('the', tensor(0.2491, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))],  word_scores_max: [('net', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decreased', tensor(0., device='cuda:0')), ('to', tensor(0.1127, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('220', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('from', tensor(0.1755, device='cuda:0')), ('eur', tensor(0., device='cuda:0')), ('470', tensor(0., device='cuda:0')), ('.', tensor(0.1134, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('mn', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('the', tensor(0.2491, device='cuda:0')), ('corresponding', tensor(0., device='cuda:0')), ('period', tensor(0., device='cuda:0')), ('in', tensor(0.1180, device='cuda:0')), ('2009', tensor(0., device='cuda:0'))]
idx: 968, example: As a result some 20 persons will no longer be needed , prediction: 2, correct_label: 0, class_scores: [0.20082091 0.36634386 0.43283522], word_scores: ['as:0.0', 'a:8.62785782373976e-06', 'result:0.0', 'some:0.0', '20:0.0', 'persons:0.0', 'will:4.073096533829812e-06', 'no:0.0', 'longer:0.0', 'be:0.0', 'needed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.6793, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('persons', tensor(0., device='cuda:0')), ('will', tensor(0.3207, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('longer', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('needed', tensor(0., device='cuda:0'))],  word_scores_max: [('as', tensor(0., device='cuda:0')), ('a', tensor(0.6793, device='cuda:0')), ('result', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('persons', tensor(0., device='cuda:0')), ('will', tensor(0.3207, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('longer', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('needed', tensor(0., device='cuda:0'))]
idx: 969, example: The Segu companies and PKC 's Polish unit will form a business servicing the western European markets with `` annual sales of about hundred million '' and about 2,500 employees , the Finnish company 's CEO , Harri Suutari , said , prediction: 2, correct_label: 2, class_scores: [0.23858263 0.37651706 0.38490033], word_scores: ['the:6.3806996877247e-06', 'se:0.0', '##gu:0.0', 'companies:0.0', 'and:0.0', 'p:0.0', '##k:0.0', '##c:0.0', "':0.0", 's:0.0', 'polish:0.0', 'unit:0.0', 'will:4.073096533829812e-06', 'form:0.0', 'a:8.62785782373976e-06', 'business:0.0', 'servicing:0.0', 'the:6.3806996877247e-06', 'western:0.0', 'european:0.0', 'markets:0.0', 'with:4.733654350275174e-06', '`:0.0', '`:0.0', 'annual:0.0', 'sales:0.0', 'of:3.4365734791208524e-06', 'about:0.0', 'hundred:0.0', 'million:6.018835847498849e-06', "':0.0", "':0.0", 'and:0.0', 'about:0.0', '2:0.0', ',:7.986737728060689e-06', '500:0.0', 'employees:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'finnish:0.0', 'company:6.695386673527537e-06', "':0.0", 's:0.0', 'ceo:0.0', ',:7.986737728060689e-06', 'ha:0.0', '##rri:0.0', 'su:0.0', '##uta:0.0', '##ri:0.0', ',:7.986737728060689e-06', 'said:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('the', tensor(1., device='cuda:0')), ('segu', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))],  word_scores_max: [('the', tensor(1., device='cuda:0')), ('segu', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0'))]
idx: 970, example: $dcth near hod, prediction: 2, correct_label: 1, class_scores: [0.20917504 0.33931616 0.45150873], word_scores: ['$:0.0', 'dc:0.0', '##th:0.0', 'near:0.0', 'ho:0.0', '##d:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('dcth', tensor(nan, device='cuda:0')), ('near', tensor(nan, device='cuda:0')), ('hod', tensor(nan, device='cuda:0'))],  word_scores_max: [('dcth', tensor(nan, device='cuda:0')), ('near', tensor(nan, device='cuda:0')), ('hod', tensor(nan, device='cuda:0'))]
idx: 971, example: starbucks' digital strategy to drive significant growth with customer loyalty  $sbux, prediction: 2, correct_label: 1, class_scores: [0.20867433 0.38207245 0.40925318], word_scores: ['starbucks:0.0', "':0.0", 'digital:0.0', 'strategy:0.0', 'to:2.886244146793615e-06', 'drive:0.0', 'significant:0.0', 'growth:0.0', 'with:4.733654350275174e-06', 'customer:0.0', 'loyalty:0.0', '$:0.0', 'sb:0.0', '##ux:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 972, example: $hal if bulls lucky enuff to get an upside gap fill, better take it. wouldn't chase it here. , prediction: 2, correct_label: 2, class_scores: [0.13780504 0.39193758 0.4702573 ], word_scores: ['$:0.0', 'hal:0.0', 'if:0.0', 'bulls:0.0', 'lucky:0.0', 'en:2.1442599518195493e-06', '##uf:0.0', '##f:0.0', 'to:2.886244146793615e-06', 'get:0.0', 'an:0.0', 'upside:0.0', 'gap:0.0', 'fill:0.0', ',:7.986737728060689e-06', 'better:0.0', 'take:2.0325496734585613e-06', 'it:3.3415778943890473e-06', '.:2.903296945078182e-06', 'wouldn:0.0', "':0.0", 't:0.0', 'chase:0.0', 'it:3.3415778943890473e-06', 'here:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('hal', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('bulls', tensor(0., device='cuda:0')), ('lucky', tensor(0., device='cuda:0')), ('enuff', tensor(0.1007, device='cuda:0')), ('to', tensor(0.1355, device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('fill', tensor(0., device='cuda:0')), (',', tensor(0.3751, device='cuda:0')), ('better', tensor(0., device='cuda:0')), ('take', tensor(0.0954, device='cuda:0')), ('it', tensor(0.1569, device='cuda:0')), ('.', tensor(0.1363, device='cuda:0'))],  word_scores_max: [('hal', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('bulls', tensor(0., device='cuda:0')), ('lucky', tensor(0., device='cuda:0')), ('enuff', tensor(0.1007, device='cuda:0')), ('to', tensor(0.1355, device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('fill', tensor(0., device='cuda:0')), (',', tensor(0.3751, device='cuda:0')), ('better', tensor(0., device='cuda:0')), ('take', tensor(0.0954, device='cuda:0')), ('it', tensor(0.1569, device='cuda:0')), ('.', tensor(0.1363, device='cuda:0'))]
idx: 973, example: ice said to start lining up financing for lse bidding war, prediction: 2, correct_label: 2, class_scores: [0.23163117 0.3798338  0.3885351 ], word_scores: ['ice:0.0', 'said:0.0', 'to:2.886244146793615e-06', 'start:0.0', 'lining:0.0', 'up:1.4959460941099678e-06', 'financing:0.0', 'for:0.0', 'l:0.0', '##se:0.0', 'bidding:0.0', 'war:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ice', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('lining', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('war', tensor(0., device='cuda:0'))],  word_scores_max: [('ice', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('lining', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('financing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('war', tensor(0., device='cuda:0'))]
idx: 974, example: rival companies $gwr and watco eyeing $ra w take-over interest.  , prediction: 2, correct_label: 1, class_scores: [0.1948186  0.38369164 0.42148972], word_scores: ['rival:0.0', 'companies:0.0', '$:0.0', 'g:0.0', '##wr:0.0', 'and:0.0', 'wat:0.0', '##co:0.0', 'eyeing:0.0', '$:0.0', 'ra:0.0', 'w:0.0', 'take:2.0325496734585613e-06', '-:4.821180027647642e-06', 'over:0.0', 'interest:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('rival', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('gwr', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('watco', tensor(0., device='cuda:0')), ('eyeing', tensor(0., device='cuda:0')), ('ra', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('take', tensor(0.2083, device='cuda:0')), ('-', tensor(0.4941, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('interest', tensor(0., device='cuda:0')), ('.', tensor(0.2976, device='cuda:0'))],  word_scores_max: [('rival', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('gwr', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('watco', tensor(0., device='cuda:0')), ('eyeing', tensor(0., device='cuda:0')), ('ra', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('take', tensor(0.2083, device='cuda:0')), ('-', tensor(0.4941, device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('interest', tensor(0., device='cuda:0')), ('.', tensor(0.2976, device='cuda:0'))]
idx: 975, example: update 1-bp shareholders back more disclosure on climate change risks, prediction: 2, correct_label: 2, class_scores: [0.268367   0.242529   0.48910406], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'bp:0.0', 'shareholders:0.0', 'back:0.0', 'more:0.0', 'disclosure:0.0', 'on:0.0', 'climate:0.0', 'change:0.0', 'risks:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('bp', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('disclosure', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('climate', tensor(0., device='cuda:0')), ('change', tensor(0., device='cuda:0')), ('risks', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('bp', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('disclosure', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('climate', tensor(0., device='cuda:0')), ('change', tensor(0., device='cuda:0')), ('risks', tensor(0., device='cuda:0'))]
idx: 976, example: rio tinto swings to loss, drops dividend policy, prediction: 2, correct_label: 0, class_scores: [0.2485342  0.35618204 0.39528373], word_scores: ['rio:0.0', 'tin:0.0', '##to:0.0', 'swings:0.0', 'to:2.886244146793615e-06', 'loss:0.0', ',:7.986737728060689e-06', 'drops:0.0', 'divide:0.0', '##nd:0.0', 'policy:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('rio', tensor(0., device='cuda:0')), ('tinto', tensor(0., device='cuda:0')), ('swings', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('drops', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('policy', tensor(0., device='cuda:0'))],  word_scores_max: [('rio', tensor(0., device='cuda:0')), ('tinto', tensor(0., device='cuda:0')), ('swings', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('loss', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('drops', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('policy', tensor(0., device='cuda:0'))]
idx: 977, example: $aapl  downgrade is bias. this stock is a buy., prediction: 2, correct_label: 1, class_scores: [0.19451995 0.36225122 0.44322878], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'down:0.0', '##grade:0.0', 'is:0.0', 'bias:0.0', '.:2.903296945078182e-06', 'this:0.0', 'stock:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'buy:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('downgrade', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('bias', tensor(0., device='cuda:0')), ('.', tensor(0.2011, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5977, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('.', tensor(0.2011, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('downgrade', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('bias', tensor(0., device='cuda:0')), ('.', tensor(0.2011, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5977, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('.', tensor(0.2011, device='cuda:0'))]
idx: 978, example: ea launches origin online game distribution for mac  via macrumors $ea, prediction: 1, correct_label: 2, class_scores: [0.14960852 0.42724544 0.423146  ], word_scores: ['ea:0.0', 'launches:0.0', 'origin:0.0', 'online:0.0', 'game:0.0', 'distribution:0.0', 'for:0.0', 'mac:0.0', 'via:0.0', 'mac:0.0', '##rum:0.0', '##ors:0.0', '$:0.0', 'ea:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ea', tensor(nan, device='cuda:0')), ('launches', tensor(nan, device='cuda:0')), ('origin', tensor(nan, device='cuda:0')), ('online', tensor(nan, device='cuda:0')), ('game', tensor(nan, device='cuda:0')), ('distribution', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('mac', tensor(nan, device='cuda:0')), ('via', tensor(nan, device='cuda:0')), ('macrumors', tensor(nan, device='cuda:0')), ('ea', tensor(nan, device='cuda:0'))],  word_scores_max: [('ea', tensor(nan, device='cuda:0')), ('launches', tensor(nan, device='cuda:0')), ('origin', tensor(nan, device='cuda:0')), ('online', tensor(nan, device='cuda:0')), ('game', tensor(nan, device='cuda:0')), ('distribution', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('mac', tensor(nan, device='cuda:0')), ('via', tensor(nan, device='cuda:0')), ('macrumors', tensor(nan, device='cuda:0')), ('ea', tensor(nan, device='cuda:0'))]
idx: 979, example: whitbread boss andy harrison defends sales fall as 'just a blip', prediction: 2, correct_label: 2, class_scores: [0.17535426 0.3364314  0.48821434], word_scores: ['w:0.0', '##hit:0.0', '##bread:0.0', 'boss:0.0', 'andy:0.0', 'harrison:0.0', 'defend:0.0', '##s:4.601175078278175e-06', 'sales:0.0', 'fall:0.0', 'as:0.0', "':0.0", 'just:0.0', 'a:8.62785782373976e-06', 'b:0.0', '##lip:0.0', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('whitbread', tensor(nan, device='cuda:0')), ('boss', tensor(nan, device='cuda:0')), ('andy', tensor(nan, device='cuda:0')), ('harrison', tensor(nan, device='cuda:0')), ('defends', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('fall', tensor(nan, device='cuda:0'))],  word_scores_max: [('whitbread', tensor(nan, device='cuda:0')), ('boss', tensor(nan, device='cuda:0')), ('andy', tensor(nan, device='cuda:0')), ('harrison', tensor(nan, device='cuda:0')), ('defends', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('fall', tensor(nan, device='cuda:0'))]
idx: 980, example: shire says internal synergy goals from baxalta deal higher, prediction: 2, correct_label: 2, class_scores: [0.16123591 0.394889   0.4438751 ], word_scores: ['shire:0.0', 'says:0.0', 'internal:0.0', 'syn:0.0', '##ergy:0.0', 'goals:0.0', 'from:4.495178018260049e-06', 'ba:0.0', '##xa:0.0', '##lta:0.0', 'deal:0.0', 'higher:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('shire', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('internal', tensor(0., device='cuda:0')), ('synergy', tensor(0., device='cuda:0')), ('goals', tensor(0., device='cuda:0')), ('from', tensor(1., device='cuda:0')), ('baxalta', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0'))],  word_scores_max: [('shire', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('internal', tensor(0., device='cuda:0')), ('synergy', tensor(0., device='cuda:0')), ('goals', tensor(0., device='cuda:0')), ('from', tensor(1., device='cuda:0')), ('baxalta', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0'))]
idx: 981, example: dixons carphone profit boost on strong sales, prediction: 2, correct_label: 1, class_scores: [0.21861346 0.3469017  0.4344848 ], word_scores: ['dixon:0.0', '##s:4.601175078278175e-06', 'carp:0.0', '##hone:0.0', 'profit:0.0', 'boost:0.0', 'on:0.0', 'strong:0.0', 'sales:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('dixons', tensor(nan, device='cuda:0')), ('carphone', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('boost', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0'))],  word_scores_max: [('dixons', tensor(nan, device='cuda:0')), ('carphone', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('boost', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0'))]
idx: 982, example: corrected-shire to buy dyax for about $5.9 bln, prediction: 2, correct_label: 1, class_scores: [0.23405851 0.32387653 0.44206497], word_scores: ['corrected:0.0', '-:4.821180027647642e-06', 'shire:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'd:0.0', '##ya:0.0', '##x:0.0', 'for:0.0', 'about:0.0', '$:0.0', '5:0.0', '.:2.903296945078182e-06', '9:0.0', 'b:0.0', '##ln:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('corrected', tensor(0., device='cuda:0')), ('-', tensor(0.4544, device='cuda:0')), ('shire', tensor(0., device='cuda:0')), ('to', tensor(0.2720, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('dyax', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.2736, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0'))],  word_scores_max: [('corrected', tensor(0., device='cuda:0')), ('-', tensor(0.4544, device='cuda:0')), ('shire', tensor(0., device='cuda:0')), ('to', tensor(0.2720, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('dyax', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.2736, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0'))]
idx: 983, example: preparing for a breakout trade in netflix $nflx   $$ , prediction: 2, correct_label: 1, class_scores: [0.22802718 0.342451   0.4295218 ], word_scores: ['preparing:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'breakout:0.0', 'trade:0.0', 'in:3.0217122457543155e-06', 'netflix:0.0', '$:0.0', 'nfl:0.0', '##x:0.0', '$:0.0', '$:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('preparing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.7406, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('in', tensor(0.2594, device='cuda:0')), ('netflix', tensor(0., device='cuda:0')), ('nflx', tensor(0., device='cuda:0'))],  word_scores_max: [('preparing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.7406, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('in', tensor(0.2594, device='cuda:0')), ('netflix', tensor(0., device='cuda:0')), ('nflx', tensor(0., device='cuda:0'))]
idx: 984, example: is it worth investing in tesco plc and prudential plc now?, prediction: 2, correct_label: 2, class_scores: [0.19892706 0.24048752 0.56058544], word_scores: ['is:0.0', 'it:3.3415778943890473e-06', 'worth:0.0', 'investing:0.0', 'in:3.0217122457543155e-06', 'te:0.0', '##sco:0.0', 'plc:0.0', 'and:0.0', 'pr:0.0', '##ude:0.0', '##ntial:0.0', 'plc:0.0', 'now:0.0', '?:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('is', tensor(0., device='cuda:0')), ('it', tensor(0.5251, device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('investing', tensor(0., device='cuda:0')), ('in', tensor(0.4749, device='cuda:0')), ('tesco', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('prudential', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))],  word_scores_max: [('is', tensor(0., device='cuda:0')), ('it', tensor(0.5251, device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('investing', tensor(0., device='cuda:0')), ('in', tensor(0.4749, device='cuda:0')), ('tesco', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('prudential', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))]
idx: 985, example: $yang double bottom 5.2, prediction: 2, correct_label: 2, class_scores: [0.2504877  0.35338944 0.39612293], word_scores: ['$:0.0', 'yang:0.0', 'double:0.0', 'bottom:0.0', '5:0.0', '.:2.903296945078182e-06', '2:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('yang', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('2', tensor(0., device='cuda:0'))],  word_scores_max: [('yang', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('2', tensor(0., device='cuda:0'))]
idx: 986, example: $sonc amazing run since middle of march - obvious that the quality/tastiness of their burgers is not being factored into this price advance, prediction: 2, correct_label: 1, class_scores: [0.17858143 0.40715954 0.41425905], word_scores: ['$:0.0', 'son:0.0', '##c:0.0', 'amazing:0.0', 'run:0.0', 'since:0.0', 'middle:0.0', 'of:3.4365734791208524e-06', 'march:0.0', '-:4.821180027647642e-06', 'obvious:0.0', 'that:1.5133816759771435e-06', 'the:6.3806996877247e-06', 'quality:0.0', '/:0.0', 'ta:0.0', '##sti:0.0', '##ness:0.0', 'of:3.4365734791208524e-06', 'their:0.0', 'burger:0.0', '##s:4.601175078278175e-06', 'is:0.0', 'not:0.0', 'being:0.0', 'factor:0.0', '##ed:0.0', 'into:0.0', 'this:0.0', 'price:0.0', 'advance:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sonc', tensor(0., device='cuda:0')), ('amazing', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('of', tensor(0.1754, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('-', tensor(0.2461, device='cuda:0')), ('obvious', tensor(0., device='cuda:0')), ('that', tensor(0.0773, device='cuda:0')), ('the', tensor(0.3257, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('tastiness', tensor(0., device='cuda:0')), ('of', tensor(0.1754, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('burgers', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('factored', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('advance', tensor(0., device='cuda:0'))],  word_scores_max: [('sonc', tensor(0., device='cuda:0')), ('amazing', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('middle', tensor(0., device='cuda:0')), ('of', tensor(0.1754, device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('-', tensor(0.2461, device='cuda:0')), ('obvious', tensor(0., device='cuda:0')), ('that', tensor(0.0773, device='cuda:0')), ('the', tensor(0.3257, device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('tastiness', tensor(0., device='cuda:0')), ('of', tensor(0.1754, device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('burgers', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('factored', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('advance', tensor(0., device='cuda:0'))]
idx: 987, example: tesco share price tumbles after negative broker note, prediction: 2, correct_label: 0, class_scores: [0.12178764 0.36264306 0.51556927], word_scores: ['te:0.0', '##sco:0.0', 'share:0.0', 'price:0.0', 'tumble:0.0', '##s:4.601175078278175e-06', 'after:0.0', 'negative:0.0', 'broker:0.0', 'note:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('negative', tensor(nan, device='cuda:0')), ('broker', tensor(nan, device='cuda:0')), ('note', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('negative', tensor(nan, device='cuda:0')), ('broker', tensor(nan, device='cuda:0')), ('note', tensor(nan, device='cuda:0'))]
idx: 988, example: @binkster69 not that. it's just er's lol. but looking at the correlation of $aria and foreign price charts, they are all poised to breakout., prediction: 2, correct_label: 1, class_scores: [0.20255005 0.3640829  0.43336695], word_scores: ['@:0.0', 'bin:0.0', '##ks:0.0', '##ter:0.0', '##6:0.0', '##9:0.0', 'not:0.0', 'that:1.5133816759771435e-06', '.:2.903296945078182e-06', 'it:3.3415778943890473e-06', "':0.0", 's:0.0', 'just:0.0', 'er:0.0', "':0.0", 's:0.0', 'lo:0.0', '##l:0.0', '.:2.903296945078182e-06', 'but:0.0', 'looking:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'correlation:0.0', 'of:3.4365734791208524e-06', '$:0.0', 'aria:0.0', 'and:0.0', 'foreign:0.0', 'price:0.0', 'charts:0.0', ',:7.986737728060689e-06', 'they:0.0', 'are:0.0', 'all:0.0', 'poised:0.0', 'to:2.886244146793615e-06', 'breakout:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('binkster69', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('that', tensor(0.3427, device='cuda:0')), ('.', tensor(0.6573, device='cuda:0'))],  word_scores_max: [('binkster69', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('that', tensor(0.3427, device='cuda:0')), ('.', tensor(0.6573, device='cuda:0'))]
idx: 989, example: $tsla recalls 2,700 model x vehicles; shares volatile  #tsla #tech #stockmarket , prediction: 2, correct_label: 0, class_scores: [0.2278186  0.33197215 0.4402093 ], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'recalls:0.0', '2:0.0', ',:7.986737728060689e-06', '700:0.0', 'model:0.0', 'x:0.0', 'vehicles:0.0', ';:0.0', 'shares:0.0', 'volatile:0.0', '#:0.0', 'ts:0.0', '##la:0.0', '#:0.0', 'tech:0.0', '#:0.0', 'stock:0.0', '##market:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('recalls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('vehicles', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('volatile', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('tech', tensor(0., device='cuda:0')), ('stockmarket', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('recalls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('vehicles', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('volatile', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('tech', tensor(0., device='cuda:0')), ('stockmarket', tensor(0., device='cuda:0'))]
idx: 990, example: $aapl beat the estimates. will still go down on lack of new products. , prediction: 2, correct_label: 2, class_scores: [0.25042567 0.35961246 0.38996184], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'beat:0.0', 'the:6.3806996877247e-06', 'estimates:0.0', '.:2.903296945078182e-06', 'will:4.073096533829812e-06', 'still:0.0', 'go:0.0', 'down:0.0', 'on:0.0', 'lack:0.0', 'of:3.4365734791208524e-06', 'new:2.798587502184091e-06', 'products:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('beat', tensor(0., device='cuda:0')), ('the', tensor(0.2836, device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('will', tensor(0.1811, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('lack', tensor(0., device='cuda:0')), ('of', tensor(0.1528, device='cuda:0')), ('new', tensor(0.1244, device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('beat', tensor(0., device='cuda:0')), ('the', tensor(0.2836, device='cuda:0')), ('estimates', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0')), ('will', tensor(0.1811, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('lack', tensor(0., device='cuda:0')), ('of', tensor(0.1528, device='cuda:0')), ('new', tensor(0.1244, device='cuda:0')), ('products', tensor(0., device='cuda:0')), ('.', tensor(0.1291, device='cuda:0'))]
idx: 991, example: $aapl  clearing this descending trend line / buy area now, prediction: 2, correct_label: 1, class_scores: [0.14261697 0.4072033  0.45017976], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'clearing:0.0', 'this:0.0', 'descending:0.0', 'trend:0.0', 'line:0.0', '/:0.0', 'buy:0.0', 'area:0.0', 'now:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(nan, device='cuda:0')), ('clearing', tensor(nan, device='cuda:0')), ('this', tensor(nan, device='cuda:0')), ('descending', tensor(nan, device='cuda:0')), ('trend', tensor(nan, device='cuda:0')), ('line', tensor(nan, device='cuda:0')), ('buy', tensor(nan, device='cuda:0')), ('area', tensor(nan, device='cuda:0')), ('now', tensor(nan, device='cuda:0'))],  word_scores_max: [('aapl', tensor(nan, device='cuda:0')), ('clearing', tensor(nan, device='cuda:0')), ('this', tensor(nan, device='cuda:0')), ('descending', tensor(nan, device='cuda:0')), ('trend', tensor(nan, device='cuda:0')), ('line', tensor(nan, device='cuda:0')), ('buy', tensor(nan, device='cuda:0')), ('area', tensor(nan, device='cuda:0')), ('now', tensor(nan, device='cuda:0'))]
idx: 992, example: itv to pursue takeover of canada's entertainment one: bloomberg, prediction: 1, correct_label: 2, class_scores: [0.16024369 0.47514603 0.36461034], word_scores: ['itv:0.0', 'to:2.886244146793615e-06', 'pursue:0.0', 'takeover:0.0', 'of:3.4365734791208524e-06', 'canada:0.0', "':0.0", 's:0.0', 'entertainment:0.0', 'one:4.584404450724833e-06', '::0.0', 'bloomberg:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('itv', tensor(0., device='cuda:0')), ('to', tensor(0.4565, device='cuda:0')), ('pursue', tensor(0., device='cuda:0')), ('takeover', tensor(0., device='cuda:0')), ('of', tensor(0.5435, device='cuda:0'))],  word_scores_max: [('itv', tensor(0., device='cuda:0')), ('to', tensor(0.4565, device='cuda:0')), ('pursue', tensor(0., device='cuda:0')), ('takeover', tensor(0., device='cuda:0')), ('of', tensor(0.5435, device='cuda:0'))]
idx: 993, example: $csx is up today to report.  wall street is expecting eps to be at $0.37, and revenues at $2,732b., prediction: 2, correct_label: 1, class_scores: [0.1980738  0.33196282 0.4699634 ], word_scores: ['$:0.0', 'cs:0.0', '##x:0.0', 'is:0.0', 'up:1.4959460941099678e-06', 'today:0.0', 'to:2.886244146793615e-06', 'report:0.0', '.:2.903296945078182e-06', 'wall:0.0', 'street:0.0', 'is:0.0', 'expecting:0.0', 'eps:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'at:0.0', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '37:0.0', ',:7.986737728060689e-06', 'and:0.0', 'revenues:0.0', 'at:0.0', '$:0.0', '2:0.0', ',:7.986737728060689e-06', '73:0.0', '##2:0.0', '##b:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('csx', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('up', tensor(0.0468, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('to', tensor(0.0903, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0')), ('wall', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expecting', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('to', tensor(0.0903, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0')), ('37', tensor(0., device='cuda:0')), (',', tensor(0.2500, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.2500, device='cuda:0')), ('732b', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0'))],  word_scores_max: [('csx', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('up', tensor(0.0468, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('to', tensor(0.0903, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0')), ('wall', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expecting', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('to', tensor(0.0903, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0')), ('37', tensor(0., device='cuda:0')), (',', tensor(0.2500, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('revenues', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.2500, device='cuda:0')), ('732b', tensor(0., device='cuda:0')), ('.', tensor(0.0909, device='cuda:0'))]
idx: 994, example: update 1-lloyds to cut 945 jobs as part of 3-year restructuring plan, prediction: 2, correct_label: 2, class_scores: [0.15465888 0.36406538 0.48127568], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'lloyd:0.0', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', 'cut:0.0', '94:0.0', '##5:0.0', 'jobs:0.0', 'as:0.0', 'part:0.0', 'of:3.4365734791208524e-06', '3:0.0', '-:4.821180027647642e-06', 'year:0.0', 'restructuring:0.0', 'plan:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('lloyds', tensor(0., device='cuda:0')), ('to', tensor(0.1808, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('945', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.2153, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('restructuring', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('lloyds', tensor(0., device='cuda:0')), ('to', tensor(0.1808, device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('945', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('of', tensor(0.2153, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('restructuring', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0'))]
idx: 995, example: pnc, goldman sachs receive dividend hike green light (but don't act):  $pnc $gs, prediction: 1, correct_label: 2, class_scores: [0.15236305 0.44606906 0.40156788], word_scores: ['p:0.0', '##nc:0.0', ',:7.986737728060689e-06', 'goldman:0.0', 'sachs:0.0', 'receive:0.0', 'divide:0.0', '##nd:0.0', 'hike:0.0', 'green:0.0', 'light:0.0', '(:0.0', 'but:0.0', 'don:0.0', "':0.0", 't:0.0', 'act:0.0', '):0.0', '::0.0', '$:0.0', 'p:0.0', '##nc:0.0', '$:0.0', 'gs:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pnc', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('goldman', tensor(0., device='cuda:0')), ('sachs', tensor(0., device='cuda:0')), ('receive', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('hike', tensor(0., device='cuda:0')), ('green', tensor(0., device='cuda:0')), ('light', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0'))],  word_scores_max: [('pnc', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('goldman', tensor(0., device='cuda:0')), ('sachs', tensor(0., device='cuda:0')), ('receive', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('hike', tensor(0., device='cuda:0')), ('green', tensor(0., device='cuda:0')), ('light', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0'))]
idx: 996, example: $aapl i am big out from this. seems its falling towards 530.. :(, prediction: 1, correct_label: 0, class_scores: [0.18195535 0.41807705 0.39996764], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'i:0.0', 'am:0.0', 'big:0.0', 'out:0.0', 'from:4.495178018260049e-06', 'this:0.0', '.:2.903296945078182e-06', 'seems:0.0', 'its:1.7191393908433383e-06', 'falling:0.0', 'towards:0.0', '530:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '::0.0', '(:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('from', tensor(0.3012, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('.', tensor(0.1945, device='cuda:0')), ('seems', tensor(0., device='cuda:0')), ('its', tensor(0.1152, device='cuda:0')), ('falling', tensor(0., device='cuda:0')), ('towards', tensor(0., device='cuda:0')), ('530', tensor(0., device='cuda:0')), ('.', tensor(0.1945, device='cuda:0')), ('.', tensor(0.1945, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('from', tensor(0.3012, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('.', tensor(0.1945, device='cuda:0')), ('seems', tensor(0., device='cuda:0')), ('its', tensor(0.1152, device='cuda:0')), ('falling', tensor(0., device='cuda:0')), ('towards', tensor(0., device='cuda:0')), ('530', tensor(0., device='cuda:0')), ('.', tensor(0.1945, device='cuda:0')), ('.', tensor(0.1945, device='cuda:0'))]
idx: 997, example: rbs chairman admits surprise at size of regulatory penalties, prediction: 1, correct_label: 2, class_scores: [0.14086601 0.45498857 0.4041454 ], word_scores: ['rb:0.0', '##s:4.601175078278175e-06', 'chairman:3.5376444884605007e-06', 'admits:0.0', 'surprise:0.0', 'at:0.0', 'size:0.0', 'of:3.4365734791208524e-06', 'regulatory:0.0', 'penalties:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('rbs', tensor(0., device='cuda:0')), ('chairman', tensor(0.5072, device='cuda:0')), ('admits', tensor(0., device='cuda:0')), ('surprise', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('of', tensor(0.4928, device='cuda:0')), ('regulatory', tensor(0., device='cuda:0')), ('penalties', tensor(0., device='cuda:0'))],  word_scores_max: [('rbs', tensor(0., device='cuda:0')), ('chairman', tensor(0.5072, device='cuda:0')), ('admits', tensor(0., device='cuda:0')), ('surprise', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('size', tensor(0., device='cuda:0')), ('of', tensor(0.4928, device='cuda:0')), ('regulatory', tensor(0., device='cuda:0')), ('penalties', tensor(0., device='cuda:0'))]
idx: 998, example: $hznp havent seen vol like this since the runup. lets see one more dip to 2.0x, prediction: 2, correct_label: 2, class_scores: [0.17482159 0.3814308  0.44374764], word_scores: ['$:0.0', 'hz:0.0', '##np:0.0', 'haven:0.0', '##t:0.0', 'seen:0.0', 'vol:0.0', 'like:0.0', 'this:0.0', 'since:0.0', 'the:6.3806996877247e-06', 'run:0.0', '##up:0.0', '.:2.903296945078182e-06', 'lets:0.0', 'see:0.0', 'one:4.584404450724833e-06', 'more:0.0', 'dip:0.0', 'to:2.886244146793615e-06', '2:0.0', '.:2.903296945078182e-06', '0:0.0', '##x:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('hznp', tensor(0., device='cuda:0')), ('havent', tensor(0., device='cuda:0')), ('seen', tensor(0., device='cuda:0')), ('vol', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('the', tensor(0.3246, device='cuda:0')), ('runup', tensor(0., device='cuda:0')), ('.', tensor(0.1477, device='cuda:0')), ('lets', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('one', tensor(0.2332, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('dip', tensor(0., device='cuda:0')), ('to', tensor(0.1468, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1477, device='cuda:0')), ('0x', tensor(0., device='cuda:0'))],  word_scores_max: [('hznp', tensor(0., device='cuda:0')), ('havent', tensor(0., device='cuda:0')), ('seen', tensor(0., device='cuda:0')), ('vol', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('the', tensor(0.3246, device='cuda:0')), ('runup', tensor(0., device='cuda:0')), ('.', tensor(0.1477, device='cuda:0')), ('lets', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('one', tensor(0.2332, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('dip', tensor(0., device='cuda:0')), ('to', tensor(0.1468, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1477, device='cuda:0')), ('0x', tensor(0., device='cuda:0'))]
idx: 999, example: johnson matthey revs up on clean air drive, prediction: 2, correct_label: 2, class_scores: [0.24314842 0.26276132 0.49409032], word_scores: ['johnson:0.0', 'matt:0.0', '##hey:0.0', 'rev:0.0', '##s:4.601175078278175e-06', 'up:1.4959460941099678e-06', 'on:0.0', 'clean:0.0', 'air:0.0', 'drive:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('johnson', tensor(0., device='cuda:0')), ('matthey', tensor(0., device='cuda:0')), ('revs', tensor(0., device='cuda:0')), ('up', tensor(1., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('clean', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('drive', tensor(0., device='cuda:0'))],  word_scores_max: [('johnson', tensor(0., device='cuda:0')), ('matthey', tensor(0., device='cuda:0')), ('revs', tensor(0., device='cuda:0')), ('up', tensor(1., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('clean', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('drive', tensor(0., device='cuda:0'))]
idx: 1000, example: update 5-barclays chairman mcfarlane axes ceo to speed up strategic change, prediction: 2, correct_label: 2, class_scores: [0.21835256 0.36684784 0.41479966], word_scores: ['update:0.0', '5:0.0', '-:4.821180027647642e-06', 'barclay:0.0', '##s:4.601175078278175e-06', 'chairman:3.5376444884605007e-06', 'mc:0.0', '##farlane:0.0', 'axes:0.0', 'ceo:0.0', 'to:2.886244146793615e-06', 'speed:0.0', 'up:1.4959460941099678e-06', 'strategic:0.0', 'change:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(0.3784, device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), ('chairman', tensor(0.2777, device='cuda:0')), ('mcfarlane', tensor(0., device='cuda:0')), ('axes', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('to', tensor(0.2265, device='cuda:0')), ('speed', tensor(0., device='cuda:0')), ('up', tensor(0.1174, device='cuda:0')), ('strategic', tensor(0., device='cuda:0')), ('change', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(0.3784, device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), ('chairman', tensor(0.2777, device='cuda:0')), ('mcfarlane', tensor(0., device='cuda:0')), ('axes', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('to', tensor(0.2265, device='cuda:0')), ('speed', tensor(0., device='cuda:0')), ('up', tensor(0.1174, device='cuda:0')), ('strategic', tensor(0., device='cuda:0')), ('change', tensor(0., device='cuda:0'))]
idx: 1001, example: naturalgas settles at 3-year low $dbo $bno  , prediction: 2, correct_label: 0, class_scores: [0.29162806 0.34224313 0.36612877], word_scores: ['natural:0.0', '##gas:0.0', 'settles:0.0', 'at:0.0', '3:0.0', '-:4.821180027647642e-06', 'year:0.0', 'low:0.0', '$:0.0', 'db:0.0', '##o:0.0', '$:0.0', 'bn:0.0', '##o:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('naturalgas', tensor(0., device='cuda:0')), ('settles', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('dbo', tensor(0., device='cuda:0')), ('bno', tensor(0., device='cuda:0'))],  word_scores_max: [('naturalgas', tensor(0., device='cuda:0')), ('settles', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('dbo', tensor(0., device='cuda:0')), ('bno', tensor(0., device='cuda:0'))]
idx: 1002, example: $yhoo about to break out on the 5-min..., prediction: 2, correct_label: 2, class_scores: [0.16456339 0.3865118  0.44892484], word_scores: ['$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', 'about:0.0', 'to:2.886244146793615e-06', 'break:0.0', 'out:0.0', 'on:0.0', 'the:6.3806996877247e-06', '5:0.0', '-:4.821180027647642e-06', 'min:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('yhoo', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.1266, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2799, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(0.2115, device='cuda:0')), ('min', tensor(0., device='cuda:0')), ('.', tensor(0.1273, device='cuda:0')), ('.', tensor(0.1273, device='cuda:0')), ('.', tensor(0.1273, device='cuda:0'))],  word_scores_max: [('yhoo', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.1266, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2799, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(0.2115, device='cuda:0')), ('min', tensor(0., device='cuda:0')), ('.', tensor(0.1273, device='cuda:0')), ('.', tensor(0.1273, device='cuda:0')), ('.', tensor(0.1273, device='cuda:0'))]
idx: 1003, example: $mflx up  pre mkt. looks like gap has been filled....lookin 4 short opt here, prediction: 2, correct_label: 0, class_scores: [0.263357   0.29875368 0.43788937], word_scores: ['$:0.0', 'm:0.0', '##fl:0.0', '##x:0.0', 'up:1.4959460941099678e-06', 'pre:0.0', 'mk:0.0', '##t:0.0', '.:2.903296945078182e-06', 'looks:0.0', 'like:0.0', 'gap:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'filled:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'look:0.0', '##in:0.0', '4:0.0', 'short:0.0', 'opt:0.0', 'here:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('mflx', tensor(0., device='cuda:0')), ('up', tensor(0.0682, device='cuda:0')), ('pre', tensor(0., device='cuda:0')), ('mkt', tensor(0., device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('has', tensor(0.2700, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('filled', tensor(0., device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('lookin', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('opt', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0'))],  word_scores_max: [('mflx', tensor(0., device='cuda:0')), ('up', tensor(0.0682, device='cuda:0')), ('pre', tensor(0., device='cuda:0')), ('mkt', tensor(0., device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('has', tensor(0.2700, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('filled', tensor(0., device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('.', tensor(0.1324, device='cuda:0')), ('lookin', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('opt', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0'))]
idx: 1004, example: bhp billiton share price: brazil to sue samarco for â£3.5bn, prediction: 1, correct_label: 0, class_scores: [0.2555731  0.37645185 0.36797512], word_scores: ['bhp:0.0', 'bill:0.0', '##ito:0.0', '##n:0.0', 'share:0.0', 'price:0.0', '::0.0', 'brazil:0.0', 'to:2.886244146793615e-06', 'sue:0.0', 'sam:0.0', '##ar:0.0', '##co:0.0', 'for:0.0', 'a:8.62785782373976e-06', '##£:0.0', '##3:0.0', '.:2.903296945078182e-06', '5:0.0', '##bn:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bhp', tensor(0., device='cuda:0')), ('billiton', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('to', tensor(0.2507, device='cuda:0')), ('sue', tensor(0., device='cuda:0')), ('samarco', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.7493, device='cuda:0'))],  word_scores_max: [('bhp', tensor(0., device='cuda:0')), ('billiton', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('brazil', tensor(0., device='cuda:0')), ('to', tensor(0.2507, device='cuda:0')), ('sue', tensor(0., device='cuda:0')), ('samarco', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.7493, device='cuda:0'))]
idx: 1005, example: citrix systems inc $ctxs position increased by mizuho…  @sharestocknews, prediction: 2, correct_label: 1, class_scores: [0.16771843 0.37994698 0.45233458], word_scores: ['ci:0.0', '##trix:0.0', 'systems:0.0', 'inc:0.0', '$:0.0', 'ct:0.0', '##x:0.0', '##s:4.601175078278175e-06', 'position:0.0', 'increased:0.0', 'by:0.0', 'mi:0.0', '##zu:0.0', '##ho:0.0', '…:0.0', '@:0.0', 'shares:0.0', '##tock:0.0', '##ne:8.183636964531615e-06', '##ws:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('citrix', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('ctxs', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('mizuho', tensor(0., device='cuda:0')), ('sharestocknews', tensor(1., device='cuda:0'))],  word_scores_max: [('citrix', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('ctxs', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('increased', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('mizuho', tensor(0., device='cuda:0')), ('sharestocknews', tensor(1., device='cuda:0'))]
idx: 1006, example: $tsla weakest in todays dt watchlist, prediction: 2, correct_label: 0, class_scores: [0.17923579 0.27941296 0.5413512 ], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'weak:0.0', '##est:0.0', 'in:3.0217122457543155e-06', 'today:0.0', '##s:4.601175078278175e-06', 'dt:0.0', 'watch:0.0', '##list:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('weakest', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('todays', tensor(0., device='cuda:0')), ('dt', tensor(0., device='cuda:0')), ('watchlist', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('weakest', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('todays', tensor(0., device='cuda:0')), ('dt', tensor(0., device='cuda:0')), ('watchlist', tensor(0., device='cuda:0'))]
idx: 1007, example: slump in weir leads ftse down from record high, prediction: 1, correct_label: 0, class_scores: [0.24726976 0.43562376 0.31710654], word_scores: ['slump:0.0', 'in:3.0217122457543155e-06', 'weir:0.0', 'leads:0.0', 'ft:0.0', '##se:0.0', 'down:0.0', 'from:4.495178018260049e-06', 'record:0.0', 'high:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('slump', tensor(0., device='cuda:0')), ('in', tensor(0.4020, device='cuda:0')), ('weir', tensor(0., device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.5980, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0'))],  word_scores_max: [('slump', tensor(0., device='cuda:0')), ('in', tensor(0.4020, device='cuda:0')), ('weir', tensor(0., device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.5980, device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0'))]
idx: 1008, example: $chkp abc bullish pattern, targets , prediction: 2, correct_label: 1, class_scores: [0.18761885 0.31388152 0.4984997 ], word_scores: ['$:0.0', 'ch:0.0', '##k:0.0', '##p:0.0', 'abc:0.0', 'bull:0.0', '##ish:0.0', 'pattern:0.0', ',:7.986737728060689e-06', 'targets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('chkp', tensor(0., device='cuda:0')), ('abc', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('pattern', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('targets', tensor(0., device='cuda:0'))],  word_scores_max: [('chkp', tensor(0., device='cuda:0')), ('abc', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('pattern', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('targets', tensor(0., device='cuda:0'))]
idx: 1009, example: $wx decent pull back . ., prediction: 2, correct_label: 2, class_scores: [0.21347116 0.33947217 0.44705662], word_scores: ['$:0.0', 'w:0.0', '##x:0.0', 'decent:0.0', 'pull:0.0', 'back:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('wx', tensor(0., device='cuda:0')), ('decent', tensor(0., device='cuda:0')), ('pull', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('.', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('wx', tensor(0., device='cuda:0')), ('decent', tensor(0., device='cuda:0')), ('pull', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('.', tensor(0.5000, device='cuda:0'))]
idx: 1010, example: $gpro down 25% since tue morning., prediction: 2, correct_label: 0, class_scores: [0.16904928 0.27204886 0.55890185], word_scores: ['$:0.0', 'gp:0.0', '##ro:0.0', 'down:0.0', '25:0.0', '%:0.0', 'since:0.0', 'tu:3.6499097859632457e-06', '##e:0.0', 'morning:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('gpro', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('tue', tensor(0.5570, device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('.', tensor(0.4430, device='cuda:0'))],  word_scores_max: [('gpro', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('tue', tensor(0.5570, device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('.', tensor(0.4430, device='cuda:0'))]
idx: 1011, example: $line biggies must be loading up here at lows.., prediction: 2, correct_label: 1, class_scores: [0.1769172  0.3376273  0.48545557], word_scores: ['$:0.0', 'line:0.0', 'big:0.0', '##gies:0.0', 'must:0.0', 'be:0.0', 'loading:0.0', 'up:1.4959460941099678e-06', 'here:0.0', 'at:0.0', 'low:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('line', tensor(0., device='cuda:0')), ('biggies', tensor(0., device='cuda:0')), ('must', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('loading', tensor(0., device='cuda:0')), ('up', tensor(0.2049, device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('lows', tensor(0., device='cuda:0')), ('.', tensor(0.3976, device='cuda:0')), ('.', tensor(0.3976, device='cuda:0'))],  word_scores_max: [('line', tensor(0., device='cuda:0')), ('biggies', tensor(0., device='cuda:0')), ('must', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('loading', tensor(0., device='cuda:0')), ('up', tensor(0.2049, device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('lows', tensor(0., device='cuda:0')), ('.', tensor(0.3976, device='cuda:0')), ('.', tensor(0.3976, device='cuda:0'))]
idx: 1012, example: astrazeneca and daiichi sankyo to jointly commercialise movantik in the us, prediction: 2, correct_label: 1, class_scores: [0.23065084 0.38329247 0.38605666], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'and:0.0', 'dai:0.0', '##ichi:0.0', 'sank:0.0', '##yo:0.0', 'to:2.886244146793615e-06', 'jointly:0.0', 'commercial:0.0', '##ise:0.0', 'mo:0.0', '##vant:0.0', '##ik:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'us:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('daiichi', tensor(0., device='cuda:0')), ('sankyo', tensor(0., device='cuda:0')), ('to', tensor(0.2349, device='cuda:0')), ('jointly', tensor(0., device='cuda:0')), ('commercialise', tensor(0., device='cuda:0')), ('movantik', tensor(0., device='cuda:0')), ('in', tensor(0.2459, device='cuda:0')), ('the', tensor(0.5192, device='cuda:0')), ('us', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('daiichi', tensor(0., device='cuda:0')), ('sankyo', tensor(0., device='cuda:0')), ('to', tensor(0.2349, device='cuda:0')), ('jointly', tensor(0., device='cuda:0')), ('commercialise', tensor(0., device='cuda:0')), ('movantik', tensor(0., device='cuda:0')), ('in', tensor(0.2459, device='cuda:0')), ('the', tensor(0.5192, device='cuda:0')), ('us', tensor(0., device='cuda:0'))]
idx: 1013, example: is #facebook's user engagement falling?  $fb , prediction: 2, correct_label: 0, class_scores: [0.33684608 0.30693612 0.3562178 ], word_scores: ['is:0.0', '#:0.0', 'facebook:0.0', "':0.0", 's:0.0', 'user:0.0', 'engagement:0.0', 'falling:0.0', '?:0.0', '$:0.0', 'f:0.0', '##b:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('is', tensor(nan, device='cuda:0'))],  word_scores_max: [('is', tensor(nan, device='cuda:0'))]
idx: 1014, example: $pcln runs into the 50sma on the acquisition news, prediction: 2, correct_label: 1, class_scores: [0.26208982 0.3264854  0.41142482], word_scores: ['$:0.0', 'pc:0.0', '##ln:0.0', 'runs:0.0', 'into:0.0', 'the:6.3806996877247e-06', '50:0.0', '##sma:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'acquisition:0.0', 'news:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('pcln', tensor(0., device='cuda:0')), ('runs', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('50sma', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0'))],  word_scores_max: [('pcln', tensor(0., device='cuda:0')), ('runs', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('50sma', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5000, device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0'))]
idx: 1015, example: $edu bouncing nicely after add-on (posted), prediction: 1, correct_label: 1, class_scores: [0.23297009 0.41851106 0.34851888], word_scores: ['$:0.0', 'ed:0.0', '##u:0.0', 'bouncing:0.0', 'nicely:0.0', 'after:0.0', 'add:0.0', '-:4.821180027647642e-06', 'on:0.0', '(:0.0', 'posted:0.0', '):0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('edu', tensor(0., device='cuda:0')), ('bouncing', tensor(0., device='cuda:0')), ('nicely', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0'))],  word_scores_max: [('edu', tensor(0., device='cuda:0')), ('bouncing', tensor(0., device='cuda:0')), ('nicely', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('posted', tensor(0., device='cuda:0'))]
idx: 1016, example: $fb bot some @78.47 breakout from the consolidation zone :d, prediction: 2, correct_label: 1, class_scores: [0.22488213 0.23180299 0.54331493], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'bot:0.0', 'some:0.0', '@:0.0', '78:0.0', '.:2.903296945078182e-06', '47:0.0', 'breakout:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'consolidation:0.0', 'zone:0.0', '::0.0', 'd:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('bot', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('78', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0')), ('47', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('from', tensor(0.3262, device='cuda:0')), ('the', tensor(0.4631, device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('d', tensor(0., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('bot', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('78', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0')), ('47', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('from', tensor(0.3262, device='cuda:0')), ('the', tensor(0.4631, device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('d', tensor(0., device='cuda:0'))]
idx: 1017, example: miners meltdown as bhp to rio tinto sink in commodities rout, prediction: 2, correct_label: 0, class_scores: [0.21338499 0.30651984 0.48009524], word_scores: ['miners:0.0', 'melt:0.0', '##down:0.0', 'as:0.0', 'bhp:0.0', 'to:2.886244146793615e-06', 'rio:0.0', 'tin:0.0', '##to:0.0', 'sink:0.0', 'in:3.0217122457543155e-06', 'commodities:0.0', 'ro:0.0', '##ut:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('miners', tensor(0., device='cuda:0')), ('meltdown', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bhp', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('rio', tensor(0., device='cuda:0')), ('tinto', tensor(0., device='cuda:0')), ('sink', tensor(0., device='cuda:0')), ('in', tensor(0.5115, device='cuda:0')), ('commodities', tensor(0., device='cuda:0')), ('rout', tensor(0., device='cuda:0'))],  word_scores_max: [('miners', tensor(0., device='cuda:0')), ('meltdown', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bhp', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('rio', tensor(0., device='cuda:0')), ('tinto', tensor(0., device='cuda:0')), ('sink', tensor(0., device='cuda:0')), ('in', tensor(0.5115, device='cuda:0')), ('commodities', tensor(0., device='cuda:0')), ('rout', tensor(0., device='cuda:0'))]
idx: 1018, example: peroni and grolsch put up for sale as ab inbev plans acquisition of sabmiller, prediction: 2, correct_label: 1, class_scores: [0.20184667 0.3660919  0.43206146], word_scores: ['per:0.0', '##oni:0.0', 'and:0.0', 'gr:0.0', '##ols:0.0', '##ch:0.0', 'put:0.0', 'up:1.4959460941099678e-06', 'for:0.0', 'sale:0.0', 'as:0.0', 'ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'plans:0.0', 'acquisition:0.0', 'of:3.4365734791208524e-06', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('peroni', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grolsch', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('up', tensor(0.1881, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.3799, device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('of', tensor(0.4320, device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0'))],  word_scores_max: [('peroni', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('grolsch', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('up', tensor(0.1881, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.3799, device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0')), ('of', tensor(0.4320, device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0'))]
idx: 1019, example: $wac trade continuing very nicely from yesterday, almost up $3 from yesterday entry, deal pricing tonight looking very strong here... $spy, prediction: 2, correct_label: 1, class_scores: [0.18026474 0.38701272 0.43272257], word_scores: ['$:0.0', 'wa:0.0', '##c:0.0', 'trade:0.0', 'continuing:0.0', 'very:0.0', 'nicely:0.0', 'from:4.495178018260049e-06', 'yesterday:0.0', ',:7.986737728060689e-06', 'almost:0.0', 'up:1.4959460941099678e-06', '$:0.0', '3:0.0', 'from:4.495178018260049e-06', 'yesterday:0.0', 'entry:0.0', ',:7.986737728060689e-06', 'deal:0.0', 'pricing:0.0', 'tonight:0.0', 'looking:0.0', 'very:0.0', 'strong:0.0', 'here:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '$:0.0', 'spy:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('wac', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('continuing', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('nicely', tensor(0., device='cuda:0')), ('from', tensor(0.1278, device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.2271, device='cuda:0')), ('almost', tensor(0., device='cuda:0')), ('up', tensor(0.0425, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('from', tensor(0.1278, device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('entry', tensor(0., device='cuda:0')), (',', tensor(0.2271, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('pricing', tensor(0., device='cuda:0')), ('tonight', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('spy', tensor(0., device='cuda:0'))],  word_scores_max: [('wac', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('continuing', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('nicely', tensor(0., device='cuda:0')), ('from', tensor(0.1278, device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.2271, device='cuda:0')), ('almost', tensor(0., device='cuda:0')), ('up', tensor(0.0425, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('from', tensor(0.1278, device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), ('entry', tensor(0., device='cuda:0')), (',', tensor(0.2271, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('pricing', tensor(0., device='cuda:0')), ('tonight', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('spy', tensor(0., device='cuda:0'))]
idx: 1020, example: press: serco set to appoint roy gardner, ex-centrica, as chairman - ft, prediction: 2, correct_label: 2, class_scores: [0.22071902 0.34847307 0.43080786], word_scores: ['press:0.0', '::0.0', 'ser:0.0', '##co:0.0', 'set:0.0', 'to:2.886244146793615e-06', 'appoint:0.0', 'roy:0.0', 'gardner:0.0', ',:7.986737728060689e-06', 'ex:0.0', '-:4.821180027647642e-06', 'cent:0.0', '##rica:0.0', ',:7.986737728060689e-06', 'as:0.0', 'chairman:3.5376444884605007e-06', '-:4.821180027647642e-06', 'ft:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('press', tensor(0., device='cuda:0')), ('serco', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('to', tensor(0.0901, device='cuda:0')), ('appoint', tensor(0., device='cuda:0')), ('roy', tensor(0., device='cuda:0')), ('gardner', tensor(0., device='cuda:0')), (',', tensor(0.2493, device='cuda:0')), ('ex', tensor(0., device='cuda:0')), ('-', tensor(0.1505, device='cuda:0')), ('centrica', tensor(0., device='cuda:0')), (',', tensor(0.2493, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('chairman', tensor(0.1104, device='cuda:0')), ('-', tensor(0.1505, device='cuda:0')), ('ft', tensor(0., device='cuda:0'))],  word_scores_max: [('press', tensor(0., device='cuda:0')), ('serco', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('to', tensor(0.0901, device='cuda:0')), ('appoint', tensor(0., device='cuda:0')), ('roy', tensor(0., device='cuda:0')), ('gardner', tensor(0., device='cuda:0')), (',', tensor(0.2493, device='cuda:0')), ('ex', tensor(0., device='cuda:0')), ('-', tensor(0.1505, device='cuda:0')), ('centrica', tensor(0., device='cuda:0')), (',', tensor(0.2493, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('chairman', tensor(0.1104, device='cuda:0')), ('-', tensor(0.1505, device='cuda:0')), ('ft', tensor(0., device='cuda:0'))]
idx: 1021, example: saudi aramco, shell plan to break up motiva, divide up assets, prediction: 2, correct_label: 2, class_scores: [0.1521413 0.3701964 0.4776623], word_scores: ['saudi:0.0', 'ara:0.0', '##mc:0.0', '##o:0.0', ',:7.986737728060689e-06', 'shell:0.0', 'plan:0.0', 'to:2.886244146793615e-06', 'break:0.0', 'up:1.4959460941099678e-06', 'mo:0.0', '##tiv:0.0', '##a:3.804580501309829e-06', ',:7.986737728060689e-06', 'divide:0.0', 'up:1.4959460941099678e-06', 'assets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('saudi', tensor(0., device='cuda:0')), ('aramco', tensor(0., device='cuda:0')), (',', tensor(0.3655, device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('to', tensor(0.1321, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('up', tensor(0.0685, device='cuda:0')), ('motiva', tensor(0., device='cuda:0')), (',', tensor(0.3655, device='cuda:0')), ('divide', tensor(0., device='cuda:0')), ('up', tensor(0.0685, device='cuda:0')), ('assets', tensor(0., device='cuda:0'))],  word_scores_max: [('saudi', tensor(0., device='cuda:0')), ('aramco', tensor(0., device='cuda:0')), (',', tensor(0.3655, device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('to', tensor(0.1321, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('up', tensor(0.0685, device='cuda:0')), ('motiva', tensor(0., device='cuda:0')), (',', tensor(0.3655, device='cuda:0')), ('divide', tensor(0., device='cuda:0')), ('up', tensor(0.0685, device='cuda:0')), ('assets', tensor(0., device='cuda:0'))]
idx: 1022, example: bpi says caixabank, isabel dos santos reach agreement over angola exposure, prediction: 2, correct_label: 2, class_scores: [0.16441074 0.39510545 0.44048375], word_scores: ['bp:0.0', '##i:0.0', 'says:0.0', 'cai:0.0', '##xa:0.0', '##bank:0.0', ',:7.986737728060689e-06', 'isabel:0.0', 'dos:0.0', 'santos:0.0', 'reach:8.23132722871378e-06', 'agreement:0.0', 'over:0.0', 'angola:0.0', 'exposure:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bpi', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('caixabank', tensor(0., device='cuda:0')), (',', tensor(0.4925, device='cuda:0')), ('isabel', tensor(0., device='cuda:0')), ('dos', tensor(0., device='cuda:0')), ('santos', tensor(0., device='cuda:0')), ('reach', tensor(0.5075, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('angola', tensor(0., device='cuda:0')), ('exposure', tensor(0., device='cuda:0'))],  word_scores_max: [('bpi', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('caixabank', tensor(0., device='cuda:0')), (',', tensor(0.4925, device='cuda:0')), ('isabel', tensor(0., device='cuda:0')), ('dos', tensor(0., device='cuda:0')), ('santos', tensor(0., device='cuda:0')), ('reach', tensor(0.5075, device='cuda:0')), ('agreement', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('angola', tensor(0., device='cuda:0')), ('exposure', tensor(0., device='cuda:0'))]
idx: 1023, example: city spirits sink after diageo comes up short with sales slide, prediction: 2, correct_label: 0, class_scores: [0.27264675 0.34577712 0.38157606], word_scores: ['city:0.0', 'spirits:0.0', 'sink:0.0', 'after:0.0', 'dia:0.0', '##ge:0.0', '##o:0.0', 'comes:0.0', 'up:1.4959460941099678e-06', 'short:0.0', 'with:4.733654350275174e-06', 'sales:0.0', 'slide:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('city', tensor(0., device='cuda:0')), ('spirits', tensor(0., device='cuda:0')), ('sink', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('diageo', tensor(0., device='cuda:0')), ('comes', tensor(0., device='cuda:0')), ('up', tensor(0.2401, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('with', tensor(0.7599, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('slide', tensor(0., device='cuda:0'))],  word_scores_max: [('city', tensor(0., device='cuda:0')), ('spirits', tensor(0., device='cuda:0')), ('sink', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('diageo', tensor(0., device='cuda:0')), ('comes', tensor(0., device='cuda:0')), ('up', tensor(0.2401, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('with', tensor(0.7599, device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('slide', tensor(0., device='cuda:0'))]
idx: 1024, example: lse gets hong kong regulatory nod to hk firms to become lse members, prediction: 2, correct_label: 2, class_scores: [0.23576164 0.37961274 0.38462567], word_scores: ['l:0.0', '##se:0.0', 'gets:0.0', 'hong:0.0', 'kong:0.0', 'regulatory:0.0', 'nod:0.0', 'to:2.886244146793615e-06', 'hk:0.0', 'firms:0.0', 'to:2.886244146793615e-06', 'become:0.0', 'l:0.0', '##se:0.0', 'members:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('lse', tensor(0., device='cuda:0')), ('gets', tensor(0., device='cuda:0')), ('hong', tensor(0., device='cuda:0')), ('kong', tensor(0., device='cuda:0')), ('regulatory', tensor(0., device='cuda:0')), ('nod', tensor(0., device='cuda:0')), ('to', tensor(0.5000, device='cuda:0')), ('hk', tensor(0., device='cuda:0')), ('firms', tensor(0., device='cuda:0')), ('to', tensor(0.5000, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0'))],  word_scores_max: [('lse', tensor(0., device='cuda:0')), ('gets', tensor(0., device='cuda:0')), ('hong', tensor(0., device='cuda:0')), ('kong', tensor(0., device='cuda:0')), ('regulatory', tensor(0., device='cuda:0')), ('nod', tensor(0., device='cuda:0')), ('to', tensor(0.5000, device='cuda:0')), ('hk', tensor(0., device='cuda:0')), ('firms', tensor(0., device='cuda:0')), ('to', tensor(0.5000, device='cuda:0')), ('become', tensor(0., device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('members', tensor(0., device='cuda:0'))]
idx: 1025, example: s&p downgrades barclays and rbs on government bailout fears, prediction: 2, correct_label: 0, class_scores: [0.29944018 0.32865986 0.3719    ], word_scores: ['s:0.0', '&:0.0', 'p:0.0', 'down:0.0', '##grade:0.0', '##s:4.601175078278175e-06', 'barclay:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'rb:0.0', '##s:4.601175078278175e-06', 'on:0.0', 'government:0.0', 'bail:0.0', '##out:0.0', 'fears:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('s', tensor(nan, device='cuda:0')), ('p', tensor(nan, device='cuda:0')), ('downgrades', tensor(nan, device='cuda:0')), ('barclays', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('rbs', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('government', tensor(nan, device='cuda:0')), ('bailout', tensor(nan, device='cuda:0')), ('fears', tensor(nan, device='cuda:0'))],  word_scores_max: [('s', tensor(nan, device='cuda:0')), ('p', tensor(nan, device='cuda:0')), ('downgrades', tensor(nan, device='cuda:0')), ('barclays', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('rbs', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('government', tensor(nan, device='cuda:0')), ('bailout', tensor(nan, device='cuda:0')), ('fears', tensor(nan, device='cuda:0'))]
idx: 1026, example: $aapl at pivot area on intraday chart- break here could send this to 50-day sma, 457.80 , prediction: 2, correct_label: 2, class_scores: [0.17678778 0.30374718 0.5194651 ], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'at:0.0', 'pi:0.0', '##vot:0.0', 'area:0.0', 'on:0.0', 'intra:0.0', '##day:0.0', 'chart:0.0', '-:4.821180027647642e-06', 'break:0.0', 'here:0.0', 'could:0.0', 'send:0.0', 'this:0.0', 'to:2.886244146793615e-06', '50:0.0', '-:4.821180027647642e-06', 'day:0.0', 'sm:0.0', '##a:3.804580501309829e-06', ',:7.986737728060689e-06', '45:4.878051640844205e-06', '##7:0.0', '.:2.903296945078182e-06', '80:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('pivot', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('intraday', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('-', tensor(0.1704, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('send', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('to', tensor(0.1020, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('-', tensor(0.1704, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('sma', tensor(0., device='cuda:0')), (',', tensor(0.2822, device='cuda:0')), ('457', tensor(0.1724, device='cuda:0')), ('.', tensor(0.1026, device='cuda:0')), ('80', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('pivot', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('intraday', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('-', tensor(0.1704, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('send', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('to', tensor(0.1020, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('-', tensor(0.1704, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('sma', tensor(0., device='cuda:0')), (',', tensor(0.2822, device='cuda:0')), ('457', tensor(0.1724, device='cuda:0')), ('.', tensor(0.1026, device='cuda:0')), ('80', tensor(0., device='cuda:0'))]
idx: 1027, example: sudden optimism about iphone sales (i.e., not as bad as expected) gives apple $aapl a lift.  , prediction: 2, correct_label: 2, class_scores: [0.21571973 0.2957741  0.48850614], word_scores: ['sudden:0.0', 'optimism:0.0', 'about:0.0', 'iphone:0.0', 'sales:0.0', '(:0.0', 'i:0.0', '.:2.903296945078182e-06', 'e:0.0', '.:2.903296945078182e-06', ',:7.986737728060689e-06', 'not:0.0', 'as:0.0', 'bad:0.0', 'as:0.0', 'expected:0.0', '):0.0', 'gives:0.0', 'apple:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', 'a:8.62785782373976e-06', 'lift:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sudden', tensor(0., device='cuda:0')), ('optimism', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('.', tensor(0.1146, device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('.', tensor(0.1146, device='cuda:0')), (',', tensor(0.3154, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bad', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('a', tensor(0.3407, device='cuda:0')), ('lift', tensor(0., device='cuda:0')), ('.', tensor(0.1146, device='cuda:0'))],  word_scores_max: [('sudden', tensor(0., device='cuda:0')), ('optimism', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('.', tensor(0.1146, device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('.', tensor(0.1146, device='cuda:0')), (',', tensor(0.3154, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('bad', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('a', tensor(0.3407, device='cuda:0')), ('lift', tensor(0., device='cuda:0')), ('.', tensor(0.1146, device='cuda:0'))]
idx: 1028, example: $cnp sell short position on cnp,...closed for profit $ 59,367.00 (7.75%) , prediction: 2, correct_label: 2, class_scores: [0.15155458 0.38925314 0.45919234], word_scores: ['$:0.0', 'cn:0.0', '##p:0.0', 'sell:0.0', 'short:0.0', 'position:0.0', 'on:0.0', 'cn:0.0', '##p:0.0', ',:7.986737728060689e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'closed:0.0', 'for:0.0', 'profit:0.0', '$:0.0', '59:0.0', ',:7.986737728060689e-06', '36:0.0', '##7:0.0', '.:2.903296945078182e-06', '00:0.0', '(:0.0', '7:0.0', '.:2.903296945078182e-06', '75:0.0', '%:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cnp', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('cnp', tensor(0., device='cuda:0')), (',', tensor(0.2619, device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('closed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), (',', tensor(0.2619, device='cuda:0')), ('367', tensor(0., device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('75', tensor(0., device='cuda:0'))],  word_scores_max: [('cnp', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('cnp', tensor(0., device='cuda:0')), (',', tensor(0.2619, device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('closed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('59', tensor(0., device='cuda:0')), (',', tensor(0.2619, device='cuda:0')), ('367', tensor(0., device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0952, device='cuda:0')), ('75', tensor(0., device='cuda:0'))]
idx: 1029, example: berkshire hathaway names kara raiguel to lead general re unit, prediction: 2, correct_label: 2, class_scores: [0.1967802  0.32246152 0.48075834], word_scores: ['berkshire:0.0', 'hat:0.0', '##haw:0.0', '##ay:0.0', 'names:0.0', 'kara:0.0', 'rai:0.0', '##gue:0.0', '##l:0.0', 'to:2.886244146793615e-06', 'lead:0.0', 'general:0.0', 're:0.0', 'unit:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('berkshire', tensor(0., device='cuda:0')), ('hathaway', tensor(0., device='cuda:0')), ('names', tensor(0., device='cuda:0')), ('kara', tensor(0., device='cuda:0')), ('raiguel', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('re', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0'))],  word_scores_max: [('berkshire', tensor(0., device='cuda:0')), ('hathaway', tensor(0., device='cuda:0')), ('names', tensor(0., device='cuda:0')), ('kara', tensor(0., device='cuda:0')), ('raiguel', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('re', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0'))]
idx: 1030, example: $gale breakout coming soon!, prediction: 2, correct_label: 1, class_scores: [0.16194616 0.31670207 0.5213518 ], word_scores: ['$:0.0', 'gale:0.0', 'breakout:0.0', 'coming:0.0', 'soon:4.303194600652205e-06', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gale', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('soon', tensor(1., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('gale', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('soon', tensor(1., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1031, example: loaded up on $bsx yesterday,looking good now. still think way more upside than downside., prediction: 2, correct_label: 1, class_scores: [0.15128592 0.3032354  0.5454787 ], word_scores: ['loaded:0.0', 'up:1.4959460941099678e-06', 'on:0.0', '$:0.0', 'bs:0.0', '##x:0.0', 'yesterday:0.0', ',:7.986737728060689e-06', 'looking:0.0', 'good:0.0', 'now:0.0', '.:2.903296945078182e-06', 'still:0.0', 'think:0.0', 'way:0.0', 'more:0.0', 'upside:0.0', 'than:0.0', 'downs:0.0', '##ide:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('loaded', tensor(0., device='cuda:0')), ('up', tensor(0.0978, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('bsx', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.5224, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.1899, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('.', tensor(0.1899, device='cuda:0'))],  word_scores_max: [('loaded', tensor(0., device='cuda:0')), ('up', tensor(0.0978, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('bsx', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0')), (',', tensor(0.5224, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.1899, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('.', tensor(0.1899, device='cuda:0'))]
idx: 1032, example: asahi could be about to snap up more of sabmiller's beers ahead of ab inbev sale, prediction: 1, correct_label: 2, class_scores: [0.2051745 0.4353647 0.3594608], word_scores: ['asahi:0.0', 'could:0.0', 'be:0.0', 'about:0.0', 'to:2.886244146793615e-06', 'snap:0.0', 'up:1.4959460941099678e-06', 'more:0.0', 'of:3.4365734791208524e-06', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', "':0.0", 's:0.0', 'beers:0.0', 'ahead:0.0', 'of:3.4365734791208524e-06', 'ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'sale:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('asahi', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.3691, device='cuda:0')), ('snap', tensor(0., device='cuda:0')), ('up', tensor(0.1913, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('of', tensor(0.4395, device='cuda:0'))],  word_scores_max: [('asahi', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.3691, device='cuda:0')), ('snap', tensor(0., device='cuda:0')), ('up', tensor(0.1913, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('of', tensor(0.4395, device='cuda:0'))]
idx: 1033, example: companieshoward davies appointment as rbs director delayed, prediction: 2, correct_label: 2, class_scores: [0.19506119 0.33858007 0.46635866], word_scores: ['companies:0.0', '##how:0.0', '##ard:0.0', 'davies:0.0', 'appointment:0.0', 'as:0.0', 'rb:0.0', '##s:4.601175078278175e-06', 'director:0.0', 'delayed:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companieshoward', tensor(nan, device='cuda:0')), ('davies', tensor(nan, device='cuda:0')), ('appointment', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('rbs', tensor(nan, device='cuda:0')), ('director', tensor(nan, device='cuda:0')), ('delayed', tensor(nan, device='cuda:0'))],  word_scores_max: [('companieshoward', tensor(nan, device='cuda:0')), ('davies', tensor(nan, device='cuda:0')), ('appointment', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('rbs', tensor(nan, device='cuda:0')), ('director', tensor(nan, device='cuda:0')), ('delayed', tensor(nan, device='cuda:0'))]
idx: 1034, example: today i bought more $mu $yhoo $vale $nbl $twtr $axp $znga , prediction: 1, correct_label: 2, class_scores: [0.21553749 0.44963112 0.33483133], word_scores: ['today:0.0', 'i:0.0', 'bought:0.0', 'more:0.0', '$:0.0', 'mu:0.0', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', '$:0.0', 'vale:0.0', '$:0.0', 'nbl:0.0', '$:0.0', 't:0.0', '##wt:0.0', '##r:0.0', '$:0.0', 'ax:0.0', '##p:0.0', '$:0.0', 'z:0.0', '##nga:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('today', tensor(nan, device='cuda:0')), ('i', tensor(nan, device='cuda:0')), ('bought', tensor(nan, device='cuda:0')), ('more', tensor(nan, device='cuda:0')), ('mu', tensor(nan, device='cuda:0')), ('yhoo', tensor(nan, device='cuda:0')), ('vale', tensor(nan, device='cuda:0')), ('nbl', tensor(nan, device='cuda:0')), ('twtr', tensor(nan, device='cuda:0')), ('axp', tensor(nan, device='cuda:0')), ('znga', tensor(nan, device='cuda:0'))],  word_scores_max: [('today', tensor(nan, device='cuda:0')), ('i', tensor(nan, device='cuda:0')), ('bought', tensor(nan, device='cuda:0')), ('more', tensor(nan, device='cuda:0')), ('mu', tensor(nan, device='cuda:0')), ('yhoo', tensor(nan, device='cuda:0')), ('vale', tensor(nan, device='cuda:0')), ('nbl', tensor(nan, device='cuda:0')), ('twtr', tensor(nan, device='cuda:0')), ('axp', tensor(nan, device='cuda:0')), ('znga', tensor(nan, device='cuda:0'))]
idx: 1035, example: $spy bumping its head on declining daily 8ma as overhead resistance. then the big brother 50ma just above that., prediction: 1, correct_label: 0, class_scores: [0.27338523 0.40655884 0.320056  ], word_scores: ['$:0.0', 'spy:0.0', 'bump:0.0', '##ing:0.0', 'its:1.7191393908433383e-06', 'head:0.0', 'on:0.0', 'declining:0.0', 'daily:0.0', '8:0.0', '##ma:0.0', 'as:0.0', 'overhead:0.0', 'resistance:0.0', '.:2.903296945078182e-06', 'then:0.0', 'the:6.3806996877247e-06', 'big:0.0', 'brother:0.0', '50:0.0', '##ma:0.0', 'just:0.0', 'above:0.0', 'that:1.5133816759771435e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('spy', tensor(0., device='cuda:0')), ('bumping', tensor(0., device='cuda:0')), ('its', tensor(0.1115, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('declining', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('8ma', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('overhead', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('.', tensor(0.1883, device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('brother', tensor(0., device='cuda:0')), ('50ma', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('that', tensor(0.0981, device='cuda:0')), ('.', tensor(0.1883, device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('bumping', tensor(0., device='cuda:0')), ('its', tensor(0.1115, device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('declining', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('8ma', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('overhead', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('.', tensor(0.1883, device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('the', tensor(0.4138, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('brother', tensor(0., device='cuda:0')), ('50ma', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('that', tensor(0.0981, device='cuda:0')), ('.', tensor(0.1883, device='cuda:0'))]
idx: 1036, example: builder persimmon hails 6% rise in house sales, prediction: 2, correct_label: 1, class_scores: [0.1452118  0.36263445 0.49215373], word_scores: ['builder:0.0', 'per:0.0', '##si:0.0', '##mmon:0.0', 'hail:0.0', '##s:4.601175078278175e-06', '6:0.0', '%:0.0', 'rise:0.0', 'in:3.0217122457543155e-06', 'house:0.0', 'sales:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('builder', tensor(0., device='cuda:0')), ('persimmon', tensor(0., device='cuda:0')), ('hails', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0'))],  word_scores_max: [('builder', tensor(0., device='cuda:0')), ('persimmon', tensor(0., device='cuda:0')), ('hails', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('house', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0'))]
idx: 1037, example: rt @andrewnyquist chartology: yahoo:  $yhoo  crazy looking chart, but nearing breakout resistance line..., prediction: 1, correct_label: 2, class_scores: [0.21197653 0.3946981  0.3933254 ], word_scores: ['rt:0.0', '@:0.0', 'andrew:0.0', '##ny:0.0', '##quist:0.0', 'chart:0.0', '##ology:0.0', '::0.0', 'yahoo:0.0', '::0.0', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', 'crazy:0.0', 'looking:0.0', 'chart:0.0', ',:7.986737728060689e-06', 'but:0.0', 'nearing:0.0', 'breakout:0.0', 'resistance:0.0', 'line:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rt', tensor(0., device='cuda:0')), ('andrewnyquist', tensor(0., device='cuda:0')), ('chartology', tensor(0., device='cuda:0')), ('yahoo', tensor(0., device='cuda:0')), ('yhoo', tensor(0., device='cuda:0')), ('crazy', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), (',', tensor(0.4783, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('nearing', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('.', tensor(0.1739, device='cuda:0')), ('.', tensor(0.1739, device='cuda:0')), ('.', tensor(0.1739, device='cuda:0'))],  word_scores_max: [('rt', tensor(0., device='cuda:0')), ('andrewnyquist', tensor(0., device='cuda:0')), ('chartology', tensor(0., device='cuda:0')), ('yahoo', tensor(0., device='cuda:0')), ('yhoo', tensor(0., device='cuda:0')), ('crazy', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), (',', tensor(0.4783, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('nearing', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('.', tensor(0.1739, device='cuda:0')), ('.', tensor(0.1739, device='cuda:0')), ('.', tensor(0.1739, device='cuda:0'))]
idx: 1038, example: despite sales growth, uk's tesco cautions recovery to be bumpy, prediction: 2, correct_label: 2, class_scores: [0.22321239 0.38372746 0.39306015], word_scores: ['despite:0.0', 'sales:0.0', 'growth:0.0', ',:7.986737728060689e-06', 'uk:0.0', "':0.0", 's:0.0', 'te:0.0', '##sco:0.0', 'caution:0.0', '##s:4.601175078278175e-06', 'recovery:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'bump:0.0', '##y:1.832826342251792e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('despite', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('despite', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 1039, example: $brk.b $spy  all time high tomorrow? 150k on the a shares, dec 13, 2007., prediction: 2, correct_label: 2, class_scores: [0.2333371  0.25072256 0.51594037], word_scores: ['$:0.0', 'br:0.0', '##k:0.0', '.:2.903296945078182e-06', 'b:0.0', '$:0.0', 'spy:0.0', 'all:0.0', 'time:0.0', 'high:0.0', 'tomorrow:0.0', '?:0.0', '150:0.0', '##k:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'a:8.62785782373976e-06', 'shares:0.0', ',:7.986737728060689e-06', 'dec:0.0', '13:0.0', ',:7.986737728060689e-06', '2007:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('brk', tensor(0., device='cuda:0')), ('.', tensor(0.0789, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('tomorrow', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('150k', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1734, device='cuda:0')), ('a', tensor(0.2345, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), (',', tensor(0.2171, device='cuda:0')), ('dec', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), (',', tensor(0.2171, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('.', tensor(0.0789, device='cuda:0'))],  word_scores_max: [('brk', tensor(0., device='cuda:0')), ('.', tensor(0.0789, device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('tomorrow', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('150k', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1734, device='cuda:0')), ('a', tensor(0.2345, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), (',', tensor(0.2171, device='cuda:0')), ('dec', tensor(0., device='cuda:0')), ('13', tensor(0., device='cuda:0')), (',', tensor(0.2171, device='cuda:0')), ('2007', tensor(0., device='cuda:0')), ('.', tensor(0.0789, device='cuda:0'))]
idx: 1040, example: $intc finally some nice downside move... looking for the 31 handle to break, prediction: 2, correct_label: 0, class_scores: [0.22120772 0.2769321  0.5018602 ], word_scores: ['$:0.0', 'int:0.0', '##c:0.0', 'finally:0.0', 'some:0.0', 'nice:0.0', 'downs:0.0', '##ide:0.0', 'move:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'looking:0.0', 'for:0.0', 'the:6.3806996877247e-06', '31:0.0', 'handle:0.0', 'to:2.886244146793615e-06', 'break:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('intc', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('.', tensor(0.1615, device='cuda:0')), ('.', tensor(0.1615, device='cuda:0')), ('.', tensor(0.1615, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3549, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('handle', tensor(0., device='cuda:0')), ('to', tensor(0.1606, device='cuda:0')), ('break', tensor(0., device='cuda:0'))],  word_scores_max: [('intc', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('.', tensor(0.1615, device='cuda:0')), ('.', tensor(0.1615, device='cuda:0')), ('.', tensor(0.1615, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3549, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('handle', tensor(0., device='cuda:0')), ('to', tensor(0.1606, device='cuda:0')), ('break', tensor(0., device='cuda:0'))]
idx: 1041, example: $tsla i see more downside in next two weeks be careful -20 dollars drop potential vs +10 up moved, prediction: 2, correct_label: 0, class_scores: [0.3347767  0.31874347 0.3464798 ], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'i:0.0', 'see:0.0', 'more:0.0', 'downs:0.0', '##ide:0.0', 'in:3.0217122457543155e-06', 'next:0.0', 'two:0.0', 'weeks:0.0', 'be:0.0', 'careful:0.0', '-:4.821180027647642e-06', '20:0.0', 'dollars:0.0', 'drop:0.0', 'potential:0.0', 'vs:0.0', '+:0.0', '10:0.0', 'up:1.4959460941099678e-06', 'moved:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('in', tensor(0.3236, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('careful', tensor(0., device='cuda:0')), ('-', tensor(0.5163, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('drop', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('vs', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('up', tensor(0.1602, device='cuda:0')), ('moved', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('in', tensor(0.3236, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('two', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('careful', tensor(0., device='cuda:0')), ('-', tensor(0.5163, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('dollars', tensor(0., device='cuda:0')), ('drop', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('vs', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('up', tensor(0.1602, device='cuda:0')), ('moved', tensor(0., device='cuda:0'))]
idx: 1042, example: $fb slight green... may be runner later, prediction: 2, correct_label: 2, class_scores: [0.20822506 0.35232425 0.4394507 ], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'slight:0.0', 'green:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'may:0.0', 'be:0.0', 'runner:0.0', 'later:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('slight', tensor(0., device='cuda:0')), ('green', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('runner', tensor(0., device='cuda:0')), ('later', tensor(0., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('slight', tensor(0., device='cuda:0')), ('green', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('runner', tensor(0., device='cuda:0')), ('later', tensor(0., device='cuda:0'))]
idx: 1043, example: volatility squeeze in $aapl. i hope it gets resolved to the upside, prediction: 2, correct_label: 2, class_scores: [0.21332367 0.34862822 0.43804815], word_scores: ['vol:0.0', '##ati:0.0', '##lity:0.0', 'squeeze:0.0', 'in:3.0217122457543155e-06', '$:0.0', 'aa:0.0', '##pl:0.0', '.:2.903296945078182e-06', 'i:0.0', 'hope:0.0', 'it:3.3415778943890473e-06', 'gets:0.0', 'resolved:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'upside:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('volatility', tensor(0., device='cuda:0')), ('squeeze', tensor(0., device='cuda:0')), ('in', tensor(0.1630, device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('hope', tensor(0., device='cuda:0')), ('it', tensor(0.1803, device='cuda:0')), ('gets', tensor(0., device='cuda:0')), ('resolved', tensor(0., device='cuda:0')), ('to', tensor(0.1557, device='cuda:0')), ('the', tensor(0.3443, device='cuda:0')), ('upside', tensor(0., device='cuda:0'))],  word_scores_max: [('volatility', tensor(0., device='cuda:0')), ('squeeze', tensor(0., device='cuda:0')), ('in', tensor(0.1630, device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('.', tensor(0.1567, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('hope', tensor(0., device='cuda:0')), ('it', tensor(0.1803, device='cuda:0')), ('gets', tensor(0., device='cuda:0')), ('resolved', tensor(0., device='cuda:0')), ('to', tensor(0.1557, device='cuda:0')), ('the', tensor(0.3443, device='cuda:0')), ('upside', tensor(0., device='cuda:0'))]
idx: 1044, example: sainsbury cfo rogers to replace home retail ceo walden, prediction: 1, correct_label: 2, class_scores: [0.2490631  0.38571745 0.36521938], word_scores: ['sai:0.0', '##ns:0.0', '##bury:0.0', 'cf:0.0', '##o:0.0', 'rogers:0.0', 'to:2.886244146793615e-06', 'replace:0.0', 'home:0.0', 'retail:0.0', 'ceo:0.0', 'walden:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sainsbury', tensor(0., device='cuda:0')), ('cfo', tensor(0., device='cuda:0')), ('rogers', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('replace', tensor(0., device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('walden', tensor(0., device='cuda:0'))],  word_scores_max: [('sainsbury', tensor(0., device='cuda:0')), ('cfo', tensor(0., device='cuda:0')), ('rogers', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('replace', tensor(0., device='cuda:0')), ('home', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('walden', tensor(0., device='cuda:0'))]
idx: 1045, example: $iwm buy programs popping $iwm for close print cheap money means higher stock prices $spy robot buying, prediction: 2, correct_label: 1, class_scores: [0.26373455 0.32800627 0.4082592 ], word_scores: ['$:0.0', 'i:0.0', '##w:0.0', '##m:0.0', 'buy:0.0', 'programs:0.0', 'popping:0.0', '$:0.0', 'i:0.0', '##w:0.0', '##m:0.0', 'for:0.0', 'close:0.0', 'print:0.0', 'cheap:0.0', 'money:0.0', 'means:0.0', 'higher:0.0', 'stock:0.0', 'prices:0.0', '$:0.0', 'spy:0.0', 'robot:0.0', 'buying:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('iwm', tensor(nan, device='cuda:0')), ('buy', tensor(nan, device='cuda:0')), ('programs', tensor(nan, device='cuda:0')), ('popping', tensor(nan, device='cuda:0')), ('iwm', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0')), ('print', tensor(nan, device='cuda:0')), ('cheap', tensor(nan, device='cuda:0')), ('money', tensor(nan, device='cuda:0')), ('means', tensor(nan, device='cuda:0')), ('higher', tensor(nan, device='cuda:0')), ('stock', tensor(nan, device='cuda:0')), ('prices', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('robot', tensor(nan, device='cuda:0')), ('buying', tensor(nan, device='cuda:0'))],  word_scores_max: [('iwm', tensor(nan, device='cuda:0')), ('buy', tensor(nan, device='cuda:0')), ('programs', tensor(nan, device='cuda:0')), ('popping', tensor(nan, device='cuda:0')), ('iwm', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0')), ('print', tensor(nan, device='cuda:0')), ('cheap', tensor(nan, device='cuda:0')), ('money', tensor(nan, device='cuda:0')), ('means', tensor(nan, device='cuda:0')), ('higher', tensor(nan, device='cuda:0')), ('stock', tensor(nan, device='cuda:0')), ('prices', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('robot', tensor(nan, device='cuda:0')), ('buying', tensor(nan, device='cuda:0'))]
idx: 1046, example: $nflx and $tsla making all kinds of gains 📈, prediction: 1, correct_label: 1, class_scores: [0.19522698 0.5111341  0.29363897], word_scores: ['$:0.0', 'nfl:0.0', '##x:0.0', 'and:0.0', '$:0.0', 'ts:0.0', '##la:0.0', 'making:0.0', 'all:0.0', 'kinds:0.0', 'of:3.4365734791208524e-06', 'gains:0.0', '[UNK]:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nflx', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('kinds', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0')), ('gains', tensor(0., device='cuda:0'))],  word_scores_max: [('nflx', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('kinds', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0')), ('gains', tensor(0., device='cuda:0'))]
idx: 1047, example: update 1-astrazeneca sells rare cancer drug to sanofi for up to $300 mln, prediction: 2, correct_label: 2, class_scores: [0.18061154 0.19933702 0.62005144], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'sells:0.0', 'rare:0.0', 'cancer:0.0', 'drug:0.0', 'to:2.886244146793615e-06', 'san:0.0', '##of:0.0', '##i:0.0', 'for:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '$:0.0', '300:0.0', 'ml:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.3988, device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('rare', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('to', tensor(0.2387, device='cuda:0')), ('sanofi', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('up', tensor(0.1237, device='cuda:0')), ('to', tensor(0.2387, device='cuda:0')), ('300', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.3988, device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('rare', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('to', tensor(0.2387, device='cuda:0')), ('sanofi', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('up', tensor(0.1237, device='cuda:0')), ('to', tensor(0.2387, device='cuda:0')), ('300', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0'))]
idx: 1048, example: l&g completes uk's largest medically underwritten bulk pension risk deal, prediction: 2, correct_label: 2, class_scores: [0.21420754 0.3915035  0.39428896], word_scores: ['l:0.0', '&:0.0', 'g:0.0', 'completes:0.0', 'uk:0.0', "':0.0", 's:0.0', 'largest:0.0', 'medical:0.0', '##ly:0.0', 'under:0.0', '##written:0.0', 'bulk:0.0', 'pension:0.0', 'risk:0.0', 'deal:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('l', tensor(nan, device='cuda:0')), ('g', tensor(nan, device='cuda:0')), ('completes', tensor(nan, device='cuda:0'))],  word_scores_max: [('l', tensor(nan, device='cuda:0')), ('g', tensor(nan, device='cuda:0')), ('completes', tensor(nan, device='cuda:0'))]
idx: 1049, example: $pcln trying to break daily trend line! big move could happen  , prediction: 2, correct_label: 1, class_scores: [0.22159481 0.3498554  0.42854983], word_scores: ['$:0.0', 'pc:0.0', '##ln:0.0', 'trying:0.0', 'to:2.886244146793615e-06', 'break:0.0', 'daily:0.0', 'trend:0.0', 'line:0.0', '!:0.0', 'big:0.0', 'move:0.0', 'could:0.0', 'happen:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('pcln', tensor(0., device='cuda:0')), ('trying', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('happen', tensor(0., device='cuda:0'))],  word_scores_max: [('pcln', tensor(0., device='cuda:0')), ('trying', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('happen', tensor(0., device='cuda:0'))]
idx: 1050, example: $fb (110.20) is starting to show some relative strength and signs of potential b/o on the daily., prediction: 2, correct_label: 1, class_scores: [0.23015238 0.3199761  0.44987154], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', '(:0.0', '110:0.0', '.:2.903296945078182e-06', '20:0.0', '):0.0', 'is:0.0', 'starting:0.0', 'to:2.886244146793615e-06', 'show:0.0', 'some:0.0', 'relative:0.0', 'strength:0.0', 'and:0.0', 'signs:0.0', 'of:3.4365734791208524e-06', 'potential:0.0', 'b:0.0', '/:0.0', 'o:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'daily:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fb', tensor(0., device='cuda:0')), ('110', tensor(0., device='cuda:0')), ('.', tensor(0.1568, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('to', tensor(0.1559, device='cuda:0')), ('show', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('relative', tensor(0., device='cuda:0')), ('strength', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('signs', tensor(0., device='cuda:0')), ('of', tensor(0.1857, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('o', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3447, device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('.', tensor(0.1568, device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('110', tensor(0., device='cuda:0')), ('.', tensor(0.1568, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('to', tensor(0.1559, device='cuda:0')), ('show', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('relative', tensor(0., device='cuda:0')), ('strength', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('signs', tensor(0., device='cuda:0')), ('of', tensor(0.1857, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('b', tensor(0., device='cuda:0')), ('o', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3447, device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('.', tensor(0.1568, device='cuda:0'))]
idx: 1051, example: fda approves shire's vyvanse for binge-eating disorder, prediction: 2, correct_label: 2, class_scores: [0.3347848  0.31056097 0.3546542 ], word_scores: ['fda:0.0', 'approve:0.0', '##s:4.601175078278175e-06', 'shire:0.0', "':0.0", 's:0.0', 'v:0.0', '##y:1.832826342251792e-06', '##van:0.0', '##se:0.0', 'for:0.0', 'bing:0.0', '##e:0.0', '-:4.821180027647642e-06', 'eating:0.0', 'disorder:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fda', tensor(nan, device='cuda:0')), ('approves', tensor(nan, device='cuda:0'))],  word_scores_max: [('fda', tensor(nan, device='cuda:0')), ('approves', tensor(nan, device='cuda:0'))]
idx: 1052, example: @pierrules: $siri long!!, prediction: 2, correct_label: 1, class_scores: [0.20039289 0.39405528 0.40555194], word_scores: ['@:0.0', 'pier:0.0', '##ru:0.0', '##les:0.0', '::0.0', '$:0.0', 'sir:0.0', '##i:0.0', 'long:0.0', '!:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('pierrules', tensor(nan, device='cuda:0')), ('siri', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0'))],  word_scores_max: [('pierrules', tensor(nan, device='cuda:0')), ('siri', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0'))]
idx: 1053, example: amazon's grocery deal with morrisons is only the beginning, prediction: 2, correct_label: 1, class_scores: [0.23723085 0.23186167 0.5309075 ], word_scores: ['amazon:0.0', "':0.0", 's:0.0', 'grocery:0.0', 'deal:0.0', 'with:4.733654350275174e-06', 'morrison:0.0', '##s:4.601175078278175e-06', 'is:0.0', 'only:0.0', 'the:6.3806996877247e-06', 'beginning:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1054, example: activision blizzard media networks announces record #esports viewership  $atvi partnered with $hdsi for 9 #tournament, prediction: 2, correct_label: 2, class_scores: [0.22191937 0.3578094  0.42027128], word_scores: ['act:0.0', '##ivision:0.0', 'blizzard:0.0', 'media:0.0', 'networks:0.0', 'announces:0.0', 'record:0.0', '#:0.0', 'es:2.450917691021459e-06', '##ports:0.0', 'viewers:0.0', '##hip:0.0', '$:0.0', 'atv:0.0', '##i:0.0', 'partnered:0.0', 'with:4.733654350275174e-06', '$:0.0', 'hd:0.0', '##si:0.0', 'for:0.0', '9:0.0', '#:0.0', 'tournament:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('activision', tensor(0., device='cuda:0')), ('blizzard', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('announces', tensor(0., device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('esports', tensor(0.3411, device='cuda:0')), ('viewership', tensor(0., device='cuda:0')), ('atvi', tensor(0., device='cuda:0')), ('partnered', tensor(0., device='cuda:0')), ('with', tensor(0.6589, device='cuda:0')), ('hdsi', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('tournament', tensor(0., device='cuda:0'))],  word_scores_max: [('activision', tensor(0., device='cuda:0')), ('blizzard', tensor(0., device='cuda:0')), ('media', tensor(0., device='cuda:0')), ('networks', tensor(0., device='cuda:0')), ('announces', tensor(0., device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('esports', tensor(0.3411, device='cuda:0')), ('viewership', tensor(0., device='cuda:0')), ('atvi', tensor(0., device='cuda:0')), ('partnered', tensor(0., device='cuda:0')), ('with', tensor(0.6589, device='cuda:0')), ('hdsi', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('tournament', tensor(0., device='cuda:0'))]
idx: 1055, example: $aapl taking out the shorts here, a punishing reminder not to spear the  strongest in the herd., prediction: 2, correct_label: 2, class_scores: [0.24961889 0.31776246 0.43261862], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'taking:0.0', 'out:0.0', 'the:6.3806996877247e-06', 'shorts:0.0', 'here:0.0', ',:7.986737728060689e-06', 'a:8.62785782373976e-06', 'punish:0.0', '##ing:0.0', 'reminder:0.0', 'not:0.0', 'to:2.886244146793615e-06', 'spear:0.0', 'the:6.3806996877247e-06', 'strongest:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'herd:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('taking', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('the', tensor(0.1432, device='cuda:0')), ('shorts', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), (',', tensor(0.1792, device='cuda:0')), ('a', tensor(0.1936, device='cuda:0')), ('punishing', tensor(0., device='cuda:0')), ('reminder', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('to', tensor(0.0648, device='cuda:0')), ('spear', tensor(0., device='cuda:0')), ('the', tensor(0.1432, device='cuda:0')), ('strongest', tensor(0., device='cuda:0')), ('in', tensor(0.0678, device='cuda:0')), ('the', tensor(0.1432, device='cuda:0')), ('herd', tensor(0., device='cuda:0')), ('.', tensor(0.0651, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('taking', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('the', tensor(0.1432, device='cuda:0')), ('shorts', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), (',', tensor(0.1792, device='cuda:0')), ('a', tensor(0.1936, device='cuda:0')), ('punishing', tensor(0., device='cuda:0')), ('reminder', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('to', tensor(0.0648, device='cuda:0')), ('spear', tensor(0., device='cuda:0')), ('the', tensor(0.1432, device='cuda:0')), ('strongest', tensor(0., device='cuda:0')), ('in', tensor(0.0678, device='cuda:0')), ('the', tensor(0.1432, device='cuda:0')), ('herd', tensor(0., device='cuda:0')), ('.', tensor(0.0651, device='cuda:0'))]
idx: 1056, example: $amzn long into earnings. looks good over 600, prediction: 2, correct_label: 1, class_scores: [0.16552071 0.3934248  0.4410544 ], word_scores: ['$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', 'long:0.0', 'into:0.0', 'earnings:0.0', '.:2.903296945078182e-06', 'looks:0.0', 'good:0.0', 'over:0.0', '600:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('amzn', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('600', tensor(0., device='cuda:0'))],  word_scores_max: [('amzn', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('600', tensor(0., device='cuda:0'))]
idx: 1057, example: easyjet dismisses lufthansa low-cost plan in contest for germany, prediction: 2, correct_label: 2, class_scores: [0.2220087 0.3609155 0.4170758], word_scores: ['easy:0.0', '##jet:0.0', 'dismiss:0.0', '##es:0.0', 'lu:0.0', '##ft:0.0', '##han:0.0', '##sa:0.0', 'low:0.0', '-:4.821180027647642e-06', 'cost:0.0', 'plan:0.0', 'in:3.0217122457543155e-06', 'contest:0.0', 'for:0.0', 'germany:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('easyjet', tensor(0., device='cuda:0')), ('dismisses', tensor(0., device='cuda:0')), ('lufthansa', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('contest', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('germany', tensor(0., device='cuda:0'))],  word_scores_max: [('easyjet', tensor(0., device='cuda:0')), ('dismisses', tensor(0., device='cuda:0')), ('lufthansa', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('plan', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('contest', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('germany', tensor(0., device='cuda:0'))]
idx: 1058, example: g4s sees profits rise but uk contract problems remain, prediction: 2, correct_label: 2, class_scores: [0.20053406 0.3815848  0.4178811 ], word_scores: ['g:0.0', '##4:0.0', '##s:4.601175078278175e-06', 'sees:0.0', 'profits:0.0', 'rise:0.0', 'but:0.0', 'uk:0.0', 'contract:7.1864019446366e-06', 'problems:0.0', 'remain:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('g4s', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('profits', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('contract', tensor(1., device='cuda:0')), ('problems', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0'))],  word_scores_max: [('g4s', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('profits', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('contract', tensor(1., device='cuda:0')), ('problems', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0'))]
idx: 1059, example: $spy extreme win today - 2 cents above 2009  low on 10-year and $spy up 2 percent - life is a bowl of cherries - great short setting up $$, prediction: 2, correct_label: 0, class_scores: [0.2296222  0.2935997  0.47677812], word_scores: ['$:0.0', 'spy:0.0', 'extreme:0.0', 'win:0.0', 'today:0.0', '-:4.821180027647642e-06', '2:0.0', 'cents:0.0', 'above:0.0', '2009:0.0', 'low:0.0', 'on:0.0', '10:0.0', '-:4.821180027647642e-06', 'year:0.0', 'and:0.0', '$:0.0', 'spy:0.0', 'up:1.4959460941099678e-06', '2:0.0', 'percent:0.0', '-:4.821180027647642e-06', 'life:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'bowl:0.0', 'of:3.4365734791208524e-06', 'cher:0.0', '##ries:0.0', '-:4.821180027647642e-06', 'great:0.0', 'short:0.0', 'setting:0.0', 'up:1.4959460941099678e-06', '$:0.0', '$:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('spy', tensor(0., device='cuda:0')), ('extreme', tensor(0., device='cuda:0')), ('win', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('cents', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('up', tensor(0.0436, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2512, device='cuda:0')), ('bowl', tensor(0., device='cuda:0')), ('of', tensor(0.1001, device='cuda:0')), ('cherries', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('setting', tensor(0., device='cuda:0')), ('up', tensor(0.0436, device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('extreme', tensor(0., device='cuda:0')), ('win', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('cents', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('2009', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('up', tensor(0.0436, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.2512, device='cuda:0')), ('bowl', tensor(0., device='cuda:0')), ('of', tensor(0.1001, device='cuda:0')), ('cherries', tensor(0., device='cuda:0')), ('-', tensor(0.1404, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('setting', tensor(0., device='cuda:0')), ('up', tensor(0.0436, device='cuda:0'))]
idx: 1060, example: profit taking on $aapl this morning?  that has to be the pressure on the stock.  i'm still bullish on $aapl., prediction: 1, correct_label: 2, class_scores: [0.17438398 0.43795922 0.3876568 ], word_scores: ['profit:0.0', 'taking:0.0', 'on:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', 'this:0.0', 'morning:0.0', '?:0.0', 'that:1.5133816759771435e-06', 'has:5.9214244174654596e-06', 'to:2.886244146793615e-06', 'be:0.0', 'the:6.3806996877247e-06', 'pressure:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'stock:0.0', '.:2.903296945078182e-06', 'i:0.0', "':0.0", 'm:0.0', 'still:0.0', 'bull:0.0', '##ish:0.0', 'on:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('profit', tensor(0., device='cuda:0')), ('taking', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('that', tensor(0.0582, device='cuda:0')), ('has', tensor(0.2279, device='cuda:0')), ('to', tensor(0.1111, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.2455, device='cuda:0')), ('pressure', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2455, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('.', tensor(0.1117, device='cuda:0'))],  word_scores_max: [('profit', tensor(0., device='cuda:0')), ('taking', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('that', tensor(0.0582, device='cuda:0')), ('has', tensor(0.2279, device='cuda:0')), ('to', tensor(0.1111, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.2455, device='cuda:0')), ('pressure', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2455, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('.', tensor(0.1117, device='cuda:0'))]
idx: 1061, example: tesco plc's recovery continues with a â£250m cash infusion, prediction: 2, correct_label: 1, class_scores: [0.23679778 0.34678334 0.41641894], word_scores: ['te:0.0', '##sco:0.0', 'plc:0.0', "':0.0", 's:0.0', 'recovery:0.0', 'continues:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'a:8.62785782373976e-06', '##£:0.0', '##25:0.0', '##0:0.0', '##m:0.0', 'cash:0.0', 'in:3.0217122457543155e-06', '##fusion:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0'))]
idx: 1062, example: $stx move off the bottom but still in bear market #datasecurity $emc $sndk $wdc , prediction: 2, correct_label: 0, class_scores: [0.34551287 0.27678195 0.3777052 ], word_scores: ['$:0.0', 'st:0.0', '##x:0.0', 'move:0.0', 'off:0.0', 'the:6.3806996877247e-06', 'bottom:0.0', 'but:0.0', 'still:0.0', 'in:3.0217122457543155e-06', 'bear:0.0', 'market:0.0', '#:0.0', 'data:0.0', '##se:0.0', '##cu:0.0', '##rity:0.0', '$:0.0', 'em:0.0', '##c:0.0', '$:0.0', 's:0.0', '##nd:0.0', '##k:0.0', '$:0.0', 'w:0.0', '##dc:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stx', tensor(0., device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('bear', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('datasecurity', tensor(0., device='cuda:0')), ('emc', tensor(0., device='cuda:0')), ('sndk', tensor(0., device='cuda:0')), ('wdc', tensor(0., device='cuda:0'))],  word_scores_max: [('stx', tensor(0., device='cuda:0')), ('move', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('the', tensor(0.6786, device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('in', tensor(0.3214, device='cuda:0')), ('bear', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('datasecurity', tensor(0., device='cuda:0')), ('emc', tensor(0., device='cuda:0')), ('sndk', tensor(0., device='cuda:0')), ('wdc', tensor(0., device='cuda:0'))]
idx: 1063, example: diageo shares surge on report of possible takeover by lemann, prediction: 2, correct_label: 1, class_scores: [0.20174919 0.34331268 0.45493808], word_scores: ['dia:0.0', '##ge:0.0', '##o:0.0', 'shares:0.0', 'surge:0.0', 'on:0.0', 'report:0.0', 'of:3.4365734791208524e-06', 'possible:0.0', 'takeover:0.0', 'by:0.0', 'le:0.0', '##mann:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('diageo', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('surge', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0')), ('possible', tensor(0., device='cuda:0')), ('takeover', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lemann', tensor(0., device='cuda:0'))],  word_scores_max: [('diageo', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('surge', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0')), ('possible', tensor(0., device='cuda:0')), ('takeover', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('lemann', tensor(0., device='cuda:0'))]
idx: 1064, example: $ibio  up 10% in premarket ready for lift off, prediction: 2, correct_label: 1, class_scores: [0.20084004 0.30705526 0.4921047 ], word_scores: ['$:0.0', 'ib:0.0', '##io:0.0', 'up:1.4959460941099678e-06', '10:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'prem:0.0', '##ark:0.0', '##et:0.0', 'ready:0.0', 'for:0.0', 'lift:0.0', 'off:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ibio', tensor(0., device='cuda:0')), ('up', tensor(0.3311, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('in', tensor(0.6689, device='cuda:0')), ('premarket', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('lift', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0'))],  word_scores_max: [('ibio', tensor(0., device='cuda:0')), ('up', tensor(0.3311, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('in', tensor(0.6689, device='cuda:0')), ('premarket', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('lift', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0'))]
idx: 1065, example: $skx turning. coming from far could go far. stock price implies you pay nothing for the business, prediction: 2, correct_label: 2, class_scores: [0.2476296 0.3455626 0.4068078], word_scores: ['$:0.0', 'sk:0.0', '##x:0.0', 'turning:0.0', '.:2.903296945078182e-06', 'coming:0.0', 'from:4.495178018260049e-06', 'far:0.0', 'could:0.0', 'go:0.0', 'far:0.0', '.:2.903296945078182e-06', 'stock:0.0', 'price:0.0', 'implies:0.0', 'you:0.0', 'pay:0.0', 'nothing:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'business:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('skx', tensor(0., device='cuda:0')), ('turning', tensor(0., device='cuda:0')), ('.', tensor(0.1740, device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('from', tensor(0.2695, device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('.', tensor(0.1740, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('implies', tensor(0., device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('nothing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3825, device='cuda:0')), ('business', tensor(0., device='cuda:0'))],  word_scores_max: [('skx', tensor(0., device='cuda:0')), ('turning', tensor(0., device='cuda:0')), ('.', tensor(0.1740, device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('from', tensor(0.2695, device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('.', tensor(0.1740, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('implies', tensor(0., device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('nothing', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.3825, device='cuda:0')), ('business', tensor(0., device='cuda:0'))]
idx: 1066, example: britain's ftse bounces back, mondi and barratt lead, prediction: 2, correct_label: 1, class_scores: [0.20266911 0.34281096 0.45451993], word_scores: ['britain:0.0', "':0.0", 's:0.0', 'ft:0.0', '##se:0.0', 'bounce:0.0', '##s:4.601175078278175e-06', 'back:0.0', ',:7.986737728060689e-06', 'mon:0.0', '##di:0.0', 'and:0.0', 'barr:0.0', '##att:0.0', 'lead:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 1067, example: $rad all my charts are flashing oversold., prediction: 2, correct_label: 2, class_scores: [0.23936342 0.30700278 0.45363384], word_scores: ['$:0.0', 'ra:0.0', '##d:0.0', 'all:0.0', 'my:0.0', 'charts:0.0', 'are:0.0', 'flashing:0.0', 'overs:0.0', '##old:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('rad', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('flashing', tensor(0., device='cuda:0')), ('oversold', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('rad', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('flashing', tensor(0., device='cuda:0')), ('oversold', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1068, example: $amrn it's accumulating. i think buy now or hold your peace. this should go up today/tomorrow., prediction: 2, correct_label: 1, class_scores: [0.21756768 0.28615156 0.49628076], word_scores: ['$:0.0', 'am:0.0', '##rn:0.0', 'it:3.3415778943890473e-06', "':0.0", 's:0.0', 'acc:0.0', '##um:0.0', '##ulating:0.0', '.:2.903296945078182e-06', 'i:0.0', 'think:0.0', 'buy:0.0', 'now:0.0', 'or:0.0', 'hold:0.0', 'your:0.0', 'peace:0.0', '.:2.903296945078182e-06', 'this:0.0', 'should:0.0', 'go:0.0', 'up:1.4959460941099678e-06', 'today:0.0', '/:0.0', 'tomorrow:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('amrn', tensor(nan, device='cuda:0'))],  word_scores_max: [('amrn', tensor(nan, device='cuda:0'))]
idx: 1069, example: why i'd buy arm holdings plc and bhp billiton plc today, prediction: 2, correct_label: 1, class_scores: [0.2586484  0.27988666 0.4614649 ], word_scores: ['why:0.0', 'i:0.0', "':0.0", 'd:0.0', 'buy:0.0', 'arm:0.0', 'holdings:0.0', 'plc:0.0', 'and:0.0', 'bhp:0.0', 'bill:0.0', '##ito:0.0', '##n:0.0', 'plc:0.0', 'today:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('why', tensor(nan, device='cuda:0'))],  word_scores_max: [('why', tensor(nan, device='cuda:0'))]
idx: 1070, example: royal mail gets mixed bag from ofcom postal regulation report, prediction: 2, correct_label: 2, class_scores: [0.19745044 0.34661308 0.4559364 ], word_scores: ['royal:0.0', 'mail:0.0', 'gets:0.0', 'mixed:0.0', 'bag:0.0', 'from:4.495178018260049e-06', 'of:3.4365734791208524e-06', '##com:0.0', 'postal:0.0', 'regulation:0.0', 'report:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('royal', tensor(0., device='cuda:0')), ('mail', tensor(0., device='cuda:0')), ('gets', tensor(0., device='cuda:0')), ('mixed', tensor(0., device='cuda:0')), ('bag', tensor(0., device='cuda:0')), ('from', tensor(0.5667, device='cuda:0')), ('ofcom', tensor(0.4333, device='cuda:0')), ('postal', tensor(0., device='cuda:0')), ('regulation', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0'))],  word_scores_max: [('royal', tensor(0., device='cuda:0')), ('mail', tensor(0., device='cuda:0')), ('gets', tensor(0., device='cuda:0')), ('mixed', tensor(0., device='cuda:0')), ('bag', tensor(0., device='cuda:0')), ('from', tensor(0.5667, device='cuda:0')), ('ofcom', tensor(0.4333, device='cuda:0')), ('postal', tensor(0., device='cuda:0')), ('regulation', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0'))]
idx: 1071, example: $ebay had a nice breakout of the recent consolidation. congrats to those who had it. , prediction: 2, correct_label: 1, class_scores: [0.23814905 0.31659302 0.44525793], word_scores: ['$:0.0', 'e:0.0', '##bay:0.0', 'had:0.0', 'a:8.62785782373976e-06', 'nice:0.0', 'breakout:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'recent:0.0', 'consolidation:0.0', '.:2.903296945078182e-06', 'cong:0.0', '##rat:0.0', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', 'those:0.0', 'who:0.0', 'had:0.0', 'it:3.3415778943890473e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ebay', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('a', tensor(0.2831, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('of', tensor(0.1128, device='cuda:0')), ('the', tensor(0.2093, device='cuda:0')), ('recent', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('.', tensor(0.0953, device='cuda:0')), ('congrats', tensor(0., device='cuda:0')), ('to', tensor(0.0947, device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('it', tensor(0.1096, device='cuda:0')), ('.', tensor(0.0953, device='cuda:0'))],  word_scores_max: [('ebay', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('a', tensor(0.2831, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('of', tensor(0.1128, device='cuda:0')), ('the', tensor(0.2093, device='cuda:0')), ('recent', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('.', tensor(0.0953, device='cuda:0')), ('congrats', tensor(0., device='cuda:0')), ('to', tensor(0.0947, device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('it', tensor(0.1096, device='cuda:0')), ('.', tensor(0.0953, device='cuda:0'))]
idx: 1072, example: companiesab inbev signals it won't go hostile for sabmiller, prediction: 2, correct_label: 2, class_scores: [0.2263165  0.36958176 0.40410176], word_scores: ['companies:0.0', '##ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'signals:0.0', 'it:3.3415778943890473e-06', 'won:0.0', "':0.0", 't:0.0', 'go:0.0', 'hostile:0.0', 'for:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companiesab', tensor(0., device='cuda:0')), ('inbev', tensor(0.4749, device='cuda:0')), ('signals', tensor(0., device='cuda:0')), ('it', tensor(0.5251, device='cuda:0'))],  word_scores_max: [('companiesab', tensor(0., device='cuda:0')), ('inbev', tensor(0.4749, device='cuda:0')), ('signals', tensor(0., device='cuda:0')), ('it', tensor(0.5251, device='cuda:0'))]
idx: 1073, example: are arm holdings plc, domino's pizza group plc and asos plc 3 must-have growth stocks?, prediction: 2, correct_label: 2, class_scores: [0.16113347 0.39665565 0.44221088], word_scores: ['are:0.0', 'arm:0.0', 'holdings:0.0', 'plc:0.0', ',:7.986737728060689e-06', 'domino:0.0', "':0.0", 's:0.0', 'pizza:0.0', 'group:0.0', 'plc:0.0', 'and:0.0', 'as:0.0', '##os:0.0', 'plc:0.0', '3:0.0', 'must:0.0', '-:4.821180027647642e-06', 'have:2.910326429628185e-06', 'growth:0.0', 'stocks:0.0', '?:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('are', tensor(0., device='cuda:0')), ('arm', tensor(0., device='cuda:0')), ('holdings', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('are', tensor(0., device='cuda:0')), ('arm', tensor(0., device='cuda:0')), ('holdings', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 1074, example: $amrn got sell signal 7/1/14 still in force with target below 1.50, prediction: 2, correct_label: 0, class_scores: [0.2294709 0.3399465 0.4305826], word_scores: ['$:0.0', 'am:0.0', '##rn:0.0', 'got:0.0', 'sell:0.0', 'signal:0.0', '7:0.0', '/:0.0', '1:0.0', '/:0.0', '14:0.0', 'still:0.0', 'in:3.0217122457543155e-06', 'force:0.0', 'with:4.733654350275174e-06', 'target:0.0', 'below:0.0', '1:0.0', '.:2.903296945078182e-06', '50:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('amrn', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('in', tensor(0.2835, device='cuda:0')), ('force', tensor(0., device='cuda:0')), ('with', tensor(0.4441, device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2724, device='cuda:0')), ('50', tensor(0., device='cuda:0'))],  word_scores_max: [('amrn', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('14', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('in', tensor(0.2835, device='cuda:0')), ('force', tensor(0., device='cuda:0')), ('with', tensor(0.4441, device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2724, device='cuda:0')), ('50', tensor(0., device='cuda:0'))]
idx: 1075, example: $sbux getting sold here., prediction: 1, correct_label: 0, class_scores: [0.21627246 0.39344823 0.39027938], word_scores: ['$:0.0', 'sb:0.0', '##ux:0.0', 'getting:0.0', 'sold:0.0', 'here:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('sbux', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('sbux', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1076, example: relief for lewis as tesco sees sales grow for first time in a year, prediction: 1, correct_label: 1, class_scores: [0.18011637 0.45044962 0.369434  ], word_scores: ['relief:0.0', 'for:0.0', 'lewis:0.0', 'as:0.0', 'te:0.0', '##sco:0.0', 'sees:0.0', 'sales:0.0', 'grow:0.0', 'for:0.0', 'first:0.0', 'time:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'year:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('relief', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('lewis', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('tesco', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('grow', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('in', tensor(0.2594, device='cuda:0')), ('a', tensor(0.7406, device='cuda:0')), ('year', tensor(0., device='cuda:0'))],  word_scores_max: [('relief', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('lewis', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('tesco', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('grow', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('in', tensor(0.2594, device='cuda:0')), ('a', tensor(0.7406, device='cuda:0')), ('year', tensor(0., device='cuda:0'))]
idx: 1077, example: #ndx component tesla has announced it is recalling 2700 model x suvs. $tsla, prediction: 2, correct_label: 2, class_scores: [0.20450744 0.3172844  0.47820815], word_scores: ['#:0.0', 'n:0.0', '##d:0.0', '##x:0.0', 'component:0.0', 'tesla:0.0', 'has:5.9214244174654596e-06', 'announced:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'recalling:0.0', '270:0.0', '##0:0.0', 'model:0.0', 'x:0.0', 'suv:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ndx', tensor(0., device='cuda:0')), ('component', tensor(0., device='cuda:0')), ('tesla', tensor(0., device='cuda:0')), ('has', tensor(0.4867, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('it', tensor(0.2747, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('recalling', tensor(0., device='cuda:0')), ('2700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('suvs', tensor(0., device='cuda:0')), ('.', tensor(0.2386, device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('ndx', tensor(0., device='cuda:0')), ('component', tensor(0., device='cuda:0')), ('tesla', tensor(0., device='cuda:0')), ('has', tensor(0.4867, device='cuda:0')), ('announced', tensor(0., device='cuda:0')), ('it', tensor(0.2747, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('recalling', tensor(0., device='cuda:0')), ('2700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('suvs', tensor(0., device='cuda:0')), ('.', tensor(0.2386, device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1078, example: spain's caixabank expects to close deal for banco bpi, prediction: 2, correct_label: 1, class_scores: [0.2648817  0.32141718 0.41370106], word_scores: ['spain:0.0', "':0.0", 's:0.0', 'cai:0.0', '##xa:0.0', '##bank:0.0', 'expects:0.0', 'to:2.886244146793615e-06', 'close:0.0', 'deal:0.0', 'for:0.0', 'banco:0.0', 'bp:0.0', '##i:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1079, example: kraft, cadbury's and britvic in total recall: how pulling a product affects profit, prediction: 2, correct_label: 2, class_scores: [0.22911525 0.31799623 0.45288855], word_scores: ['kraft:0.0', ',:7.986737728060689e-06', 'cad:0.0', '##bury:0.0', "':0.0", 's:0.0', 'and:0.0', 'brit:0.0', '##vic:0.0', 'in:3.0217122457543155e-06', 'total:0.0', 'recall:0.0', '::0.0', 'how:0.0', 'pulling:0.0', 'a:8.62785782373976e-06', 'product:0.0', 'affects:0.0', 'profit:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('kraft', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('kraft', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 1080, example: $aapl iphone shipments on track to exceed forecasts - marketwatch , prediction: 2, correct_label: 1, class_scores: [0.19000955 0.38089964 0.42909077], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'iphone:0.0', 'shipments:0.0', 'on:0.0', 'track:0.0', 'to:2.886244146793615e-06', 'exceed:0.0', 'forecast:0.0', '##s:4.601175078278175e-06', '-:4.821180027647642e-06', 'market:0.0', '##watch:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), ('shipments', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('track', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('exceed', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0')), ('marketwatch', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), ('shipments', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('track', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('exceed', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0')), ('marketwatch', tensor(0., device='cuda:0'))]
idx: 1081, example: $wmt bullish with macd crossover with rsi and sto going up - above 73.4$ ma50 res. could run , prediction: 1, correct_label: 1, class_scores: [0.21769261 0.46498013 0.31732723], word_scores: ['$:0.0', 'w:0.0', '##mt:0.0', 'bull:0.0', '##ish:0.0', 'with:4.733654350275174e-06', 'mac:0.0', '##d:0.0', 'crossover:0.0', 'with:4.733654350275174e-06', 'rs:0.0', '##i:0.0', 'and:0.0', 'st:0.0', '##o:0.0', 'going:0.0', 'up:1.4959460941099678e-06', '-:4.821180027647642e-06', 'above:0.0', '73:0.0', '.:2.903296945078182e-06', '4:0.0', '$:0.0', 'ma:0.0', '##50:0.0', 'res:0.0', '.:2.903296945078182e-06', 'could:0.0', 'run:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('wmt', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('with', tensor(0.2192, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('crossover', tensor(0., device='cuda:0')), ('with', tensor(0.2192, device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sto', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('up', tensor(0.0693, device='cuda:0')), ('-', tensor(0.2233, device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('73', tensor(0., device='cuda:0')), ('.', tensor(0.1345, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('ma50', tensor(0., device='cuda:0')), ('res', tensor(0., device='cuda:0')), ('.', tensor(0.1345, device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0'))],  word_scores_max: [('wmt', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('with', tensor(0.2192, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('crossover', tensor(0., device='cuda:0')), ('with', tensor(0.2192, device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sto', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('up', tensor(0.0693, device='cuda:0')), ('-', tensor(0.2233, device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('73', tensor(0., device='cuda:0')), ('.', tensor(0.1345, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('ma50', tensor(0., device='cuda:0')), ('res', tensor(0., device='cuda:0')), ('.', tensor(0.1345, device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0'))]
idx: 1082, example: $aapl dips being bought up real quick. higher lows fo sho, prediction: 1, correct_label: 2, class_scores: [0.24886419 0.419574   0.33156186], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'dip:0.0', '##s:4.601175078278175e-06', 'being:0.0', 'bought:0.0', 'up:1.4959460941099678e-06', 'real:0.0', 'quick:0.0', '.:2.903296945078182e-06', 'higher:0.0', 'low:0.0', '##s:4.601175078278175e-06', 'f:0.0', '##o:0.0', 'sho:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('dips', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('up', tensor(0.3400, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('quick', tensor(0., device='cuda:0')), ('.', tensor(0.6600, device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('lows', tensor(0., device='cuda:0')), ('fo', tensor(0., device='cuda:0')), ('sho', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('dips', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('up', tensor(0.3400, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('quick', tensor(0., device='cuda:0')), ('.', tensor(0.6600, device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('lows', tensor(0., device='cuda:0')), ('fo', tensor(0., device='cuda:0')), ('sho', tensor(0., device='cuda:0'))]
idx: 1083, example: tesco share price dips as blinkbox books closes ending supermarket's digital ..., prediction: 2, correct_label: 0, class_scores: [0.22507142 0.37559134 0.39933723], word_scores: ['te:0.0', '##sco:0.0', 'share:0.0', 'price:0.0', 'dip:0.0', '##s:4.601175078278175e-06', 'as:0.0', 'blink:0.0', '##box:0.0', 'books:0.0', 'closes:0.0', 'ending:0.0', 'supermarket:0.0', "':0.0", 's:0.0', 'digital:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('dips', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('blinkbox', tensor(nan, device='cuda:0')), ('books', tensor(nan, device='cuda:0')), ('closes', tensor(nan, device='cuda:0')), ('ending', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('dips', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('blinkbox', tensor(nan, device='cuda:0')), ('books', tensor(nan, device='cuda:0')), ('closes', tensor(nan, device='cuda:0')), ('ending', tensor(nan, device='cuda:0'))]
idx: 1084, example: tesco shareholders back itv head for chairman, prediction: 2, correct_label: 2, class_scores: [0.19097796 0.24832821 0.5606938 ], word_scores: ['te:0.0', '##sco:0.0', 'shareholders:0.0', 'back:0.0', 'itv:0.0', 'head:0.0', 'for:0.0', 'chairman:3.5376444884605007e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('itv', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('chairman', tensor(1., device='cuda:0'))],  word_scores_max: [('tesco', tensor(0., device='cuda:0')), ('shareholders', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('itv', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('chairman', tensor(1., device='cuda:0'))]
idx: 1085, example: merkel's government said to support deutsche boerse-lse merger, prediction: 2, correct_label: 1, class_scores: [0.20972842 0.3262062  0.4640653 ], word_scores: ['mer:0.0', '##kel:0.0', "':0.0", 's:0.0', 'government:0.0', 'said:0.0', 'to:2.886244146793615e-06', 'support:0.0', 'deutsche:0.0', 'boer:0.0', '##se:0.0', '-:4.821180027647642e-06', 'l:0.0', '##se:0.0', 'merger:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1086, example: $qihu totally missed this one, was about to jump in on that 60 break test but didn't, congrats shorts, prediction: 2, correct_label: 0, class_scores: [0.21159154 0.36295146 0.42545694], word_scores: ['$:0.0', 'qi:0.0', '##hu:0.0', 'totally:0.0', 'missed:0.0', 'this:0.0', 'one:4.584404450724833e-06', ',:7.986737728060689e-06', 'was:0.0', 'about:0.0', 'to:2.886244146793615e-06', 'jump:0.0', 'in:3.0217122457543155e-06', 'on:0.0', 'that:1.5133816759771435e-06', '60:0.0', 'break:0.0', 'test:0.0', 'but:0.0', 'didn:0.0', "':0.0", 't:0.0', ',:7.986737728060689e-06', 'cong:0.0', '##rat:0.0', '##s:4.601175078278175e-06', 'shorts:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('qihu', tensor(0., device='cuda:0')), ('totally', tensor(0., device='cuda:0')), ('missed', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.2293, device='cuda:0')), (',', tensor(0.3995, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.1444, device='cuda:0')), ('jump', tensor(0., device='cuda:0')), ('in', tensor(0.1511, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('that', tensor(0.0757, device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0'))],  word_scores_max: [('qihu', tensor(0., device='cuda:0')), ('totally', tensor(0., device='cuda:0')), ('missed', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.2293, device='cuda:0')), (',', tensor(0.3995, device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.1444, device='cuda:0')), ('jump', tensor(0., device='cuda:0')), ('in', tensor(0.1511, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('that', tensor(0.0757, device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0'))]
idx: 1087, example: $cndo 21% short float, shorts likely to take profits into close, prediction: 2, correct_label: 2, class_scores: [0.167058   0.3710805  0.46186146], word_scores: ['$:0.0', 'cn:0.0', '##do:0.0', '21:0.0', '%:0.0', 'short:0.0', 'float:0.0', ',:7.986737728060689e-06', 'shorts:0.0', 'likely:0.0', 'to:2.886244146793615e-06', 'take:2.0325496734585613e-06', 'profits:0.0', 'into:0.0', 'close:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('cndo', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('float', tensor(0., device='cuda:0')), (',', tensor(0.6189, device='cuda:0')), ('shorts', tensor(0., device='cuda:0')), ('likely', tensor(0., device='cuda:0')), ('to', tensor(0.2236, device='cuda:0')), ('take', tensor(0.1575, device='cuda:0')), ('profits', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('close', tensor(0., device='cuda:0'))],  word_scores_max: [('cndo', tensor(0., device='cuda:0')), ('21', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('float', tensor(0., device='cuda:0')), (',', tensor(0.6189, device='cuda:0')), ('shorts', tensor(0., device='cuda:0')), ('likely', tensor(0., device='cuda:0')), ('to', tensor(0.2236, device='cuda:0')), ('take', tensor(0.1575, device='cuda:0')), ('profits', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('close', tensor(0., device='cuda:0'))]
idx: 1088, example: valeant ceo pledges to heed critics after `painful' experience, prediction: 2, correct_label: 0, class_scores: [0.20349842 0.26138428 0.53511727], word_scores: ['vale:0.0', '##ant:0.0', 'ceo:0.0', 'pledge:0.0', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', 'hee:0.0', '##d:0.0', 'critics:0.0', 'after:0.0', '`:0.0', 'painful:0.0', "':0.0", 'experience:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('valeant', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('pledges', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('heed', tensor(0., device='cuda:0')), ('critics', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0'))],  word_scores_max: [('valeant', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('pledges', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('heed', tensor(0., device='cuda:0')), ('critics', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0'))]
idx: 1089, example: $lnt increases annual dividend target to $1.80/share from $1.70/share, prediction: 2, correct_label: 2, class_scores: [0.14591616 0.37990445 0.47417945], word_scores: ['$:0.0', 'l:0.0', '##nt:0.0', 'increases:0.0', 'annual:0.0', 'divide:0.0', '##nd:0.0', 'target:0.0', 'to:2.886244146793615e-06', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '80:0.0', '/:0.0', 'share:0.0', 'from:4.495178018260049e-06', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '70:0.0', '/:0.0', 'share:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lnt', tensor(0., device='cuda:0')), ('increases', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))],  word_scores_max: [('lnt', tensor(0., device='cuda:0')), ('increases', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('to', tensor(0.2189, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('from', tensor(0.3409, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.2201, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0'))]
idx: 1090, example: companies thetrainline.com announces arrival of london ipo, prediction: 2, correct_label: 2, class_scores: [0.2221431  0.3675136  0.41034335], word_scores: ['companies:0.0', 'the:6.3806996877247e-06', '##train:0.0', '##line:0.0', '.:2.903296945078182e-06', 'com:0.0', 'announces:0.0', 'arrival:0.0', 'of:3.4365734791208524e-06', 'london:0.0', 'ip:0.0', '##o:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companies', tensor(0., device='cuda:0')), ('thetrainline', tensor(0.5016, device='cuda:0')), ('.', tensor(0.2282, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('announces', tensor(0., device='cuda:0')), ('arrival', tensor(0., device='cuda:0')), ('of', tensor(0.2702, device='cuda:0')), ('london', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0'))],  word_scores_max: [('companies', tensor(0., device='cuda:0')), ('thetrainline', tensor(0.5016, device='cuda:0')), ('.', tensor(0.2282, device='cuda:0')), ('com', tensor(0., device='cuda:0')), ('announces', tensor(0., device='cuda:0')), ('arrival', tensor(0., device='cuda:0')), ('of', tensor(0.2702, device='cuda:0')), ('london', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0'))]
idx: 1091, example: royal dutch shell to buy bg group for nearly $70 billion, prediction: 2, correct_label: 2, class_scores: [0.15370329 0.3681062  0.47819054], word_scores: ['royal:0.0', 'dutch:0.0', 'shell:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'b:0.0', '##g:0.0', 'group:0.0', 'for:0.0', 'nearly:0.0', '$:0.0', '70:0.0', 'billion:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('royal', tensor(0., device='cuda:0')), ('dutch', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('bg', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('nearly', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0'))],  word_scores_max: [('royal', tensor(0., device='cuda:0')), ('dutch', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('bg', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('nearly', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0'))]
idx: 1092, example: ap: caterpillar posts 60 percent jump in 4q profit on steep global sales increase, tops wall st. view > $cat, prediction: 1, correct_label: 1, class_scores: [0.1700665  0.44644326 0.38349023], word_scores: ['ap:0.0', '::0.0', 'cater:0.0', '##pi:0.0', '##llar:0.0', 'posts:0.0', '60:0.0', 'percent:0.0', 'jump:0.0', 'in:3.0217122457543155e-06', '4:0.0', '##q:0.0', 'profit:0.0', 'on:0.0', 'steep:0.0', 'global:0.0', 'sales:0.0', 'increase:0.0', ',:7.986737728060689e-06', 'tops:0.0', 'wall:0.0', 'st:0.0', '.:2.903296945078182e-06', 'view:0.0', '>:0.0', '$:0.0', 'cat:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ap', tensor(0., device='cuda:0')), ('caterpillar', tensor(0., device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('jump', tensor(0., device='cuda:0')), ('in', tensor(0.2172, device='cuda:0')), ('4q', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('steep', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), (',', tensor(0.5741, device='cuda:0')), ('tops', tensor(0., device='cuda:0')), ('wall', tensor(0., device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.2087, device='cuda:0')), ('view', tensor(0., device='cuda:0')), ('cat', tensor(0., device='cuda:0'))],  word_scores_max: [('ap', tensor(0., device='cuda:0')), ('caterpillar', tensor(0., device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('60', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('jump', tensor(0., device='cuda:0')), ('in', tensor(0.2172, device='cuda:0')), ('4q', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('steep', tensor(0., device='cuda:0')), ('global', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), (',', tensor(0.5741, device='cuda:0')), ('tops', tensor(0., device='cuda:0')), ('wall', tensor(0., device='cuda:0')), ('st', tensor(0., device='cuda:0')), ('.', tensor(0.2087, device='cuda:0')), ('view', tensor(0., device='cuda:0')), ('cat', tensor(0., device='cuda:0'))]
idx: 1093, example: morrisons and debenhams surprise city with christmas bounce back, prediction: 2, correct_label: 1, class_scores: [0.215888   0.31005055 0.4740615 ], word_scores: ['morrison:0.0', '##s:4.601175078278175e-06', 'and:0.0', 'de:0.0', '##ben:0.0', '##ham:0.0', '##s:4.601175078278175e-06', 'surprise:0.0', 'city:0.0', 'with:4.733654350275174e-06', 'christmas:0.0', 'bounce:0.0', 'back:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('morrisons', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('debenhams', tensor(0., device='cuda:0')), ('surprise', tensor(0., device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('christmas', tensor(0., device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0'))],  word_scores_max: [('morrisons', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('debenhams', tensor(0., device='cuda:0')), ('surprise', tensor(0., device='cuda:0')), ('city', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('christmas', tensor(0., device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0'))]
idx: 1094, example: itv share price jumps on report of comcast's nbcuniversal bidding to takeover ..., prediction: 2, correct_label: 1, class_scores: [0.17777076 0.28413793 0.5380913 ], word_scores: ['itv:0.0', 'share:0.0', 'price:0.0', 'jumps:0.0', 'on:0.0', 'report:0.0', 'of:3.4365734791208524e-06', 'com:0.0', '##cast:0.0', "':0.0", 's:0.0', 'nbc:0.0', '##uni:0.0', '##vers:0.0', '##al:0.0', 'bidding:0.0', 'to:2.886244146793615e-06', 'takeover:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('itv', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('jumps', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))],  word_scores_max: [('itv', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('jumps', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))]
idx: 1095, example: us dollar wipes out sales gains for sabmiller, prediction: 1, correct_label: 0, class_scores: [0.2902896  0.35723665 0.3524737 ], word_scores: ['us:0.0', 'dollar:0.0', 'wipe:0.0', '##s:4.601175078278175e-06', 'out:0.0', 'sales:0.0', 'gains:0.0', 'for:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('us', tensor(nan, device='cuda:0')), ('dollar', tensor(nan, device='cuda:0')), ('wipes', tensor(nan, device='cuda:0')), ('out', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('gains', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('sabmiller', tensor(nan, device='cuda:0'))],  word_scores_max: [('us', tensor(nan, device='cuda:0')), ('dollar', tensor(nan, device='cuda:0')), ('wipes', tensor(nan, device='cuda:0')), ('out', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('gains', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('sabmiller', tensor(nan, device='cuda:0'))]
idx: 1096, example: $spy weak close, prediction: 2, correct_label: 2, class_scores: [0.17253006 0.39426553 0.43320438], word_scores: ['$:0.0', 'spy:0.0', 'weak:0.0', 'close:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('spy', tensor(nan, device='cuda:0')), ('weak', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0'))],  word_scores_max: [('spy', tensor(nan, device='cuda:0')), ('weak', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0'))]
idx: 1097, example: royal dutch shell profit rises; dividend up 4%, prediction: 1, correct_label: 1, class_scores: [0.19155945 0.4107657  0.39767486], word_scores: ['royal:0.0', 'dutch:0.0', 'shell:0.0', 'profit:0.0', 'rises:0.0', ';:0.0', 'divide:0.0', '##nd:0.0', 'up:1.4959460941099678e-06', '4:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('royal', tensor(0., device='cuda:0')), ('dutch', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('up', tensor(1., device='cuda:0')), ('4', tensor(0., device='cuda:0'))],  word_scores_max: [('royal', tensor(0., device='cuda:0')), ('dutch', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('up', tensor(1., device='cuda:0')), ('4', tensor(0., device='cuda:0'))]
idx: 1098, example: randgold profit hit by poor gold price but dividend still increases, prediction: 2, correct_label: 2, class_scores: [0.22211389 0.36422852 0.4136576 ], word_scores: ['rand:0.0', '##gold:0.0', 'profit:0.0', 'hit:0.0', 'by:0.0', 'poor:0.0', 'gold:0.0', 'price:0.0', 'but:0.0', 'divide:0.0', '##nd:0.0', 'still:0.0', 'increases:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('randgold', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('hit', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('poor', tensor(nan, device='cuda:0')), ('gold', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('but', tensor(nan, device='cuda:0')), ('dividend', tensor(nan, device='cuda:0')), ('still', tensor(nan, device='cuda:0')), ('increases', tensor(nan, device='cuda:0'))],  word_scores_max: [('randgold', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('hit', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('poor', tensor(nan, device='cuda:0')), ('gold', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('but', tensor(nan, device='cuda:0')), ('dividend', tensor(nan, device='cuda:0')), ('still', tensor(nan, device='cuda:0')), ('increases', tensor(nan, device='cuda:0'))]
idx: 1099, example: kingfisher share price slides on cost to implement new strategy, prediction: 2, correct_label: 0, class_scores: [0.19967699 0.38781396 0.41250902], word_scores: ['king:0.0', '##fish:0.0', '##er:0.0', 'share:0.0', 'price:0.0', 'slides:0.0', 'on:0.0', 'cost:0.0', 'to:2.886244146793615e-06', 'implement:0.0', 'new:2.798587502184091e-06', 'strategy:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('kingfisher', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('slides', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('to', tensor(0.5077, device='cuda:0')), ('implement', tensor(0., device='cuda:0')), ('new', tensor(0.4923, device='cuda:0')), ('strategy', tensor(0., device='cuda:0'))],  word_scores_max: [('kingfisher', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('slides', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('to', tensor(0.5077, device='cuda:0')), ('implement', tensor(0., device='cuda:0')), ('new', tensor(0.4923, device='cuda:0')), ('strategy', tensor(0., device='cuda:0'))]
idx: 1100, example: $qcom chart: qualcomm short 61.8% retracement, trendline and resistance. , prediction: 1, correct_label: 0, class_scores: [0.25171217 0.38718322 0.3611046 ], word_scores: ['$:0.0', 'qc:0.0', '##om:0.0', 'chart:0.0', '::0.0', 'qu:0.0', '##al:0.0', '##com:0.0', '##m:0.0', 'short:0.0', '61:0.0', '.:2.903296945078182e-06', '8:0.0', '%:0.0', 're:0.0', '##tra:0.0', '##ce:0.0', '##ment:0.0', ',:7.986737728060689e-06', 'trend:0.0', '##line:0.0', 'and:0.0', 'resistance:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('qcom', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('qualcomm', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('61', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('retracement', tensor(0., device='cuda:0')), (',', tensor(0.5790, device='cuda:0')), ('trendline', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0'))],  word_scores_max: [('qcom', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('qualcomm', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('61', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('retracement', tensor(0., device='cuda:0')), (',', tensor(0.5790, device='cuda:0')), ('trendline', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0'))]
idx: 1101, example: @louiebeene vwap is 1.63, held the trend line. should be on a lot of radars. $navb, prediction: 2, correct_label: 2, class_scores: [0.21078818 0.38548884 0.403723  ], word_scores: ['@:0.0', 'louie:0.0', '##bee:0.0', '##ne:8.183636964531615e-06', 'v:0.0', '##wa:0.0', '##p:0.0', 'is:0.0', '1:0.0', '.:2.903296945078182e-06', '63:0.0', ',:7.986737728060689e-06', 'held:0.0', 'the:6.3806996877247e-06', 'trend:0.0', 'line:0.0', '.:2.903296945078182e-06', 'should:0.0', 'be:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'lot:0.0', 'of:3.4365734791208524e-06', 'radar:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', '$:0.0', 'na:0.0', '##vb:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('louiebeene', tensor(0., device='cuda:0')), ('vwap', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('63', tensor(0., device='cuda:0')), (',', tensor(0.2273, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('the', tensor(0.1816, device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2455, device='cuda:0')), ('lot', tensor(0., device='cuda:0')), ('of', tensor(0.0978, device='cuda:0')), ('radars', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('navb', tensor(0., device='cuda:0'))],  word_scores_max: [('louiebeene', tensor(0., device='cuda:0')), ('vwap', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('63', tensor(0., device='cuda:0')), (',', tensor(0.2273, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('the', tensor(0.1816, device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.2455, device='cuda:0')), ('lot', tensor(0., device='cuda:0')), ('of', tensor(0.0978, device='cuda:0')), ('radars', tensor(0., device='cuda:0')), ('.', tensor(0.0826, device='cuda:0')), ('navb', tensor(0., device='cuda:0'))]
idx: 1102, example: $gmcr with the way this has been acting, it may fall to 65 today, horrible action since it hit 70 yesterday, prediction: 2, correct_label: 0, class_scores: [0.16584413 0.3235824  0.51057345], word_scores: ['$:0.0', 'gm:0.0', '##cr:6.230764483916573e-06', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'way:0.0', 'this:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'acting:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'may:0.0', 'fall:0.0', 'to:2.886244146793615e-06', '65:0.0', 'today:0.0', ',:7.986737728060689e-06', 'horrible:0.0', 'action:0.0', 'since:0.0', 'it:3.3415778943890473e-06', 'hit:0.0', '70:0.0', 'yesterday:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('gmcr', tensor(0., device='cuda:0')), ('with', tensor(0.1112, device='cuda:0')), ('the', tensor(0.1499, device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('has', tensor(0.1391, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('acting', tensor(0., device='cuda:0')), (',', tensor(0.1876, device='cuda:0')), ('it', tensor(0.0785, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('to', tensor(0.0678, device='cuda:0')), ('65', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), (',', tensor(0.1876, device='cuda:0')), ('horrible', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('it', tensor(0.0785, device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0'))],  word_scores_max: [('gmcr', tensor(0., device='cuda:0')), ('with', tensor(0.1112, device='cuda:0')), ('the', tensor(0.1499, device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('has', tensor(0.1391, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('acting', tensor(0., device='cuda:0')), (',', tensor(0.1876, device='cuda:0')), ('it', tensor(0.0785, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('to', tensor(0.0678, device='cuda:0')), ('65', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), (',', tensor(0.1876, device='cuda:0')), ('horrible', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('it', tensor(0.0785, device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('yesterday', tensor(0., device='cuda:0'))]
idx: 1103, example: @brooklynbandit: $simo basing nice. a close over 24.18 is bullish $qqq $spy $study watch for a close near hod. currently up +3%" up +5%, prediction: 1, correct_label: 1, class_scores: [0.20736402 0.42008632 0.37254962], word_scores: ['@:0.0', 'brooklyn:0.0', '##band:0.0', '##it:0.0', '::0.0', '$:0.0', 'sim:0.0', '##o:0.0', 'basin:0.0', '##g:0.0', 'nice:0.0', '.:2.903296945078182e-06', 'a:8.62785782373976e-06', 'close:0.0', 'over:0.0', '24:0.0', '.:2.903296945078182e-06', '18:0.0', 'is:0.0', 'bull:0.0', '##ish:0.0', '$:0.0', 'q:0.0', '##q:0.0', '##q:0.0', '$:0.0', 'spy:0.0', '$:0.0', 'study:0.0', 'watch:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'close:0.0', 'near:0.0', 'ho:0.0', '##d:0.0', '.:2.903296945078182e-06', 'currently:0.0', 'up:1.4959460941099678e-06', '+:0.0', '3:0.0', '%:0.0', '":0.0', 'up:1.4959460941099678e-06', '+:0.0', '5:0.0', '%:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('brooklynbandit', tensor(0., device='cuda:0')), ('simo', tensor(0., device='cuda:0')), ('basing', tensor(0., device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('.', tensor(0.1003, device='cuda:0')), ('a', tensor(0.2979, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(0.1003, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('qqq', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2979, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('.', tensor(0.1003, device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('up', tensor(0.0517, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('up', tensor(0.0517, device='cuda:0')), ('5', tensor(0., device='cuda:0'))],  word_scores_max: [('brooklynbandit', tensor(0., device='cuda:0')), ('simo', tensor(0., device='cuda:0')), ('basing', tensor(0., device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('.', tensor(0.1003, device='cuda:0')), ('a', tensor(0.2979, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(0.1003, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('qqq', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2979, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('.', tensor(0.1003, device='cuda:0')), ('currently', tensor(0., device='cuda:0')), ('up', tensor(0.0517, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('up', tensor(0.0517, device='cuda:0')), ('5', tensor(0., device='cuda:0'))]
idx: 1104, example: $amzn trades in mid to upper range. no break out yet, either direction, prediction: 2, correct_label: 2, class_scores: [0.19748294 0.37246212 0.43005496], word_scores: ['$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', 'trades:0.0', 'in:3.0217122457543155e-06', 'mid:0.0', 'to:2.886244146793615e-06', 'upper:0.0', 'range:0.0', '.:2.903296945078182e-06', 'no:0.0', 'break:0.0', 'out:0.0', 'yet:0.0', ',:7.986737728060689e-06', 'either:0.0', 'direction:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('amzn', tensor(0., device='cuda:0')), ('trades', tensor(0., device='cuda:0')), ('in', tensor(0.1799, device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('to', tensor(0.1718, device='cuda:0')), ('upper', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('.', tensor(0.1728, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('yet', tensor(0., device='cuda:0')), (',', tensor(0.4755, device='cuda:0')), ('either', tensor(0., device='cuda:0')), ('direction', tensor(0., device='cuda:0'))],  word_scores_max: [('amzn', tensor(0., device='cuda:0')), ('trades', tensor(0., device='cuda:0')), ('in', tensor(0.1799, device='cuda:0')), ('mid', tensor(0., device='cuda:0')), ('to', tensor(0.1718, device='cuda:0')), ('upper', tensor(0., device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('.', tensor(0.1728, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('yet', tensor(0., device='cuda:0')), (',', tensor(0.4755, device='cuda:0')), ('either', tensor(0., device='cuda:0')), ('direction', tensor(0., device='cuda:0'))]
idx: 1105, example: $agn and $pypl under pressure along with the market, however there were bullish options trades in both this morning , prediction: 2, correct_label: 2, class_scores: [0.17860653 0.38214347 0.43925002], word_scores: ['$:0.0', 'ag:0.0', '##n:0.0', 'and:0.0', '$:0.0', 'p:0.0', '##yp:0.0', '##l:0.0', 'under:0.0', 'pressure:0.0', 'along:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'market:0.0', ',:7.986737728060689e-06', 'however:0.0', 'there:0.0', 'were:0.0', 'bull:0.0', '##ish:0.0', 'options:0.0', 'trades:0.0', 'in:3.0217122457543155e-06', 'both:0.0', 'this:0.0', 'morning:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('agn', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pypl', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('pressure', tensor(0., device='cuda:0')), ('along', tensor(0., device='cuda:0')), ('with', tensor(0.2140, device='cuda:0')), ('the', tensor(0.2884, device='cuda:0')), ('market', tensor(0., device='cuda:0')), (',', tensor(0.3610, device='cuda:0')), ('however', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('trades', tensor(0., device='cuda:0')), ('in', tensor(0.1366, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0'))],  word_scores_max: [('agn', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('pypl', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('pressure', tensor(0., device='cuda:0')), ('along', tensor(0., device='cuda:0')), ('with', tensor(0.2140, device='cuda:0')), ('the', tensor(0.2884, device='cuda:0')), ('market', tensor(0., device='cuda:0')), (',', tensor(0.3610, device='cuda:0')), ('however', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('trades', tensor(0., device='cuda:0')), ('in', tensor(0.1366, device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0'))]
idx: 1106, example: astrazeneca explores potential deal with acerta for cancer drug, prediction: 1, correct_label: 1, class_scores: [0.16461813 0.44328687 0.39209506], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'explores:0.0', 'potential:0.0', 'deal:0.0', 'with:4.733654350275174e-06', 'ace:0.0', '##rta:0.0', 'for:0.0', 'cancer:0.0', 'drug:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('explores', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('acerta', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('explores', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('acerta', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))]
idx: 1107, example: $neon oversold, prediction: 1, correct_label: 1, class_scores: [0.22733855 0.40754548 0.36511594], word_scores: ['$:0.0', 'neon:0.0', 'overs:0.0', '##old:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('neon', tensor(nan, device='cuda:0')), ('oversold', tensor(nan, device='cuda:0'))],  word_scores_max: [('neon', tensor(nan, device='cuda:0')), ('oversold', tensor(nan, device='cuda:0'))]
idx: 1108, example: $spy long 1/2 position 137.89, prediction: 2, correct_label: 1, class_scores: [0.22531506 0.2809478  0.49373716], word_scores: ['$:0.0', 'spy:0.0', 'long:0.0', '1:0.0', '/:0.0', '2:0.0', 'position:0.0', '137:0.0', '.:2.903296945078182e-06', '89:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('spy', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('137', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('89', tensor(0., device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('137', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('89', tensor(0., device='cuda:0'))]
idx: 1109, example: buyback not trending right ( $cpix spending more as shares pricier). hopefully will pull back w 6.87 q2 closing vwap, prediction: 2, correct_label: 2, class_scores: [0.27436018 0.2483856  0.47725418], word_scores: ['buy:0.0', '##back:0.0', 'not:0.0', 'trend:0.0', '##ing:0.0', 'right:0.0', '(:0.0', '$:0.0', 'cpi:0.0', '##x:0.0', 'spending:0.0', 'more:0.0', 'as:0.0', 'shares:0.0', 'pri:0.0', '##cier:0.0', '):0.0', '.:2.903296945078182e-06', 'hopefully:0.0', 'will:4.073096533829812e-06', 'pull:0.0', 'back:0.0', 'w:0.0', '6:0.0', '.:2.903296945078182e-06', '87:0.0', 'q:0.0', '##2:0.0', 'closing:0.0', 'v:0.0', '##wa:0.0', '##p:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('buyback', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('trending', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('cpix', tensor(0., device='cuda:0')), ('spending', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('pricier', tensor(0., device='cuda:0')), ('.', tensor(0.2939, device='cuda:0')), ('hopefully', tensor(0., device='cuda:0')), ('will', tensor(0.4123, device='cuda:0')), ('pull', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.2939, device='cuda:0')), ('87', tensor(0., device='cuda:0')), ('q2', tensor(0., device='cuda:0')), ('closing', tensor(0., device='cuda:0')), ('vwap', tensor(0., device='cuda:0'))],  word_scores_max: [('buyback', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('trending', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('cpix', tensor(0., device='cuda:0')), ('spending', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('pricier', tensor(0., device='cuda:0')), ('.', tensor(0.2939, device='cuda:0')), ('hopefully', tensor(0., device='cuda:0')), ('will', tensor(0.4123, device='cuda:0')), ('pull', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.2939, device='cuda:0')), ('87', tensor(0., device='cuda:0')), ('q2', tensor(0., device='cuda:0')), ('closing', tensor(0., device='cuda:0')), ('vwap', tensor(0., device='cuda:0'))]
idx: 1110, example: teva: fda approves generic version of astrazeneca heartburn drug, prediction: 2, correct_label: 2, class_scores: [0.22818229 0.2884024  0.48341525], word_scores: ['te:0.0', '##va:0.0', '::0.0', 'fda:0.0', 'approve:0.0', '##s:4.601175078278175e-06', 'generic:0.0', 'version:0.0', 'of:3.4365734791208524e-06', 'as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'heart:0.0', '##burn:0.0', 'drug:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('teva', tensor(0., device='cuda:0')), ('fda', tensor(0., device='cuda:0')), ('approves', tensor(0., device='cuda:0')), ('generic', tensor(0., device='cuda:0')), ('version', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('heartburn', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))],  word_scores_max: [('teva', tensor(0., device='cuda:0')), ('fda', tensor(0., device='cuda:0')), ('approves', tensor(0., device='cuda:0')), ('generic', tensor(0., device='cuda:0')), ('version', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('heartburn', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))]
idx: 1111, example: $slv -4.44% at 18 now awful, down from 42.50, prediction: 2, correct_label: 0, class_scores: [0.24451628 0.31012642 0.44535732], word_scores: ['$:0.0', 'sl:0.0', '##v:0.0', '-:4.821180027647642e-06', '4:0.0', '.:2.903296945078182e-06', '44:0.0', '%:0.0', 'at:0.0', '18:0.0', 'now:0.0', 'awful:0.0', ',:7.986737728060689e-06', 'down:0.0', 'from:4.495178018260049e-06', '42:0.0', '.:2.903296945078182e-06', '50:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('slv', tensor(0., device='cuda:0')), ('-', tensor(0.2086, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1256, device='cuda:0')), ('44', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('awful', tensor(0., device='cuda:0')), (',', tensor(0.3456, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.1945, device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('.', tensor(0.1256, device='cuda:0')), ('50', tensor(0., device='cuda:0'))],  word_scores_max: [('slv', tensor(0., device='cuda:0')), ('-', tensor(0.2086, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1256, device='cuda:0')), ('44', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('awful', tensor(0., device='cuda:0')), (',', tensor(0.3456, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('from', tensor(0.1945, device='cuda:0')), ('42', tensor(0., device='cuda:0')), ('.', tensor(0.1256, device='cuda:0')), ('50', tensor(0., device='cuda:0'))]
idx: 1112, example: word on the street is that allergen is looking at endo international after the failed pfizer merger. may-20 $35 calls active. $endp, prediction: 2, correct_label: 1, class_scores: [0.20183018 0.38925806 0.4089117 ], word_scores: ['word:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'street:0.0', 'is:0.0', 'that:1.5133816759771435e-06', 'all:0.0', '##er:0.0', '##gen:0.0', 'is:0.0', 'looking:0.0', 'at:0.0', 'end:0.0', '##o:0.0', 'international:0.0', 'after:0.0', 'the:6.3806996877247e-06', 'failed:0.0', 'p:0.0', '##fi:0.0', '##zer:0.0', 'merger:0.0', '.:2.903296945078182e-06', 'may:0.0', '-:4.821180027647642e-06', '20:0.0', '$:0.0', '35:0.0', 'calls:0.0', 'active:0.0', '.:2.903296945078182e-06', '$:0.0', 'end:0.0', '##p:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('word', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2562, device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0608, device='cuda:0')), ('allergen', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('endo', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('the', tensor(0.2562, device='cuda:0')), ('failed', tensor(0., device='cuda:0')), ('pfizer', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0')), ('.', tensor(0.1166, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('-', tensor(0.1936, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('active', tensor(0., device='cuda:0')), ('.', tensor(0.1166, device='cuda:0')), ('endp', tensor(0., device='cuda:0'))],  word_scores_max: [('word', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2562, device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('that', tensor(0.0608, device='cuda:0')), ('allergen', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('endo', tensor(0., device='cuda:0')), ('international', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('the', tensor(0.2562, device='cuda:0')), ('failed', tensor(0., device='cuda:0')), ('pfizer', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0')), ('.', tensor(0.1166, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('-', tensor(0.1936, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('active', tensor(0., device='cuda:0')), ('.', tensor(0.1166, device='cuda:0')), ('endp', tensor(0., device='cuda:0'))]
idx: 1113, example: 3-star analyst joe wittine from longbow research reiterated a hold rating on $ntap., prediction: 2, correct_label: 2, class_scores: [0.2992208  0.30099818 0.39978105], word_scores: ['3:0.0', '-:4.821180027647642e-06', 'star:0.0', 'analyst:0.0', 'joe:0.0', 'wit:0.0', '##tine:0.0', 'from:4.495178018260049e-06', 'long:0.0', '##bow:0.0', 'research:0.0', 'reiterated:0.0', 'a:8.62785782373976e-06', 'hold:0.0', 'rating:0.0', 'on:0.0', '$:0.0', 'nt:0.0', '##ap:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('3', tensor(0., device='cuda:0')), ('-', tensor(0.2313, device='cuda:0')), ('star', tensor(0., device='cuda:0')), ('analyst', tensor(0., device='cuda:0')), ('joe', tensor(0., device='cuda:0')), ('wittine', tensor(0., device='cuda:0')), ('from', tensor(0.2156, device='cuda:0')), ('longbow', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('reiterated', tensor(0., device='cuda:0')), ('a', tensor(0.4139, device='cuda:0')), ('hold', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('ntap', tensor(0., device='cuda:0')), ('.', tensor(0.1393, device='cuda:0'))],  word_scores_max: [('3', tensor(0., device='cuda:0')), ('-', tensor(0.2313, device='cuda:0')), ('star', tensor(0., device='cuda:0')), ('analyst', tensor(0., device='cuda:0')), ('joe', tensor(0., device='cuda:0')), ('wittine', tensor(0., device='cuda:0')), ('from', tensor(0.2156, device='cuda:0')), ('longbow', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('reiterated', tensor(0., device='cuda:0')), ('a', tensor(0.4139, device='cuda:0')), ('hold', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('ntap', tensor(0., device='cuda:0')), ('.', tensor(0.1393, device='cuda:0'))]
idx: 1114, example: meggitt share price tumbles as profit falls in 'challenging year', prediction: 2, correct_label: 0, class_scores: [0.1507788  0.3524444  0.49677688], word_scores: ['meg:0.0', '##git:0.0', '##t:0.0', 'share:0.0', 'price:0.0', 'tumble:0.0', '##s:4.601175078278175e-06', 'as:0.0', 'profit:0.0', 'falls:0.0', 'in:3.0217122457543155e-06', "':0.0", 'challenging:0.0', 'year:0.0', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('meggitt', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('falls', tensor(nan, device='cuda:0'))],  word_scores_max: [('meggitt', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('falls', tensor(nan, device='cuda:0'))]
idx: 1115, example: whitbread profit up as sales continue to rise, looking for new ceo, prediction: 2, correct_label: 1, class_scores: [0.19325088 0.33561438 0.4711347 ], word_scores: ['w:0.0', '##hit:0.0', '##bread:0.0', 'profit:0.0', 'up:1.4959460941099678e-06', 'as:0.0', 'sales:0.0', 'continue:0.0', 'to:2.886244146793615e-06', 'rise:0.0', ',:7.986737728060689e-06', 'looking:0.0', 'for:0.0', 'new:2.798587502184091e-06', 'ceo:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('whitbread', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('up', tensor(0.0986, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1903, device='cuda:0')), ('rise', tensor(0., device='cuda:0')), (',', tensor(0.5266, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('new', tensor(0.1845, device='cuda:0')), ('ceo', tensor(0., device='cuda:0'))],  word_scores_max: [('whitbread', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('up', tensor(0.0986, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1903, device='cuda:0')), ('rise', tensor(0., device='cuda:0')), (',', tensor(0.5266, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('new', tensor(0.1845, device='cuda:0')), ('ceo', tensor(0., device='cuda:0'))]
idx: 1116, example: $tyc just about to break out to new highs, lots of technicals looking great right now., prediction: 1, correct_label: 1, class_scores: [0.23537646 0.38816288 0.37646073], word_scores: ['$:0.0', 'ty:0.0', '##c:0.0', 'just:0.0', 'about:0.0', 'to:2.886244146793615e-06', 'break:0.0', 'out:0.0', 'to:2.886244146793615e-06', 'new:2.798587502184091e-06', 'highs:0.0', ',:7.986737728060689e-06', 'lots:0.0', 'of:3.4365734791208524e-06', 'technical:0.0', '##s:4.601175078278175e-06', 'looking:0.0', 'great:0.0', 'right:0.0', 'now:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tyc', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.1260, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.1260, device='cuda:0')), ('new', tensor(0.1222, device='cuda:0')), ('highs', tensor(0., device='cuda:0')), (',', tensor(0.3488, device='cuda:0')), ('lots', tensor(0., device='cuda:0')), ('of', tensor(0.1501, device='cuda:0')), ('technicals', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.1268, device='cuda:0'))],  word_scores_max: [('tyc', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('to', tensor(0.1260, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.1260, device='cuda:0')), ('new', tensor(0.1222, device='cuda:0')), ('highs', tensor(0., device='cuda:0')), (',', tensor(0.3488, device='cuda:0')), ('lots', tensor(0., device='cuda:0')), ('of', tensor(0.1501, device='cuda:0')), ('technicals', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.1268, device='cuda:0'))]
idx: 1117, example: companiesactelion shares hit record on shire takeover talk, prediction: 2, correct_label: 1, class_scores: [0.2743871  0.32645857 0.39915437], word_scores: ['companies:0.0', '##act:0.0', '##eli:0.0', '##on:0.0', 'shares:0.0', 'hit:0.0', 'record:0.0', 'on:0.0', 'shire:0.0', 'takeover:0.0', 'talk:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companiesactelion', tensor(nan, device='cuda:0')), ('shares', tensor(nan, device='cuda:0')), ('hit', tensor(nan, device='cuda:0')), ('record', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('shire', tensor(nan, device='cuda:0')), ('takeover', tensor(nan, device='cuda:0')), ('talk', tensor(nan, device='cuda:0'))],  word_scores_max: [('companiesactelion', tensor(nan, device='cuda:0')), ('shares', tensor(nan, device='cuda:0')), ('hit', tensor(nan, device='cuda:0')), ('record', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('shire', tensor(nan, device='cuda:0')), ('takeover', tensor(nan, device='cuda:0')), ('talk', tensor(nan, device='cuda:0'))]
idx: 1118, example: $ino back in this am small post, prediction: 2, correct_label: 1, class_scores: [0.19602862 0.27674758 0.5272238 ], word_scores: ['$:0.0', 'in:3.0217122457543155e-06', '##o:0.0', 'back:0.0', 'in:3.0217122457543155e-06', 'this:0.0', 'am:0.0', 'small:0.0', 'post:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ino', tensor(0.5000, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('in', tensor(0.5000, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('post', tensor(0., device='cuda:0'))],  word_scores_max: [('ino', tensor(0.5000, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('in', tensor(0.5000, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('post', tensor(0., device='cuda:0'))]
idx: 1119, example: update 1-engineering firm smiths group confirms ceo appointment, prediction: 2, correct_label: 2, class_scores: [0.14042228 0.4158132  0.44376448], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'engineering:0.0', 'firm:0.0', 'smith:0.0', '##s:4.601175078278175e-06', 'group:0.0', 'confirms:0.0', 'ceo:0.0', 'appointment:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('smiths', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('confirms', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('appointment', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('engineering', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('smiths', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('confirms', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('appointment', tensor(0., device='cuda:0'))]
idx: 1120, example: rt @jan $arna don't think buyout rumor strong enough too be driving this up just yet...when it is this may fly like aapl...// fly how high?, prediction: 2, correct_label: 2, class_scores: [0.24310556 0.29400355 0.46289095], word_scores: ['rt:0.0', '@:0.0', 'jan:0.0', '$:0.0', 'ar:0.0', '##na:0.0', 'don:0.0', "':0.0", 't:0.0', 'think:0.0', 'buy:0.0', '##out:0.0', 'rumor:0.0', 'strong:0.0', 'enough:0.0', 'too:0.0', 'be:0.0', 'driving:0.0', 'this:0.0', 'up:1.4959460941099678e-06', 'just:0.0', 'yet:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'when:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'this:0.0', 'may:0.0', 'fly:0.0', 'like:0.0', 'aa:0.0', '##pl:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '/:0.0', '/:0.0', 'fly:0.0', 'how:0.0', 'high:0.0', '?:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rt', tensor(nan, device='cuda:0')), ('jan', tensor(nan, device='cuda:0')), ('arna', tensor(nan, device='cuda:0'))],  word_scores_max: [('rt', tensor(nan, device='cuda:0')), ('jan', tensor(nan, device='cuda:0')), ('arna', tensor(nan, device='cuda:0'))]
idx: 1121, example: stole my tweet. really wouldn't be surprised if we took out 423 and pinned around it rt @totalguru we could possibly even see425 today $aapl, prediction: 2, correct_label: 2, class_scores: [0.22361684 0.31759816 0.4587851 ], word_scores: ['stole:0.0', 'my:0.0', 't:0.0', '##wee:0.0', '##t:0.0', '.:2.903296945078182e-06', 'really:0.0', 'wouldn:0.0', "':0.0", 't:0.0', 'be:0.0', 'surprised:0.0', 'if:0.0', 'we:0.0', 'took:0.0', 'out:0.0', '42:0.0', '##3:0.0', 'and:0.0', 'pinned:0.0', 'around:0.0', 'it:3.3415778943890473e-06', 'rt:0.0', '@:0.0', 'total:0.0', '##gur:0.0', '##u:0.0', 'we:0.0', 'could:0.0', 'possibly:0.0', 'even:0.0', 'see:0.0', '##42:0.0', '##5:0.0', 'today:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stole', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('tweet', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('really', tensor(0., device='cuda:0'))],  word_scores_max: [('stole', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('tweet', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('really', tensor(0., device='cuda:0'))]
idx: 1122, example: shell to buy bg group in $69.7 billion takeover, prediction: 2, correct_label: 2, class_scores: [0.18800324 0.38720053 0.42479616], word_scores: ['shell:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'b:0.0', '##g:0.0', 'group:0.0', 'in:3.0217122457543155e-06', '$:0.0', '69:0.0', '.:2.903296945078182e-06', '7:0.0', 'billion:0.0', 'takeover:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('shell', tensor(0., device='cuda:0')), ('to', tensor(0.3276, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('bg', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('in', tensor(0.3429, device='cuda:0')), ('69', tensor(0., device='cuda:0')), ('.', tensor(0.3295, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('takeover', tensor(0., device='cuda:0'))],  word_scores_max: [('shell', tensor(0., device='cuda:0')), ('to', tensor(0.3276, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('bg', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('in', tensor(0.3429, device='cuda:0')), ('69', tensor(0., device='cuda:0')), ('.', tensor(0.3295, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('takeover', tensor(0., device='cuda:0'))]
idx: 1123, example: gkn to buy fokker technologies for 706 mln euros, prediction: 1, correct_label: 2, class_scores: [0.19478334 0.42502087 0.3801957 ], word_scores: ['g:0.0', '##k:0.0', '##n:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'f:0.0', '##ok:0.0', '##ker:0.0', 'technologies:0.0', 'for:0.0', '70:0.0', '##6:0.0', 'ml:0.0', '##n:0.0', 'euros:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gkn', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('fokker', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('706', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0'))],  word_scores_max: [('gkn', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('fokker', tensor(0., device='cuda:0')), ('technologies', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('706', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('euros', tensor(0., device='cuda:0'))]
idx: 1124, example: $yhoo making new hod, prediction: 2, correct_label: 1, class_scores: [0.21916248 0.35093296 0.4299046 ], word_scores: ['$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', 'making:0.0', 'new:2.798587502184091e-06', 'ho:0.0', '##d:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('yhoo', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('hod', tensor(0., device='cuda:0'))],  word_scores_max: [('yhoo', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('hod', tensor(0., device='cuda:0'))]
idx: 1125, example: astrazeneca bags another cancer drug deal, this time with inovio, prediction: 2, correct_label: 2, class_scores: [0.18944302 0.384239   0.426318  ], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'bags:0.0', 'another:0.0', 'cancer:0.0', 'drug:0.0', 'deal:0.0', ',:7.986737728060689e-06', 'this:0.0', 'time:0.0', 'with:4.733654350275174e-06', 'in:3.0217122457543155e-06', '##ov:0.0', '##io:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('bags', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), (',', tensor(0.5073, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('with', tensor(0.3007, device='cuda:0')), ('inovio', tensor(0.1920, device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('bags', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), (',', tensor(0.5073, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('with', tensor(0.3007, device='cuda:0')), ('inovio', tensor(0.1920, device='cuda:0'))]
idx: 1126, example: #tesla: model x recall adds to reliability issues $tsla , prediction: 1, correct_label: 2, class_scores: [0.2461243  0.38299528 0.37088042], word_scores: ['#:0.0', 'tesla:0.0', '::0.0', 'model:0.0', 'x:0.0', 'recall:0.0', 'adds:0.0', 'to:2.886244146793615e-06', 'reliability:0.0', 'issues:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesla', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('adds', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('reliability', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('tesla', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('adds', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('reliability', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1127, example: $pypl great vol flow trade here.. love this company long time., prediction: 2, correct_label: 1, class_scores: [0.1768219  0.34047854 0.48269957], word_scores: ['$:0.0', 'p:0.0', '##yp:0.0', '##l:0.0', 'great:0.0', 'vol:0.0', 'flow:0.0', 'trade:0.0', 'here:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'love:0.0', 'this:0.0', 'company:6.695386673527537e-06', 'long:0.0', 'time:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('pypl', tensor(0., device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('vol', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.1885, device='cuda:0')), ('.', tensor(0.1885, device='cuda:0')), ('love', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('company', tensor(0.4346, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('.', tensor(0.1885, device='cuda:0'))],  word_scores_max: [('pypl', tensor(0., device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('vol', tensor(0., device='cuda:0')), ('flow', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.1885, device='cuda:0')), ('.', tensor(0.1885, device='cuda:0')), ('love', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('company', tensor(0.4346, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('.', tensor(0.1885, device='cuda:0'))]
idx: 1128, example: $rnn more bleeding monday., prediction: 1, correct_label: 0, class_scores: [0.29524577 0.3687429  0.33601135], word_scores: ['$:0.0', 'rn:0.0', '##n:0.0', 'more:0.0', 'bleeding:0.0', 'monday:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('rnn', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('bleeding', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('rnn', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('bleeding', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1129, example: credit suisse poaches prudential's thiam for asian push, prediction: 1, correct_label: 2, class_scores: [0.2124014  0.48263887 0.3049597 ], word_scores: ['credit:0.0', 'sui:0.0', '##sse:0.0', 'po:0.0', '##ache:0.0', '##s:4.601175078278175e-06', 'pr:0.0', '##ude:0.0', '##ntial:0.0', "':0.0", 's:0.0', 'th:0.0', '##iam:0.0', 'for:0.0', 'asian:0.0', 'push:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('credit', tensor(nan, device='cuda:0')), ('suisse', tensor(nan, device='cuda:0')), ('poaches', tensor(nan, device='cuda:0'))],  word_scores_max: [('credit', tensor(nan, device='cuda:0')), ('suisse', tensor(nan, device='cuda:0')), ('poaches', tensor(nan, device='cuda:0'))]
idx: 1130, example: $yelp this goes green and so many shorts are toast!, prediction: 2, correct_label: 1, class_scores: [0.21405263 0.33680603 0.44914138], word_scores: ['$:0.0', 'ye:0.0', '##lp:0.0', 'this:0.0', 'goes:0.0', 'green:0.0', 'and:0.0', 'so:0.0', 'many:0.0', 'shorts:0.0', 'are:0.0', 'toast:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('yelp', tensor(nan, device='cuda:0')), ('this', tensor(nan, device='cuda:0')), ('goes', tensor(nan, device='cuda:0')), ('green', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('so', tensor(nan, device='cuda:0')), ('many', tensor(nan, device='cuda:0')), ('shorts', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('toast', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0'))],  word_scores_max: [('yelp', tensor(nan, device='cuda:0')), ('this', tensor(nan, device='cuda:0')), ('goes', tensor(nan, device='cuda:0')), ('green', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('so', tensor(nan, device='cuda:0')), ('many', tensor(nan, device='cuda:0')), ('shorts', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('toast', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0'))]
idx: 1131, example: $endp exit reversal .11 x 3k shares = $330 - now long - not getting follow through, either side of price action, prediction: 2, correct_label: 1, class_scores: [0.2439618 0.308238  0.4478002], word_scores: ['$:0.0', 'end:0.0', '##p:0.0', 'exit:0.0', 'reversal:0.0', '.:2.903296945078182e-06', '11:0.0', 'x:0.0', '3:0.0', '##k:0.0', 'shares:0.0', '=:0.0', '$:0.0', '330:0.0', '-:4.821180027647642e-06', 'now:0.0', 'long:0.0', '-:4.821180027647642e-06', 'not:0.0', 'getting:0.0', 'follow:0.0', 'through:0.0', ',:7.986737728060689e-06', 'either:0.0', 'side:0.0', 'of:3.4365734791208524e-06', 'price:0.0', 'action:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('endp', tensor(0., device='cuda:0')), ('exit', tensor(0., device='cuda:0')), ('reversal', tensor(0., device='cuda:0')), ('.', tensor(0.1211, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('3k', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('330', tensor(0., device='cuda:0')), ('-', tensor(0.2011, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.2011, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('follow', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), (',', tensor(0.3332, device='cuda:0')), ('either', tensor(0., device='cuda:0')), ('side', tensor(0., device='cuda:0')), ('of', tensor(0.1434, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0'))],  word_scores_max: [('endp', tensor(0., device='cuda:0')), ('exit', tensor(0., device='cuda:0')), ('reversal', tensor(0., device='cuda:0')), ('.', tensor(0.1211, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('3k', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('330', tensor(0., device='cuda:0')), ('-', tensor(0.2011, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('-', tensor(0.2011, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('follow', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), (',', tensor(0.3332, device='cuda:0')), ('either', tensor(0., device='cuda:0')), ('side', tensor(0., device='cuda:0')), ('of', tensor(0.1434, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('action', tensor(0., device='cuda:0'))]
idx: 1132, example: $iwm relative weakness is pretty apparent but the short boat is getting full on this one. i prefer the boat closer to empty., prediction: 1, correct_label: 2, class_scores: [0.17498167 0.49687785 0.3281405 ], word_scores: ['$:0.0', 'i:0.0', '##w:0.0', '##m:0.0', 'relative:0.0', 'weakness:0.0', 'is:0.0', 'pretty:0.0', 'apparent:0.0', 'but:0.0', 'the:6.3806996877247e-06', 'short:0.0', 'boat:0.0', 'is:0.0', 'getting:0.0', 'full:3.0938992949813837e-06', 'on:0.0', 'this:0.0', 'one:4.584404450724833e-06', '.:2.903296945078182e-06', 'i:0.0', 'prefer:0.0', 'the:6.3806996877247e-06', 'boat:0.0', 'closer:0.0', 'to:2.886244146793615e-06', 'empty:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('iwm', tensor(0., device='cuda:0')), ('relative', tensor(0., device='cuda:0')), ('weakness', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('pretty', tensor(0., device='cuda:0')), ('apparent', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('the', tensor(0.2190, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('boat', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('full', tensor(0.1062, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.1574, device='cuda:0')), ('.', tensor(0.0997, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('prefer', tensor(0., device='cuda:0')), ('the', tensor(0.2190, device='cuda:0')), ('boat', tensor(0., device='cuda:0')), ('closer', tensor(0., device='cuda:0')), ('to', tensor(0.0991, device='cuda:0')), ('empty', tensor(0., device='cuda:0')), ('.', tensor(0.0997, device='cuda:0'))],  word_scores_max: [('iwm', tensor(0., device='cuda:0')), ('relative', tensor(0., device='cuda:0')), ('weakness', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('pretty', tensor(0., device='cuda:0')), ('apparent', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('the', tensor(0.2190, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('boat', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('full', tensor(0.1062, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.1574, device='cuda:0')), ('.', tensor(0.0997, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('prefer', tensor(0., device='cuda:0')), ('the', tensor(0.2190, device='cuda:0')), ('boat', tensor(0., device='cuda:0')), ('closer', tensor(0., device='cuda:0')), ('to', tensor(0.0991, device='cuda:0')), ('empty', tensor(0., device='cuda:0')), ('.', tensor(0.0997, device='cuda:0'))]
idx: 1133, example: $goog testing the 200 day after some consolidation , prediction: 2, correct_label: 2, class_scores: [0.260145   0.3144133  0.42544162], word_scores: ['$:0.0', 'goo:0.0', '##g:0.0', 'testing:0.0', 'the:6.3806996877247e-06', '200:0.0', 'day:0.0', 'after:0.0', 'some:0.0', 'consolidation:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('goog', tensor(0., device='cuda:0')), ('testing', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0'))],  word_scores_max: [('goog', tensor(0., device='cuda:0')), ('testing', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0'))]
idx: 1134, example: rt fitzstock2004: $iyt  the transports always lead  the way, and  they broke dt  line  1st, macd cross,  bull  flag=, prediction: 2, correct_label: 1, class_scores: [0.19049828 0.37439764 0.43510407], word_scores: ['rt:0.0', 'fitz:0.0', '##stock:0.0', '##200:0.0', '##4:0.0', '::0.0', '$:0.0', 'i:0.0', '##yt:0.0', 'the:6.3806996877247e-06', 'transports:0.0', 'always:0.0', 'lead:0.0', 'the:6.3806996877247e-06', 'way:0.0', ',:7.986737728060689e-06', 'and:0.0', 'they:0.0', 'broke:0.0', 'dt:0.0', 'line:0.0', '1st:0.0', ',:7.986737728060689e-06', 'mac:0.0', '##d:0.0', 'cross:0.0', ',:7.986737728060689e-06', 'bull:0.0', 'flag:0.0', '=:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rt', tensor(0., device='cuda:0')), ('fitzstock2004', tensor(0., device='cuda:0')), ('iyt', tensor(0., device='cuda:0')), ('the', tensor(0.1738, device='cuda:0')), ('transports', tensor(0., device='cuda:0')), ('always', tensor(0., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('the', tensor(0.1738, device='cuda:0')), ('way', tensor(0., device='cuda:0')), (',', tensor(0.2175, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('broke', tensor(0., device='cuda:0')), ('dt', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('1st', tensor(0., device='cuda:0')), (',', tensor(0.2175, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), (',', tensor(0.2175, device='cuda:0')), ('bull', tensor(0., device='cuda:0')), ('flag', tensor(0., device='cuda:0'))],  word_scores_max: [('rt', tensor(0., device='cuda:0')), ('fitzstock2004', tensor(0., device='cuda:0')), ('iyt', tensor(0., device='cuda:0')), ('the', tensor(0.1738, device='cuda:0')), ('transports', tensor(0., device='cuda:0')), ('always', tensor(0., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('the', tensor(0.1738, device='cuda:0')), ('way', tensor(0., device='cuda:0')), (',', tensor(0.2175, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('broke', tensor(0., device='cuda:0')), ('dt', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('1st', tensor(0., device='cuda:0')), (',', tensor(0.2175, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), (',', tensor(0.2175, device='cuda:0')), ('bull', tensor(0., device='cuda:0')), ('flag', tensor(0., device='cuda:0'))]
idx: 1135, example: amazon declares 'best ever' black friday and cyber monday for kindle family  via engadget $amzn, prediction: 2, correct_label: 1, class_scores: [0.19892113 0.30873507 0.49234375], word_scores: ['amazon:0.0', 'declares:0.0', "':0.0", 'best:0.0', 'ever:0.0', "':0.0", 'black:0.0', 'friday:0.0', 'and:0.0', 'cyber:0.0', 'monday:0.0', 'for:0.0', 'kind:0.0', '##le:0.0', 'family:0.0', 'via:0.0', 'eng:0.0', '##ad:0.0', '##get:0.0', '$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('amazon', tensor(nan, device='cuda:0'))],  word_scores_max: [('amazon', tensor(nan, device='cuda:0'))]
idx: 1136, example: $tsla <study the charts> pullback_time , prediction: 1, correct_label: 2, class_scores: [0.2235418  0.3914725  0.38498574], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', '<:0.0', 'study:0.0', 'the:6.3806996877247e-06', 'charts:0.0', '>:0.0', 'pull:0.0', '##back:0.0', '_:0.0', 'time:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('pullback', tensor(0., device='cuda:0')), ('_', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('study', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('pullback', tensor(0., device='cuda:0')), ('_', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0'))]
idx: 1137, example: aviva, friends life top forecasts ahead of 5.6 billion pound merger, prediction: 1, correct_label: 1, class_scores: [0.2705012  0.36979467 0.35970414], word_scores: ['aviv:0.0', '##a:3.804580501309829e-06', ',:7.986737728060689e-06', 'friends:0.0', 'life:0.0', 'top:0.0', 'forecast:0.0', '##s:4.601175078278175e-06', 'ahead:0.0', 'of:3.4365734791208524e-06', '5:0.0', '.:2.903296945078182e-06', '6:0.0', 'billion:0.0', 'pound:7.64060314395465e-06', 'merger:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aviva', tensor(0., device='cuda:0')), (',', tensor(0.3636, device='cuda:0')), ('friends', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('ahead', tensor(0., device='cuda:0')), ('of', tensor(0.1564, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1322, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('pound', tensor(0.3478, device='cuda:0')), ('merger', tensor(0., device='cuda:0'))],  word_scores_max: [('aviva', tensor(0., device='cuda:0')), (',', tensor(0.3636, device='cuda:0')), ('friends', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('forecasts', tensor(0., device='cuda:0')), ('ahead', tensor(0., device='cuda:0')), ('of', tensor(0.1564, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('.', tensor(0.1322, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('pound', tensor(0.3478, device='cuda:0')), ('merger', tensor(0., device='cuda:0'))]
idx: 1138, example: update 3-auto trader shares leap in uk's biggest private equity-backed listing, prediction: 1, correct_label: 1, class_scores: [0.2419232 0.4682055 0.2898713], word_scores: ['update:0.0', '3:0.0', '-:4.821180027647642e-06', 'auto:0.0', 'trader:0.0', 'shares:0.0', 'leap:0.0', 'in:3.0217122457543155e-06', 'uk:0.0', "':0.0", 's:0.0', 'biggest:0.0', 'private:3.393340421098401e-06', 'equity:0.0', '-:4.821180027647642e-06', 'backed:0.0', 'listing:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('auto', tensor(0., device='cuda:0')), ('trader', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('leap', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('auto', tensor(0., device='cuda:0')), ('trader', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('leap', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0'))]
idx: 1139, example: $es_f. nice little cup-and-handle shaping up on the 15-minute. end-of-day $spy $spx favours a good day for the index. will we see a gap open, prediction: 2, correct_label: 1, class_scores: [0.16552538 0.35224718 0.4822274 ], word_scores: ['$:0.0', 'es:2.450917691021459e-06', '_:0.0', 'f:0.0', '.:2.903296945078182e-06', 'nice:0.0', 'little:0.0', 'cup:0.0', '-:4.821180027647642e-06', 'and:0.0', '-:4.821180027647642e-06', 'handle:0.0', 'shaping:0.0', 'up:1.4959460941099678e-06', 'on:0.0', 'the:6.3806996877247e-06', '15:0.0', '-:4.821180027647642e-06', 'minute:0.0', '.:2.903296945078182e-06', 'end:0.0', '-:4.821180027647642e-06', 'of:3.4365734791208524e-06', '-:4.821180027647642e-06', 'day:0.0', '$:0.0', 'spy:0.0', '$:0.0', 'sp:0.0', '##x:0.0', 'favour:0.0', '##s:4.601175078278175e-06', 'a:8.62785782373976e-06', 'good:0.0', 'day:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'index:0.0', '.:2.903296945078182e-06', 'will:4.073096533829812e-06', 'we:0.0', 'see:0.0', 'a:8.62785782373976e-06', 'gap:0.0', 'open:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('es', tensor(0.0330, device='cuda:0')), ('_', tensor(0., device='cuda:0')), ('f', tensor(0., device='cuda:0')), ('.', tensor(0.0391, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('cup', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('handle', tensor(0., device='cuda:0')), ('shaping', tensor(0., device='cuda:0')), ('up', tensor(0.0201, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('minute', tensor(0., device='cuda:0')), ('.', tensor(0.0391, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('spx', tensor(0., device='cuda:0')), ('favours', tensor(0., device='cuda:0')), ('a', tensor(0.1161, device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('.', tensor(0.0391, device='cuda:0')), ('will', tensor(0.0548, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('a', tensor(0.1161, device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0'))],  word_scores_max: [('es', tensor(0.0330, device='cuda:0')), ('_', tensor(0., device='cuda:0')), ('f', tensor(0., device='cuda:0')), ('.', tensor(0.0391, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('cup', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('handle', tensor(0., device='cuda:0')), ('shaping', tensor(0., device='cuda:0')), ('up', tensor(0.0201, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('minute', tensor(0., device='cuda:0')), ('.', tensor(0.0391, device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('of', tensor(0.0463, device='cuda:0')), ('-', tensor(0.0649, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('spx', tensor(0., device='cuda:0')), ('favours', tensor(0., device='cuda:0')), ('a', tensor(0.1161, device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.0859, device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('.', tensor(0.0391, device='cuda:0')), ('will', tensor(0.0548, device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('a', tensor(0.1161, device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0'))]
idx: 1140, example: $vrtx vertex. monthly -lower hi/lower lo,  long term uptrend intract so far, prediction: 2, correct_label: 1, class_scores: [0.15966704 0.39455342 0.4457796 ], word_scores: ['$:0.0', 'vr:0.0', '##t:0.0', '##x:0.0', 'vertex:0.0', '.:2.903296945078182e-06', 'monthly:0.0', '-:4.821180027647642e-06', 'lower:0.0', 'hi:0.0', '/:0.0', 'lower:0.0', 'lo:0.0', ',:7.986737728060689e-06', 'long:0.0', 'term:0.0', 'up:1.4959460941099678e-06', '##tre:0.0', '##nd:0.0', 'intra:0.0', '##ct:0.0', 'so:0.0', 'far:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vrtx', tensor(0., device='cuda:0')), ('vertex', tensor(0., device='cuda:0')), ('.', tensor(0.1687, device='cuda:0')), ('monthly', tensor(0., device='cuda:0')), ('-', tensor(0.2802, device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('hi', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('lo', tensor(0., device='cuda:0')), (',', tensor(0.4642, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('uptrend', tensor(0.0869, device='cuda:0')), ('intract', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0'))],  word_scores_max: [('vrtx', tensor(0., device='cuda:0')), ('vertex', tensor(0., device='cuda:0')), ('.', tensor(0.1687, device='cuda:0')), ('monthly', tensor(0., device='cuda:0')), ('-', tensor(0.2802, device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('hi', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('lo', tensor(0., device='cuda:0')), (',', tensor(0.4642, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('uptrend', tensor(0.0869, device='cuda:0')), ('intract', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0'))]
idx: 1141, example: whitbread buys 49% stake in pure food chain, prediction: 1, correct_label: 1, class_scores: [0.21128398 0.45080885 0.3379072 ], word_scores: ['w:0.0', '##hit:0.0', '##bread:0.0', 'buys:0.0', '49:0.0', '%:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'pure:0.0', 'food:0.0', 'chain:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('whitbread', tensor(0., device='cuda:0')), ('buys', tensor(0., device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('pure', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0'))],  word_scores_max: [('whitbread', tensor(0., device='cuda:0')), ('buys', tensor(0., device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('pure', tensor(0., device='cuda:0')), ('food', tensor(0., device='cuda:0')), ('chain', tensor(0., device='cuda:0'))]
idx: 1142, example: companiesmeggitt profits hit by weak energy and military markets, prediction: 1, correct_label: 2, class_scores: [0.15386796 0.43500173 0.41113034], word_scores: ['companies:0.0', '##me:0.0', '##gg:0.0', '##itt:0.0', 'profits:0.0', 'hit:0.0', 'by:0.0', 'weak:0.0', 'energy:0.0', 'and:0.0', 'military:0.0', 'markets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companiesmeggitt', tensor(nan, device='cuda:0')), ('profits', tensor(nan, device='cuda:0')), ('hit', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('weak', tensor(nan, device='cuda:0')), ('energy', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('military', tensor(nan, device='cuda:0')), ('markets', tensor(nan, device='cuda:0'))],  word_scores_max: [('companiesmeggitt', tensor(nan, device='cuda:0')), ('profits', tensor(nan, device='cuda:0')), ('hit', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('weak', tensor(nan, device='cuda:0')), ('energy', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('military', tensor(nan, device='cuda:0')), ('markets', tensor(nan, device='cuda:0'))]
idx: 1143, example: loading $spy and $aapl puts. think were toppy imho., prediction: 2, correct_label: 0, class_scores: [0.19949293 0.3536393  0.44686776], word_scores: ['loading:0.0', '$:0.0', 'spy:0.0', 'and:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', 'puts:0.0', '.:2.903296945078182e-06', 'think:0.0', 'were:0.0', 'top:0.0', '##py:0.0', 'im:0.0', '##ho:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('loading', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('puts', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('toppy', tensor(0., device='cuda:0')), ('imho', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('loading', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('puts', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('toppy', tensor(0., device='cuda:0')), ('imho', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0'))]
idx: 1144, example: like $t for a breakout long as well. getting through the 100 and 200 ma could see it run., prediction: 2, correct_label: 1, class_scores: [0.12934722 0.4266915  0.4439612 ], word_scores: ['like:0.0', '$:0.0', 't:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'breakout:0.0', 'long:0.0', 'as:0.0', 'well:0.0', '.:2.903296945078182e-06', 'getting:0.0', 'through:0.0', 'the:6.3806996877247e-06', '100:0.0', 'and:0.0', '200:0.0', 'ma:0.0', 'could:0.0', 'see:0.0', 'it:3.3415778943890473e-06', 'run:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('like', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.3572, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('.', tensor(0.1202, device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('the', tensor(0.2641, device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('ma', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('it', tensor(0.1383, device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('.', tensor(0.1202, device='cuda:0'))],  word_scores_max: [('like', tensor(0., device='cuda:0')), ('t', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.3572, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('.', tensor(0.1202, device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('the', tensor(0.2641, device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('ma', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('it', tensor(0.1383, device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('.', tensor(0.1202, device='cuda:0'))]
idx: 1145, example: i see a 20 percent upside in $fb shares from here, prediction: 2, correct_label: 1, class_scores: [0.2525679  0.23262899 0.51480305], word_scores: ['i:0.0', 'see:0.0', 'a:8.62785782373976e-06', '20:0.0', 'percent:0.0', 'upside:0.0', 'in:3.0217122457543155e-06', '$:0.0', 'f:0.0', '##b:0.0', 'shares:0.0', 'from:4.495178018260049e-06', 'here:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('i', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('a', tensor(0.5344, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('in', tensor(0.1872, device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('from', tensor(0.2784, device='cuda:0')), ('here', tensor(0., device='cuda:0'))],  word_scores_max: [('i', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('a', tensor(0.5344, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('in', tensor(0.1872, device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('from', tensor(0.2784, device='cuda:0')), ('here', tensor(0., device='cuda:0'))]
idx: 1146, example: $bobe down $2.84  premarket, prediction: 1, correct_label: 0, class_scores: [0.1767392  0.46600902 0.3572518 ], word_scores: ['$:0.0', 'bob:0.0', '##e:0.0', 'down:0.0', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '84:0.0', 'prem:0.0', '##ark:0.0', '##et:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bobe', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('84', tensor(0., device='cuda:0')), ('premarket', tensor(0., device='cuda:0'))],  word_scores_max: [('bobe', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('84', tensor(0., device='cuda:0')), ('premarket', tensor(0., device='cuda:0'))]
idx: 1147, example: bae systems's sales boosted by european typhoon and currencies, prediction: 2, correct_label: 1, class_scores: [0.22712184 0.3152699  0.45760828], word_scores: ['bae:0.0', 'systems:0.0', "':0.0", 's:0.0', 'sales:0.0', 'boosted:0.0', 'by:0.0', 'european:0.0', 'typhoon:0.0', 'and:0.0', 'cu:0.0', '##rre:0.0', '##ncies:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bae', tensor(nan, device='cuda:0'))],  word_scores_max: [('bae', tensor(nan, device='cuda:0'))]
idx: 1148, example: $aapl aapl finally breaking under the 49 m.a.. with no buybacks this week, look for aapl to test the 120 support area., prediction: 2, correct_label: 2, class_scores: [0.17061858 0.39393324 0.4354482 ], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'aa:0.0', '##pl:0.0', 'finally:0.0', 'breaking:0.0', 'under:0.0', 'the:6.3806996877247e-06', '49:0.0', 'm:0.0', '.:2.903296945078182e-06', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'with:4.733654350275174e-06', 'no:0.0', 'buy:0.0', '##backs:0.0', 'this:0.0', 'week:0.0', ',:7.986737728060689e-06', 'look:0.0', 'for:0.0', 'aa:0.0', '##pl:0.0', 'to:2.886244146793615e-06', 'test:0.0', 'the:6.3806996877247e-06', '120:0.0', 'support:0.0', 'area:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.1313, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0597, device='cuda:0')), ('a', tensor(0.1775, device='cuda:0')), ('.', tensor(0.0597, device='cuda:0')), ('.', tensor(0.0597, device='cuda:0')), ('with', tensor(0.0974, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('buybacks', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), (',', tensor(0.1643, device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('to', tensor(0.0594, device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('the', tensor(0.1313, device='cuda:0')), ('120', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('.', tensor(0.0597, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('the', tensor(0.1313, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('.', tensor(0.0597, device='cuda:0')), ('a', tensor(0.1775, device='cuda:0')), ('.', tensor(0.0597, device='cuda:0')), ('.', tensor(0.0597, device='cuda:0')), ('with', tensor(0.0974, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('buybacks', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), (',', tensor(0.1643, device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('to', tensor(0.0594, device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('the', tensor(0.1313, device='cuda:0')), ('120', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('.', tensor(0.0597, device='cuda:0'))]
idx: 1149, example: legal & general share price: finance chief to step down, prediction: 2, correct_label: 2, class_scores: [0.2346566  0.3120626  0.45328078], word_scores: ['legal:0.0', '&:0.0', 'general:0.0', 'share:0.0', 'price:0.0', '::0.0', 'finance:0.0', 'chief:0.0', 'to:2.886244146793615e-06', 'step:0.0', 'down:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('legal', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('finance', tensor(0., device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('step', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0'))],  word_scores_max: [('legal', tensor(0., device='cuda:0')), ('general', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('finance', tensor(0., device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('step', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0'))]
idx: 1150, example: reuters: green mountain revenue misses, shares plunge  > $gmcr prints 43.80, market in a foul mood, bad day to disappoint, prediction: 2, correct_label: 0, class_scores: [0.24442223 0.30184984 0.45372793], word_scores: ['reuters:0.0', '::0.0', 'green:0.0', 'mountain:0.0', 'revenue:0.0', 'misses:0.0', ',:7.986737728060689e-06', 'shares:0.0', 'plunge:0.0', '>:0.0', '$:0.0', 'gm:0.0', '##cr:6.230764483916573e-06', 'prints:0.0', '43:0.0', '.:2.903296945078182e-06', '80:0.0', ',:7.986737728060689e-06', 'market:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'foul:0.0', 'mood:0.0', ',:7.986737728060689e-06', 'bad:0.0', 'day:0.0', 'to:2.886244146793615e-06', 'di:0.0', '##sa:0.0', '##pp:0.0', '##oint:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('reuters', tensor(0., device='cuda:0')), ('green', tensor(0., device='cuda:0')), ('mountain', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('misses', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('plunge', tensor(0., device='cuda:0')), ('gmcr', tensor(0., device='cuda:0')), ('prints', tensor(0., device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('.', tensor(0.0701, device='cuda:0')), ('80', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0730, device='cuda:0')), ('a', tensor(0.2084, device='cuda:0')), ('foul', tensor(0., device='cuda:0')), ('mood', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('bad', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('to', tensor(0.0697, device='cuda:0')), ('disappoint', tensor(0., device='cuda:0'))],  word_scores_max: [('reuters', tensor(0., device='cuda:0')), ('green', tensor(0., device='cuda:0')), ('mountain', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('misses', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('plunge', tensor(0., device='cuda:0')), ('gmcr', tensor(0., device='cuda:0')), ('prints', tensor(0., device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('.', tensor(0.0701, device='cuda:0')), ('80', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('in', tensor(0.0730, device='cuda:0')), ('a', tensor(0.2084, device='cuda:0')), ('foul', tensor(0., device='cuda:0')), ('mood', tensor(0., device='cuda:0')), (',', tensor(0.1929, device='cuda:0')), ('bad', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('to', tensor(0.0697, device='cuda:0')), ('disappoint', tensor(0., device='cuda:0'))]
idx: 1151, example: $fb watching for bounce tomorrow, prediction: 2, correct_label: 1, class_scores: [0.25089902 0.34766382 0.4014371 ], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'watching:0.0', 'for:0.0', 'bounce:0.0', 'tomorrow:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(nan, device='cuda:0')), ('watching', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('bounce', tensor(nan, device='cuda:0')), ('tomorrow', tensor(nan, device='cuda:0'))],  word_scores_max: [('fb', tensor(nan, device='cuda:0')), ('watching', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('bounce', tensor(nan, device='cuda:0')), ('tomorrow', tensor(nan, device='cuda:0'))]
idx: 1152, example: germanwings disaster will not affect image of budget air travel - easyjet, prediction: 2, correct_label: 2, class_scores: [0.17575513 0.33286488 0.49137992], word_scores: ['german:0.0', '##wing:0.0', '##s:4.601175078278175e-06', 'disaster:0.0', 'will:4.073096533829812e-06', 'not:0.0', 'affect:0.0', 'image:0.0', 'of:3.4365734791208524e-06', 'budget:0.0', 'air:0.0', 'travel:0.0', '-:4.821180027647642e-06', 'easy:0.0', '##jet:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('germanwings', tensor(0., device='cuda:0')), ('disaster', tensor(0., device='cuda:0')), ('will', tensor(0.3303, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('affect', tensor(0., device='cuda:0')), ('image', tensor(0., device='cuda:0')), ('of', tensor(0.2787, device='cuda:0')), ('budget', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('-', tensor(0.3910, device='cuda:0')), ('easyjet', tensor(0., device='cuda:0'))],  word_scores_max: [('germanwings', tensor(0., device='cuda:0')), ('disaster', tensor(0., device='cuda:0')), ('will', tensor(0.3303, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('affect', tensor(0., device='cuda:0')), ('image', tensor(0., device='cuda:0')), ('of', tensor(0.2787, device='cuda:0')), ('budget', tensor(0., device='cuda:0')), ('air', tensor(0., device='cuda:0')), ('travel', tensor(0., device='cuda:0')), ('-', tensor(0.3910, device='cuda:0')), ('easyjet', tensor(0., device='cuda:0'))]
idx: 1153, example: $mxwl oh snap. just went long again. lt, prediction: 1, correct_label: 1, class_scores: [0.17228681 0.4905271  0.33718616], word_scores: ['$:0.0', 'mx:0.0', '##wl:0.0', 'oh:0.0', 'snap:0.0', '.:2.903296945078182e-06', 'just:0.0', 'went:0.0', 'long:0.0', 'again:0.0', '.:2.903296945078182e-06', 'lt:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('mxwl', tensor(0., device='cuda:0')), ('oh', tensor(0., device='cuda:0')), ('snap', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('lt', tensor(0., device='cuda:0'))],  word_scores_max: [('mxwl', tensor(0., device='cuda:0')), ('oh', tensor(0., device='cuda:0')), ('snap', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('went', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('lt', tensor(0., device='cuda:0'))]
idx: 1154, example: $xlf  bounced off target buy area, bought $skf as a hedge. watch 50ma's slope, prediction: 2, correct_label: 2, class_scores: [0.22234784 0.33554596 0.44210622], word_scores: ['$:0.0', 'xl:0.0', '##f:0.0', 'bounced:0.0', 'off:0.0', 'target:0.0', 'buy:0.0', 'area:0.0', ',:7.986737728060689e-06', 'bought:0.0', '$:0.0', 'sk:0.0', '##f:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'hedge:0.0', '.:2.903296945078182e-06', 'watch:0.0', '50:0.0', '##ma:0.0', "':0.0", 's:0.0', 'slope:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('xlf', tensor(0., device='cuda:0')), ('bounced', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), (',', tensor(0.4092, device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('skf', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.4420, device='cuda:0')), ('hedge', tensor(0., device='cuda:0')), ('.', tensor(0.1488, device='cuda:0')), ('watch', tensor(0., device='cuda:0'))],  word_scores_max: [('xlf', tensor(0., device='cuda:0')), ('bounced', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), (',', tensor(0.4092, device='cuda:0')), ('bought', tensor(0., device='cuda:0')), ('skf', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.4420, device='cuda:0')), ('hedge', tensor(0., device='cuda:0')), ('.', tensor(0.1488, device='cuda:0')), ('watch', tensor(0., device='cuda:0'))]
idx: 1155, example: $dug weekly stochastics finally starting to turn up after long consolidation. buying here., prediction: 2, correct_label: 1, class_scores: [0.21791561 0.33769426 0.44439015], word_scores: ['$:0.0', 'dug:0.0', 'weekly:0.0', 'st:0.0', '##och:0.0', '##astic:0.0', '##s:4.601175078278175e-06', 'finally:0.0', 'starting:0.0', 'to:2.886244146793615e-06', 'turn:0.0', 'up:1.4959460941099678e-06', 'after:0.0', 'long:0.0', 'consolidation:0.0', '.:2.903296945078182e-06', 'buying:0.0', 'here:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('dug', tensor(0., device='cuda:0')), ('weekly', tensor(0., device='cuda:0')), ('stochastics', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('to', tensor(0.2833, device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('up', tensor(0.1468, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('.', tensor(0.2850, device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.2850, device='cuda:0'))],  word_scores_max: [('dug', tensor(0., device='cuda:0')), ('weekly', tensor(0., device='cuda:0')), ('stochastics', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('to', tensor(0.2833, device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('up', tensor(0.1468, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('.', tensor(0.2850, device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.2850, device='cuda:0'))]
idx: 1156, example: $cat is hangin on my a thread. 1click away from a cliff drop.. needs follow through (or snap-back on the vix), prediction: 2, correct_label: 0, class_scores: [0.22891888 0.28617257 0.48490858], word_scores: ['$:0.0', 'cat:0.0', 'is:0.0', 'hang:0.0', '##in:0.0', 'on:0.0', 'my:0.0', 'a:8.62785782373976e-06', 'thread:0.0', '.:2.903296945078182e-06', '1:0.0', '##cl:0.0', '##ick:0.0', 'away:0.0', 'from:4.495178018260049e-06', 'a:8.62785782373976e-06', 'cliff:0.0', 'drop:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'needs:0.0', 'follow:0.0', 'through:0.0', '(:0.0', 'or:0.0', 'snap:0.0', '-:4.821180027647642e-06', 'back:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'vi:0.0', '##x:0.0', '):0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cat', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('hangin', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('a', tensor(0.2071, device='cuda:0')), ('thread', tensor(0., device='cuda:0')), ('.', tensor(0.0697, device='cuda:0')), ('1click', tensor(0., device='cuda:0')), ('away', tensor(0., device='cuda:0')), ('from', tensor(0.1079, device='cuda:0')), ('a', tensor(0.2071, device='cuda:0')), ('cliff', tensor(0., device='cuda:0')), ('drop', tensor(0., device='cuda:0')), ('.', tensor(0.0697, device='cuda:0')), ('.', tensor(0.0697, device='cuda:0')), ('needs', tensor(0., device='cuda:0')), ('follow', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('snap', tensor(0., device='cuda:0')), ('-', tensor(0.1157, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1532, device='cuda:0')), ('vix', tensor(0., device='cuda:0'))],  word_scores_max: [('cat', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('hangin', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('a', tensor(0.2071, device='cuda:0')), ('thread', tensor(0., device='cuda:0')), ('.', tensor(0.0697, device='cuda:0')), ('1click', tensor(0., device='cuda:0')), ('away', tensor(0., device='cuda:0')), ('from', tensor(0.1079, device='cuda:0')), ('a', tensor(0.2071, device='cuda:0')), ('cliff', tensor(0., device='cuda:0')), ('drop', tensor(0., device='cuda:0')), ('.', tensor(0.0697, device='cuda:0')), ('.', tensor(0.0697, device='cuda:0')), ('needs', tensor(0., device='cuda:0')), ('follow', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('snap', tensor(0., device='cuda:0')), ('-', tensor(0.1157, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1532, device='cuda:0')), ('vix', tensor(0., device='cuda:0'))]
idx: 1157, example: uk winners & losers: aviva and friends life lead ftse 100 gainers, prediction: 2, correct_label: 1, class_scores: [0.1766773 0.3594398 0.4638829], word_scores: ['uk:0.0', 'winners:0.0', '&:0.0', 'losers:0.0', '::0.0', 'aviv:0.0', '##a:3.804580501309829e-06', 'and:0.0', 'friends:0.0', 'life:0.0', 'lead:0.0', 'ft:0.0', '##se:0.0', '100:0.0', 'gain:0.0', '##ers:5.0093617574020755e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('uk', tensor(nan, device='cuda:0')), ('winners', tensor(nan, device='cuda:0')), ('losers', tensor(nan, device='cuda:0')), ('aviva', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('friends', tensor(nan, device='cuda:0')), ('life', tensor(nan, device='cuda:0')), ('lead', tensor(nan, device='cuda:0')), ('ftse', tensor(nan, device='cuda:0')), ('100', tensor(nan, device='cuda:0')), ('gainers', tensor(nan, device='cuda:0'))],  word_scores_max: [('uk', tensor(nan, device='cuda:0')), ('winners', tensor(nan, device='cuda:0')), ('losers', tensor(nan, device='cuda:0')), ('aviva', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('friends', tensor(nan, device='cuda:0')), ('life', tensor(nan, device='cuda:0')), ('lead', tensor(nan, device='cuda:0')), ('ftse', tensor(nan, device='cuda:0')), ('100', tensor(nan, device='cuda:0')), ('gainers', tensor(nan, device='cuda:0'))]
idx: 1158, example: $cdti bounce here on support or h&s setup this area is very important for bulls to not lose , prediction: 1, correct_label: 1, class_scores: [0.23033927 0.4188966  0.35076413], word_scores: ['$:0.0', 'cd:0.0', '##ti:2.5915114747476764e-06', 'bounce:0.0', 'here:0.0', 'on:0.0', 'support:0.0', 'or:0.0', 'h:0.0', '&:0.0', 's:0.0', 'setup:0.0', 'this:0.0', 'area:0.0', 'is:0.0', 'very:0.0', 'important:0.0', 'for:0.0', 'bulls:0.0', 'to:2.886244146793615e-06', 'not:0.0', 'lose:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('cdti', tensor(0., device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('h', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('setup', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('bulls', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('lose', tensor(0., device='cuda:0'))],  word_scores_max: [('cdti', tensor(0., device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('h', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('setup', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('important', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('bulls', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('lose', tensor(0., device='cuda:0'))]
idx: 1159, example: bg group still happy with shell's $70 billion offer, prediction: 1, correct_label: 2, class_scores: [0.20010684 0.42161712 0.37827605], word_scores: ['b:0.0', '##g:0.0', 'group:0.0', 'still:0.0', 'happy:0.0', 'with:4.733654350275174e-06', 'shell:0.0', "':0.0", 's:0.0', '$:0.0', '70:0.0', 'billion:0.0', 'offer:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bg', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('happy', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0'))],  word_scores_max: [('bg', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('happy', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0'))]
idx: 1160, example: astrazeneca's patent on asthma drug invalidated by us court, prediction: 2, correct_label: 0, class_scores: [0.16838482 0.37389117 0.45772395], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', "':0.0", 's:0.0', 'patent:0.0', 'on:0.0', 'asthma:0.0', 'drug:0.0', 'invalid:0.0', '##ated:0.0', 'by:0.0', 'us:0.0', 'court:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1161, example: i don't see it. 200 day sma is the big hurdle. there is a good base building. $nflx  , prediction: 1, correct_label: 2, class_scores: [0.19571327 0.43349254 0.37079412], word_scores: ['i:0.0', 'don:0.0', "':0.0", 't:0.0', 'see:0.0', 'it:3.3415778943890473e-06', '.:2.903296945078182e-06', '200:0.0', 'day:0.0', 'sm:0.0', '##a:3.804580501309829e-06', 'is:0.0', 'the:6.3806996877247e-06', 'big:0.0', 'hurdle:0.0', '.:2.903296945078182e-06', 'there:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'good:0.0', 'base:0.0', 'building:0.0', '.:2.903296945078182e-06', '$:0.0', 'nfl:0.0', '##x:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('i', tensor(nan, device='cuda:0'))],  word_scores_max: [('i', tensor(nan, device='cuda:0'))]
idx: 1162, example: $fb big money is pouring into facebook from all directions;, prediction: 2, correct_label: 1, class_scores: [0.17303874 0.2948664  0.53209484], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'big:0.0', 'money:0.0', 'is:0.0', 'pouring:0.0', 'into:0.0', 'facebook:0.0', 'from:4.495178018260049e-06', 'all:0.0', 'directions:0.0', ';:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('pouring', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('facebook', tensor(0., device='cuda:0')), ('from', tensor(1., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('directions', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('pouring', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('facebook', tensor(0., device='cuda:0')), ('from', tensor(1., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('directions', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0'))]
idx: 1163, example: $sbux inverted head & shoulders pattern in the works. bullish., prediction: 1, correct_label: 1, class_scores: [0.19072624 0.4811349  0.32813883], word_scores: ['$:0.0', 'sb:0.0', '##ux:0.0', 'inverted:0.0', 'head:0.0', '&:0.0', 'shoulders:0.0', 'pattern:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'works:0.0', '.:2.903296945078182e-06', 'bull:0.0', '##ish:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('sbux', tensor(0., device='cuda:0')), ('inverted', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('shoulders', tensor(0., device='cuda:0')), ('pattern', tensor(0., device='cuda:0')), ('in', tensor(0.1987, device='cuda:0')), ('the', tensor(0.4195, device='cuda:0')), ('works', tensor(0., device='cuda:0')), ('.', tensor(0.1909, device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('.', tensor(0.1909, device='cuda:0'))],  word_scores_max: [('sbux', tensor(0., device='cuda:0')), ('inverted', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('shoulders', tensor(0., device='cuda:0')), ('pattern', tensor(0., device='cuda:0')), ('in', tensor(0.1987, device='cuda:0')), ('the', tensor(0.4195, device='cuda:0')), ('works', tensor(0., device='cuda:0')), ('.', tensor(0.1909, device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('.', tensor(0.1909, device='cuda:0'))]
idx: 1164, example: $nihd insiders got this one wrong. looking for bottom. rsi under 30, prediction: 2, correct_label: 2, class_scores: [0.2334207  0.32913598 0.43744326], word_scores: ['$:0.0', 'ni:0.0', '##hd:0.0', 'insider:0.0', '##s:4.601175078278175e-06', 'got:0.0', 'this:0.0', 'one:4.584404450724833e-06', 'wrong:0.0', '.:2.903296945078182e-06', 'looking:0.0', 'for:0.0', 'bottom:0.0', '.:2.903296945078182e-06', 'rs:0.0', '##i:0.0', 'under:0.0', '30:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nihd', tensor(0., device='cuda:0')), ('insiders', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.4412, device='cuda:0')), ('wrong', tensor(0., device='cuda:0')), ('.', tensor(0.2794, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('.', tensor(0.2794, device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0'))],  word_scores_max: [('nihd', tensor(0., device='cuda:0')), ('insiders', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.4412, device='cuda:0')), ('wrong', tensor(0., device='cuda:0')), ('.', tensor(0.2794, device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('.', tensor(0.2794, device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0'))]
idx: 1165, example: multi top on $mcd chart finally leads to a fall in price.  stability is questioned in the stock but coming weeks will tell., prediction: 2, correct_label: 0, class_scores: [0.22618844 0.26845142 0.5053601 ], word_scores: ['multi:0.0', 'top:0.0', 'on:0.0', '$:0.0', 'mc:0.0', '##d:0.0', 'chart:0.0', 'finally:0.0', 'leads:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'fall:0.0', 'in:3.0217122457543155e-06', 'price:0.0', '.:2.903296945078182e-06', 'stability:0.0', 'is:0.0', 'questioned:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'stock:0.0', 'but:0.0', 'coming:0.0', 'weeks:0.0', 'will:4.073096533829812e-06', 'tell:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('multi', tensor(0., device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('mcd', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('to', tensor(0.0853, device='cuda:0')), ('a', tensor(0.2551, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.0894, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('.', tensor(0.0859, device='cuda:0')), ('stability', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('questioned', tensor(0., device='cuda:0')), ('in', tensor(0.0894, device='cuda:0')), ('the', tensor(0.1887, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), ('will', tensor(0.1204, device='cuda:0')), ('tell', tensor(0., device='cuda:0')), ('.', tensor(0.0859, device='cuda:0'))],  word_scores_max: [('multi', tensor(0., device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('mcd', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('leads', tensor(0., device='cuda:0')), ('to', tensor(0.0853, device='cuda:0')), ('a', tensor(0.2551, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('in', tensor(0.0894, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('.', tensor(0.0859, device='cuda:0')), ('stability', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('questioned', tensor(0., device='cuda:0')), ('in', tensor(0.0894, device='cuda:0')), ('the', tensor(0.1887, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0')), ('will', tensor(0.1204, device='cuda:0')), ('tell', tensor(0., device='cuda:0')), ('.', tensor(0.0859, device='cuda:0'))]
idx: 1166, example: qualcomm: 10% dividend increase rewards patient investors, the future looks bright  $qcom, prediction: 1, correct_label: 1, class_scores: [0.21666503 0.4057406  0.37759438], word_scores: ['qu:0.0', '##al:0.0', '##com:0.0', '##m:0.0', '::0.0', '10:0.0', '%:0.0', 'divide:0.0', '##nd:0.0', 'increase:0.0', 'rewards:0.0', 'patient:0.0', 'investors:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'future:0.0', 'looks:0.0', 'bright:0.0', '$:0.0', 'qc:0.0', '##om:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('qualcomm', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('rewards', tensor(0., device='cuda:0')), ('patient', tensor(0., device='cuda:0')), ('investors', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('bright', tensor(0., device='cuda:0')), ('qcom', tensor(0., device='cuda:0'))],  word_scores_max: [('qualcomm', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('rewards', tensor(0., device='cuda:0')), ('patient', tensor(0., device='cuda:0')), ('investors', tensor(0., device='cuda:0')), (',', tensor(0.5559, device='cuda:0')), ('the', tensor(0.4441, device='cuda:0')), ('future', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('bright', tensor(0., device='cuda:0')), ('qcom', tensor(0., device='cuda:0'))]
idx: 1167, example: $nflx easy pop to 500$ by end of feb.. then steady as she goes for 600 into second earnings report..800$ year end no matter what, prediction: 2, correct_label: 1, class_scores: [0.21601146 0.261142   0.5228465 ], word_scores: ['$:0.0', 'nfl:0.0', '##x:0.0', 'easy:0.0', 'pop:0.0', 'to:2.886244146793615e-06', '500:0.0', '$:0.0', 'by:0.0', 'end:0.0', 'of:3.4365734791208524e-06', 'feb:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'then:0.0', 'steady:0.0', 'as:0.0', 'she:0.0', 'goes:0.0', 'for:0.0', '600:0.0', 'into:0.0', 'second:0.0', 'earnings:0.0', 'report:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '800:0.0', '$:0.0', 'year:0.0', 'end:0.0', 'no:0.0', 'matter:0.0', 'what:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nflx', tensor(0., device='cuda:0')), ('easy', tensor(0., device='cuda:0')), ('pop', tensor(0., device='cuda:0')), ('to', tensor(0.1609, device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1916, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('steady', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('she', tensor(0., device='cuda:0')), ('goes', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('600', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('800', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('matter', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0'))],  word_scores_max: [('nflx', tensor(0., device='cuda:0')), ('easy', tensor(0., device='cuda:0')), ('pop', tensor(0., device='cuda:0')), ('to', tensor(0.1609, device='cuda:0')), ('500', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('of', tensor(0.1916, device='cuda:0')), ('feb', tensor(0., device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('steady', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('she', tensor(0., device='cuda:0')), ('goes', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('600', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('.', tensor(0.1619, device='cuda:0')), ('800', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('end', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('matter', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0'))]
idx: 1168, example: $nq got hit hard lower this am --> looks like it has found support a 18.89 , prediction: 2, correct_label: 0, class_scores: [0.24585101 0.3377079  0.4164411 ], word_scores: ['$:0.0', 'n:0.0', '##q:0.0', 'got:0.0', 'hit:0.0', 'hard:0.0', 'lower:0.0', 'this:0.0', 'am:0.0', '-:4.821180027647642e-06', '-:4.821180027647642e-06', '>:0.0', 'looks:0.0', 'like:0.0', 'it:3.3415778943890473e-06', 'has:5.9214244174654596e-06', 'found:0.0', 'support:0.0', 'a:8.62785782373976e-06', '18:0.0', '.:2.903296945078182e-06', '89:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nq', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('hard', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('-', tensor(0.1584, device='cuda:0')), ('-', tensor(0.1584, device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('it', tensor(0.1098, device='cuda:0')), ('has', tensor(0.1946, device='cuda:0')), ('found', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('a', tensor(0.2835, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0954, device='cuda:0')), ('89', tensor(0., device='cuda:0'))],  word_scores_max: [('nq', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('hard', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('-', tensor(0.1584, device='cuda:0')), ('-', tensor(0.1584, device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('it', tensor(0.1098, device='cuda:0')), ('has', tensor(0.1946, device='cuda:0')), ('found', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('a', tensor(0.2835, device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0954, device='cuda:0')), ('89', tensor(0., device='cuda:0'))]
idx: 1169, example: update 1-eu regulator backs approval for gsk injectable asthma drug, prediction: 2, correct_label: 1, class_scores: [0.24044693 0.34386817 0.4156849 ], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'eu:0.0', 'regulator:0.0', 'backs:0.0', 'approval:0.0', 'for:0.0', 'gs:0.0', '##k:0.0', 'in:3.0217122457543155e-06', '##ject:0.0', '##able:0.0', 'asthma:0.0', 'drug:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('regulator', tensor(0., device='cuda:0')), ('backs', tensor(0., device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('gsk', tensor(0., device='cuda:0')), ('injectable', tensor(0.3853, device='cuda:0')), ('asthma', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('eu', tensor(0., device='cuda:0')), ('regulator', tensor(0., device='cuda:0')), ('backs', tensor(0., device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('gsk', tensor(0., device='cuda:0')), ('injectable', tensor(0.3853, device='cuda:0')), ('asthma', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))]
idx: 1170, example: daily mail parent company in talks with potential partners about joint bid for yahoo's internet assets:  $yhoo, prediction: 2, correct_label: 2, class_scores: [0.16562736 0.3907234  0.4436492 ], word_scores: ['daily:0.0', 'mail:0.0', 'parent:0.0', 'company:6.695386673527537e-06', 'in:3.0217122457543155e-06', 'talks:0.0', 'with:4.733654350275174e-06', 'potential:0.0', 'partners:0.0', 'about:0.0', 'joint:0.0', 'bid:0.0', 'for:0.0', 'yahoo:0.0', "':0.0", 's:0.0', 'internet:0.0', 'assets:0.0', '::0.0', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('daily', tensor(0., device='cuda:0')), ('mail', tensor(0., device='cuda:0')), ('parent', tensor(0., device='cuda:0')), ('company', tensor(0.4633, device='cuda:0')), ('in', tensor(0.2091, device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('with', tensor(0.3276, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('bid', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0'))],  word_scores_max: [('daily', tensor(0., device='cuda:0')), ('mail', tensor(0., device='cuda:0')), ('parent', tensor(0., device='cuda:0')), ('company', tensor(0.4633, device='cuda:0')), ('in', tensor(0.2091, device='cuda:0')), ('talks', tensor(0., device='cuda:0')), ('with', tensor(0.3276, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('partners', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('bid', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0'))]
idx: 1171, example: update 1-meggitt reiterates annual outlook after tough 2014, prediction: 2, correct_label: 2, class_scores: [0.21855064 0.34553474 0.4359146 ], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'meg:0.0', '##git:0.0', '##t:0.0', 'rei:0.0', '##tera:0.0', '##tes:0.0', 'annual:0.0', 'outlook:0.0', 'after:0.0', 'tough:0.0', '2014:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('meggitt', tensor(0., device='cuda:0')), ('reiterates', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('tough', tensor(0., device='cuda:0')), ('2014', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('meggitt', tensor(0., device='cuda:0')), ('reiterates', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('tough', tensor(0., device='cuda:0')), ('2014', tensor(0., device='cuda:0'))]
idx: 1172, example: update 3-stifel to buy former lehman brokerage from barclays, prediction: 1, correct_label: 2, class_scores: [0.3152335  0.39740133 0.28736514], word_scores: ['update:0.0', '3:0.0', '-:4.821180027647642e-06', 'st:0.0', '##ife:0.0', '##l:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'former:0.0', 'lehman:0.0', 'broker:0.0', '##age:0.0', 'from:4.495178018260049e-06', 'barclay:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('update', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3951, device='cuda:0')), ('stifel', tensor(0., device='cuda:0')), ('to', tensor(0.2365, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('former', tensor(0., device='cuda:0')), ('lehman', tensor(0., device='cuda:0')), ('brokerage', tensor(0., device='cuda:0')), ('from', tensor(0.3684, device='cuda:0')), ('barclays', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3951, device='cuda:0')), ('stifel', tensor(0., device='cuda:0')), ('to', tensor(0.2365, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('former', tensor(0., device='cuda:0')), ('lehman', tensor(0., device='cuda:0')), ('brokerage', tensor(0., device='cuda:0')), ('from', tensor(0.3684, device='cuda:0')), ('barclays', tensor(0., device='cuda:0'))]
idx: 1173, example: $sbux down pm, from $db downgrade.. pt cut from 70 to $64, prediction: 2, correct_label: 0, class_scores: [0.21067317 0.3714635  0.41786334], word_scores: ['$:0.0', 'sb:0.0', '##ux:0.0', 'down:0.0', 'pm:0.0', ',:7.986737728060689e-06', 'from:4.495178018260049e-06', '$:0.0', 'db:0.0', 'down:0.0', '##grade:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'pt:0.0', 'cut:0.0', 'from:4.495178018260049e-06', '70:0.0', 'to:2.886244146793615e-06', '$:0.0', '64:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sbux', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('pm', tensor(0., device='cuda:0')), (',', tensor(0.3111, device='cuda:0')), ('from', tensor(0.1751, device='cuda:0')), ('db', tensor(0., device='cuda:0')), ('downgrade', tensor(0., device='cuda:0')), ('.', tensor(0.1131, device='cuda:0')), ('.', tensor(0.1131, device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('from', tensor(0.1751, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('to', tensor(0.1124, device='cuda:0')), ('64', tensor(0., device='cuda:0'))],  word_scores_max: [('sbux', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('pm', tensor(0., device='cuda:0')), (',', tensor(0.3111, device='cuda:0')), ('from', tensor(0.1751, device='cuda:0')), ('db', tensor(0., device='cuda:0')), ('downgrade', tensor(0., device='cuda:0')), ('.', tensor(0.1131, device='cuda:0')), ('.', tensor(0.1131, device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('from', tensor(0.1751, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('to', tensor(0.1124, device='cuda:0')), ('64', tensor(0., device='cuda:0'))]
idx: 1174, example: aldi and lidl expansion plans speed ahead as tesco, sainsbury's, morrisons ..., prediction: 1, correct_label: 1, class_scores: [0.19036137 0.4124427  0.39719597], word_scores: ['al:0.0', '##di:0.0', 'and:0.0', 'lid:0.0', '##l:0.0', 'expansion:0.0', 'plans:0.0', 'speed:0.0', 'ahead:0.0', 'as:0.0', 'te:0.0', '##sco:0.0', ',:7.986737728060689e-06', 'sai:0.0', '##ns:0.0', '##bury:0.0', "':0.0", 's:0.0', ',:7.986737728060689e-06', 'morrison:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aldi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lidl', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('speed', tensor(0., device='cuda:0')), ('ahead', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('tesco', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('aldi', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('lidl', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('speed', tensor(0., device='cuda:0')), ('ahead', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('tesco', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 1175, example: britain's ftse outperforms europe, royal mail and tesco rise, prediction: 1, correct_label: 1, class_scores: [0.19282354 0.4036446  0.40353185], word_scores: ['britain:0.0', "':0.0", 's:0.0', 'ft:0.0', '##se:0.0', 'out:0.0', '##per:0.0', '##forms:0.0', 'europe:0.0', ',:7.986737728060689e-06', 'royal:0.0', 'mail:0.0', 'and:0.0', 'te:0.0', '##sco:0.0', 'rise:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1176, example: $ilmn piper jeffries raises pt.  i remain long, prediction: 2, correct_label: 1, class_scores: [0.22482365 0.30356354 0.47161284], word_scores: ['$:0.0', 'il:0.0', '##m:0.0', '##n:0.0', 'piper:0.0', 'jeff:0.0', '##ries:0.0', 'raises:0.0', 'pt:0.0', '.:2.903296945078182e-06', 'i:0.0', 'remain:0.0', 'long:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ilmn', tensor(0., device='cuda:0')), ('piper', tensor(0., device='cuda:0')), ('jeffries', tensor(0., device='cuda:0')), ('raises', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0'))],  word_scores_max: [('ilmn', tensor(0., device='cuda:0')), ('piper', tensor(0., device='cuda:0')), ('jeffries', tensor(0., device='cuda:0')), ('raises', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0'))]
idx: 1177, example: diageo sales disappoint as currency and comparatives leave bitter taste, prediction: 2, correct_label: 0, class_scores: [0.20623738 0.3411607  0.45260185], word_scores: ['dia:0.0', '##ge:0.0', '##o:0.0', 'sales:0.0', 'di:0.0', '##sa:0.0', '##pp:0.0', '##oint:0.0', 'as:0.0', 'currency:0.0', 'and:0.0', 'comparative:0.0', '##s:4.601175078278175e-06', 'leave:0.0', 'bitter:0.0', 'taste:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('diageo', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('disappoint', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('currency', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('comparatives', tensor(nan, device='cuda:0')), ('leave', tensor(nan, device='cuda:0')), ('bitter', tensor(nan, device='cuda:0')), ('taste', tensor(nan, device='cuda:0'))],  word_scores_max: [('diageo', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('disappoint', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('currency', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('comparatives', tensor(nan, device='cuda:0')), ('leave', tensor(nan, device='cuda:0')), ('bitter', tensor(nan, device='cuda:0')), ('taste', tensor(nan, device='cuda:0'))]
idx: 1178, example: $xli potential intermediate top in an uptrend on a 60'-15'-4' charts , prediction: 2, correct_label: 2, class_scores: [0.20099926 0.36332646 0.43567434], word_scores: ['$:0.0', 'xl:0.0', '##i:0.0', 'potential:0.0', 'intermediate:0.0', 'top:0.0', 'in:3.0217122457543155e-06', 'an:0.0', 'up:1.4959460941099678e-06', '##tre:0.0', '##nd:0.0', 'on:0.0', 'a:8.62785782373976e-06', '60:0.0', "':0.0", '-:4.821180027647642e-06', '15:0.0', "':0.0", '-:4.821180027647642e-06', '4:0.0', "':0.0", 'charts:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('xli', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('intermediate', tensor(0., device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('in', tensor(0.2299, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('uptrend', tensor(0.1138, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.6563, device='cuda:0'))],  word_scores_max: [('xli', tensor(0., device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('intermediate', tensor(0., device='cuda:0')), ('top', tensor(0., device='cuda:0')), ('in', tensor(0.2299, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('uptrend', tensor(0.1138, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.6563, device='cuda:0'))]
idx: 1179, example: companiestravis perkins lifts dividend, earnings rise 15%, prediction: 1, correct_label: 1, class_scores: [0.24570715 0.37740657 0.37688634], word_scores: ['companies:0.0', '##tra:0.0', '##vis:0.0', 'perkins:0.0', 'lifts:0.0', 'divide:0.0', '##nd:0.0', ',:7.986737728060689e-06', 'earnings:0.0', 'rise:0.0', '15:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companiestravis', tensor(0., device='cuda:0')), ('perkins', tensor(0., device='cuda:0')), ('lifts', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0'))],  word_scores_max: [('companiestravis', tensor(0., device='cuda:0')), ('perkins', tensor(0., device='cuda:0')), ('lifts', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0'))]
idx: 1180, example: u.k. stocks little changed near record as barclays, shell fall, prediction: 2, correct_label: 0, class_scores: [0.19191073 0.38379076 0.42429847], word_scores: ['u:0.0', '.:2.903296945078182e-06', 'k:0.0', '.:2.903296945078182e-06', 'stocks:0.0', 'little:0.0', 'changed:0.0', 'near:0.0', 'record:0.0', 'as:0.0', 'barclay:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'shell:0.0', 'fall:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('u', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0')), ('k', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('changed', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), (',', tensor(0.5790, device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0'))],  word_scores_max: [('u', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0')), ('k', tensor(0., device='cuda:0')), ('.', tensor(0.2105, device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('little', tensor(0., device='cuda:0')), ('changed', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('record', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), (',', tensor(0.5790, device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0'))]
idx: 1181, example: long $aapl 107 calls @ .40, prediction: 2, correct_label: 1, class_scores: [0.27137604 0.26061395 0.46801004], word_scores: ['long:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '107:0.0', 'calls:0.0', '@:0.0', '.:2.903296945078182e-06', '40:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('long', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('107', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('40', tensor(0., device='cuda:0'))],  word_scores_max: [('long', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('107', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('40', tensor(0., device='cuda:0'))]
idx: 1182, example: crh's concrete bid for holcim lafarge assets, prediction: 1, correct_label: 2, class_scores: [0.16952778 0.46638718 0.364085  ], word_scores: ['cr:0.0', '##h:0.0', "':0.0", 's:0.0', 'concrete:0.0', 'bid:0.0', 'for:0.0', 'ho:0.0', '##lc:0.0', '##im:0.0', 'la:0.0', '##far:0.0', '##ge:0.0', 'assets:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1183, example: $fb churning in high volume @ ipo price. lot's of sellers trying to get out. might take a while here to consolidate before moving higher., prediction: 2, correct_label: 2, class_scores: [0.1758223  0.4015092  0.42266855], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'churning:0.0', 'in:3.0217122457543155e-06', 'high:0.0', 'volume:0.0', '@:0.0', 'ip:0.0', '##o:0.0', 'price:0.0', '.:2.903296945078182e-06', 'lot:0.0', "':0.0", 's:0.0', 'of:3.4365734791208524e-06', 'sellers:0.0', 'trying:0.0', 'to:2.886244146793615e-06', 'get:0.0', 'out:0.0', '.:2.903296945078182e-06', 'might:0.0', 'take:2.0325496734585613e-06', 'a:8.62785782373976e-06', 'while:0.0', 'here:0.0', 'to:2.886244146793615e-06', 'consolidate:0.0', 'before:0.0', 'moving:0.0', 'higher:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fb', tensor(0., device='cuda:0')), ('churning', tensor(0., device='cuda:0')), ('in', tensor(0.5100, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('.', tensor(0.4900, device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('churning', tensor(0., device='cuda:0')), ('in', tensor(0.5100, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('.', tensor(0.4900, device='cuda:0'))]
idx: 1184, example: $tsla stock gaining steam... plus other notable moves from this week: , prediction: 2, correct_label: 1, class_scores: [0.15918535 0.2811595  0.5596552 ], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'stock:0.0', 'gaining:0.0', 'steam:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'plus:0.0', 'other:0.0', 'notable:0.0', 'moves:0.0', 'from:4.495178018260049e-06', 'this:0.0', 'week:0.0', '::0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('gaining', tensor(0., device='cuda:0')), ('steam', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('notable', tensor(0., device='cuda:0')), ('moves', tensor(0., device='cuda:0')), ('from', tensor(0.3404, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('gaining', tensor(0., device='cuda:0')), ('steam', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('other', tensor(0., device='cuda:0')), ('notable', tensor(0., device='cuda:0')), ('moves', tensor(0., device='cuda:0')), ('from', tensor(0.3404, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))]
idx: 1185, example: $rcon some upside today. this thing is severe low float. if there is catalyst for this guy. it can run., prediction: 1, correct_label: 2, class_scores: [0.19202994 0.4325989  0.37537122], word_scores: ['$:0.0', 'rc:0.0', '##on:0.0', 'some:0.0', 'upside:0.0', 'today:0.0', '.:2.903296945078182e-06', 'this:0.0', 'thing:0.0', 'is:0.0', 'severe:0.0', 'low:0.0', 'float:0.0', '.:2.903296945078182e-06', 'if:0.0', 'there:0.0', 'is:0.0', 'catalyst:0.0', 'for:0.0', 'this:0.0', 'guy:0.0', '.:2.903296945078182e-06', 'it:3.3415778943890473e-06', 'can:0.0', 'run:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rcon', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('thing', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('severe', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('float', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('catalyst', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('guy', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('it', tensor(0.2234, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0'))],  word_scores_max: [('rcon', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('thing', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('severe', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('float', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('there', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('catalyst', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('guy', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('it', tensor(0.2234, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0'))]
idx: 1186, example: $aapl at resistance right here...sold my shares...will buy back if it dips or if it goes in the 128 gap zone, prediction: 2, correct_label: 2, class_scores: [0.21102385 0.2863157  0.50266045], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'at:0.0', 'resistance:0.0', 'right:0.0', 'here:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'sold:0.0', 'my:0.0', 'shares:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'will:4.073096533829812e-06', 'buy:0.0', 'back:0.0', 'if:0.0', 'it:3.3415778943890473e-06', 'dip:0.0', '##s:4.601175078278175e-06', 'or:0.0', 'if:0.0', 'it:3.3415778943890473e-06', 'goes:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', '128:0.0', 'gap:0.0', 'zone:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('will', tensor(0.1084, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('it', tensor(0.0889, device='cuda:0')), ('dips', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('it', tensor(0.0889, device='cuda:0')), ('goes', tensor(0., device='cuda:0')), ('in', tensor(0.0804, device='cuda:0')), ('the', tensor(0.1698, device='cuda:0')), ('128', tensor(0., device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('sold', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('.', tensor(0.0773, device='cuda:0')), ('will', tensor(0.1084, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('it', tensor(0.0889, device='cuda:0')), ('dips', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('it', tensor(0.0889, device='cuda:0')), ('goes', tensor(0., device='cuda:0')), ('in', tensor(0.0804, device='cuda:0')), ('the', tensor(0.1698, device='cuda:0')), ('128', tensor(0., device='cuda:0')), ('gap', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0'))]
idx: 1187, example: $tza is a rocket ship!!!, prediction: 1, correct_label: 1, class_scores: [0.19257946 0.4165634  0.39085713], word_scores: ['$:0.0', 't:0.0', '##za:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'rocket:0.0', 'ship:0.0', '!:0.0', '!:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tza', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('rocket', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('tza', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('rocket', tensor(0., device='cuda:0')), ('ship', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1188, example: deutsche bank cuts $sbux, prediction: 2, correct_label: 0, class_scores: [0.1938944  0.25979945 0.54630613], word_scores: ['deutsche:0.0', 'bank:0.0', 'cuts:0.0', '$:0.0', 'sb:0.0', '##ux:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('deutsche', tensor(nan, device='cuda:0')), ('bank', tensor(nan, device='cuda:0')), ('cuts', tensor(nan, device='cuda:0')), ('sbux', tensor(nan, device='cuda:0'))],  word_scores_max: [('deutsche', tensor(nan, device='cuda:0')), ('bank', tensor(nan, device='cuda:0')), ('cuts', tensor(nan, device='cuda:0')), ('sbux', tensor(nan, device='cuda:0'))]
idx: 1189, example: $aapl short some 592.49, prediction: 2, correct_label: 0, class_scores: [0.18600301 0.32881632 0.48518074], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'short:0.0', 'some:0.0', '59:0.0', '##2:0.0', '.:2.903296945078182e-06', '49:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('592', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('49', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('592', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('49', tensor(0., device='cuda:0'))]
idx: 1190, example: @saltwaternurse $ino can test 10 again in next few days. time to take some profits here. or hedge with puts., prediction: 2, correct_label: 2, class_scores: [0.2852489 0.3485241 0.366227 ], word_scores: ['@:0.0', 'salt:0.0', '##water:0.0', '##nu:0.0', '##rse:0.0', '$:0.0', 'in:3.0217122457543155e-06', '##o:0.0', 'can:0.0', 'test:0.0', '10:0.0', 'again:0.0', 'in:3.0217122457543155e-06', 'next:0.0', 'few:0.0', 'days:0.0', '.:2.903296945078182e-06', 'time:0.0', 'to:2.886244146793615e-06', 'take:2.0325496734585613e-06', 'some:0.0', 'profits:0.0', 'here:0.0', '.:2.903296945078182e-06', 'or:0.0', 'hedge:0.0', 'with:4.733654350275174e-06', 'puts:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('saltwaternurse', tensor(0., device='cuda:0')), ('ino', tensor(0.1238, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('in', tensor(0.1238, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('.', tensor(0.1190, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('to', tensor(0.1183, device='cuda:0')), ('take', tensor(0.0833, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('profits', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.1190, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('hedge', tensor(0., device='cuda:0')), ('with', tensor(0.1940, device='cuda:0')), ('puts', tensor(0., device='cuda:0')), ('.', tensor(0.1190, device='cuda:0'))],  word_scores_max: [('saltwaternurse', tensor(0., device='cuda:0')), ('ino', tensor(0.1238, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('in', tensor(0.1238, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('.', tensor(0.1190, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('to', tensor(0.1183, device='cuda:0')), ('take', tensor(0.0833, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('profits', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.1190, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('hedge', tensor(0., device='cuda:0')), ('with', tensor(0.1940, device='cuda:0')), ('puts', tensor(0., device='cuda:0')), ('.', tensor(0.1190, device='cuda:0'))]
idx: 1191, example: can christmas save sainsbury's plc and tesco plc?, prediction: 2, correct_label: 2, class_scores: [0.2426125  0.34676674 0.41062078], word_scores: ['can:0.0', 'christmas:0.0', 'save:0.0', 'sai:0.0', '##ns:0.0', '##bury:0.0', "':0.0", 's:0.0', 'plc:0.0', 'and:0.0', 'te:0.0', '##sco:0.0', 'plc:0.0', '?:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('can', tensor(nan, device='cuda:0')), ('christmas', tensor(nan, device='cuda:0')), ('save', tensor(nan, device='cuda:0'))],  word_scores_max: [('can', tensor(nan, device='cuda:0')), ('christmas', tensor(nan, device='cuda:0')), ('save', tensor(nan, device='cuda:0'))]
idx: 1192, example: $renn topping tail 5 min. chart at 7.31 short from here., prediction: 2, correct_label: 0, class_scores: [0.14984173 0.37627593 0.47388238], word_scores: ['$:0.0', 'ren:0.0', '##n:0.0', 'topping:0.0', 'tail:0.0', '5:0.0', 'min:0.0', '.:2.903296945078182e-06', 'chart:0.0', 'at:0.0', '7:0.0', '.:2.903296945078182e-06', '31:0.0', 'short:0.0', 'from:4.495178018260049e-06', 'here:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('renn', tensor(0., device='cuda:0')), ('topping', tensor(0., device='cuda:0')), ('tail', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('min', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('from', tensor(0.3404, device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0'))],  word_scores_max: [('renn', tensor(0., device='cuda:0')), ('topping', tensor(0., device='cuda:0')), ('tail', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('min', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('from', tensor(0.3404, device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0'))]
idx: 1193, example: diageo receives reports from united spirits on financial irregularities involving ..., prediction: 2, correct_label: 2, class_scores: [0.2049091  0.30928475 0.48580614], word_scores: ['dia:0.0', '##ge:0.0', '##o:0.0', 'receives:0.0', 'reports:0.0', 'from:4.495178018260049e-06', 'united:0.0', 'spirits:0.0', 'on:0.0', 'financial:0.0', 'irregularities:0.0', 'involving:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('diageo', tensor(0., device='cuda:0')), ('receives', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('from', tensor(0.3404, device='cuda:0')), ('united', tensor(0., device='cuda:0')), ('spirits', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('irregularities', tensor(0., device='cuda:0')), ('involving', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0'))],  word_scores_max: [('diageo', tensor(0., device='cuda:0')), ('receives', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('from', tensor(0.3404, device='cuda:0')), ('united', tensor(0., device='cuda:0')), ('spirits', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('irregularities', tensor(0., device='cuda:0')), ('involving', tensor(0., device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0')), ('.', tensor(0.2199, device='cuda:0'))]
idx: 1194, example: $fb dax says bye bye 2013 - finished a great yr w 28% plus!, prediction: 2, correct_label: 2, class_scores: [0.2845    0.3304176 0.3850824], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'dax:0.0', 'says:0.0', 'bye:0.0', 'bye:0.0', '2013:0.0', '-:4.821180027647642e-06', 'finished:0.0', 'a:8.62785782373976e-06', 'great:0.0', 'y:0.0', '##r:0.0', 'w:0.0', '28:0.0', '%:0.0', 'plus:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('dax', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('bye', tensor(0., device='cuda:0')), ('bye', tensor(0., device='cuda:0')), ('2013', tensor(0., device='cuda:0')), ('-', tensor(0.3585, device='cuda:0')), ('finished', tensor(0., device='cuda:0')), ('a', tensor(0.6415, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('yr', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('28', tensor(0., device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('dax', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('bye', tensor(0., device='cuda:0')), ('bye', tensor(0., device='cuda:0')), ('2013', tensor(0., device='cuda:0')), ('-', tensor(0.3585, device='cuda:0')), ('finished', tensor(0., device='cuda:0')), ('a', tensor(0.6415, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('yr', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('28', tensor(0., device='cuda:0')), ('plus', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1195, example: shell's $70 billion bg deal meets shareholder skepticism, prediction: 2, correct_label: 0, class_scores: [0.15271941 0.41832352 0.42895707], word_scores: ['shell:0.0', "':0.0", 's:0.0', '$:0.0', '70:0.0', 'billion:0.0', 'b:0.0', '##g:0.0', 'deal:0.0', 'meets:0.0', 'shareholder:0.0', 'skepticism:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1196, example: @dojiknows th sp and the potential of qnx bes10 and bbm  cross platform will bring good news in time $bbry, prediction: 2, correct_label: 2, class_scores: [0.17348215 0.31490767 0.51161015], word_scores: ['@:0.0', 'do:0.0', '##ji:0.0', '##k:0.0', '##now:0.0', '##s:4.601175078278175e-06', 'th:0.0', 'sp:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'potential:0.0', 'of:3.4365734791208524e-06', 'q:0.0', '##nx:0.0', 'be:0.0', '##s:4.601175078278175e-06', '##10:0.0', 'and:0.0', 'bb:0.0', '##m:0.0', 'cross:0.0', 'platform:0.0', 'will:4.073096533829812e-06', 'bring:0.0', 'good:0.0', 'news:0.0', 'in:3.0217122457543155e-06', 'time:0.0', '$:0.0', 'bb:0.0', '##ry:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('dojiknows', tensor(0., device='cuda:0')), ('th', tensor(0., device='cuda:0')), ('sp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2966, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('of', tensor(0.1597, device='cuda:0')), ('qnx', tensor(0., device='cuda:0')), ('bes10', tensor(0.2139, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bbm', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('platform', tensor(0., device='cuda:0')), ('will', tensor(0.1893, device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('in', tensor(0.1405, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('bbry', tensor(0., device='cuda:0'))],  word_scores_max: [('dojiknows', tensor(0., device='cuda:0')), ('th', tensor(0., device='cuda:0')), ('sp', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2966, device='cuda:0')), ('potential', tensor(0., device='cuda:0')), ('of', tensor(0.1597, device='cuda:0')), ('qnx', tensor(0., device='cuda:0')), ('bes10', tensor(0.2139, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bbm', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('platform', tensor(0., device='cuda:0')), ('will', tensor(0.1893, device='cuda:0')), ('bring', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('news', tensor(0., device='cuda:0')), ('in', tensor(0.1405, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('bbry', tensor(0., device='cuda:0'))]
idx: 1197, example: borealis infrastructure putting together new severn trent bid, prediction: 2, correct_label: 2, class_scores: [0.24131888 0.34325898 0.4154221 ], word_scores: ['bore:0.0', '##alis:0.0', 'infrastructure:0.0', 'putting:0.0', 'together:0.0', 'new:2.798587502184091e-06', 'severn:0.0', 'trent:0.0', 'bid:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('borealis', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), ('putting', tensor(0., device='cuda:0')), ('together', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('severn', tensor(0., device='cuda:0')), ('trent', tensor(0., device='cuda:0')), ('bid', tensor(0., device='cuda:0'))],  word_scores_max: [('borealis', tensor(0., device='cuda:0')), ('infrastructure', tensor(0., device='cuda:0')), ('putting', tensor(0., device='cuda:0')), ('together', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('severn', tensor(0., device='cuda:0')), ('trent', tensor(0., device='cuda:0')), ('bid', tensor(0., device='cuda:0'))]
idx: 1198, example: ab inbev ups offer for sabmiller as deadline looms, prediction: 1, correct_label: 2, class_scores: [0.23736672 0.40008184 0.36255145], word_scores: ['ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'ups:0.0', 'offer:0.0', 'for:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', 'as:0.0', 'deadline:0.0', 'lo:0.0', '##oms:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ab', tensor(0., device='cuda:0')), ('inbev', tensor(1., device='cuda:0')), ('ups', tensor(0., device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('deadline', tensor(0., device='cuda:0')), ('looms', tensor(0., device='cuda:0'))],  word_scores_max: [('ab', tensor(0., device='cuda:0')), ('inbev', tensor(1., device='cuda:0')), ('ups', tensor(0., device='cuda:0')), ('offer', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('deadline', tensor(0., device='cuda:0')), ('looms', tensor(0., device='cuda:0'))]
idx: 1199, example: espn files lawsuit against verizon -  $vz, prediction: 2, correct_label: 0, class_scores: [0.2296819  0.30745482 0.46286333], word_scores: ['espn:0.0', 'files:0.0', 'lawsuit:0.0', 'against:0.0', 've:0.0', '##riz:0.0', '##on:0.0', '-:4.821180027647642e-06', '$:0.0', 'v:0.0', '##z:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('espn', tensor(0., device='cuda:0')), ('files', tensor(0., device='cuda:0')), ('lawsuit', tensor(0., device='cuda:0')), ('against', tensor(0., device='cuda:0')), ('verizon', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('vz', tensor(0., device='cuda:0'))],  word_scores_max: [('espn', tensor(0., device='cuda:0')), ('files', tensor(0., device='cuda:0')), ('lawsuit', tensor(0., device='cuda:0')), ('against', tensor(0., device='cuda:0')), ('verizon', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('vz', tensor(0., device='cuda:0'))]
idx: 1200, example: us sanctions put gazprom-shell alliance plans in jeopardy, prediction: 2, correct_label: 2, class_scores: [0.19822946 0.381317   0.42045358], word_scores: ['us:0.0', 'sanctions:0.0', 'put:0.0', 'ga:0.0', '##z:0.0', '##pro:0.0', '##m:0.0', '-:4.821180027647642e-06', 'shell:0.0', 'alliance:0.0', 'plans:0.0', 'in:3.0217122457543155e-06', 'jeopardy:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('us', tensor(0., device='cuda:0')), ('sanctions', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('gazprom', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('alliance', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('jeopardy', tensor(0., device='cuda:0'))],  word_scores_max: [('us', tensor(0., device='cuda:0')), ('sanctions', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('gazprom', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('alliance', tensor(0., device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('jeopardy', tensor(0., device='cuda:0'))]
idx: 1201, example: $hpq says breakup will cost billions, but sees savings too , prediction: 2, correct_label: 2, class_scores: [0.14830749 0.31296644 0.53872603], word_scores: ['$:0.0', 'hp:0.0', '##q:0.0', 'says:0.0', 'breakup:0.0', 'will:4.073096533829812e-06', 'cost:0.0', 'billions:0.0', ',:7.986737728060689e-06', 'but:0.0', 'sees:0.0', 'savings:0.0', 'too:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('hpq', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('breakup', tensor(0., device='cuda:0')), ('will', tensor(0.3377, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('billions', tensor(0., device='cuda:0')), (',', tensor(0.6623, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('savings', tensor(0., device='cuda:0')), ('too', tensor(0., device='cuda:0'))],  word_scores_max: [('hpq', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('breakup', tensor(0., device='cuda:0')), ('will', tensor(0.3377, device='cuda:0')), ('cost', tensor(0., device='cuda:0')), ('billions', tensor(0., device='cuda:0')), (',', tensor(0.6623, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('savings', tensor(0., device='cuda:0')), ('too', tensor(0., device='cuda:0'))]
idx: 1202, example: glencore blames rivals for creating metals glut, prediction: 2, correct_label: 2, class_scores: [0.15826547 0.3888521  0.45288247], word_scores: ['glen:0.0', '##core:0.0', 'blame:0.0', '##s:4.601175078278175e-06', 'rivals:0.0', 'for:0.0', 'creating:0.0', 'metals:0.0', 'g:0.0', '##lu:0.0', '##t:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('glencore', tensor(nan, device='cuda:0')), ('blames', tensor(nan, device='cuda:0')), ('rivals', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('creating', tensor(nan, device='cuda:0')), ('metals', tensor(nan, device='cuda:0')), ('glut', tensor(nan, device='cuda:0'))],  word_scores_max: [('glencore', tensor(nan, device='cuda:0')), ('blames', tensor(nan, device='cuda:0')), ('rivals', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('creating', tensor(nan, device='cuda:0')), ('metals', tensor(nan, device='cuda:0')), ('glut', tensor(nan, device='cuda:0'))]
idx: 1203, example: $isrg - isrg short -  , prediction: 1, correct_label: 0, class_scores: [0.26237074 0.3764558  0.36117342], word_scores: ['$:0.0', 'is:0.0', '##rg:0.0', '-:4.821180027647642e-06', 'is:0.0', '##rg:0.0', 'short:0.0', '-:4.821180027647642e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('isrg', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('isrg', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('isrg', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('isrg', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0'))]
idx: 1204, example: are aviva plc, direct line insurance group plc and admiral group plc set to soar?, prediction: 1, correct_label: 2, class_scores: [0.16990031 0.43946734 0.39063236], word_scores: ['are:0.0', 'aviv:0.0', '##a:3.804580501309829e-06', 'plc:0.0', ',:7.986737728060689e-06', 'direct:0.0', 'line:0.0', 'insurance:0.0', 'group:0.0', 'plc:0.0', 'and:0.0', 'admiral:0.0', 'group:0.0', 'plc:0.0', 'set:0.0', 'to:2.886244146793615e-06', 'so:0.0', '##ar:0.0', '?:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('are', tensor(0., device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('direct', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('insurance', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('admiral', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('soar', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))],  word_scores_max: [('are', tensor(0., device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('direct', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('insurance', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('admiral', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('plc', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('soar', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))]
idx: 1205, example: how kraft-heinz merger came together in speedy 10 weeks, prediction: 2, correct_label: 2, class_scores: [0.21957323 0.34892073 0.4315061 ], word_scores: ['how:0.0', 'kraft:0.0', '-:4.821180027647642e-06', 'heinz:0.0', 'merger:0.0', 'came:0.0', 'together:0.0', 'in:3.0217122457543155e-06', 'speedy:0.0', '10:0.0', 'weeks:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('how', tensor(0., device='cuda:0')), ('kraft', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('heinz', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0')), ('came', tensor(0., device='cuda:0')), ('together', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('speedy', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0'))],  word_scores_max: [('how', tensor(0., device='cuda:0')), ('kraft', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('heinz', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0')), ('came', tensor(0., device='cuda:0')), ('together', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('speedy', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('weeks', tensor(0., device='cuda:0'))]
idx: 1206, example: market report: eight-day rally ends for ftse 100 and standard chartered, prediction: 2, correct_label: 2, class_scores: [0.20437226 0.27094635 0.5246813 ], word_scores: ['market:0.0', 'report:0.0', '::0.0', 'eight:0.0', '-:4.821180027647642e-06', 'day:0.0', 'rally:0.0', 'ends:0.0', 'for:0.0', 'ft:0.0', '##se:0.0', '100:0.0', 'and:0.0', 'standard:0.0', 'chartered:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('market', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('rally', tensor(0., device='cuda:0')), ('ends', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0'))],  word_scores_max: [('market', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('eight', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('rally', tensor(0., device='cuda:0')), ('ends', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0'))]
idx: 1207, example: $baba may take a few days wks months watch what happened to $fb $twtr after they ipo. mrkt needs to washout. to hunt well need 2 wait stalk., prediction: 2, correct_label: 2, class_scores: [0.25721797 0.35227644 0.3905056 ], word_scores: ['$:0.0', 'baba:0.0', 'may:0.0', 'take:2.0325496734585613e-06', 'a:8.62785782373976e-06', 'few:0.0', 'days:0.0', 'w:0.0', '##ks:0.0', 'months:0.0', 'watch:0.0', 'what:0.0', 'happened:0.0', 'to:2.886244146793615e-06', '$:0.0', 'f:0.0', '##b:0.0', '$:0.0', 't:0.0', '##wt:0.0', '##r:0.0', 'after:0.0', 'they:0.0', 'ip:0.0', '##o:0.0', '.:2.903296945078182e-06', 'mr:0.0', '##kt:0.0', 'needs:0.0', 'to:2.886244146793615e-06', 'wash:0.0', '##out:0.0', '.:2.903296945078182e-06', 'to:2.886244146793615e-06', 'hunt:0.0', 'well:0.0', 'need:0.0', '2:0.0', 'wait:0.0', 'stalk:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('baba', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('take', tensor(0.0725, device='cuda:0')), ('a', tensor(0.3078, device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('wks', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('happened', tensor(0., device='cuda:0')), ('to', tensor(0.1030, device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('twtr', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0')), ('.', tensor(0.1036, device='cuda:0')), ('mrkt', tensor(0., device='cuda:0')), ('needs', tensor(0., device='cuda:0')), ('to', tensor(0.1030, device='cuda:0')), ('washout', tensor(0., device='cuda:0')), ('.', tensor(0.1036, device='cuda:0')), ('to', tensor(0.1030, device='cuda:0')), ('hunt', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('wait', tensor(0., device='cuda:0')), ('stalk', tensor(0., device='cuda:0')), ('.', tensor(0.1036, device='cuda:0'))],  word_scores_max: [('baba', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('take', tensor(0.0725, device='cuda:0')), ('a', tensor(0.3078, device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('wks', tensor(0., device='cuda:0')), ('months', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('happened', tensor(0., device='cuda:0')), ('to', tensor(0.1030, device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('twtr', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0')), ('.', tensor(0.1036, device='cuda:0')), ('mrkt', tensor(0., device='cuda:0')), ('needs', tensor(0., device='cuda:0')), ('to', tensor(0.1030, device='cuda:0')), ('washout', tensor(0., device='cuda:0')), ('.', tensor(0.1036, device='cuda:0')), ('to', tensor(0.1030, device='cuda:0')), ('hunt', tensor(0., device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('need', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('wait', tensor(0., device='cuda:0')), ('stalk', tensor(0., device='cuda:0')), ('.', tensor(0.1036, device='cuda:0'))]
idx: 1208, example: hsbc says unit to book $585 million charge on settlement, prediction: 2, correct_label: 0, class_scores: [0.2743216  0.28602496 0.4396534 ], word_scores: ['hs:0.0', '##bc:0.0', 'says:0.0', 'unit:0.0', 'to:2.886244146793615e-06', 'book:0.0', '$:0.0', '58:0.0', '##5:0.0', 'million:6.018835847498849e-06', 'charge:0.0', 'on:0.0', 'settlement:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('hsbc', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('to', tensor(0.3241, device='cuda:0')), ('book', tensor(0., device='cuda:0')), ('585', tensor(0., device='cuda:0')), ('million', tensor(0.6759, device='cuda:0')), ('charge', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('settlement', tensor(0., device='cuda:0'))],  word_scores_max: [('hsbc', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('to', tensor(0.3241, device='cuda:0')), ('book', tensor(0., device='cuda:0')), ('585', tensor(0., device='cuda:0')), ('million', tensor(0.6759, device='cuda:0')), ('charge', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('settlement', tensor(0., device='cuda:0'))]
idx: 1209, example: apple: another attempt to break out on apple but with weak pvt   $aapl #trading #investing #aapl , prediction: 2, correct_label: 2, class_scores: [0.26047385 0.2817719  0.45775422], word_scores: ['apple:0.0', '::0.0', 'another:0.0', 'attempt:0.0', 'to:2.886244146793615e-06', 'break:0.0', 'out:0.0', 'on:0.0', 'apple:0.0', 'but:0.0', 'with:4.733654350275174e-06', 'weak:0.0', 'pv:0.0', '##t:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '#:0.0', 'trading:0.0', '#:0.0', 'investing:0.0', '#:0.0', 'aa:0.0', '##pl:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('apple', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('attempt', tensor(0., device='cuda:0')), ('to', tensor(0.3788, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('with', tensor(0.6212, device='cuda:0')), ('weak', tensor(0., device='cuda:0')), ('pvt', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('investing', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))],  word_scores_max: [('apple', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('attempt', tensor(0., device='cuda:0')), ('to', tensor(0.3788, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('with', tensor(0.6212, device='cuda:0')), ('weak', tensor(0., device='cuda:0')), ('pvt', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('investing', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))]
idx: 1210, example: britain's ftse forges ahead as shire surges, prediction: 2, correct_label: 1, class_scores: [0.22183077 0.35652798 0.4216413 ], word_scores: ['britain:0.0', "':0.0", 's:0.0', 'ft:0.0', '##se:0.0', 'forge:0.0', '##s:4.601175078278175e-06', 'ahead:0.0', 'as:0.0', 'shire:0.0', 'surge:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1211, example: shell share price: standard life announce position against bg acquisition, prediction: 2, correct_label: 2, class_scores: [0.1881369 0.273467  0.5383961], word_scores: ['shell:0.0', 'share:0.0', 'price:0.0', '::0.0', 'standard:0.0', 'life:0.0', 'announce:0.0', 'position:0.0', 'against:0.0', 'b:0.0', '##g:0.0', 'acquisition:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('shell', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('standard', tensor(nan, device='cuda:0')), ('life', tensor(nan, device='cuda:0')), ('announce', tensor(nan, device='cuda:0')), ('position', tensor(nan, device='cuda:0')), ('against', tensor(nan, device='cuda:0')), ('bg', tensor(nan, device='cuda:0')), ('acquisition', tensor(nan, device='cuda:0'))],  word_scores_max: [('shell', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('standard', tensor(nan, device='cuda:0')), ('life', tensor(nan, device='cuda:0')), ('announce', tensor(nan, device='cuda:0')), ('position', tensor(nan, device='cuda:0')), ('against', tensor(nan, device='cuda:0')), ('bg', tensor(nan, device='cuda:0')), ('acquisition', tensor(nan, device='cuda:0'))]
idx: 1212, example: $esi on lows, down $1.50 to $2.50 bk a real possibility, prediction: 2, correct_label: 0, class_scores: [0.18600279 0.31772017 0.496277  ], word_scores: ['$:0.0', 'es:2.450917691021459e-06', '##i:0.0', 'on:0.0', 'low:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'down:0.0', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '50:0.0', 'to:2.886244146793615e-06', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '50:0.0', 'bk:0.0', 'a:8.62785782373976e-06', 'real:0.0', 'possibility:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('esi', tensor(0.0883, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('lows', tensor(0., device='cuda:0')), (',', tensor(0.2877, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1046, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('to', tensor(0.1040, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1046, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('bk', tensor(0., device='cuda:0')), ('a', tensor(0.3108, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('possibility', tensor(0., device='cuda:0'))],  word_scores_max: [('esi', tensor(0.0883, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('lows', tensor(0., device='cuda:0')), (',', tensor(0.2877, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1046, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('to', tensor(0.1040, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1046, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('bk', tensor(0., device='cuda:0')), ('a', tensor(0.3108, device='cuda:0')), ('real', tensor(0., device='cuda:0')), ('possibility', tensor(0., device='cuda:0'))]
idx: 1213, example: current holdings via options - long: $aapl $v $gs $aet & short: $vxx, prediction: 2, correct_label: 1, class_scores: [0.16971715 0.2650624  0.5652205 ], word_scores: ['current:0.0', 'holdings:0.0', 'via:0.0', 'options:0.0', '-:4.821180027647642e-06', 'long:0.0', '::0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '$:0.0', 'v:0.0', '$:0.0', 'gs:0.0', '$:0.0', 'ae:0.0', '##t:0.0', '&:0.0', 'short:0.0', '::0.0', '$:0.0', 'v:0.0', '##xx:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('current', tensor(0., device='cuda:0')), ('holdings', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('v', tensor(0., device='cuda:0')), ('gs', tensor(0., device='cuda:0')), ('aet', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('vxx', tensor(0., device='cuda:0'))],  word_scores_max: [('current', tensor(0., device='cuda:0')), ('holdings', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('v', tensor(0., device='cuda:0')), ('gs', tensor(0., device='cuda:0')), ('aet', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('vxx', tensor(0., device='cuda:0'))]
idx: 1214, example: $cost costco less than stellar day but it held the 50 day moving average, prediction: 2, correct_label: 2, class_scores: [0.16007993 0.324495   0.51542515], word_scores: ['$:0.0', 'cost:0.0', 'cost:0.0', '##co:0.0', 'less:0.0', 'than:0.0', 'stellar:0.0', 'day:0.0', 'but:0.0', 'it:3.3415778943890473e-06', 'held:0.0', 'the:6.3806996877247e-06', '50:0.0', 'day:0.0', 'moving:0.0', 'average:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('cost', tensor(0., device='cuda:0')), ('costco', tensor(0., device='cuda:0')), ('less', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('stellar', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('it', tensor(0.3437, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('the', tensor(0.6563, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('moving', tensor(0., device='cuda:0')), ('average', tensor(0., device='cuda:0'))],  word_scores_max: [('cost', tensor(0., device='cuda:0')), ('costco', tensor(0., device='cuda:0')), ('less', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('stellar', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('it', tensor(0.3437, device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('the', tensor(0.6563, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('moving', tensor(0., device='cuda:0')), ('average', tensor(0., device='cuda:0'))]
idx: 1215, example: @stocktwits: @kbkiwi: $tsla tesla model s sales exceed target, profitability guidance amended upward: , prediction: 2, correct_label: 1, class_scores: [0.20994632 0.33831742 0.45173633], word_scores: ['@:0.0', 'stock:0.0', '##t:0.0', '##wi:0.0', '##ts:0.0', '::0.0', '@:0.0', 'kb:0.0', '##ki:0.0', '##wi:0.0', '::0.0', '$:0.0', 'ts:0.0', '##la:0.0', 'tesla:0.0', 'model:0.0', 's:0.0', 'sales:0.0', 'exceed:0.0', 'target:0.0', ',:7.986737728060689e-06', 'profit:0.0', '##ability:0.0', 'guidance:0.0', 'amended:0.0', 'upward:0.0', '::0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('stocktwits', tensor(0., device='cuda:0')), ('kbkiwi', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('tesla', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('exceed', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), ('guidance', tensor(0., device='cuda:0')), ('amended', tensor(0., device='cuda:0')), ('upward', tensor(0., device='cuda:0'))],  word_scores_max: [('stocktwits', tensor(0., device='cuda:0')), ('kbkiwi', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('tesla', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('s', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('exceed', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('profitability', tensor(0., device='cuda:0')), ('guidance', tensor(0., device='cuda:0')), ('amended', tensor(0., device='cuda:0')), ('upward', tensor(0., device='cuda:0'))]
idx: 1216, example: long $x 24.62, prediction: 2, correct_label: 1, class_scores: [0.22838193 0.36828423 0.40333387], word_scores: ['long:0.0', '$:0.0', 'x:0.0', '24:0.0', '.:2.903296945078182e-06', '62:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('long', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('62', tensor(0., device='cuda:0'))],  word_scores_max: [('long', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('24', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('62', tensor(0., device='cuda:0'))]
idx: 1217, example: amazon has been selling surveillance cameras infected with malware $amzn #amazon   , prediction: 2, correct_label: 2, class_scores: [0.1558319  0.40013352 0.44403452], word_scores: ['amazon:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'selling:0.0', 'surveillance:0.0', 'cameras:0.0', 'infected:0.0', 'with:4.733654350275174e-06', 'mal:0.0', '##ware:0.0', '$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', '#:0.0', 'amazon:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('amazon', tensor(0., device='cuda:0')), ('has', tensor(0.5557, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('selling', tensor(0., device='cuda:0')), ('surveillance', tensor(0., device='cuda:0')), ('cameras', tensor(0., device='cuda:0')), ('infected', tensor(0., device='cuda:0')), ('with', tensor(0.4443, device='cuda:0')), ('malware', tensor(0., device='cuda:0')), ('amzn', tensor(0., device='cuda:0')), ('amazon', tensor(0., device='cuda:0'))],  word_scores_max: [('amazon', tensor(0., device='cuda:0')), ('has', tensor(0.5557, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('selling', tensor(0., device='cuda:0')), ('surveillance', tensor(0., device='cuda:0')), ('cameras', tensor(0., device='cuda:0')), ('infected', tensor(0., device='cuda:0')), ('with', tensor(0.4443, device='cuda:0')), ('malware', tensor(0., device='cuda:0')), ('amzn', tensor(0., device='cuda:0')), ('amazon', tensor(0., device='cuda:0'))]
idx: 1218, example: tesla: voluntary recall of 2,700 model x vehicles, due to back seat issue. $tsla , prediction: 2, correct_label: 2, class_scores: [0.2536282  0.28370517 0.46266663], word_scores: ['tesla:0.0', '::0.0', 'voluntary:0.0', 'recall:0.0', 'of:3.4365734791208524e-06', '2:0.0', ',:7.986737728060689e-06', '700:0.0', 'model:0.0', 'x:0.0', 'vehicles:0.0', ',:7.986737728060689e-06', 'due:0.0', 'to:2.886244146793615e-06', 'back:0.0', 'seat:0.0', 'issue:0.0', '.:2.903296945078182e-06', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tesla', tensor(0., device='cuda:0')), ('voluntary', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('of', tensor(0.1364, device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.3169, device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('vehicles', tensor(0., device='cuda:0')), (',', tensor(0.3169, device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.1145, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('seat', tensor(0., device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('.', tensor(0.1152, device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('tesla', tensor(0., device='cuda:0')), ('voluntary', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('of', tensor(0.1364, device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.3169, device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('vehicles', tensor(0., device='cuda:0')), (',', tensor(0.3169, device='cuda:0')), ('due', tensor(0., device='cuda:0')), ('to', tensor(0.1145, device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('seat', tensor(0., device='cuda:0')), ('issue', tensor(0., device='cuda:0')), ('.', tensor(0.1152, device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1219, example: $ctrp  breaking out here on good vol and a parser buy signal  ..noticed this on bob langs comments looking for 48 fast, prediction: 2, correct_label: 1, class_scores: [0.24341077 0.3126884  0.4439008 ], word_scores: ['$:0.0', 'ct:0.0', '##rp:0.0', 'breaking:0.0', 'out:0.0', 'here:0.0', 'on:0.0', 'good:0.0', 'vol:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'par:0.0', '##ser:0.0', 'buy:0.0', 'signal:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'noticed:0.0', 'this:0.0', 'on:0.0', 'bob:0.0', 'lang:0.0', '##s:4.601175078278175e-06', 'comments:0.0', 'looking:0.0', 'for:0.0', '48:0.0', 'fast:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ctrp', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('vol', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.5977, device='cuda:0')), ('parser', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('.', tensor(0.2011, device='cuda:0')), ('.', tensor(0.2011, device='cuda:0')), ('noticed', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('bob', tensor(0., device='cuda:0')), ('langs', tensor(0., device='cuda:0')), ('comments', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('fast', tensor(0., device='cuda:0'))],  word_scores_max: [('ctrp', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('vol', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.5977, device='cuda:0')), ('parser', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('.', tensor(0.2011, device='cuda:0')), ('.', tensor(0.2011, device='cuda:0')), ('noticed', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('bob', tensor(0., device='cuda:0')), ('langs', tensor(0., device='cuda:0')), ('comments', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('48', tensor(0., device='cuda:0')), ('fast', tensor(0., device='cuda:0'))]
idx: 1220, example: gsk joins china trade push as uk trumpets healthcare deals, prediction: 1, correct_label: 2, class_scores: [0.23656256 0.45205757 0.31137988], word_scores: ['gs:0.0', '##k:0.0', 'joins:0.0', 'china:0.0', 'trade:0.0', 'push:0.0', 'as:0.0', 'uk:0.0', 'trumpets:0.0', 'healthcare:0.0', 'deals:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gsk', tensor(nan, device='cuda:0')), ('joins', tensor(nan, device='cuda:0')), ('china', tensor(nan, device='cuda:0')), ('trade', tensor(nan, device='cuda:0')), ('push', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('uk', tensor(nan, device='cuda:0')), ('trumpets', tensor(nan, device='cuda:0')), ('healthcare', tensor(nan, device='cuda:0')), ('deals', tensor(nan, device='cuda:0'))],  word_scores_max: [('gsk', tensor(nan, device='cuda:0')), ('joins', tensor(nan, device='cuda:0')), ('china', tensor(nan, device='cuda:0')), ('trade', tensor(nan, device='cuda:0')), ('push', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('uk', tensor(nan, device='cuda:0')), ('trumpets', tensor(nan, device='cuda:0')), ('healthcare', tensor(nan, device='cuda:0')), ('deals', tensor(nan, device='cuda:0'))]
idx: 1221, example: investors remain skeptical about shell-bg deal, prediction: 2, correct_label: 2, class_scores: [0.22947156 0.38297337 0.38755512], word_scores: ['investors:0.0', 'remain:0.0', 'skeptical:0.0', 'about:0.0', 'shell:0.0', '-:4.821180027647642e-06', 'b:0.0', '##g:0.0', 'deal:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('investors', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('skeptical', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('bg', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0'))],  word_scores_max: [('investors', tensor(0., device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('skeptical', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('bg', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0'))]
idx: 1222, example: why $mcd looks set to fall further. , prediction: 2, correct_label: 0, class_scores: [0.21804652 0.2906098  0.49134365], word_scores: ['why:0.0', '$:0.0', 'mc:0.0', '##d:0.0', 'looks:0.0', 'set:0.0', 'to:2.886244146793615e-06', 'fall:0.0', 'further:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('why', tensor(0., device='cuda:0')), ('mcd', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0'))],  word_scores_max: [('why', tensor(0., device='cuda:0')), ('mcd', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0'))]
idx: 1223, example: $spy less than 0.2% down and people are calling it bearish. some heading for exits already. maybe 1% down will be "the crash"? disturbing!, prediction: 1, correct_label: 2, class_scores: [0.19682854 0.40199125 0.4011802 ], word_scores: ['$:0.0', 'spy:0.0', 'less:0.0', 'than:0.0', '0:0.0', '.:2.903296945078182e-06', '2:0.0', '%:0.0', 'down:0.0', 'and:0.0', 'people:0.0', 'are:0.0', 'calling:0.0', 'it:3.3415778943890473e-06', 'bear:0.0', '##ish:0.0', '.:2.903296945078182e-06', 'some:0.0', 'heading:0.0', 'for:0.0', 'exits:0.0', 'already:0.0', '.:2.903296945078182e-06', 'maybe:0.0', '1:0.0', '%:0.0', 'down:0.0', 'will:4.073096533829812e-06', 'be:0.0', '":0.0', 'the:6.3806996877247e-06', 'crash:0.0', '":0.0', '?:0.0', 'disturbing:0.0', '!:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('spy', tensor(0., device='cuda:0')), ('less', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.1290, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('calling', tensor(0., device='cuda:0')), ('it', tensor(0.1485, device='cuda:0')), ('bearish', tensor(0., device='cuda:0')), ('.', tensor(0.1290, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('heading', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('exits', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('.', tensor(0.1290, device='cuda:0')), ('maybe', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('will', tensor(0.1810, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.2835, device='cuda:0')), ('crash', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('disturbing', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('less', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.1290, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('people', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('calling', tensor(0., device='cuda:0')), ('it', tensor(0.1485, device='cuda:0')), ('bearish', tensor(0., device='cuda:0')), ('.', tensor(0.1290, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('heading', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('exits', tensor(0., device='cuda:0')), ('already', tensor(0., device='cuda:0')), ('.', tensor(0.1290, device='cuda:0')), ('maybe', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('will', tensor(0.1810, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('the', tensor(0.2835, device='cuda:0')), ('crash', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('disturbing', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1224, example: eli lilly & co. (lly) has broken out to a new high on astrazeneca collaboration, prediction: 2, correct_label: 1, class_scores: [0.2518185  0.27825356 0.46992797], word_scores: ['eli:0.0', 'lilly:0.0', '&:0.0', 'co:0.0', '.:2.903296945078182e-06', '(:0.0', 'll:0.0', '##y:1.832826342251792e-06', '):0.0', 'has:5.9214244174654596e-06', 'broken:0.0', 'out:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'high:0.0', 'on:0.0', 'as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'collaboration:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('eli', tensor(0., device='cuda:0')), ('lilly', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('.', tensor(0.1255, device='cuda:0')), ('lly', tensor(0., device='cuda:0')), ('has', tensor(0.2559, device='cuda:0')), ('broken', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.1247, device='cuda:0')), ('a', tensor(0.3729, device='cuda:0')), ('new', tensor(0.1210, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('collaboration', tensor(0., device='cuda:0'))],  word_scores_max: [('eli', tensor(0., device='cuda:0')), ('lilly', tensor(0., device='cuda:0')), ('co', tensor(0., device='cuda:0')), ('.', tensor(0.1255, device='cuda:0')), ('lly', tensor(0., device='cuda:0')), ('has', tensor(0.2559, device='cuda:0')), ('broken', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('to', tensor(0.1247, device='cuda:0')), ('a', tensor(0.3729, device='cuda:0')), ('new', tensor(0.1210, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('collaboration', tensor(0., device='cuda:0'))]
idx: 1225, example: $axdx i got bored, and took my proprietary profit exit. i didn't like the option liquidity and lousy spreads., prediction: 2, correct_label: 0, class_scores: [0.12629431 0.32706434 0.5466414 ], word_scores: ['$:0.0', 'ax:0.0', '##d:0.0', '##x:0.0', 'i:0.0', 'got:0.0', 'bored:0.0', ',:7.986737728060689e-06', 'and:0.0', 'took:0.0', 'my:0.0', 'proprietary:0.0', 'profit:0.0', 'exit:0.0', '.:2.903296945078182e-06', 'i:0.0', 'didn:0.0', "':0.0", 't:0.0', 'like:0.0', 'the:6.3806996877247e-06', 'option:0.0', 'liquid:0.0', '##ity:0.0', 'and:0.0', 'lou:0.0', '##sy:0.0', 'spreads:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('axdx', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('bored', tensor(0., device='cuda:0')), (',', tensor(0.7334, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('took', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('proprietary', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('exit', tensor(0., device='cuda:0')), ('.', tensor(0.2666, device='cuda:0')), ('i', tensor(0., device='cuda:0'))],  word_scores_max: [('axdx', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('bored', tensor(0., device='cuda:0')), (',', tensor(0.7334, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('took', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('proprietary', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('exit', tensor(0., device='cuda:0')), ('.', tensor(0.2666, device='cuda:0')), ('i', tensor(0., device='cuda:0'))]
idx: 1226, example: maybe closing all those $aapl calls i had this morning was a bad idea, money left on the table..., prediction: 2, correct_label: 1, class_scores: [0.23092626 0.32351744 0.44555625], word_scores: ['maybe:0.0', 'closing:0.0', 'all:0.0', 'those:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', 'calls:0.0', 'i:0.0', 'had:0.0', 'this:0.0', 'morning:0.0', 'was:0.0', 'a:8.62785782373976e-06', 'bad:0.0', 'idea:0.0', ',:7.986737728060689e-06', 'money:0.0', 'left:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'table:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('maybe', tensor(0., device='cuda:0')), ('closing', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('a', tensor(0.2721, device='cuda:0')), ('bad', tensor(0., device='cuda:0')), ('idea', tensor(0., device='cuda:0')), (',', tensor(0.2519, device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('left', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2013, device='cuda:0')), ('table', tensor(0., device='cuda:0')), ('.', tensor(0.0916, device='cuda:0')), ('.', tensor(0.0916, device='cuda:0')), ('.', tensor(0.0916, device='cuda:0'))],  word_scores_max: [('maybe', tensor(0., device='cuda:0')), ('closing', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('those', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('a', tensor(0.2721, device='cuda:0')), ('bad', tensor(0., device='cuda:0')), ('idea', tensor(0., device='cuda:0')), (',', tensor(0.2519, device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('left', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2013, device='cuda:0')), ('table', tensor(0., device='cuda:0')), ('.', tensor(0.0916, device='cuda:0')), ('.', tensor(0.0916, device='cuda:0')), ('.', tensor(0.0916, device='cuda:0'))]
idx: 1227, example: $bbry sierra. has a great cash balance and impressive growth rate.would be a wonderful marriage!, prediction: 2, correct_label: 1, class_scores: [0.29750487 0.30355057 0.39894453], word_scores: ['$:0.0', 'bb:0.0', '##ry:0.0', 'sierra:0.0', '.:2.903296945078182e-06', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'great:0.0', 'cash:0.0', 'balance:0.0', 'and:0.0', 'impressive:0.0', 'growth:0.0', 'rate:0.0', '.:2.903296945078182e-06', 'would:2.0953068542439723e-06', 'be:0.0', 'a:8.62785782373976e-06', 'wonderful:0.0', 'marriage:0.0', '!:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('bbry', tensor(0., device='cuda:0')), ('sierra', tensor(0., device='cuda:0')), ('.', tensor(0.0934, device='cuda:0')), ('has', tensor(0.1905, device='cuda:0')), ('a', tensor(0.2776, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('balance', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('impressive', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0')), ('.', tensor(0.0934, device='cuda:0')), ('would', tensor(0.0674, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.2776, device='cuda:0')), ('wonderful', tensor(0., device='cuda:0')), ('marriage', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('bbry', tensor(0., device='cuda:0')), ('sierra', tensor(0., device='cuda:0')), ('.', tensor(0.0934, device='cuda:0')), ('has', tensor(0.1905, device='cuda:0')), ('a', tensor(0.2776, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('balance', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('impressive', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0')), ('.', tensor(0.0934, device='cuda:0')), ('would', tensor(0.0674, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('a', tensor(0.2776, device='cuda:0')), ('wonderful', tensor(0., device='cuda:0')), ('marriage', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1228, example: l&g still paying price for dividend cut during crisis, chief says, prediction: 2, correct_label: 0, class_scores: [0.2175916  0.3370968  0.44531155], word_scores: ['l:0.0', '&:0.0', 'g:0.0', 'still:0.0', 'paying:0.0', 'price:0.0', 'for:0.0', 'divide:0.0', '##nd:0.0', 'cut:0.0', 'during:0.0', 'crisis:0.0', ',:7.986737728060689e-06', 'chief:0.0', 'says:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('l', tensor(0., device='cuda:0')), ('g', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('paying', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('crisis', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0'))],  word_scores_max: [('l', tensor(0., device='cuda:0')), ('g', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('paying', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('during', tensor(0., device='cuda:0')), ('crisis', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('chief', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0'))]
idx: 1229, example: $slv pos, been saying it for 2 years. going lower. forget about it or go short., prediction: 2, correct_label: 0, class_scores: [0.21300647 0.3427469  0.44424653], word_scores: ['$:0.0', 'sl:0.0', '##v:0.0', 'po:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'been:0.0', 'saying:0.0', 'it:3.3415778943890473e-06', 'for:0.0', '2:0.0', 'years:0.0', '.:2.903296945078182e-06', 'going:0.0', 'lower:0.0', '.:2.903296945078182e-06', 'forget:0.0', 'about:0.0', 'it:3.3415778943890473e-06', 'or:0.0', 'go:0.0', 'short:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('slv', tensor(0., device='cuda:0')), ('pos', tensor(0., device='cuda:0')), (',', tensor(0.3416, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('saying', tensor(0., device='cuda:0')), ('it', tensor(0.1429, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('.', tensor(0.1242, device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('.', tensor(0.1242, device='cuda:0')), ('forget', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('it', tensor(0.1429, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('.', tensor(0.1242, device='cuda:0'))],  word_scores_max: [('slv', tensor(0., device='cuda:0')), ('pos', tensor(0., device='cuda:0')), (',', tensor(0.3416, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('saying', tensor(0., device='cuda:0')), ('it', tensor(0.1429, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('.', tensor(0.1242, device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('.', tensor(0.1242, device='cuda:0')), ('forget', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('it', tensor(0.1429, device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('.', tensor(0.1242, device='cuda:0'))]
idx: 1230, example: this $bbby stock options trade would have more than doubled your money  via @thestreet, prediction: 2, correct_label: 2, class_scores: [0.2717853  0.32204092 0.4061738 ], word_scores: ['this:0.0', '$:0.0', 'bb:0.0', '##by:0.0', 'stock:0.0', 'options:0.0', 'trade:0.0', 'would:2.0953068542439723e-06', 'have:2.910326429628185e-06', 'more:0.0', 'than:0.0', 'doubled:0.0', 'your:0.0', 'money:0.0', 'via:0.0', '@:0.0', 'the:6.3806996877247e-06', '##st:0.0', '##ree:0.0', '##t:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('this', tensor(0., device='cuda:0')), ('bbby', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('would', tensor(0.1840, device='cuda:0')), ('have', tensor(0.2556, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('doubled', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('thestreet', tensor(0.5604, device='cuda:0'))],  word_scores_max: [('this', tensor(0., device='cuda:0')), ('bbby', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('options', tensor(0., device='cuda:0')), ('trade', tensor(0., device='cuda:0')), ('would', tensor(0.1840, device='cuda:0')), ('have', tensor(0.2556, device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('doubled', tensor(0., device='cuda:0')), ('your', tensor(0., device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('thestreet', tensor(0.5604, device='cuda:0'))]
idx: 1231, example: tesco, asda sales fall as march of the discounters continues-kantar, prediction: 1, correct_label: 0, class_scores: [0.25182757 0.4033563  0.34481615], word_scores: ['te:0.0', '##sco:0.0', ',:7.986737728060689e-06', 'as:0.0', '##da:0.0', 'sales:0.0', 'fall:0.0', 'as:0.0', 'march:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'discount:0.0', '##ers:5.0093617574020755e-06', 'continues:0.0', '-:4.821180027647642e-06', 'kant:0.0', '##ar:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(0., device='cuda:0')), (',', tensor(0.3530, device='cuda:0')), ('asda', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('of', tensor(0.1519, device='cuda:0')), ('the', tensor(0.2820, device='cuda:0')), ('discounters', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('-', tensor(0.2131, device='cuda:0')), ('kantar', tensor(0., device='cuda:0'))],  word_scores_max: [('tesco', tensor(0., device='cuda:0')), (',', tensor(0.3530, device='cuda:0')), ('asda', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('of', tensor(0.1519, device='cuda:0')), ('the', tensor(0.2820, device='cuda:0')), ('discounters', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('-', tensor(0.2131, device='cuda:0')), ('kantar', tensor(0., device='cuda:0'))]
idx: 1232, example: $camt looks like might break down. i'm out, prediction: 2, correct_label: 0, class_scores: [0.30599385 0.25790676 0.43609944], word_scores: ['$:0.0', 'cam:0.0', '##t:0.0', 'looks:0.0', 'like:0.0', 'might:0.0', 'break:0.0', 'down:0.0', '.:2.903296945078182e-06', 'i:0.0', "':0.0", 'm:0.0', 'out:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('camt', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('might', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('camt', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('might', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1233, example: $acad under $2 today?, prediction: 2, correct_label: 2, class_scores: [0.17808236 0.36873198 0.45318565], word_scores: ['$:0.0', 'ac:0.0', '##ad:0.0', 'under:0.0', '$:0.0', '2:0.0', 'today:0.0', '?:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('acad', tensor(nan, device='cuda:0')), ('under', tensor(nan, device='cuda:0')), ('2', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('?', tensor(nan, device='cuda:0'))],  word_scores_max: [('acad', tensor(nan, device='cuda:0')), ('under', tensor(nan, device='cuda:0')), ('2', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('?', tensor(nan, device='cuda:0'))]
idx: 1234, example: @acinvestorblog: $spy eod run :), prediction: 2, correct_label: 1, class_scores: [0.19986092 0.23846106 0.561678  ], word_scores: ['@:0.0', 'ac:0.0', '##in:0.0', '##ves:0.0', '##tor:0.0', '##bl:0.0', '##og:0.0', '::0.0', '$:0.0', 'spy:0.0', 'e:0.0', '##od:0.0', 'run:0.0', '::0.0', '):0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('acinvestorblog', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('eod', tensor(nan, device='cuda:0')), ('run', tensor(nan, device='cuda:0'))],  word_scores_max: [('acinvestorblog', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('eod', tensor(nan, device='cuda:0')), ('run', tensor(nan, device='cuda:0'))]
idx: 1235, example: news feedftse 100 movers: ashtead jumps on strong interims; glencore, bp in ..., prediction: 2, correct_label: 1, class_scores: [0.22134909 0.3822251  0.3964258 ], word_scores: ['news:0.0', 'feed:0.0', '##ft:0.0', '##se:0.0', '100:0.0', 'move:0.0', '##rs:0.0', '::0.0', 'ash:0.0', '##tead:0.0', 'jumps:0.0', 'on:0.0', 'strong:0.0', 'interim:0.0', '##s:4.601175078278175e-06', ';:0.0', 'glen:0.0', '##core:0.0', ',:7.986737728060689e-06', 'bp:0.0', 'in:3.0217122457543155e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('news', tensor(0., device='cuda:0')), ('feedftse', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('movers', tensor(0., device='cuda:0')), ('ashtead', tensor(0., device='cuda:0')), ('jumps', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('interims', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('glencore', tensor(0., device='cuda:0')), (',', tensor(0.4050, device='cuda:0')), ('bp', tensor(0., device='cuda:0')), ('in', tensor(0.1532, device='cuda:0')), ('.', tensor(0.1472, device='cuda:0')), ('.', tensor(0.1472, device='cuda:0')), ('.', tensor(0.1472, device='cuda:0'))],  word_scores_max: [('news', tensor(0., device='cuda:0')), ('feedftse', tensor(0., device='cuda:0')), ('100', tensor(0., device='cuda:0')), ('movers', tensor(0., device='cuda:0')), ('ashtead', tensor(0., device='cuda:0')), ('jumps', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('interims', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('glencore', tensor(0., device='cuda:0')), (',', tensor(0.4050, device='cuda:0')), ('bp', tensor(0., device='cuda:0')), ('in', tensor(0.1532, device='cuda:0')), ('.', tensor(0.1472, device='cuda:0')), ('.', tensor(0.1472, device='cuda:0')), ('.', tensor(0.1472, device='cuda:0'))]
idx: 1236, example: windows 10 is awful why did it force an upgrade on my pc without my consent? #windows #microsoft $msft, prediction: 2, correct_label: 0, class_scores: [0.15606585 0.38434124 0.45959294], word_scores: ['windows:0.0', '10:0.0', 'is:0.0', 'awful:0.0', 'why:0.0', 'did:0.0', 'it:3.3415778943890473e-06', 'force:0.0', 'an:0.0', 'upgrade:0.0', 'on:0.0', 'my:0.0', 'pc:0.0', 'without:0.0', 'my:0.0', 'consent:0.0', '?:0.0', '#:0.0', 'windows:0.0', '#:0.0', 'microsoft:0.0', '$:0.0', 'ms:0.0', '##ft:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('windows', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('awful', tensor(0., device='cuda:0')), ('why', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('it', tensor(1., device='cuda:0')), ('force', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('upgrade', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('pc', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('consent', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('windows', tensor(0., device='cuda:0')), ('microsoft', tensor(0., device='cuda:0')), ('msft', tensor(0., device='cuda:0'))],  word_scores_max: [('windows', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('awful', tensor(0., device='cuda:0')), ('why', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('it', tensor(1., device='cuda:0')), ('force', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('upgrade', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('pc', tensor(0., device='cuda:0')), ('without', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('consent', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('windows', tensor(0., device='cuda:0')), ('microsoft', tensor(0., device='cuda:0')), ('msft', tensor(0., device='cuda:0'))]
idx: 1237, example: glencore chief blames rivals' overproduction for share price fall, prediction: 2, correct_label: 2, class_scores: [0.21956962 0.3156965  0.46473393], word_scores: ['glen:0.0', '##core:0.0', 'chief:0.0', 'blame:0.0', '##s:4.601175078278175e-06', 'rivals:0.0', "':0.0", 'over:0.0', '##pro:0.0', '##duction:0.0', 'for:0.0', 'share:0.0', 'price:0.0', 'fall:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('glencore', tensor(nan, device='cuda:0')), ('chief', tensor(nan, device='cuda:0')), ('blames', tensor(nan, device='cuda:0'))],  word_scores_max: [('glencore', tensor(nan, device='cuda:0')), ('chief', tensor(nan, device='cuda:0')), ('blames', tensor(nan, device='cuda:0'))]
idx: 1238, example: $rost nov 90 calls 2.08 .. go long until exp imo ! unless europeans keeps f'ing around !, prediction: 2, correct_label: 1, class_scores: [0.1909911  0.29760945 0.5113995 ], word_scores: ['$:0.0', 'ro:0.0', '##st:0.0', 'nov:0.0', '90:0.0', 'calls:0.0', '2:0.0', '.:2.903296945078182e-06', '08:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'go:0.0', 'long:0.0', 'until:0.0', 'ex:0.0', '##p:0.0', 'im:0.0', '##o:0.0', '!:0.0', 'unless:0.0', 'europeans:0.0', 'keeps:0.0', 'f:0.0', "':0.0", 'ing:0.0', 'around:0.0', '!:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rost', tensor(0., device='cuda:0')), ('nov', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('08', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('exp', tensor(0., device='cuda:0')), ('imo', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('unless', tensor(0., device='cuda:0')), ('europeans', tensor(0., device='cuda:0')), ('keeps', tensor(0., device='cuda:0'))],  word_scores_max: [('rost', tensor(0., device='cuda:0')), ('nov', tensor(0., device='cuda:0')), ('90', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('08', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('until', tensor(0., device='cuda:0')), ('exp', tensor(0., device='cuda:0')), ('imo', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('unless', tensor(0., device='cuda:0')), ('europeans', tensor(0., device='cuda:0')), ('keeps', tensor(0., device='cuda:0'))]
idx: 1239, example: astrazeneca sells us drug rights to perrigo for $380 mln, prediction: 2, correct_label: 2, class_scores: [0.18186845 0.3437107  0.4744208 ], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'sells:0.0', 'us:0.0', 'drug:0.0', 'rights:0.0', 'to:2.886244146793615e-06', 'per:0.0', '##ri:0.0', '##go:0.0', 'for:0.0', '$:0.0', '380:0.0', 'ml:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('perrigo', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('380', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('rights', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('perrigo', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('380', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0'))]
idx: 1240, example: brief-aviva aims to increase dividend pay-out ratio to 50 pct in 2017, prediction: 1, correct_label: 1, class_scores: [0.2447879  0.3994392  0.35577288], word_scores: ['brief:0.0', '-:4.821180027647642e-06', 'aviv:0.0', '##a:3.804580501309829e-06', 'aims:0.0', 'to:2.886244146793615e-06', 'increase:0.0', 'divide:0.0', '##nd:0.0', 'pay:0.0', '-:4.821180027647642e-06', 'out:0.0', 'ratio:0.0', 'to:2.886244146793615e-06', '50:0.0', 'pc:0.0', '##t:0.0', 'in:3.0217122457543155e-06', '2017:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('brief', tensor(0., device='cuda:0')), ('-', tensor(0.2615, device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.1566, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('-', tensor(0.2615, device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('ratio', tensor(0., device='cuda:0')), ('to', tensor(0.1566, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('in', tensor(0.1639, device='cuda:0')), ('2017', tensor(0., device='cuda:0'))],  word_scores_max: [('brief', tensor(0., device='cuda:0')), ('-', tensor(0.2615, device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('aims', tensor(0., device='cuda:0')), ('to', tensor(0.1566, device='cuda:0')), ('increase', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('-', tensor(0.2615, device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('ratio', tensor(0., device='cuda:0')), ('to', tensor(0.1566, device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0')), ('in', tensor(0.1639, device='cuda:0')), ('2017', tensor(0., device='cuda:0'))]
idx: 1241, example: $rad i would consider this opportunity to add my position because the company is on the right track they are still improving sales..., prediction: 2, correct_label: 1, class_scores: [0.24088821 0.3207116  0.43840015], word_scores: ['$:0.0', 'ra:0.0', '##d:0.0', 'i:0.0', 'would:2.0953068542439723e-06', 'consider:0.0', 'this:0.0', 'opportunity:0.0', 'to:2.886244146793615e-06', 'add:0.0', 'my:0.0', 'position:0.0', 'because:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', 'is:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'right:0.0', 'track:0.0', 'they:0.0', 'are:0.0', 'still:0.0', 'improving:0.0', 'sales:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rad', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('would', tensor(0.0632, device='cuda:0')), ('consider', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('opportunity', tensor(0., device='cuda:0')), ('to', tensor(0.0871, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('because', tensor(0., device='cuda:0')), ('the', tensor(0.1925, device='cuda:0')), ('company', tensor(0.2020, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1925, device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('track', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('improving', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('.', tensor(0.0876, device='cuda:0')), ('.', tensor(0.0876, device='cuda:0')), ('.', tensor(0.0876, device='cuda:0'))],  word_scores_max: [('rad', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('would', tensor(0.0632, device='cuda:0')), ('consider', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('opportunity', tensor(0., device='cuda:0')), ('to', tensor(0.0871, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('because', tensor(0., device='cuda:0')), ('the', tensor(0.1925, device='cuda:0')), ('company', tensor(0.2020, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.1925, device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('track', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('improving', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('.', tensor(0.0876, device='cuda:0')), ('.', tensor(0.0876, device='cuda:0')), ('.', tensor(0.0876, device='cuda:0'))]
idx: 1242, example: tesco criticised for 'disgraceful' advert showing domestic worker being slapped, prediction: 2, correct_label: 0, class_scores: [0.1758797  0.36121014 0.46291018], word_scores: ['te:0.0', '##sco:0.0', 'criticised:0.0', 'for:0.0', "':0.0", 'disgrace:0.0', '##ful:0.0', "':0.0", 'ad:0.0', '##vert:0.0', 'showing:0.0', 'domestic:0.0', 'worker:0.0', 'being:0.0', 'slapped:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(nan, device='cuda:0')), ('criticised', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0')), ('criticised', tensor(nan, device='cuda:0'))]
idx: 1243, example: nine banks including barclays, citi, agree to pay $2 billion to settle forex ..., prediction: 2, correct_label: 0, class_scores: [0.22382642 0.37681866 0.399355  ], word_scores: ['nine:0.0', 'banks:0.0', 'including:0.0', 'barclay:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'ci:0.0', '##ti:2.5915114747476764e-06', ',:7.986737728060689e-06', 'agree:0.0', 'to:2.886244146793615e-06', 'pay:0.0', '$:0.0', '2:0.0', 'billion:0.0', 'to:2.886244146793615e-06', 'settle:0.0', 'fore:0.0', '##x:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nine', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), (',', tensor(0.2622, device='cuda:0')), ('citi', tensor(0., device='cuda:0')), (',', tensor(0.2622, device='cuda:0')), ('agree', tensor(0., device='cuda:0')), ('to', tensor(0.0948, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('to', tensor(0.0948, device='cuda:0')), ('settle', tensor(0., device='cuda:0')), ('forex', tensor(0., device='cuda:0')), ('.', tensor(0.0953, device='cuda:0')), ('.', tensor(0.0953, device='cuda:0')), ('.', tensor(0.0953, device='cuda:0'))],  word_scores_max: [('nine', tensor(0., device='cuda:0')), ('banks', tensor(0., device='cuda:0')), ('including', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), (',', tensor(0.2622, device='cuda:0')), ('citi', tensor(0., device='cuda:0')), (',', tensor(0.2622, device='cuda:0')), ('agree', tensor(0., device='cuda:0')), ('to', tensor(0.0948, device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('to', tensor(0.0948, device='cuda:0')), ('settle', tensor(0., device='cuda:0')), ('forex', tensor(0., device='cuda:0')), ('.', tensor(0.0953, device='cuda:0')), ('.', tensor(0.0953, device='cuda:0')), ('.', tensor(0.0953, device='cuda:0'))]
idx: 1244, example: so as of today's close (8/15/14), i'm long $tsla $amtd $twtr $fb $aapl $celg - all on a longer-term, technical swing long basis., prediction: 2, correct_label: 1, class_scores: [0.18202919 0.37318605 0.4447848 ], word_scores: ['so:0.0', 'as:0.0', 'of:3.4365734791208524e-06', 'today:0.0', "':0.0", 's:0.0', 'close:0.0', '(:0.0', '8:0.0', '/:0.0', '15:0.0', '/:0.0', '14:0.0', '):0.0', ',:7.986737728060689e-06', 'i:0.0', "':0.0", 'm:0.0', 'long:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '$:0.0', 'am:0.0', '##t:0.0', '##d:0.0', '$:0.0', 't:0.0', '##wt:0.0', '##r:0.0', '$:0.0', 'f:0.0', '##b:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '$:0.0', 'ce:0.0', '##l:0.0', '##g:0.0', '-:4.821180027647642e-06', 'all:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'longer:0.0', '-:4.821180027647642e-06', 'term:0.0', ',:7.986737728060689e-06', 'technical:0.0', 'swing:0.0', 'long:0.0', 'basis:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('so', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))],  word_scores_max: [('so', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('of', tensor(1., device='cuda:0'))]
idx: 1245, example: buffett's berkshire builds deere stake, dumps exxon, prediction: 1, correct_label: 2, class_scores: [0.26737612 0.36883584 0.36378804], word_scores: ['buffet:0.0', '##t:0.0', "':0.0", 's:0.0', 'berkshire:0.0', 'builds:0.0', 'deer:0.0', '##e:0.0', 'stake:0.0', ',:7.986737728060689e-06', 'dump:0.0', '##s:4.601175078278175e-06', 'ex:0.0', '##xon:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1246, example: $ebay  e-bay bay!  working on a couple daily dojis .. should continue to the downside  , prediction: 2, correct_label: 0, class_scores: [0.19066335 0.35811996 0.45121673], word_scores: ['$:0.0', 'e:0.0', '##bay:0.0', 'e:0.0', '-:4.821180027647642e-06', 'bay:0.0', 'bay:0.0', '!:0.0', 'working:0.0', 'on:0.0', 'a:8.62785782373976e-06', 'couple:0.0', 'daily:0.0', 'do:0.0', '##ji:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'should:0.0', 'continue:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'downs:0.0', '##ide:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ebay', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.1690, device='cuda:0')), ('bay', tensor(0., device='cuda:0')), ('bay', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.3025, device='cuda:0')), ('couple', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('dojis', tensor(0., device='cuda:0')), ('.', tensor(0.1018, device='cuda:0')), ('.', tensor(0.1018, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1012, device='cuda:0')), ('the', tensor(0.2237, device='cuda:0')), ('downside', tensor(0., device='cuda:0'))],  word_scores_max: [('ebay', tensor(0., device='cuda:0')), ('e', tensor(0., device='cuda:0')), ('-', tensor(0.1690, device='cuda:0')), ('bay', tensor(0., device='cuda:0')), ('bay', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('a', tensor(0.3025, device='cuda:0')), ('couple', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('dojis', tensor(0., device='cuda:0')), ('.', tensor(0.1018, device='cuda:0')), ('.', tensor(0.1018, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1012, device='cuda:0')), ('the', tensor(0.2237, device='cuda:0')), ('downside', tensor(0., device='cuda:0'))]
idx: 1247, example: $aapl wants lower. up waves getting smaller on the 2 min, prediction: 1, correct_label: 0, class_scores: [0.29172975 0.36118934 0.34708092], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'wants:0.0', 'lower:0.0', '.:2.903296945078182e-06', 'up:1.4959460941099678e-06', 'waves:0.0', 'getting:0.0', 'smaller:0.0', 'on:0.0', 'the:6.3806996877247e-06', '2:0.0', 'min:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('.', tensor(0.2693, device='cuda:0')), ('up', tensor(0.1388, device='cuda:0')), ('waves', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('smaller', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5919, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('min', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('.', tensor(0.2693, device='cuda:0')), ('up', tensor(0.1388, device='cuda:0')), ('waves', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('smaller', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5919, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('min', tensor(0., device='cuda:0'))]
idx: 1248, example: $fb $aapl $nke $jwn bearish charts keep getting worse., prediction: 1, correct_label: 0, class_scores: [0.23202834 0.41801605 0.34995562], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '$:0.0', 'nk:0.0', '##e:0.0', '$:0.0', 'j:0.0', '##wn:0.0', 'bear:0.0', '##ish:0.0', 'charts:0.0', 'keep:0.0', 'getting:0.0', 'worse:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fb', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('nke', tensor(0., device='cuda:0')), ('jwn', tensor(0., device='cuda:0')), ('bearish', tensor(0., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('worse', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('nke', tensor(0., device='cuda:0')), ('jwn', tensor(0., device='cuda:0')), ('bearish', tensor(0., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('worse', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1249, example: $vrtx early technical buy signal... for confirmation > 86 it needs some fundam. incentive , prediction: 2, correct_label: 1, class_scores: [0.19393423 0.3414494  0.46461633], word_scores: ['$:0.0', 'vr:0.0', '##t:0.0', '##x:0.0', 'early:0.0', 'technical:0.0', 'buy:0.0', 'signal:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'for:0.0', 'confirmation:0.0', '>:0.0', '86:0.0', 'it:3.3415778943890473e-06', 'needs:0.0', 'some:0.0', 'fund:0.0', '##am:0.0', '.:2.903296945078182e-06', 'incentive:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('vrtx', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('confirmation', tensor(0., device='cuda:0')), ('86', tensor(0., device='cuda:0')), ('it', tensor(0.2234, device='cuda:0')), ('needs', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('fundam', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('incentive', tensor(0., device='cuda:0'))],  word_scores_max: [('vrtx', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('confirmation', tensor(0., device='cuda:0')), ('86', tensor(0., device='cuda:0')), ('it', tensor(0.2234, device='cuda:0')), ('needs', tensor(0., device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('fundam', tensor(0., device='cuda:0')), ('.', tensor(0.1941, device='cuda:0')), ('incentive', tensor(0., device='cuda:0'))]
idx: 1250, example: apple inc.: the rip-roaring rally is just beginning! (aapl) | investorplace $aapl , prediction: 2, correct_label: 1, class_scores: [0.17871623 0.3315239  0.48975986], word_scores: ['apple:0.0', 'inc:0.0', '.:2.903296945078182e-06', '::0.0', 'the:6.3806996877247e-06', 'rip:0.0', '-:4.821180027647642e-06', 'roaring:0.0', 'rally:0.0', 'is:0.0', 'just:0.0', 'beginning:0.0', '!:0.0', '(:0.0', 'aa:0.0', '##pl:0.0', '):0.0', '|:0.0', 'investor:0.0', '##pl:0.0', '##ace:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('apple', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.2058, device='cuda:0')), ('the', tensor(0.4524, device='cuda:0')), ('rip', tensor(0., device='cuda:0')), ('-', tensor(0.3418, device='cuda:0')), ('roaring', tensor(0., device='cuda:0')), ('rally', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('investorplace', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))],  word_scores_max: [('apple', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('.', tensor(0.2058, device='cuda:0')), ('the', tensor(0.4524, device='cuda:0')), ('rip', tensor(0., device='cuda:0')), ('-', tensor(0.3418, device='cuda:0')), ('roaring', tensor(0., device='cuda:0')), ('rally', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('beginning', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('investorplace', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))]
idx: 1251, example: 5 best analyst rated stocks in last 72hrs: $orcl $aapl $cbs $ino $cpxx view all ratings here: , prediction: 1, correct_label: 1, class_scores: [0.24005315 0.40092766 0.35901916], word_scores: ['5:0.0', 'best:0.0', 'analyst:0.0', 'rated:0.0', 'stocks:0.0', 'in:3.0217122457543155e-06', 'last:0.0', '72:0.0', '##hr:0.0', '##s:4.601175078278175e-06', '::0.0', '$:0.0', 'or:0.0', '##cl:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '$:0.0', 'cbs:0.0', '$:0.0', 'in:3.0217122457543155e-06', '##o:0.0', '$:0.0', 'cp:0.0', '##xx:0.0', 'view:0.0', 'all:0.0', 'ratings:0.0', 'here:0.0', '::0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('5', tensor(0., device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('analyst', tensor(0., device='cuda:0')), ('rated', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('in', tensor(0.5000, device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('72hrs', tensor(0., device='cuda:0')), ('orcl', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('cbs', tensor(0., device='cuda:0')), ('ino', tensor(0.5000, device='cuda:0')), ('cpxx', tensor(0., device='cuda:0')), ('view', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('ratings', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0'))],  word_scores_max: [('5', tensor(0., device='cuda:0')), ('best', tensor(0., device='cuda:0')), ('analyst', tensor(0., device='cuda:0')), ('rated', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('in', tensor(0.5000, device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('72hrs', tensor(0., device='cuda:0')), ('orcl', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('cbs', tensor(0., device='cuda:0')), ('ino', tensor(0.5000, device='cuda:0')), ('cpxx', tensor(0., device='cuda:0')), ('view', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('ratings', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0'))]
idx: 1252, example: @megaas2000 $aapl mcdonalds had a big growing success for years with the same bigmac and apple update and improbe iphone and ipad, prediction: 2, correct_label: 2, class_scores: [0.21026777 0.3438521  0.44588014], word_scores: ['@:0.0', 'mega:0.0', '##as:0.0', '##200:0.0', '##0:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', 'mcdonald:0.0', '##s:4.601175078278175e-06', 'had:0.0', 'a:8.62785782373976e-06', 'big:0.0', 'growing:0.0', 'success:0.0', 'for:0.0', 'years:0.0', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'same:0.0', 'big:0.0', '##mac:0.0', 'and:0.0', 'apple:0.0', 'update:0.0', 'and:0.0', 'imp:0.0', '##ro:0.0', '##be:0.0', 'iphone:0.0', 'and:0.0', 'ipad:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('megaas2000', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('mcdonalds', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('a', tensor(0.4370, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('with', tensor(0.2398, device='cuda:0')), ('the', tensor(0.3232, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('bigmac', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('update', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('improbe', tensor(0., device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ipad', tensor(0., device='cuda:0'))],  word_scores_max: [('megaas2000', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('mcdonalds', tensor(0., device='cuda:0')), ('had', tensor(0., device='cuda:0')), ('a', tensor(0.4370, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('years', tensor(0., device='cuda:0')), ('with', tensor(0.2398, device='cuda:0')), ('the', tensor(0.3232, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('bigmac', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('update', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('improbe', tensor(0., device='cuda:0')), ('iphone', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('ipad', tensor(0., device='cuda:0'))]
idx: 1253, example: $gtat will re-enter short on bounce..., prediction: 2, correct_label: 0, class_scores: [0.1757877 0.312434  0.5117783], word_scores: ['$:0.0', 'gt:0.0', '##at:0.0', 'will:4.073096533829812e-06', 're:0.0', '-:4.821180027647642e-06', 'enter:0.0', 'short:0.0', 'on:0.0', 'bounce:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('gtat', tensor(0., device='cuda:0')), ('will', tensor(0.2314, device='cuda:0')), ('re', tensor(0., device='cuda:0')), ('-', tensor(0.2739, device='cuda:0')), ('enter', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('.', tensor(0.1649, device='cuda:0')), ('.', tensor(0.1649, device='cuda:0')), ('.', tensor(0.1649, device='cuda:0'))],  word_scores_max: [('gtat', tensor(0., device='cuda:0')), ('will', tensor(0.2314, device='cuda:0')), ('re', tensor(0., device='cuda:0')), ('-', tensor(0.2739, device='cuda:0')), ('enter', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('.', tensor(0.1649, device='cuda:0')), ('.', tensor(0.1649, device='cuda:0')), ('.', tensor(0.1649, device='cuda:0'))]
idx: 1254, example: $wgo's bod was right to reject the offer. that company is low because of the economy, not because of any type of mismanagement or anything., prediction: 2, correct_label: 2, class_scores: [0.227993   0.33579773 0.4362093 ], word_scores: ['$:0.0', 'w:0.0', '##go:0.0', "':0.0", 's:0.0', 'bo:0.0', '##d:0.0', 'was:0.0', 'right:0.0', 'to:2.886244146793615e-06', 'reject:0.0', 'the:6.3806996877247e-06', 'offer:0.0', '.:2.903296945078182e-06', 'that:1.5133816759771435e-06', 'company:6.695386673527537e-06', 'is:0.0', 'low:0.0', 'because:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'economy:0.0', ',:7.986737728060689e-06', 'not:0.0', 'because:0.0', 'of:3.4365734791208524e-06', 'any:0.0', 'type:0.0', 'of:3.4365734791208524e-06', 'mis:0.0', '##mana:0.0', '##gement:0.0', 'or:0.0', 'anything:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 1255, example: insight hires aviva's david hillier for multi-asset team, prediction: 1, correct_label: 2, class_scores: [0.22862308 0.3953811  0.37599578], word_scores: ['insight:0.0', 'hires:0.0', 'aviv:0.0', '##a:3.804580501309829e-06', "':0.0", 's:0.0', 'david:0.0', 'hill:0.0', '##ier:0.0', 'for:0.0', 'multi:0.0', '-:4.821180027647642e-06', 'asset:0.0', 'team:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('insight', tensor(nan, device='cuda:0')), ('hires', tensor(nan, device='cuda:0'))],  word_scores_max: [('insight', tensor(nan, device='cuda:0')), ('hires', tensor(nan, device='cuda:0'))]
idx: 1256, example: $gild  is expanding its research facilities...keeping up with the pace of innovation  , prediction: 2, correct_label: 2, class_scores: [0.2250454 0.3148572 0.4600974], word_scores: ['$:0.0', 'gil:0.0', '##d:0.0', 'is:0.0', 'expanding:0.0', 'its:1.7191393908433383e-06', 'research:0.0', 'facilities:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'keeping:0.0', 'up:1.4959460941099678e-06', 'with:4.733654350275174e-06', 'the:6.3806996877247e-06', 'pace:0.0', 'of:3.4365734791208524e-06', 'innovation:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gild', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expanding', tensor(0., device='cuda:0')), ('its', tensor(0.0649, device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0')), ('.', tensor(0.1097, device='cuda:0')), ('.', tensor(0.1097, device='cuda:0')), ('.', tensor(0.1097, device='cuda:0')), ('keeping', tensor(0., device='cuda:0')), ('up', tensor(0.0565, device='cuda:0')), ('with', tensor(0.1788, device='cuda:0')), ('the', tensor(0.2410, device='cuda:0')), ('pace', tensor(0., device='cuda:0')), ('of', tensor(0.1298, device='cuda:0')), ('innovation', tensor(0., device='cuda:0'))],  word_scores_max: [('gild', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('expanding', tensor(0., device='cuda:0')), ('its', tensor(0.0649, device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('facilities', tensor(0., device='cuda:0')), ('.', tensor(0.1097, device='cuda:0')), ('.', tensor(0.1097, device='cuda:0')), ('.', tensor(0.1097, device='cuda:0')), ('keeping', tensor(0., device='cuda:0')), ('up', tensor(0.0565, device='cuda:0')), ('with', tensor(0.1788, device='cuda:0')), ('the', tensor(0.2410, device='cuda:0')), ('pace', tensor(0., device='cuda:0')), ('of', tensor(0.1298, device='cuda:0')), ('innovation', tensor(0., device='cuda:0'))]
idx: 1257, example: $iff technical alerts: stochastic sell signal, 200 dma support, and 50 dma support  , prediction: 2, correct_label: 0, class_scores: [0.26377755 0.32870507 0.40751737], word_scores: ['$:0.0', 'if:0.0', '##f:0.0', 'technical:0.0', 'alert:0.0', '##s:4.601175078278175e-06', '::0.0', 'st:0.0', '##och:0.0', '##astic:0.0', 'sell:0.0', 'signal:0.0', ',:7.986737728060689e-06', '200:0.0', 'd:0.0', '##ma:0.0', 'support:0.0', ',:7.986737728060689e-06', 'and:0.0', '50:0.0', 'd:0.0', '##ma:0.0', 'support:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('iff', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('alerts', tensor(0., device='cuda:0')), ('stochastic', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('dma', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('dma', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0'))],  word_scores_max: [('iff', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('alerts', tensor(0., device='cuda:0')), ('stochastic', tensor(0., device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('dma', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('dma', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0'))]
idx: 1258, example: homebuilders - $ryl breaking below support, watch this one.  $spy, prediction: 2, correct_label: 0, class_scores: [0.19490995 0.35448584 0.4506043 ], word_scores: ['home:0.0', '##bu:0.0', '##ilde:0.0', '##rs:0.0', '-:4.821180027647642e-06', '$:0.0', 'ry:0.0', '##l:0.0', 'breaking:0.0', 'below:0.0', 'support:0.0', ',:7.986737728060689e-06', 'watch:0.0', 'this:0.0', 'one:4.584404450724833e-06', '.:2.903296945078182e-06', '$:0.0', 'spy:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('homebuilders', tensor(0., device='cuda:0')), ('-', tensor(0.2375, device='cuda:0')), ('ryl', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), (',', tensor(0.3935, device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.2259, device='cuda:0')), ('.', tensor(0.1431, device='cuda:0')), ('spy', tensor(0., device='cuda:0'))],  word_scores_max: [('homebuilders', tensor(0., device='cuda:0')), ('-', tensor(0.2375, device='cuda:0')), ('ryl', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), (',', tensor(0.3935, device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.2259, device='cuda:0')), ('.', tensor(0.1431, device='cuda:0')), ('spy', tensor(0., device='cuda:0'))]
idx: 1259, example: $dish weakness continues again. 49.43 area resistance after last week, prediction: 2, correct_label: 0, class_scores: [0.20262381 0.39038262 0.40699357], word_scores: ['$:0.0', 'dish:0.0', 'weakness:0.0', 'continues:0.0', 'again:0.0', '.:2.903296945078182e-06', '49:0.0', '.:2.903296945078182e-06', '43:0.0', 'area:0.0', 'resistance:0.0', 'after:0.0', 'last:0.0', 'week:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('dish', tensor(0., device='cuda:0')), ('weakness', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))],  word_scores_max: [('dish', tensor(0., device='cuda:0')), ('weakness', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('49', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('43', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))]
idx: 1260, example: @ch_roark: $unxl i like this ascending triangle on the 30-minute chart. breakout coming monday!  promising., prediction: 2, correct_label: 1, class_scores: [0.18504362 0.28488412 0.5300722 ], word_scores: ['@:0.0', 'ch:0.0', '_:0.0', 'roar:0.0', '##k:0.0', '::0.0', '$:0.0', 'un:0.0', '##x:0.0', '##l:0.0', 'i:0.0', 'like:0.0', 'this:0.0', 'ascending:0.0', 'triangle:0.0', 'on:0.0', 'the:6.3806996877247e-06', '30:0.0', '-:4.821180027647642e-06', 'minute:0.0', 'chart:0.0', '.:2.903296945078182e-06', 'breakout:0.0', 'coming:0.0', 'monday:0.0', '!:0.0', 'promising:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ch', tensor(0., device='cuda:0')), ('_', tensor(0., device='cuda:0')), ('roark', tensor(0., device='cuda:0')), ('unxl', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('ascending', tensor(0., device='cuda:0')), ('triangle', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3751, device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('-', tensor(0.2835, device='cuda:0')), ('minute', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('.', tensor(0.1707, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('promising', tensor(0., device='cuda:0')), ('.', tensor(0.1707, device='cuda:0'))],  word_scores_max: [('ch', tensor(0., device='cuda:0')), ('_', tensor(0., device='cuda:0')), ('roark', tensor(0., device='cuda:0')), ('unxl', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('ascending', tensor(0., device='cuda:0')), ('triangle', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3751, device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('-', tensor(0.2835, device='cuda:0')), ('minute', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('.', tensor(0.1707, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('monday', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('promising', tensor(0., device='cuda:0')), ('.', tensor(0.1707, device='cuda:0'))]
idx: 1261, example: pretty steady accumulation off support today.  purdy. $agu, prediction: 1, correct_label: 1, class_scores: [0.21096547 0.4034972  0.3855374 ], word_scores: ['pretty:0.0', 'steady:0.0', 'accumulation:0.0', 'off:0.0', 'support:0.0', 'today:0.0', '.:2.903296945078182e-06', 'pu:0.0', '##rdy:0.0', '.:2.903296945078182e-06', '$:0.0', 'ag:0.0', '##u:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('pretty', tensor(0., device='cuda:0')), ('steady', tensor(0., device='cuda:0')), ('accumulation', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('purdy', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('agu', tensor(0., device='cuda:0'))],  word_scores_max: [('pretty', tensor(0., device='cuda:0')), ('steady', tensor(0., device='cuda:0')), ('accumulation', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('purdy', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('agu', tensor(0., device='cuda:0'))]
idx: 1262, example: $volc this stock has a very very very very very high probability of rallying tomorrow and/or early next week, prediction: 2, correct_label: 1, class_scores: [0.17283526 0.32554394 0.5016208 ], word_scores: ['$:0.0', 'vol:0.0', '##c:0.0', 'this:0.0', 'stock:0.0', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', 'very:0.0', 'very:0.0', 'very:0.0', 'very:0.0', 'very:0.0', 'high:0.0', 'probability:0.0', 'of:3.4365734791208524e-06', 'rally:0.0', '##ing:0.0', 'tomorrow:0.0', 'and:0.0', '/:0.0', 'or:0.0', 'early:0.0', 'next:0.0', 'week:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('volc', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('has', tensor(0.3292, device='cuda:0')), ('a', tensor(0.4797, device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('probability', tensor(0., device='cuda:0')), ('of', tensor(0.1911, device='cuda:0')), ('rallying', tensor(0., device='cuda:0')), ('tomorrow', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))],  word_scores_max: [('volc', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('has', tensor(0.3292, device='cuda:0')), ('a', tensor(0.4797, device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('probability', tensor(0., device='cuda:0')), ('of', tensor(0.1911, device='cuda:0')), ('rallying', tensor(0., device='cuda:0')), ('tomorrow', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('or', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))]
idx: 1263, example: $save long. , prediction: 2, correct_label: 1, class_scores: [0.16494651 0.38122815 0.45382538], word_scores: ['$:0.0', 'save:0.0', 'long:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('save', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('save', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1264, example: i'm liking the price action in $swks, currently @21.80 ; my target: 24.00+ before year end., prediction: 2, correct_label: 1, class_scores: [0.18401054 0.34612575 0.46986368], word_scores: ['i:0.0', "':0.0", 'm:0.0', 'liking:0.0', 'the:6.3806996877247e-06', 'price:0.0', 'action:0.0', 'in:3.0217122457543155e-06', '$:0.0', 'sw:0.0', '##ks:0.0', ',:7.986737728060689e-06', 'currently:0.0', '@:0.0', '21:0.0', '.:2.903296945078182e-06', '80:0.0', ';:0.0', 'my:0.0', 'target:0.0', '::0.0', '24:0.0', '.:2.903296945078182e-06', '00:0.0', '+:0.0', 'before:0.0', 'year:0.0', 'end:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [],  word_scores_max: []
idx: 1265, example: hard to find new buyers of $tsla at 250.  shorts continue to pile in., prediction: 2, correct_label: 0, class_scores: [0.17117856 0.3456929  0.48312858], word_scores: ['hard:0.0', 'to:2.886244146793615e-06', 'find:0.0', 'new:2.798587502184091e-06', 'buyers:0.0', 'of:3.4365734791208524e-06', '$:0.0', 'ts:0.0', '##la:0.0', 'at:0.0', '250:0.0', '.:2.903296945078182e-06', 'shorts:0.0', 'continue:0.0', 'to:2.886244146793615e-06', 'pile:0.0', 'in:3.0217122457543155e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('hard', tensor(0., device='cuda:0')), ('to', tensor(0.1385, device='cuda:0')), ('find', tensor(0., device='cuda:0')), ('new', tensor(0.1343, device='cuda:0')), ('buyers', tensor(0., device='cuda:0')), ('of', tensor(0.1649, device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('250', tensor(0., device='cuda:0')), ('.', tensor(0.1393, device='cuda:0')), ('shorts', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1385, device='cuda:0')), ('pile', tensor(0., device='cuda:0')), ('in', tensor(0.1450, device='cuda:0')), ('.', tensor(0.1393, device='cuda:0'))],  word_scores_max: [('hard', tensor(0., device='cuda:0')), ('to', tensor(0.1385, device='cuda:0')), ('find', tensor(0., device='cuda:0')), ('new', tensor(0.1343, device='cuda:0')), ('buyers', tensor(0., device='cuda:0')), ('of', tensor(0.1649, device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('250', tensor(0., device='cuda:0')), ('.', tensor(0.1393, device='cuda:0')), ('shorts', tensor(0., device='cuda:0')), ('continue', tensor(0., device='cuda:0')), ('to', tensor(0.1385, device='cuda:0')), ('pile', tensor(0., device='cuda:0')), ('in', tensor(0.1450, device='cuda:0')), ('.', tensor(0.1393, device='cuda:0'))]
idx: 1266, example: arm slammed by handset sales outlook, prediction: 2, correct_label: 0, class_scores: [0.19858672 0.35881764 0.4425957 ], word_scores: ['arm:0.0', 'slammed:0.0', 'by:0.0', 'hands:0.0', '##et:0.0', 'sales:0.0', 'outlook:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('arm', tensor(nan, device='cuda:0')), ('slammed', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('handset', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('outlook', tensor(nan, device='cuda:0'))],  word_scores_max: [('arm', tensor(nan, device='cuda:0')), ('slammed', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('handset', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('outlook', tensor(nan, device='cuda:0'))]
idx: 1267, example: @hopeturock yes, the expectations of a deal are somewhat priced in but we could see a nice pop if bids come in higher than expected... $yhoo, prediction: 2, correct_label: 2, class_scores: [0.18247823 0.37660918 0.44091257], word_scores: ['@:0.0', 'hope:0.0', '##tur:0.0', '##ock:0.0', 'yes:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'expectations:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'deal:0.0', 'are:0.0', 'somewhat:0.0', 'priced:0.0', 'in:3.0217122457543155e-06', 'but:0.0', 'we:0.0', 'could:0.0', 'see:0.0', 'a:8.62785782373976e-06', 'nice:0.0', 'pop:0.0', 'if:0.0', 'bids:0.0', 'come:0.0', 'in:3.0217122457543155e-06', 'higher:0.0', 'than:0.0', 'expected:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('hopeturock', tensor(0., device='cuda:0')), ('yes', tensor(0., device='cuda:0')), (',', tensor(0.1603, device='cuda:0')), ('the', tensor(0.1281, device='cuda:0')), ('expectations', tensor(0., device='cuda:0')), ('of', tensor(0.0690, device='cuda:0')), ('a', tensor(0.1732, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('somewhat', tensor(0., device='cuda:0')), ('priced', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('a', tensor(0.1732, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('pop', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('bids', tensor(0., device='cuda:0')), ('come', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('yhoo', tensor(0., device='cuda:0'))],  word_scores_max: [('hopeturock', tensor(0., device='cuda:0')), ('yes', tensor(0., device='cuda:0')), (',', tensor(0.1603, device='cuda:0')), ('the', tensor(0.1281, device='cuda:0')), ('expectations', tensor(0., device='cuda:0')), ('of', tensor(0.0690, device='cuda:0')), ('a', tensor(0.1732, device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('somewhat', tensor(0., device='cuda:0')), ('priced', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('a', tensor(0.1732, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('pop', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('bids', tensor(0., device='cuda:0')), ('come', tensor(0., device='cuda:0')), ('in', tensor(0.0607, device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('expected', tensor(0., device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('.', tensor(0.0583, device='cuda:0')), ('yhoo', tensor(0., device='cuda:0'))]
idx: 1268, example: $chrm loooooongggggg base, prediction: 2, correct_label: 1, class_scores: [0.19654587 0.24737161 0.5560825 ], word_scores: ['$:0.0', 'ch:0.0', '##rm:0.0', 'lo:0.0', '##oo:0.0', '##oo:0.0', '##ong:0.0', '##gg:0.0', '##gg:0.0', '##g:0.0', 'base:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('chrm', tensor(nan, device='cuda:0')), ('loooooongggggg', tensor(nan, device='cuda:0')), ('base', tensor(nan, device='cuda:0'))],  word_scores_max: [('chrm', tensor(nan, device='cuda:0')), ('loooooongggggg', tensor(nan, device='cuda:0')), ('base', tensor(nan, device='cuda:0'))]
idx: 1269, example: $endp was looking for a long entry but today's price action wasn't appealing, prediction: 2, correct_label: 2, class_scores: [0.21743087 0.33409983 0.44846922], word_scores: ['$:0.0', 'end:0.0', '##p:0.0', 'was:0.0', 'looking:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'long:0.0', 'entry:0.0', 'but:0.0', 'today:0.0', "':0.0", 's:0.0', 'price:0.0', 'action:0.0', 'wasn:0.0', "':0.0", 't:0.0', 'appealing:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('endp', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('entry', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0'))],  word_scores_max: [('endp', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('entry', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0'))]
idx: 1270, example: $googl hit with lawsuit from russian search engine $yndx , prediction: 2, correct_label: 2, class_scores: [0.18761376 0.34578577 0.46660045], word_scores: ['$:0.0', 'goo:0.0', '##gl:0.0', 'hit:0.0', 'with:4.733654350275174e-06', 'lawsuit:0.0', 'from:4.495178018260049e-06', 'russian:0.0', 'search:0.0', 'engine:0.0', '$:0.0', 'y:0.0', '##nd:0.0', '##x:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('googl', tensor(0., device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('with', tensor(0.5129, device='cuda:0')), ('lawsuit', tensor(0., device='cuda:0')), ('from', tensor(0.4871, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('search', tensor(0., device='cuda:0')), ('engine', tensor(0., device='cuda:0')), ('yndx', tensor(0., device='cuda:0'))],  word_scores_max: [('googl', tensor(0., device='cuda:0')), ('hit', tensor(0., device='cuda:0')), ('with', tensor(0.5129, device='cuda:0')), ('lawsuit', tensor(0., device='cuda:0')), ('from', tensor(0.4871, device='cuda:0')), ('russian', tensor(0., device='cuda:0')), ('search', tensor(0., device='cuda:0')), ('engine', tensor(0., device='cuda:0')), ('yndx', tensor(0., device='cuda:0'))]
idx: 1271, example: $ino up, up, and away!, prediction: 1, correct_label: 1, class_scores: [0.16711077 0.44070822 0.392181  ], word_scores: ['$:0.0', 'in:3.0217122457543155e-06', '##o:0.0', 'up:1.4959460941099678e-06', ',:7.986737728060689e-06', 'up:1.4959460941099678e-06', ',:7.986737728060689e-06', 'and:0.0', 'away:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ino', tensor(0.1374, device='cuda:0')), ('up', tensor(0.0680, device='cuda:0')), (',', tensor(0.3632, device='cuda:0')), ('up', tensor(0.0680, device='cuda:0')), (',', tensor(0.3632, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('away', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('ino', tensor(0.1374, device='cuda:0')), ('up', tensor(0.0680, device='cuda:0')), (',', tensor(0.3632, device='cuda:0')), ('up', tensor(0.0680, device='cuda:0')), (',', tensor(0.3632, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('away', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1272, example: update 1-cypress semiconductor offers to buy integrated silicon solution, prediction: 2, correct_label: 1, class_scores: [0.14216544 0.3629591  0.49487558], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'cypress:0.0', 'semiconductor:0.0', 'offers:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'integrated:0.0', 'silicon:0.0', 'solution:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0')), ('cypress', tensor(0., device='cuda:0')), ('semiconductor', tensor(0., device='cuda:0')), ('offers', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('integrated', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0')), ('cypress', tensor(0., device='cuda:0')), ('semiconductor', tensor(0., device='cuda:0')), ('offers', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('integrated', tensor(0., device='cuda:0')), ('silicon', tensor(0., device='cuda:0')), ('solution', tensor(0., device='cuda:0'))]
idx: 1273, example: $googl gets an upgrade price target $970, prediction: 1, correct_label: 1, class_scores: [0.18787436 0.41976035 0.39236534], word_scores: ['$:0.0', 'goo:0.0', '##gl:0.0', 'gets:0.0', 'an:0.0', 'upgrade:0.0', 'price:0.0', 'target:0.0', '$:0.0', '97:0.0', '##0:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('googl', tensor(nan, device='cuda:0')), ('gets', tensor(nan, device='cuda:0')), ('an', tensor(nan, device='cuda:0')), ('upgrade', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('target', tensor(nan, device='cuda:0')), ('970', tensor(nan, device='cuda:0'))],  word_scores_max: [('googl', tensor(nan, device='cuda:0')), ('gets', tensor(nan, device='cuda:0')), ('an', tensor(nan, device='cuda:0')), ('upgrade', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('target', tensor(nan, device='cuda:0')), ('970', tensor(nan, device='cuda:0'))]
idx: 1274, example: $googl is a short below 740 into the upper bb and is overbought, prediction: 1, correct_label: 0, class_scores: [0.19087392 0.44717434 0.36195165], word_scores: ['$:0.0', 'goo:0.0', '##gl:0.0', 'is:0.0', 'a:8.62785782373976e-06', 'short:0.0', 'below:0.0', '740:0.0', 'into:0.0', 'the:6.3806996877247e-06', 'upper:0.0', 'bb:0.0', 'and:0.0', 'is:0.0', 'over:0.0', '##bo:0.0', '##ught:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('googl', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5749, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('740', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.4251, device='cuda:0')), ('upper', tensor(0., device='cuda:0')), ('bb', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('overbought', tensor(0., device='cuda:0'))],  word_scores_max: [('googl', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('a', tensor(0.5749, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('below', tensor(0., device='cuda:0')), ('740', tensor(0., device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('the', tensor(0.4251, device='cuda:0')), ('upper', tensor(0., device='cuda:0')), ('bb', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('overbought', tensor(0., device='cuda:0'))]
idx: 1275, example: irish housebuilder cairn homes plans london listing, prediction: 1, correct_label: 2, class_scores: [0.19290555 0.45417064 0.3529238 ], word_scores: ['irish:0.0', 'house:0.0', '##bu:0.0', '##ilde:0.0', '##r:0.0', 'cai:0.0', '##rn:0.0', 'homes:0.0', 'plans:0.0', 'london:0.0', 'listing:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('irish', tensor(nan, device='cuda:0')), ('housebuilder', tensor(nan, device='cuda:0')), ('cairn', tensor(nan, device='cuda:0')), ('homes', tensor(nan, device='cuda:0')), ('plans', tensor(nan, device='cuda:0')), ('london', tensor(nan, device='cuda:0')), ('listing', tensor(nan, device='cuda:0'))],  word_scores_max: [('irish', tensor(nan, device='cuda:0')), ('housebuilder', tensor(nan, device='cuda:0')), ('cairn', tensor(nan, device='cuda:0')), ('homes', tensor(nan, device='cuda:0')), ('plans', tensor(nan, device='cuda:0')), ('london', tensor(nan, device='cuda:0')), ('listing', tensor(nan, device='cuda:0'))]
idx: 1276, example: ruling sets lower limit on potential fine for bp, prediction: 2, correct_label: 2, class_scores: [0.22621731 0.2802106  0.4935721 ], word_scores: ['ruling:0.0', 'sets:0.0', 'lower:0.0', 'limit:0.0', 'on:0.0', 'potential:0.0', 'fine:0.0', 'for:0.0', 'bp:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ruling', tensor(nan, device='cuda:0')), ('sets', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('limit', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('potential', tensor(nan, device='cuda:0')), ('fine', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('bp', tensor(nan, device='cuda:0'))],  word_scores_max: [('ruling', tensor(nan, device='cuda:0')), ('sets', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('limit', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('potential', tensor(nan, device='cuda:0')), ('fine', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('bp', tensor(nan, device='cuda:0'))]
idx: 1277, example: @catskillfishing  note the monthly chart of $gdx & how it recaptured support. $gld possible double bottom set up. , prediction: 1, correct_label: 2, class_scores: [0.17345437 0.5335272  0.2930184 ], word_scores: ['@:0.0', 'cats:0.0', '##kill:0.0', '##fish:0.0', '##ing:0.0', 'note:0.0', 'the:6.3806996877247e-06', 'monthly:0.0', 'chart:0.0', 'of:3.4365734791208524e-06', '$:0.0', 'g:0.0', '##d:0.0', '##x:0.0', '&:0.0', 'how:0.0', 'it:3.3415778943890473e-06', 'recaptured:0.0', 'support:0.0', '.:2.903296945078182e-06', '$:0.0', 'g:0.0', '##ld:0.0', 'possible:0.0', 'double:0.0', 'bottom:0.0', 'set:0.0', 'up:1.4959460941099678e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('catskillfishing', tensor(0., device='cuda:0')), ('note', tensor(0., device='cuda:0')), ('the', tensor(0.3118, device='cuda:0')), ('monthly', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('of', tensor(0.1680, device='cuda:0')), ('gdx', tensor(0., device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('it', tensor(0.1633, device='cuda:0')), ('recaptured', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('.', tensor(0.1419, device='cuda:0')), ('gld', tensor(0., device='cuda:0')), ('possible', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('up', tensor(0.0731, device='cuda:0')), ('.', tensor(0.1419, device='cuda:0'))],  word_scores_max: [('catskillfishing', tensor(0., device='cuda:0')), ('note', tensor(0., device='cuda:0')), ('the', tensor(0.3118, device='cuda:0')), ('monthly', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('of', tensor(0.1680, device='cuda:0')), ('gdx', tensor(0., device='cuda:0')), ('how', tensor(0., device='cuda:0')), ('it', tensor(0.1633, device='cuda:0')), ('recaptured', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('.', tensor(0.1419, device='cuda:0')), ('gld', tensor(0., device='cuda:0')), ('possible', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('set', tensor(0., device='cuda:0')), ('up', tensor(0.0731, device='cuda:0')), ('.', tensor(0.1419, device='cuda:0'))]
idx: 1278, example: diageo sells ryder cup venue gleneagles hotel to ennismore group, prediction: 2, correct_label: 2, class_scores: [0.15345046 0.29271224 0.55383736], word_scores: ['dia:0.0', '##ge:0.0', '##o:0.0', 'sells:0.0', 'ryder:0.0', 'cup:0.0', 'venue:0.0', 'glen:0.0', '##ea:0.0', '##gles:0.0', 'hotel:0.0', 'to:2.886244146793615e-06', 'en:2.1442599518195493e-06', '##nism:0.0', '##ore:0.0', 'group:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('diageo', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('ryder', tensor(0., device='cuda:0')), ('cup', tensor(0., device='cuda:0')), ('venue', tensor(0., device='cuda:0')), ('gleneagles', tensor(0., device='cuda:0')), ('hotel', tensor(0., device='cuda:0')), ('to', tensor(0.5737, device='cuda:0')), ('ennismore', tensor(0.4263, device='cuda:0')), ('group', tensor(0., device='cuda:0'))],  word_scores_max: [('diageo', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('ryder', tensor(0., device='cuda:0')), ('cup', tensor(0., device='cuda:0')), ('venue', tensor(0., device='cuda:0')), ('gleneagles', tensor(0., device='cuda:0')), ('hotel', tensor(0., device='cuda:0')), ('to', tensor(0.5737, device='cuda:0')), ('ennismore', tensor(0.4263, device='cuda:0')), ('group', tensor(0., device='cuda:0'))]
idx: 1279, example: standard chartered, rbs escape capital raising in stress test, prediction: 2, correct_label: 1, class_scores: [0.14678963 0.31453115 0.5386791 ], word_scores: ['standard:0.0', 'chartered:0.0', ',:7.986737728060689e-06', 'rb:0.0', '##s:4.601175078278175e-06', 'escape:0.0', 'capital:0.0', 'raising:0.0', 'in:3.0217122457543155e-06', 'stress:0.0', 'test:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0')), (',', tensor(0.7255, device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('escape', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('raising', tensor(0., device='cuda:0')), ('in', tensor(0.2745, device='cuda:0')), ('stress', tensor(0., device='cuda:0')), ('test', tensor(0., device='cuda:0'))],  word_scores_max: [('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0')), (',', tensor(0.7255, device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('escape', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('raising', tensor(0., device='cuda:0')), ('in', tensor(0.2745, device='cuda:0')), ('stress', tensor(0., device='cuda:0')), ('test', tensor(0., device='cuda:0'))]
idx: 1280, example: $skh  long setup. watch for continuation and volume expansion here. hot sector., prediction: 2, correct_label: 1, class_scores: [0.17998058 0.3532685  0.46675098], word_scores: ['$:0.0', 'sk:0.0', '##h:0.0', 'long:0.0', 'setup:0.0', '.:2.903296945078182e-06', 'watch:0.0', 'for:0.0', 'continuation:0.0', 'and:0.0', 'volume:0.0', 'expansion:0.0', 'here:0.0', '.:2.903296945078182e-06', 'hot:0.0', 'sector:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('skh', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('setup', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('continuation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('hot', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0'))],  word_scores_max: [('skh', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('setup', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('continuation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('hot', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0'))]
idx: 1281, example: brewer ab inbev seeks $275 bln tie-up with sabmiller, prediction: 1, correct_label: 2, class_scores: [0.21726573 0.454841   0.32789326], word_scores: ['brewer:0.0', 'ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'seeks:0.0', '$:0.0', '275:0.0', 'b:0.0', '##ln:0.0', 'tie:0.0', '-:4.821180027647642e-06', 'up:1.4959460941099678e-06', 'with:4.733654350275174e-06', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('brewer', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.2147, device='cuda:0')), ('seeks', tensor(0., device='cuda:0')), ('275', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('tie', tensor(0., device='cuda:0')), ('-', tensor(0.3426, device='cuda:0')), ('up', tensor(0.1063, device='cuda:0')), ('with', tensor(0.3364, device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0'))],  word_scores_max: [('brewer', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.2147, device='cuda:0')), ('seeks', tensor(0., device='cuda:0')), ('275', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('tie', tensor(0., device='cuda:0')), ('-', tensor(0.3426, device='cuda:0')), ('up', tensor(0.1063, device='cuda:0')), ('with', tensor(0.3364, device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0'))]
idx: 1282, example: companiesunilever sales lifted by ice cream in soft economy, prediction: 2, correct_label: 1, class_scores: [0.26019466 0.3101383  0.42966706], word_scores: ['companies:0.0', '##uni:0.0', '##lev:0.0', '##er:0.0', 'sales:0.0', 'lifted:0.0', 'by:0.0', 'ice:0.0', 'cream:0.0', 'in:3.0217122457543155e-06', 'soft:0.0', 'economy:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companiesunilever', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('lifted', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ice', tensor(0., device='cuda:0')), ('cream', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('soft', tensor(0., device='cuda:0')), ('economy', tensor(0., device='cuda:0'))],  word_scores_max: [('companiesunilever', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('lifted', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ice', tensor(0., device='cuda:0')), ('cream', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('soft', tensor(0., device='cuda:0')), ('economy', tensor(0., device='cuda:0'))]
idx: 1283, example: greene king's third quarter sales boosted by festive season, prediction: 2, correct_label: 1, class_scores: [0.19606873 0.39251953 0.4114118 ], word_scores: ['greene:0.0', 'king:0.0', "':0.0", 's:0.0', 'third:0.0', 'quarter:0.0', 'sales:0.0', 'boosted:0.0', 'by:0.0', 'fest:0.0', '##ive:0.0', 'season:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('greene', tensor(nan, device='cuda:0'))],  word_scores_max: [('greene', tensor(nan, device='cuda:0'))]
idx: 1284, example: aviva fined $27 million by u.k. regulator over fee failings, prediction: 2, correct_label: 0, class_scores: [0.2727425  0.33673042 0.39052707], word_scores: ['aviv:0.0', '##a:3.804580501309829e-06', 'fined:0.0', '$:0.0', '27:0.0', 'million:6.018835847498849e-06', 'by:0.0', 'u:0.0', '.:2.903296945078182e-06', 'k:0.0', '.:2.903296945078182e-06', 'regulator:0.0', 'over:0.0', 'fee:0.0', 'failing:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('aviva', tensor(0., device='cuda:0')), ('fined', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('million', tensor(0.5090, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.2455, device='cuda:0')), ('k', tensor(0., device='cuda:0')), ('.', tensor(0.2455, device='cuda:0')), ('regulator', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('fee', tensor(0., device='cuda:0')), ('failings', tensor(0., device='cuda:0'))],  word_scores_max: [('aviva', tensor(0., device='cuda:0')), ('fined', tensor(0., device='cuda:0')), ('27', tensor(0., device='cuda:0')), ('million', tensor(0.5090, device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('u', tensor(0., device='cuda:0')), ('.', tensor(0.2455, device='cuda:0')), ('k', tensor(0., device='cuda:0')), ('.', tensor(0.2455, device='cuda:0')), ('regulator', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('fee', tensor(0., device='cuda:0')), ('failings', tensor(0., device='cuda:0'))]
idx: 1285, example: astrazeneca acquires zs pharma in $2.7 billion deal, prediction: 2, correct_label: 1, class_scores: [0.25257927 0.27023682 0.47718397], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'acquire:0.0', '##s:4.601175078278175e-06', 'z:0.0', '##s:4.601175078278175e-06', 'ph:0.0', '##arm:0.0', '##a:3.804580501309829e-06', 'in:3.0217122457543155e-06', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '7:0.0', 'billion:0.0', 'deal:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('acquires', tensor(0., device='cuda:0')), ('zs', tensor(0., device='cuda:0')), ('pharma', tensor(0., device='cuda:0')), ('in', tensor(0.5100, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.4900, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('acquires', tensor(0., device='cuda:0')), ('zs', tensor(0., device='cuda:0')), ('pharma', tensor(0., device='cuda:0')), ('in', tensor(0.5100, device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.4900, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0'))]
idx: 1286, example: $bone earnings stocks poised to pop , prediction: 2, correct_label: 1, class_scores: [0.2166741  0.30876872 0.4745572 ], word_scores: ['$:0.0', 'bone:0.0', 'earnings:0.0', 'stocks:0.0', 'poised:0.0', 'to:2.886244146793615e-06', 'pop:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bone', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('poised', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('pop', tensor(0., device='cuda:0'))],  word_scores_max: [('bone', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('poised', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('pop', tensor(0., device='cuda:0'))]
idx: 1287, example: juniper tumbles on q1 warning; cisco also lower $jnpr $csco , prediction: 2, correct_label: 0, class_scores: [0.16134341 0.40512446 0.43353215], word_scores: ['juniper:0.0', 'tumble:0.0', '##s:4.601175078278175e-06', 'on:0.0', 'q:0.0', '##1:0.0', 'warning:0.0', ';:0.0', 'cisco:0.0', 'also:0.0', 'lower:0.0', '$:0.0', 'j:0.0', '##np:0.0', '##r:0.0', '$:0.0', 'cs:0.0', '##co:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('juniper', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('q1', tensor(nan, device='cuda:0')), ('warning', tensor(nan, device='cuda:0')), (';', tensor(nan, device='cuda:0')), ('cisco', tensor(nan, device='cuda:0')), ('also', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('jnpr', tensor(nan, device='cuda:0')), ('csco', tensor(nan, device='cuda:0'))],  word_scores_max: [('juniper', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('q1', tensor(nan, device='cuda:0')), ('warning', tensor(nan, device='cuda:0')), (';', tensor(nan, device='cuda:0')), ('cisco', tensor(nan, device='cuda:0')), ('also', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('jnpr', tensor(nan, device='cuda:0')), ('csco', tensor(nan, device='cuda:0'))]
idx: 1288, example: long position on $gol,...updating , prediction: 2, correct_label: 1, class_scores: [0.16920823 0.3749784  0.45581344], word_scores: ['long:0.0', 'position:0.0', 'on:0.0', '$:0.0', 'go:0.0', '##l:0.0', ',:7.986737728060689e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'up:1.4959460941099678e-06', '##dating:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('long', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('gol', tensor(0., device='cuda:0')), (',', tensor(0.4390, device='cuda:0')), ('.', tensor(0.1596, device='cuda:0')), ('.', tensor(0.1596, device='cuda:0')), ('.', tensor(0.1596, device='cuda:0')), ('updating', tensor(0.0822, device='cuda:0'))],  word_scores_max: [('long', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('gol', tensor(0., device='cuda:0')), (',', tensor(0.4390, device='cuda:0')), ('.', tensor(0.1596, device='cuda:0')), ('.', tensor(0.1596, device='cuda:0')), ('.', tensor(0.1596, device='cuda:0')), ('updating', tensor(0.0822, device='cuda:0'))]
idx: 1289, example: horizonte acquires neighbouring glencore nickel property in brazil, prediction: 1, correct_label: 2, class_scores: [0.26388484 0.3927081  0.3434071 ], word_scores: ['horizon:0.0', '##te:0.0', 'acquire:0.0', '##s:4.601175078278175e-06', 'neighbouring:0.0', 'glen:0.0', '##core:0.0', 'nickel:0.0', 'property:0.0', 'in:3.0217122457543155e-06', 'brazil:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('horizonte', tensor(0., device='cuda:0')), ('acquires', tensor(0., device='cuda:0')), ('neighbouring', tensor(0., device='cuda:0')), ('glencore', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('brazil', tensor(0., device='cuda:0'))],  word_scores_max: [('horizonte', tensor(0., device='cuda:0')), ('acquires', tensor(0., device='cuda:0')), ('neighbouring', tensor(0., device='cuda:0')), ('glencore', tensor(0., device='cuda:0')), ('nickel', tensor(0., device='cuda:0')), ('property', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('brazil', tensor(0., device='cuda:0'))]
idx: 1290, example: lots of metal stocks look like a 5-10% run awaits. long $ssri,$paas and $nem but most high quality names should go if metal prices cooperate, prediction: 2, correct_label: 1, class_scores: [0.19710374 0.39854056 0.4043557 ], word_scores: ['lots:0.0', 'of:3.4365734791208524e-06', 'metal:0.0', 'stocks:0.0', 'look:0.0', 'like:0.0', 'a:8.62785782373976e-06', '5:0.0', '-:4.821180027647642e-06', '10:0.0', '%:0.0', 'run:0.0', 'await:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', 'long:0.0', '$:0.0', 'ssr:0.0', '##i:0.0', ',:7.986737728060689e-06', '$:0.0', 'pa:0.0', '##as:0.0', 'and:0.0', '$:0.0', 'ne:0.0', '##m:0.0', 'but:0.0', 'most:0.0', 'high:0.0', 'quality:0.0', 'names:0.0', 'should:0.0', 'go:0.0', 'if:0.0', 'metal:0.0', 'prices:0.0', 'cooperate:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lots', tensor(0., device='cuda:0')), ('of', tensor(0.1237, device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('a', tensor(0.3106, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(0.1736, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('awaits', tensor(0., device='cuda:0')), ('.', tensor(0.1045, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('ssri', tensor(0., device='cuda:0')), (',', tensor(0.2875, device='cuda:0')), ('paas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nem', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('names', tensor(0., device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('cooperate', tensor(0., device='cuda:0'))],  word_scores_max: [('lots', tensor(0., device='cuda:0')), ('of', tensor(0.1237, device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('a', tensor(0.3106, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(0.1736, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('awaits', tensor(0., device='cuda:0')), ('.', tensor(0.1045, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('ssri', tensor(0., device='cuda:0')), (',', tensor(0.2875, device='cuda:0')), ('paas', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('nem', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('most', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('quality', tensor(0., device='cuda:0')), ('names', tensor(0., device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('metal', tensor(0., device='cuda:0')), ('prices', tensor(0., device='cuda:0')), ('cooperate', tensor(0., device='cuda:0'))]
idx: 1291, example: industry newsmorrisons unveils which stores will close as 900 jobs face the axe, prediction: 2, correct_label: 0, class_scores: [0.17821467 0.34448332 0.47730204], word_scores: ['industry:0.0', 'news:0.0', '##mo:0.0', '##rri:0.0', '##sons:0.0', 'un:0.0', '##ve:0.0', '##ils:0.0', 'which:0.0', 'stores:0.0', 'will:4.073096533829812e-06', 'close:0.0', 'as:0.0', '900:0.0', 'jobs:0.0', 'face:0.0', 'the:6.3806996877247e-06', 'axe:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('industry', tensor(0., device='cuda:0')), ('newsmorrisons', tensor(0., device='cuda:0')), ('unveils', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('900', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('face', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('axe', tensor(0., device='cuda:0'))],  word_scores_max: [('industry', tensor(0., device='cuda:0')), ('newsmorrisons', tensor(0., device='cuda:0')), ('unveils', tensor(0., device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0')), ('will', tensor(0.3896, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('900', tensor(0., device='cuda:0')), ('jobs', tensor(0., device='cuda:0')), ('face', tensor(0., device='cuda:0')), ('the', tensor(0.6104, device='cuda:0')), ('axe', tensor(0., device='cuda:0'))]
idx: 1292, example: seat belt recall? who cares....  i'm a buyer $tsla, prediction: 1, correct_label: 1, class_scores: [0.28522867 0.36669993 0.34807137], word_scores: ['seat:0.0', 'belt:0.0', 'recall:0.0', '?:0.0', 'who:0.0', 'cares:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'i:0.0', "':0.0", 'm:0.0', 'a:8.62785782373976e-06', 'buyer:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('seat', tensor(0., device='cuda:0')), ('belt', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('cares', tensor(0., device='cuda:0')), ('.', tensor(0.2500, device='cuda:0')), ('.', tensor(0.2500, device='cuda:0')), ('.', tensor(0.2500, device='cuda:0')), ('.', tensor(0.2500, device='cuda:0'))],  word_scores_max: [('seat', tensor(0., device='cuda:0')), ('belt', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('who', tensor(0., device='cuda:0')), ('cares', tensor(0., device='cuda:0')), ('.', tensor(0.2500, device='cuda:0')), ('.', tensor(0.2500, device='cuda:0')), ('.', tensor(0.2500, device='cuda:0')), ('.', tensor(0.2500, device='cuda:0'))]
idx: 1293, example: $pcln back over "up" trendline from 10/4, prediction: 1, correct_label: 2, class_scores: [0.23530227 0.42678502 0.33791277], word_scores: ['$:0.0', 'pc:0.0', '##ln:0.0', 'back:0.0', 'over:0.0', '":0.0', 'up:1.4959460941099678e-06', '":0.0', 'trend:0.0', '##line:0.0', 'from:4.495178018260049e-06', '10:0.0', '/:0.0', '4:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('pcln', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('up', tensor(0.2497, device='cuda:0')), ('trendline', tensor(0., device='cuda:0')), ('from', tensor(0.7503, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0'))],  word_scores_max: [('pcln', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('up', tensor(0.2497, device='cuda:0')), ('trendline', tensor(0., device='cuda:0')), ('from', tensor(0.7503, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0'))]
idx: 1294, example: tripadvisor jumps on m&a rumors  $trip, prediction: 1, correct_label: 1, class_scores: [0.18044169 0.52475965 0.29479867], word_scores: ['trip:0.0', '##ad:0.0', '##vis:0.0', '##or:0.0', 'jumps:0.0', 'on:0.0', 'm:0.0', '&:0.0', 'a:8.62785782373976e-06', 'rumors:0.0', '$:0.0', 'trip:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tripadvisor', tensor(0., device='cuda:0')), ('jumps', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('rumors', tensor(0., device='cuda:0')), ('trip', tensor(0., device='cuda:0'))],  word_scores_max: [('tripadvisor', tensor(0., device='cuda:0')), ('jumps', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('m', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('rumors', tensor(0., device='cuda:0')), ('trip', tensor(0., device='cuda:0'))]
idx: 1295, example: brief-legal & general's retirement business books 4 billion stg h1 sales, prediction: 1, correct_label: 2, class_scores: [0.17634487 0.41182888 0.41182625], word_scores: ['brief:0.0', '-:4.821180027647642e-06', 'legal:0.0', '&:0.0', 'general:0.0', "':0.0", 's:0.0', 'retirement:0.0', 'business:0.0', 'books:0.0', '4:0.0', 'billion:0.0', 'st:0.0', '##g:0.0', 'h:0.0', '##1:0.0', 'sales:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('brief', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('legal', tensor(0., device='cuda:0'))],  word_scores_max: [('brief', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('legal', tensor(0., device='cuda:0'))]
idx: 1296, example: my $dwa play up 6% today. i'm still skeptical. will take profits. not a time cheer, prediction: 1, correct_label: 2, class_scores: [0.17822847 0.4299029  0.39186853], word_scores: ['my:0.0', '$:0.0', 'd:0.0', '##wa:0.0', 'play:0.0', 'up:1.4959460941099678e-06', '6:0.0', '%:0.0', 'today:0.0', '.:2.903296945078182e-06', 'i:0.0', "':0.0", 'm:0.0', 'still:0.0', 'skeptical:0.0', '.:2.903296945078182e-06', 'will:4.073096533829812e-06', 'take:2.0325496734585613e-06', 'profits:0.0', '.:2.903296945078182e-06', 'not:0.0', 'a:8.62785782373976e-06', 'time:0.0', 'cheer:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('my', tensor(0., device='cuda:0')), ('dwa', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('up', tensor(0.3400, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.6600, device='cuda:0'))],  word_scores_max: [('my', tensor(0., device='cuda:0')), ('dwa', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('up', tensor(0.3400, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.6600, device='cuda:0'))]
idx: 1297, example: @ifhedieshedies: @bullhorn334: $znga shorts are getting nervous"", prediction: 1, correct_label: 1, class_scores: [0.24717024 0.38510308 0.36772668], word_scores: ['@:0.0', 'if:0.0', '##hed:0.0', '##ies:0.0', '##hed:0.0', '##ies:0.0', '::0.0', '@:0.0', 'bull:0.0', '##horn:0.0', '##33:0.0', '##4:0.0', '::0.0', '$:0.0', 'z:0.0', '##nga:0.0', 'shorts:0.0', 'are:0.0', 'getting:0.0', 'nervous:0.0', '":0.0', '":0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ifhedieshedies', tensor(nan, device='cuda:0')), ('bullhorn334', tensor(nan, device='cuda:0')), ('znga', tensor(nan, device='cuda:0')), ('shorts', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('getting', tensor(nan, device='cuda:0')), ('nervous', tensor(nan, device='cuda:0'))],  word_scores_max: [('ifhedieshedies', tensor(nan, device='cuda:0')), ('bullhorn334', tensor(nan, device='cuda:0')), ('znga', tensor(nan, device='cuda:0')), ('shorts', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('getting', tensor(nan, device='cuda:0')), ('nervous', tensor(nan, device='cuda:0'))]
idx: 1298, example: $vxx starting to creep up while $spy sits near hod ..., prediction: 2, correct_label: 2, class_scores: [0.17734085 0.3933759  0.42928323], word_scores: ['$:0.0', 'v:0.0', '##xx:0.0', 'starting:0.0', 'to:2.886244146793615e-06', 'creep:0.0', 'up:1.4959460941099678e-06', 'while:0.0', '$:0.0', 'spy:0.0', 'sits:0.0', 'near:0.0', 'ho:0.0', '##d:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('vxx', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('to', tensor(0.2205, device='cuda:0')), ('creep', tensor(0., device='cuda:0')), ('up', tensor(0.1143, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('sits', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('.', tensor(0.2218, device='cuda:0')), ('.', tensor(0.2218, device='cuda:0')), ('.', tensor(0.2218, device='cuda:0'))],  word_scores_max: [('vxx', tensor(0., device='cuda:0')), ('starting', tensor(0., device='cuda:0')), ('to', tensor(0.2205, device='cuda:0')), ('creep', tensor(0., device='cuda:0')), ('up', tensor(0.1143, device='cuda:0')), ('while', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('sits', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('.', tensor(0.2218, device='cuda:0')), ('.', tensor(0.2218, device='cuda:0')), ('.', tensor(0.2218, device='cuda:0'))]
idx: 1299, example: short more $faz for all who don't know that means markets will tank now :-p, prediction: 2, correct_label: 0, class_scores: [0.23371033 0.3259689  0.4403208 ], word_scores: ['short:0.0', 'more:0.0', '$:0.0', 'fa:0.0', '##z:0.0', 'for:0.0', 'all:0.0', 'who:0.0', 'don:0.0', "':0.0", 't:0.0', 'know:0.0', 'that:1.5133816759771435e-06', 'means:0.0', 'markets:0.0', 'will:4.073096533829812e-06', 'tank:0.0', 'now:0.0', '::0.0', '-:4.821180027647642e-06', 'p:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('short', tensor(nan, device='cuda:0')), ('more', tensor(nan, device='cuda:0')), ('faz', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('all', tensor(nan, device='cuda:0')), ('who', tensor(nan, device='cuda:0'))],  word_scores_max: [('short', tensor(nan, device='cuda:0')), ('more', tensor(nan, device='cuda:0')), ('faz', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('all', tensor(nan, device='cuda:0')), ('who', tensor(nan, device='cuda:0'))]
idx: 1300, example: $aapl afternoon selloff as usual will be brutal. get ready to lose a ton of money., prediction: 2, correct_label: 0, class_scores: [0.19955742 0.39124623 0.4091964 ], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'afternoon:0.0', 'sell:0.0', '##off:0.0', 'as:0.0', 'usual:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'brutal:0.0', '.:2.903296945078182e-06', 'get:0.0', 'ready:0.0', 'to:2.886244146793615e-06', 'lose:0.0', 'a:8.62785782373976e-06', 'ton:6.645556823059451e-06', 'of:3.4365734791208524e-06', 'money:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('afternoon', tensor(0., device='cuda:0')), ('selloff', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('usual', tensor(0., device='cuda:0')), ('will', tensor(0.1294, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('brutal', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('to', tensor(0.0917, device='cuda:0')), ('lose', tensor(0., device='cuda:0')), ('a', tensor(0.2741, device='cuda:0')), ('ton', tensor(0.2111, device='cuda:0')), ('of', tensor(0.1092, device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('afternoon', tensor(0., device='cuda:0')), ('selloff', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('usual', tensor(0., device='cuda:0')), ('will', tensor(0.1294, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('brutal', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('to', tensor(0.0917, device='cuda:0')), ('lose', tensor(0., device='cuda:0')), ('a', tensor(0.2741, device='cuda:0')), ('ton', tensor(0.2111, device='cuda:0')), ('of', tensor(0.1092, device='cuda:0')), ('money', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0'))]
idx: 1301, example: $spy don't hang your bull hat yet. next week we will pop higher on qe3 hope on back of fed's 2 day meeting., prediction: 2, correct_label: 1, class_scores: [0.23341364 0.35007536 0.416511  ], word_scores: ['$:0.0', 'spy:0.0', 'don:0.0', "':0.0", 't:0.0', 'hang:0.0', 'your:0.0', 'bull:0.0', 'hat:0.0', 'yet:0.0', '.:2.903296945078182e-06', 'next:0.0', 'week:0.0', 'we:0.0', 'will:4.073096533829812e-06', 'pop:0.0', 'higher:0.0', 'on:0.0', 'q:0.0', '##e:0.0', '##3:0.0', 'hope:0.0', 'on:0.0', 'back:0.0', 'of:3.4365734791208524e-06', 'fed:0.0', "':0.0", 's:0.0', '2:0.0', 'day:0.0', 'meeting:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('spy', tensor(nan, device='cuda:0'))],  word_scores_max: [('spy', tensor(nan, device='cuda:0'))]
idx: 1302, example: $tsla not dipping - testing the 200 day ma , prediction: 1, correct_label: 2, class_scores: [0.2229881  0.4153324  0.36167946], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'not:0.0', 'dipping:0.0', '-:4.821180027647642e-06', 'testing:0.0', 'the:6.3806996877247e-06', '200:0.0', 'day:0.0', 'ma:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('dipping', tensor(0., device='cuda:0')), ('-', tensor(0.4304, device='cuda:0')), ('testing', tensor(0., device='cuda:0')), ('the', tensor(0.5696, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('ma', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('dipping', tensor(0., device='cuda:0')), ('-', tensor(0.4304, device='cuda:0')), ('testing', tensor(0., device='cuda:0')), ('the', tensor(0.5696, device='cuda:0')), ('200', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('ma', tensor(0., device='cuda:0'))]
idx: 1303, example: 2nd raise this year.  "@bvhealthcare: $qcor questcor increases quarterly cash dividend 20 percent.. , prediction: 2, correct_label: 1, class_scores: [0.21708894 0.33241397 0.45049703], word_scores: ['2nd:0.0', 'raise:0.0', 'this:0.0', 'year:0.0', '.:2.903296945078182e-06', '":0.0', '@:0.0', 'b:0.0', '##v:0.0', '##hea:0.0', '##lth:0.0', '##care:0.0', '::0.0', '$:0.0', 'qc:0.0', '##or:0.0', 'quest:0.0', '##cor:0.0', 'increases:0.0', 'quarterly:0.0', 'cash:0.0', 'divide:0.0', '##nd:0.0', '20:0.0', 'percent:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('2nd', tensor(0., device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('bvhealthcare', tensor(0., device='cuda:0')), ('qcor', tensor(0., device='cuda:0')), ('questcor', tensor(0., device='cuda:0')), ('increases', tensor(0., device='cuda:0')), ('quarterly', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0'))],  word_scores_max: [('2nd', tensor(0., device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('bvhealthcare', tensor(0., device='cuda:0')), ('qcor', tensor(0., device='cuda:0')), ('questcor', tensor(0., device='cuda:0')), ('increases', tensor(0., device='cuda:0')), ('quarterly', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0')), ('.', tensor(0.3333, device='cuda:0')), ('.', tensor(0.3333, device='cuda:0'))]
idx: 1304, example: glencore sees tripoli-based noc as sole legal seller of libyan oil, prediction: 2, correct_label: 2, class_scores: [0.21667112 0.31316534 0.47016352], word_scores: ['glen:0.0', '##core:0.0', 'sees:0.0', 'tripoli:0.0', '-:4.821180027647642e-06', 'based:0.0', 'no:0.0', '##c:0.0', 'as:0.0', 'sole:0.0', 'legal:0.0', 'seller:0.0', 'of:3.4365734791208524e-06', 'libyan:0.0', 'oil:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('glencore', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('tripoli', tensor(0., device='cuda:0')), ('-', tensor(0.5838, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('noc', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('sole', tensor(0., device='cuda:0')), ('legal', tensor(0., device='cuda:0')), ('seller', tensor(0., device='cuda:0')), ('of', tensor(0.4162, device='cuda:0')), ('libyan', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0'))],  word_scores_max: [('glencore', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('tripoli', tensor(0., device='cuda:0')), ('-', tensor(0.5838, device='cuda:0')), ('based', tensor(0., device='cuda:0')), ('noc', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('sole', tensor(0., device='cuda:0')), ('legal', tensor(0., device='cuda:0')), ('seller', tensor(0., device='cuda:0')), ('of', tensor(0.4162, device='cuda:0')), ('libyan', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0'))]
idx: 1305, example: $bbry both 1m/6m trends turn bullish today with a resistance level at $11.31. , prediction: 2, correct_label: 1, class_scores: [0.2295427 0.3665953 0.403862 ], word_scores: ['$:0.0', 'bb:0.0', '##ry:0.0', 'both:0.0', '1:0.0', '##m:0.0', '/:0.0', '6:0.0', '##m:0.0', 'trends:0.0', 'turn:0.0', 'bull:0.0', '##ish:0.0', 'today:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', 'resistance:0.0', 'level:0.0', 'at:0.0', '$:0.0', '11:0.0', '.:2.903296945078182e-06', '31:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('bbry', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('1m', tensor(0., device='cuda:0')), ('6m', tensor(0., device='cuda:0')), ('trends', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('with', tensor(0.2470, device='cuda:0')), ('a', tensor(0.4501, device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.1515, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('.', tensor(0.1515, device='cuda:0'))],  word_scores_max: [('bbry', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('1m', tensor(0., device='cuda:0')), ('6m', tensor(0., device='cuda:0')), ('trends', tensor(0., device='cuda:0')), ('turn', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('with', tensor(0.2470, device='cuda:0')), ('a', tensor(0.4501, device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.1515, device='cuda:0')), ('31', tensor(0., device='cuda:0')), ('.', tensor(0.1515, device='cuda:0'))]
idx: 1306, example: analysts impressed with progress at tesla's flagship factory; co spent $1.6b on upgrades in '15  by @tsrandall $tsla, prediction: 2, correct_label: 1, class_scores: [0.22828954 0.29140362 0.4803069 ], word_scores: ['analysts:0.0', 'impressed:0.0', 'with:4.733654350275174e-06', 'progress:0.0', 'at:0.0', 'tesla:0.0', "':0.0", 's:0.0', 'flagship:0.0', 'factory:0.0', ';:0.0', 'co:0.0', 'spent:0.0', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '6:0.0', '##b:0.0', 'on:0.0', 'upgrades:0.0', 'in:3.0217122457543155e-06', "':0.0", '15:0.0', 'by:0.0', '@:0.0', 'ts:0.0', '##rand:0.0', '##all:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('analysts', tensor(0., device='cuda:0')), ('impressed', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('progress', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))],  word_scores_max: [('analysts', tensor(0., device='cuda:0')), ('impressed', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('progress', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0'))]
idx: 1307, example: i am not optimistic about $amzn both fundementals and charts look like poopoo this quarter., prediction: 1, correct_label: 0, class_scores: [0.21052508 0.39864123 0.3908337 ], word_scores: ['i:0.0', 'am:0.0', 'not:0.0', 'optimistic:0.0', 'about:0.0', '$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', 'both:0.0', 'fund:0.0', '##ement:0.0', '##als:0.0', 'and:0.0', 'charts:0.0', 'look:0.0', 'like:0.0', 'po:0.0', '##op:0.0', '##oo:0.0', 'this:0.0', 'quarter:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('i', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('optimistic', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('amzn', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('fundementals', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('poopoo', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('i', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('optimistic', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('amzn', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('fundementals', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('charts', tensor(0., device='cuda:0')), ('look', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('poopoo', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1308, example: mylan appoints ranjan ray chaudhuri as global commercial lead for mylan's over ..., prediction: 1, correct_label: 2, class_scores: [0.15727258 0.4841983  0.35852903], word_scores: ['my:0.0', '##lan:0.0', 'appoint:0.0', '##s:4.601175078278175e-06', 'ran:0.0', '##jan:0.0', 'ray:0.0', 'cha:0.0', '##ud:0.0', '##hur:0.0', '##i:0.0', 'as:0.0', 'global:0.0', 'commercial:0.0', 'lead:0.0', 'for:0.0', 'my:0.0', '##lan:0.0', "':0.0", 's:0.0', 'over:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('mylan', tensor(nan, device='cuda:0')), ('appoints', tensor(nan, device='cuda:0')), ('ranjan', tensor(nan, device='cuda:0')), ('ray', tensor(nan, device='cuda:0')), ('chaudhuri', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('global', tensor(nan, device='cuda:0')), ('commercial', tensor(nan, device='cuda:0')), ('lead', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0'))],  word_scores_max: [('mylan', tensor(nan, device='cuda:0')), ('appoints', tensor(nan, device='cuda:0')), ('ranjan', tensor(nan, device='cuda:0')), ('ray', tensor(nan, device='cuda:0')), ('chaudhuri', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('global', tensor(nan, device='cuda:0')), ('commercial', tensor(nan, device='cuda:0')), ('lead', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0'))]
idx: 1309, example: berkshire discloses unit's ties to iran, opens probe, prediction: 2, correct_label: 2, class_scores: [0.29598778 0.32581013 0.37820202], word_scores: ['berkshire:0.0', 'disclose:0.0', '##s:4.601175078278175e-06', 'unit:0.0', "':0.0", 's:0.0', 'ties:0.0', 'to:2.886244146793615e-06', 'iran:0.0', ',:7.986737728060689e-06', 'opens:0.0', 'probe:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('berkshire', tensor(nan, device='cuda:0')), ('discloses', tensor(nan, device='cuda:0'))],  word_scores_max: [('berkshire', tensor(nan, device='cuda:0')), ('discloses', tensor(nan, device='cuda:0'))]
idx: 1310, example: @renatta @fr0van @kjepeneter @rptl  strong close 4 $plnr  coming, prediction: 2, correct_label: 1, class_scores: [0.19689895 0.32320458 0.47989643], word_scores: ['@:0.0', 'ren:0.0', '##att:0.0', '##a:3.804580501309829e-06', '@:0.0', 'fr:0.0', '##0:0.0', '##van:0.0', '@:0.0', 'k:0.0', '##je:0.0', '##pen:0.0', '##eter:0.0', '@:0.0', 'r:0.0', '##pt:0.0', '##l:0.0', 'strong:0.0', 'close:0.0', '4:0.0', '$:0.0', 'pl:0.0', '##nr:0.0', 'coming:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('renatta', tensor(nan, device='cuda:0')), ('fr0van', tensor(nan, device='cuda:0')), ('kjepeneter', tensor(nan, device='cuda:0')), ('rptl', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0')), ('4', tensor(nan, device='cuda:0')), ('plnr', tensor(nan, device='cuda:0')), ('coming', tensor(nan, device='cuda:0'))],  word_scores_max: [('renatta', tensor(nan, device='cuda:0')), ('fr0van', tensor(nan, device='cuda:0')), ('kjepeneter', tensor(nan, device='cuda:0')), ('rptl', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0')), ('4', tensor(nan, device='cuda:0')), ('plnr', tensor(nan, device='cuda:0')), ('coming', tensor(nan, device='cuda:0'))]
idx: 1311, example: wpp boosts sales despite cautious clients, prediction: 2, correct_label: 2, class_scores: [0.28158396 0.33975393 0.3786621 ], word_scores: ['w:0.0', '##pp:0.0', 'boost:0.0', '##s:4.601175078278175e-06', 'sales:0.0', 'despite:0.0', 'cautious:0.0', 'clients:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('wpp', tensor(nan, device='cuda:0')), ('boosts', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('despite', tensor(nan, device='cuda:0')), ('cautious', tensor(nan, device='cuda:0')), ('clients', tensor(nan, device='cuda:0'))],  word_scores_max: [('wpp', tensor(nan, device='cuda:0')), ('boosts', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('despite', tensor(nan, device='cuda:0')), ('cautious', tensor(nan, device='cuda:0')), ('clients', tensor(nan, device='cuda:0'))]
idx: 1312, example: $lee  lee ready to exit bankruptcy. strong volume today., prediction: 2, correct_label: 2, class_scores: [0.22909546 0.36277097 0.40813354], word_scores: ['$:0.0', 'lee:0.0', 'lee:0.0', 'ready:0.0', 'to:2.886244146793615e-06', 'exit:0.0', 'bankruptcy:0.0', '.:2.903296945078182e-06', 'strong:0.0', 'volume:0.0', 'today:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('lee', tensor(0., device='cuda:0')), ('lee', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('to', tensor(0.3320, device='cuda:0')), ('exit', tensor(0., device='cuda:0')), ('bankruptcy', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0'))],  word_scores_max: [('lee', tensor(0., device='cuda:0')), ('lee', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('to', tensor(0.3320, device='cuda:0')), ('exit', tensor(0., device='cuda:0')), ('bankruptcy', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0'))]
idx: 1313, example: $kndi #china #electriccar maker. china car sales +7.8%. also, may feed off $tsla momentum run lately., prediction: 2, correct_label: 2, class_scores: [0.20632498 0.3671921  0.42648295], word_scores: ['$:0.0', 'kn:0.0', '##di:0.0', '#:0.0', 'china:0.0', '#:0.0', 'electric:0.0', '##car:0.0', 'maker:0.0', '.:2.903296945078182e-06', 'china:0.0', 'car:0.0', 'sales:0.0', '+:0.0', '7:0.0', '.:2.903296945078182e-06', '8:0.0', '%:0.0', '.:2.903296945078182e-06', 'also:0.0', ',:7.986737728060689e-06', 'may:0.0', 'feed:0.0', 'off:0.0', '$:0.0', 'ts:0.0', '##la:0.0', 'momentum:0.0', 'run:0.0', 'lately:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kndi', tensor(0., device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('electriccar', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('car', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0')), ('also', tensor(0., device='cuda:0')), (',', tensor(0.4075, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('momentum', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('lately', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0'))],  word_scores_max: [('kndi', tensor(0., device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('electriccar', tensor(0., device='cuda:0')), ('maker', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('car', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0')), ('also', tensor(0., device='cuda:0')), (',', tensor(0.4075, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('feed', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('momentum', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('lately', tensor(0., device='cuda:0')), ('.', tensor(0.1481, device='cuda:0'))]
idx: 1314, example: $crk time to accumulate for a long position with far more upside than downside, prediction: 2, correct_label: 1, class_scores: [0.1833228  0.27775508 0.5389222 ], word_scores: ['$:0.0', 'cr:0.0', '##k:0.0', 'time:0.0', 'to:2.886244146793615e-06', 'accumulate:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'long:0.0', 'position:0.0', 'with:4.733654350275174e-06', 'far:0.0', 'more:0.0', 'upside:0.0', 'than:0.0', 'downs:0.0', '##ide:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('crk', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('to', tensor(0.1776, device='cuda:0')), ('accumulate', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.5310, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('with', tensor(0.2913, device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0'))],  word_scores_max: [('crk', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('to', tensor(0.1776, device='cuda:0')), ('accumulate', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.5310, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('with', tensor(0.2913, device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('upside', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0'))]
idx: 1315, example: $spy  still wants higher i think., prediction: 2, correct_label: 1, class_scores: [0.18970601 0.30493686 0.50535715], word_scores: ['$:0.0', 'spy:0.0', 'still:0.0', 'wants:0.0', 'higher:0.0', 'i:0.0', 'think:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('spy', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0'))]
idx: 1316, example: $amzn rejected that 604 to the penny. weak open and it goes r/g within first 30 mins, could have 8-10 points in it. , prediction: 2, correct_label: 2, class_scores: [0.23669878 0.29999143 0.46330976], word_scores: ['$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', 'rejected:0.0', 'that:1.5133816759771435e-06', '60:0.0', '##4:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'penny:0.0', '.:2.903296945078182e-06', 'weak:0.0', 'open:0.0', 'and:0.0', 'it:3.3415778943890473e-06', 'goes:0.0', 'r:0.0', '/:0.0', 'g:0.0', 'within:0.0', 'first:0.0', '30:0.0', 'min:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'could:0.0', 'have:2.910326429628185e-06', '8:0.0', '-:4.821180027647642e-06', '10:0.0', 'points:0.0', 'in:3.0217122457543155e-06', 'it:3.3415778943890473e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('amzn', tensor(0., device='cuda:0')), ('rejected', tensor(0., device='cuda:0')), ('that', tensor(0.0360, device='cuda:0')), ('604', tensor(0., device='cuda:0')), ('to', tensor(0.0687, device='cuda:0')), ('the', tensor(0.1519, device='cuda:0')), ('penny', tensor(0., device='cuda:0')), ('.', tensor(0.0691, device='cuda:0')), ('weak', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0795, device='cuda:0')), ('goes', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('g', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('mins', tensor(0., device='cuda:0')), (',', tensor(0.1901, device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('have', tensor(0.0693, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('-', tensor(0.1148, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('in', tensor(0.0719, device='cuda:0')), ('it', tensor(0.0795, device='cuda:0')), ('.', tensor(0.0691, device='cuda:0'))],  word_scores_max: [('amzn', tensor(0., device='cuda:0')), ('rejected', tensor(0., device='cuda:0')), ('that', tensor(0.0360, device='cuda:0')), ('604', tensor(0., device='cuda:0')), ('to', tensor(0.0687, device='cuda:0')), ('the', tensor(0.1519, device='cuda:0')), ('penny', tensor(0., device='cuda:0')), ('.', tensor(0.0691, device='cuda:0')), ('weak', tensor(0., device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('it', tensor(0.0795, device='cuda:0')), ('goes', tensor(0., device='cuda:0')), ('r', tensor(0., device='cuda:0')), ('g', tensor(0., device='cuda:0')), ('within', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('mins', tensor(0., device='cuda:0')), (',', tensor(0.1901, device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('have', tensor(0.0693, device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('-', tensor(0.1148, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('points', tensor(0., device='cuda:0')), ('in', tensor(0.0719, device='cuda:0')), ('it', tensor(0.0795, device='cuda:0')), ('.', tensor(0.0691, device='cuda:0'))]
idx: 1317, example: supreme court upholds $236 million jury award against exxonmobil, prediction: 2, correct_label: 0, class_scores: [0.3098063  0.297643   0.39255065], word_scores: ['supreme:0.0', 'court:0.0', 'uphold:0.0', '##s:4.601175078278175e-06', '$:0.0', '236:0.0', 'million:6.018835847498849e-06', 'jury:0.0', 'award:0.0', 'against:0.0', 'ex:0.0', '##xon:0.0', '##mo:0.0', '##bil:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('supreme', tensor(0., device='cuda:0')), ('court', tensor(0., device='cuda:0')), ('upholds', tensor(0., device='cuda:0')), ('236', tensor(0., device='cuda:0')), ('million', tensor(1., device='cuda:0')), ('jury', tensor(0., device='cuda:0')), ('award', tensor(0., device='cuda:0')), ('against', tensor(0., device='cuda:0')), ('exxonmobil', tensor(0., device='cuda:0'))],  word_scores_max: [('supreme', tensor(0., device='cuda:0')), ('court', tensor(0., device='cuda:0')), ('upholds', tensor(0., device='cuda:0')), ('236', tensor(0., device='cuda:0')), ('million', tensor(1., device='cuda:0')), ('jury', tensor(0., device='cuda:0')), ('award', tensor(0., device='cuda:0')), ('against', tensor(0., device='cuda:0')), ('exxonmobil', tensor(0., device='cuda:0'))]
idx: 1318, example: goodwin not to face scottish prosecution over rbs, prediction: 2, correct_label: 2, class_scores: [0.1892176  0.40041092 0.41037148], word_scores: ['goodwin:0.0', 'not:0.0', 'to:2.886244146793615e-06', 'face:0.0', 'scottish:0.0', 'prosecution:0.0', 'over:0.0', 'rb:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('goodwin', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('face', tensor(0., device='cuda:0')), ('scottish', tensor(0., device='cuda:0')), ('prosecution', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('rbs', tensor(0., device='cuda:0'))],  word_scores_max: [('goodwin', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('face', tensor(0., device='cuda:0')), ('scottish', tensor(0., device='cuda:0')), ('prosecution', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('rbs', tensor(0., device='cuda:0'))]
idx: 1319, example: tesco closes in on new chairman with dixons carphone's john allan in the frame, prediction: 2, correct_label: 2, class_scores: [0.154206   0.26637703 0.579417  ], word_scores: ['te:0.0', '##sco:0.0', 'closes:0.0', 'in:3.0217122457543155e-06', 'on:0.0', 'new:2.798587502184091e-06', 'chairman:3.5376444884605007e-06', 'with:4.733654350275174e-06', 'dixon:0.0', '##s:4.601175078278175e-06', 'carp:0.0', '##hone:0.0', "':0.0", 's:0.0', 'john:0.0', 'allan:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'frame:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(0., device='cuda:0')), ('closes', tensor(0., device='cuda:0')), ('in', tensor(0.2144, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('new', tensor(0.1986, device='cuda:0')), ('chairman', tensor(0.2510, device='cuda:0')), ('with', tensor(0.3359, device='cuda:0')), ('dixons', tensor(0., device='cuda:0'))],  word_scores_max: [('tesco', tensor(0., device='cuda:0')), ('closes', tensor(0., device='cuda:0')), ('in', tensor(0.2144, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('new', tensor(0.1986, device='cuda:0')), ('chairman', tensor(0.2510, device='cuda:0')), ('with', tensor(0.3359, device='cuda:0')), ('dixons', tensor(0., device='cuda:0'))]
idx: 1320, example: glencore slumps 25 pct as debt fears grow, prediction: 1, correct_label: 0, class_scores: [0.23446062 0.38797116 0.37756822], word_scores: ['glen:0.0', '##core:0.0', 'slump:0.0', '##s:4.601175078278175e-06', '25:0.0', 'pc:0.0', '##t:0.0', 'as:0.0', 'debt:0.0', 'fears:0.0', 'grow:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('glencore', tensor(nan, device='cuda:0')), ('slumps', tensor(nan, device='cuda:0')), ('25', tensor(nan, device='cuda:0')), ('pct', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('debt', tensor(nan, device='cuda:0')), ('fears', tensor(nan, device='cuda:0')), ('grow', tensor(nan, device='cuda:0'))],  word_scores_max: [('glencore', tensor(nan, device='cuda:0')), ('slumps', tensor(nan, device='cuda:0')), ('25', tensor(nan, device='cuda:0')), ('pct', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('debt', tensor(nan, device='cuda:0')), ('fears', tensor(nan, device='cuda:0')), ('grow', tensor(nan, device='cuda:0'))]
idx: 1321, example: astrazeneca's medimmune inks licensing deal with omnis pharmaceuticals, prediction: 2, correct_label: 2, class_scores: [0.18702693 0.35969806 0.45327505], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', "':0.0", 's:0.0', 'med:0.0', '##im:0.0', '##mun:0.0', '##e:0.0', 'ink:0.0', '##s:4.601175078278175e-06', 'licensing:0.0', 'deal:0.0', 'with:4.733654350275174e-06', 'om:0.0', '##nis:0.0', 'pharmaceuticals:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1322, example: tesla issues its first model x recall  $tsla, prediction: 2, correct_label: 2, class_scores: [0.23558483 0.37817723 0.38623792], word_scores: ['tesla:0.0', 'issues:0.0', 'its:1.7191393908433383e-06', 'first:0.0', 'model:0.0', 'x:0.0', 'recall:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesla', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0')), ('its', tensor(1., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('tesla', tensor(0., device='cuda:0')), ('issues', tensor(0., device='cuda:0')), ('its', tensor(1., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1323, example: japan's nikkei lands financial times in $1.3 billion deal, prediction: 1, correct_label: 2, class_scores: [0.21783891 0.427561   0.35460004], word_scores: ['japan:0.0', "':0.0", 's:0.0', 'nik:0.0', '##kei:0.0', 'lands:0.0', 'financial:0.0', 'times:0.0', 'in:3.0217122457543155e-06', '$:0.0', '1:0.0', '.:2.903296945078182e-06', '3:0.0', 'billion:0.0', 'deal:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1324, example: insurers: admiral blows hot and cold but aviva soars pre-friends life merger, prediction: 2, correct_label: 2, class_scores: [0.21861367 0.33670744 0.4446789 ], word_scores: ['ins:0.0', '##urer:0.0', '##s:4.601175078278175e-06', '::0.0', 'admiral:0.0', 'blows:0.0', 'hot:0.0', 'and:0.0', 'cold:0.0', 'but:0.0', 'aviv:0.0', '##a:3.804580501309829e-06', 'so:0.0', '##ars:0.0', 'pre:0.0', '-:4.821180027647642e-06', 'friends:0.0', 'life:0.0', 'merger:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('insurers', tensor(0., device='cuda:0')), ('admiral', tensor(0., device='cuda:0')), ('blows', tensor(0., device='cuda:0')), ('hot', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('cold', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('soars', tensor(0., device='cuda:0')), ('pre', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('friends', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0'))],  word_scores_max: [('insurers', tensor(0., device='cuda:0')), ('admiral', tensor(0., device='cuda:0')), ('blows', tensor(0., device='cuda:0')), ('hot', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('cold', tensor(0., device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('soars', tensor(0., device='cuda:0')), ('pre', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('friends', tensor(0., device='cuda:0')), ('life', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0'))]
idx: 1325, example: royal mail, johnson matthey lead ftse lower, prediction: 2, correct_label: 0, class_scores: [0.23462377 0.34893388 0.41644233], word_scores: ['royal:0.0', 'mail:0.0', ',:7.986737728060689e-06', 'johnson:0.0', 'matt:0.0', '##hey:0.0', 'lead:0.0', 'ft:0.0', '##se:0.0', 'lower:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('royal', tensor(0., device='cuda:0')), ('mail', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('johnson', tensor(0., device='cuda:0')), ('matthey', tensor(0., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0'))],  word_scores_max: [('royal', tensor(0., device='cuda:0')), ('mail', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('johnson', tensor(0., device='cuda:0')), ('matthey', tensor(0., device='cuda:0')), ('lead', tensor(0., device='cuda:0')), ('ftse', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0'))]
idx: 1326, example: lloyds banking group's share price lifts amid reports bank is poised to axe hundreds of uk jobs, prediction: 1, correct_label: 2, class_scores: [0.18262006 0.45591018 0.36146966], word_scores: ['lloyd:0.0', '##s:4.601175078278175e-06', 'banking:0.0', 'group:0.0', "':0.0", 's:0.0', 'share:0.0', 'price:0.0', 'lifts:0.0', 'amid:0.0', 'reports:0.0', 'bank:0.0', 'is:0.0', 'poised:0.0', 'to:2.886244146793615e-06', 'axe:0.0', 'hundreds:0.0', 'of:3.4365734791208524e-06', 'uk:0.0', 'jobs:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('lloyds', tensor(nan, device='cuda:0')), ('banking', tensor(nan, device='cuda:0'))],  word_scores_max: [('lloyds', tensor(nan, device='cuda:0')), ('banking', tensor(nan, device='cuda:0'))]
idx: 1327, example: update 3-ex-barclays director accused by us of illegal tips to plumber, prediction: 2, correct_label: 0, class_scores: [0.16363758 0.34448284 0.49187958], word_scores: ['update:0.0', '3:0.0', '-:4.821180027647642e-06', 'ex:0.0', '-:4.821180027647642e-06', 'barclay:0.0', '##s:4.601175078278175e-06', 'director:0.0', 'accused:0.0', 'by:0.0', 'us:0.0', 'of:3.4365734791208524e-06', 'illegal:0.0', 'tips:0.0', 'to:2.886244146793615e-06', 'plum:0.0', '##ber:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('ex', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('accused', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('of', tensor(0.2153, device='cuda:0')), ('illegal', tensor(0., device='cuda:0')), ('tips', tensor(0., device='cuda:0')), ('to', tensor(0.1808, device='cuda:0')), ('plumber', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('ex', tensor(0., device='cuda:0')), ('-', tensor(0.3020, device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), ('director', tensor(0., device='cuda:0')), ('accused', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('of', tensor(0.2153, device='cuda:0')), ('illegal', tensor(0., device='cuda:0')), ('tips', tensor(0., device='cuda:0')), ('to', tensor(0.1808, device='cuda:0')), ('plumber', tensor(0., device='cuda:0'))]
idx: 1328, example: $fti breakout today after reporting earnings last night, prediction: 2, correct_label: 1, class_scores: [0.19184731 0.28792983 0.5202229 ], word_scores: ['$:0.0', 'ft:0.0', '##i:0.0', 'breakout:0.0', 'today:0.0', 'after:0.0', 'reporting:0.0', 'earnings:0.0', 'last:0.0', 'night:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('fti', tensor(nan, device='cuda:0')), ('breakout', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('reporting', tensor(nan, device='cuda:0')), ('earnings', tensor(nan, device='cuda:0')), ('last', tensor(nan, device='cuda:0')), ('night', tensor(nan, device='cuda:0'))],  word_scores_max: [('fti', tensor(nan, device='cuda:0')), ('breakout', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('reporting', tensor(nan, device='cuda:0')), ('earnings', tensor(nan, device='cuda:0')), ('last', tensor(nan, device='cuda:0')), ('night', tensor(nan, device='cuda:0'))]
idx: 1329, example: petrofac books further â£30m cost for shetland gas terminal delays, prediction: 2, correct_label: 0, class_scores: [0.23277918 0.35942018 0.4078006 ], word_scores: ['pet:0.0', '##ro:0.0', '##fa:0.0', '##c:0.0', 'books:0.0', 'further:0.0', 'a:8.62785782373976e-06', '##£:0.0', '##30:0.0', '##m:0.0', 'cost:0.0', 'for:0.0', 'shetland:0.0', 'gas:0.0', 'terminal:0.0', 'delays:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('petrofac', tensor(0., device='cuda:0')), ('books', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0'))],  word_scores_max: [('petrofac', tensor(0., device='cuda:0')), ('books', tensor(0., device='cuda:0')), ('further', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0'))]
idx: 1330, example: $stx long play, another consistent profit zone.. check it out  , prediction: 2, correct_label: 1, class_scores: [0.20814422 0.29520962 0.49664617], word_scores: ['$:0.0', 'st:0.0', '##x:0.0', 'long:0.0', 'play:0.0', ',:7.986737728060689e-06', 'another:0.0', 'consistent:0.0', 'profit:0.0', 'zone:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'check:0.0', 'it:3.3415778943890473e-06', 'out:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('stx', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), (',', tensor(0.4661, device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('consistent', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('.', tensor(0.1694, device='cuda:0')), ('.', tensor(0.1694, device='cuda:0')), ('check', tensor(0., device='cuda:0')), ('it', tensor(0.1950, device='cuda:0')), ('out', tensor(0., device='cuda:0'))],  word_scores_max: [('stx', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), (',', tensor(0.4661, device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('consistent', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('.', tensor(0.1694, device='cuda:0')), ('.', tensor(0.1694, device='cuda:0')), ('check', tensor(0., device='cuda:0')), ('it', tensor(0.1950, device='cuda:0')), ('out', tensor(0., device='cuda:0'))]
idx: 1331, example: $aapl stock climbs as barron's sees 40% upside, jim cramer's take  , prediction: 2, correct_label: 1, class_scores: [0.18377954 0.31652653 0.49969393], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'stock:0.0', 'climbs:0.0', 'as:0.0', 'barron:0.0', "':0.0", 's:0.0', 'sees:0.0', '40:0.0', '%:0.0', 'upside:0.0', ',:7.986737728060689e-06', 'jim:0.0', 'cramer:0.0', "':0.0", 's:0.0', 'take:2.0325496734585613e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(nan, device='cuda:0')), ('stock', tensor(nan, device='cuda:0')), ('climbs', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0'))],  word_scores_max: [('aapl', tensor(nan, device='cuda:0')), ('stock', tensor(nan, device='cuda:0')), ('climbs', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0'))]
idx: 1332, example: $isrg pt raised to $700 from $640 at leerink - keeps outperform rated, prediction: 2, correct_label: 1, class_scores: [0.2212857  0.3106834  0.46803093], word_scores: ['$:0.0', 'is:0.0', '##rg:0.0', 'pt:0.0', 'raised:0.0', 'to:2.886244146793615e-06', '$:0.0', '700:0.0', 'from:4.495178018260049e-06', '$:0.0', '640:0.0', 'at:0.0', 'lee:0.0', '##rin:0.0', '##k:0.0', '-:4.821180027647642e-06', 'keeps:0.0', 'out:0.0', '##per:0.0', '##form:0.0', 'rated:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('isrg', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('raised', tensor(0., device='cuda:0')), ('to', tensor(0.2365, device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('from', tensor(0.3684, device='cuda:0')), ('640', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('leerink', tensor(0., device='cuda:0')), ('-', tensor(0.3951, device='cuda:0')), ('keeps', tensor(0., device='cuda:0')), ('outperform', tensor(0., device='cuda:0')), ('rated', tensor(0., device='cuda:0'))],  word_scores_max: [('isrg', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('raised', tensor(0., device='cuda:0')), ('to', tensor(0.2365, device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('from', tensor(0.3684, device='cuda:0')), ('640', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('leerink', tensor(0., device='cuda:0')), ('-', tensor(0.3951, device='cuda:0')), ('keeps', tensor(0., device='cuda:0')), ('outperform', tensor(0., device='cuda:0')), ('rated', tensor(0., device='cuda:0'))]
idx: 1333, example: $sina even though the "report" is untrue and has been proven unture, the damage is done. no one wants to touch it now, prediction: 2, correct_label: 0, class_scores: [0.2583291  0.3385336  0.40313733], word_scores: ['$:0.0', 'sin:0.0', '##a:3.804580501309829e-06', 'even:0.0', 'though:0.0', 'the:6.3806996877247e-06', '":0.0', 'report:0.0', '":0.0', 'is:0.0', 'un:0.0', '##tr:0.0', '##ue:0.0', 'and:0.0', 'has:5.9214244174654596e-06', 'been:0.0', 'proven:0.0', 'un:0.0', '##ture:0.0', ',:7.986737728060689e-06', 'the:6.3806996877247e-06', 'damage:0.0', 'is:0.0', 'done:0.0', '.:2.903296945078182e-06', 'no:0.0', 'one:4.584404450724833e-06', 'wants:0.0', 'to:2.886244146793615e-06', 'touch:0.0', 'it:3.3415778943890473e-06', 'now:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sina', tensor(0., device='cuda:0')), ('even', tensor(0., device='cuda:0')), ('though', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('untrue', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('has', tensor(0.1466, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('proven', tensor(0., device='cuda:0')), ('unture', tensor(0., device='cuda:0')), (',', tensor(0.1978, device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('damage', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('done', tensor(0., device='cuda:0')), ('.', tensor(0.0719, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('one', tensor(0.1135, device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('to', tensor(0.0715, device='cuda:0')), ('touch', tensor(0., device='cuda:0')), ('it', tensor(0.0827, device='cuda:0')), ('now', tensor(0., device='cuda:0'))],  word_scores_max: [('sina', tensor(0., device='cuda:0')), ('even', tensor(0., device='cuda:0')), ('though', tensor(0., device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('untrue', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('has', tensor(0.1466, device='cuda:0')), ('been', tensor(0., device='cuda:0')), ('proven', tensor(0., device='cuda:0')), ('unture', tensor(0., device='cuda:0')), (',', tensor(0.1978, device='cuda:0')), ('the', tensor(0.1580, device='cuda:0')), ('damage', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('done', tensor(0., device='cuda:0')), ('.', tensor(0.0719, device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('one', tensor(0.1135, device='cuda:0')), ('wants', tensor(0., device='cuda:0')), ('to', tensor(0.0715, device='cuda:0')), ('touch', tensor(0., device='cuda:0')), ('it', tensor(0.0827, device='cuda:0')), ('now', tensor(0., device='cuda:0'))]
idx: 1334, example: added more $bbby @jimcramer is wrong about this one. still a very profitable merchant with profitable stores, prediction: 1, correct_label: 1, class_scores: [0.16332166 0.4466471  0.39003128], word_scores: ['added:0.0', 'more:0.0', '$:0.0', 'bb:0.0', '##by:0.0', '@:0.0', 'jim:0.0', '##cr:6.230764483916573e-06', '##ame:0.0', '##r:0.0', 'is:0.0', 'wrong:0.0', 'about:0.0', 'this:0.0', 'one:4.584404450724833e-06', '.:2.903296945078182e-06', 'still:0.0', 'a:8.62785782373976e-06', 'very:0.0', 'profitable:0.0', 'merchant:0.0', 'with:4.733654350275174e-06', 'profitable:0.0', 'stores:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('added', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('bbby', tensor(0., device='cuda:0')), ('jimcramer', tensor(0.2301, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('wrong', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.1693, device='cuda:0')), ('.', tensor(0.1072, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('a', tensor(0.3186, device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('merchant', tensor(0., device='cuda:0')), ('with', tensor(0.1748, device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0'))],  word_scores_max: [('added', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('bbby', tensor(0., device='cuda:0')), ('jimcramer', tensor(0.2301, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('wrong', tensor(0., device='cuda:0')), ('about', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('one', tensor(0.1693, device='cuda:0')), ('.', tensor(0.1072, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('a', tensor(0.3186, device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('merchant', tensor(0., device='cuda:0')), ('with', tensor(0.1748, device='cuda:0')), ('profitable', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0'))]
idx: 1335, example: potential defect with third-row seat belts. tesla motors recalls 2,700 model x suvs $tsla , prediction: 2, correct_label: 0, class_scores: [0.21242385 0.2922273  0.49534884], word_scores: ['potential:0.0', 'defect:0.0', 'with:4.733654350275174e-06', 'third:0.0', '-:4.821180027647642e-06', 'row:0.0', 'seat:0.0', 'belts:0.0', '.:2.903296945078182e-06', 'tesla:0.0', 'motors:0.0', 'recalls:0.0', '2:0.0', ',:7.986737728060689e-06', '700:0.0', 'model:0.0', 'x:0.0', 'suv:0.0', '##s:4.601175078278175e-06', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('potential', tensor(0., device='cuda:0')), ('defect', tensor(0., device='cuda:0')), ('with', tensor(0.2315, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('-', tensor(0.2358, device='cuda:0')), ('row', tensor(0., device='cuda:0')), ('seat', tensor(0., device='cuda:0')), ('belts', tensor(0., device='cuda:0')), ('.', tensor(0.1420, device='cuda:0')), ('tesla', tensor(0., device='cuda:0')), ('motors', tensor(0., device='cuda:0')), ('recalls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.3906, device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('suvs', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('potential', tensor(0., device='cuda:0')), ('defect', tensor(0., device='cuda:0')), ('with', tensor(0.2315, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('-', tensor(0.2358, device='cuda:0')), ('row', tensor(0., device='cuda:0')), ('seat', tensor(0., device='cuda:0')), ('belts', tensor(0., device='cuda:0')), ('.', tensor(0.1420, device='cuda:0')), ('tesla', tensor(0., device='cuda:0')), ('motors', tensor(0., device='cuda:0')), ('recalls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(0.3906, device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('suvs', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1336, example: update 1-dairy crest loses a third of morrisons milk contract, prediction: 2, correct_label: 2, class_scores: [0.1986671  0.36890444 0.43242848], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'dairy:0.0', 'crest:0.0', 'loses:0.0', 'a:8.62785782373976e-06', 'third:0.0', 'of:3.4365734791208524e-06', 'morrison:0.0', '##s:4.601175078278175e-06', 'milk:0.0', 'contract:7.1864019446366e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.2003, device='cuda:0')), ('dairy', tensor(0., device='cuda:0')), ('crest', tensor(0., device='cuda:0')), ('loses', tensor(0., device='cuda:0')), ('a', tensor(0.3584, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('of', tensor(0.1428, device='cuda:0')), ('morrisons', tensor(0., device='cuda:0')), ('milk', tensor(0., device='cuda:0')), ('contract', tensor(0.2985, device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.2003, device='cuda:0')), ('dairy', tensor(0., device='cuda:0')), ('crest', tensor(0., device='cuda:0')), ('loses', tensor(0., device='cuda:0')), ('a', tensor(0.3584, device='cuda:0')), ('third', tensor(0., device='cuda:0')), ('of', tensor(0.1428, device='cuda:0')), ('morrisons', tensor(0., device='cuda:0')), ('milk', tensor(0., device='cuda:0')), ('contract', tensor(0.2985, device='cuda:0'))]
idx: 1337, example: tesco share price jumps as q3 sales top estimates, prediction: 1, correct_label: 1, class_scores: [0.21308225 0.4491027  0.337815  ], word_scores: ['te:0.0', '##sco:0.0', 'share:0.0', 'price:0.0', 'jumps:0.0', 'as:0.0', 'q:0.0', '##3:0.0', 'sales:0.0', 'top:0.0', 'estimates:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('jumps', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('q3', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('top', tensor(nan, device='cuda:0')), ('estimates', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('jumps', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('q3', tensor(nan, device='cuda:0')), ('sales', tensor(nan, device='cuda:0')), ('top', tensor(nan, device='cuda:0')), ('estimates', tensor(nan, device='cuda:0'))]
idx: 1338, example: $pkt momentum building for breakout trigger ! long setup , prediction: 2, correct_label: 1, class_scores: [0.251481   0.36469576 0.38382325], word_scores: ['$:0.0', 'p:0.0', '##kt:0.0', 'momentum:0.0', 'building:0.0', 'for:0.0', 'breakout:0.0', 'trigger:0.0', '!:0.0', 'long:0.0', 'setup:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('pkt', tensor(nan, device='cuda:0')), ('momentum', tensor(nan, device='cuda:0')), ('building', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('breakout', tensor(nan, device='cuda:0')), ('trigger', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('setup', tensor(nan, device='cuda:0'))],  word_scores_max: [('pkt', tensor(nan, device='cuda:0')), ('momentum', tensor(nan, device='cuda:0')), ('building', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('breakout', tensor(nan, device='cuda:0')), ('trigger', tensor(nan, device='cuda:0')), ('!', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('setup', tensor(nan, device='cuda:0'))]
idx: 1339, example: retailers kingfisher and sports direct rise in britain's share index, prediction: 2, correct_label: 1, class_scores: [0.20639475 0.34020522 0.45339993], word_scores: ['retailers:0.0', 'king:0.0', '##fish:0.0', '##er:0.0', 'and:0.0', 'sports:0.0', 'direct:0.0', 'rise:0.0', 'in:3.0217122457543155e-06', 'britain:0.0', "':0.0", 's:0.0', 'share:0.0', 'index:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('retailers', tensor(0., device='cuda:0')), ('kingfisher', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('direct', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0'))],  word_scores_max: [('retailers', tensor(0., device='cuda:0')), ('kingfisher', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('sports', tensor(0., device='cuda:0')), ('direct', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0'))]
idx: 1340, example: $xlb the weakest sector this year and possible false breakout  , prediction: 2, correct_label: 0, class_scores: [0.21062025 0.2361589  0.55322087], word_scores: ['$:0.0', 'xl:0.0', '##b:0.0', 'the:6.3806996877247e-06', 'weak:0.0', '##est:0.0', 'sector:0.0', 'this:0.0', 'year:0.0', 'and:0.0', 'possible:0.0', 'false:0.0', 'breakout:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('xlb', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('weakest', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('possible', tensor(0., device='cuda:0')), ('false', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0'))],  word_scores_max: [('xlb', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('weakest', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('possible', tensor(0., device='cuda:0')), ('false', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0'))]
idx: 1341, example: $tsla x recall not a big deal... the problem is now they will have an excuse to guide way way lower..., prediction: 2, correct_label: 2, class_scores: [0.18309595 0.3623858  0.45451826], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'x:0.0', 'recall:0.0', 'not:0.0', 'a:8.62785782373976e-06', 'big:0.0', 'deal:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'the:6.3806996877247e-06', 'problem:0.0', 'is:0.0', 'now:0.0', 'they:0.0', 'will:4.073096533829812e-06', 'have:2.910326429628185e-06', 'an:0.0', 'excuse:0.0', 'to:2.886244146793615e-06', 'guide:0.0', 'way:0.0', 'way:0.0', 'lower:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('a', tensor(0.2040, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('the', tensor(0.1509, device='cuda:0')), ('problem', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.0963, device='cuda:0')), ('have', tensor(0.0688, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('excuse', tensor(0., device='cuda:0')), ('to', tensor(0.0682, device='cuda:0')), ('guide', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('recall', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('a', tensor(0.2040, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('the', tensor(0.1509, device='cuda:0')), ('problem', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('will', tensor(0.0963, device='cuda:0')), ('have', tensor(0.0688, device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('excuse', tensor(0., device='cuda:0')), ('to', tensor(0.0682, device='cuda:0')), ('guide', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0')), ('.', tensor(0.0686, device='cuda:0'))]
idx: 1342, example: $tsla upgraded to buy @ argus w/ $333 pt - you'd almost think after ~100pt run in 5 weeks this would be the sell signal, prediction: 2, correct_label: 1, class_scores: [0.20227519 0.390783   0.40694177], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'upgraded:0.0', 'to:2.886244146793615e-06', 'buy:0.0', '@:0.0', 'argus:0.0', 'w:0.0', '/:0.0', '$:0.0', '333:0.0', 'pt:0.0', '-:4.821180027647642e-06', 'you:0.0', "':0.0", 'd:0.0', 'almost:0.0', 'think:0.0', 'after:0.0', '~:0.0', '100:0.0', '##pt:0.0', 'run:0.0', 'in:3.0217122457543155e-06', '5:0.0', 'weeks:0.0', 'this:0.0', 'would:2.0953068542439723e-06', 'be:0.0', 'the:6.3806996877247e-06', 'sell:0.0', 'signal:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('argus', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('333', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('argus', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('333', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0'))]
idx: 1343, example: royal mail 'breached competition law' over delivery service changes, ofcom claims, prediction: 2, correct_label: 2, class_scores: [0.21769157 0.38703975 0.39526868], word_scores: ['royal:0.0', 'mail:0.0', "':0.0", 'breached:0.0', 'competition:0.0', 'law:0.0', "':0.0", 'over:0.0', 'delivery:0.0', 'service:0.0', 'changes:0.0', ',:7.986737728060689e-06', 'of:3.4365734791208524e-06', '##com:0.0', 'claims:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('royal', tensor(nan, device='cuda:0'))],  word_scores_max: [('royal', tensor(nan, device='cuda:0'))]
idx: 1344, example: $vmw  got a nice push today following small sweepers of may c this morning, prediction: 2, correct_label: 2, class_scores: [0.283806   0.26035357 0.45584047], word_scores: ['$:0.0', 'v:0.0', '##m:0.0', '##w:0.0', 'got:0.0', 'a:8.62785782373976e-06', 'nice:0.0', 'push:0.0', 'today:0.0', 'following:0.0', 'small:0.0', 'sweep:0.0', '##ers:5.0093617574020755e-06', 'of:3.4365734791208524e-06', 'may:0.0', 'c:0.0', 'this:0.0', 'morning:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('vmw', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('a', tensor(0.7151, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('push', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('sweepers', tensor(0., device='cuda:0')), ('of', tensor(0.2849, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('c', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0'))],  word_scores_max: [('vmw', tensor(0., device='cuda:0')), ('got', tensor(0., device='cuda:0')), ('a', tensor(0.7151, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('push', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('following', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('sweepers', tensor(0., device='cuda:0')), ('of', tensor(0.2849, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('c', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('morning', tensor(0., device='cuda:0'))]
idx: 1345, example: expecting  $spy to close above 205.20 $aapl, prediction: 2, correct_label: 1, class_scores: [0.22655514 0.29064155 0.48280337], word_scores: ['expecting:0.0', '$:0.0', 'spy:0.0', 'to:2.886244146793615e-06', 'close:0.0', 'above:0.0', '205:0.0', '.:2.903296945078182e-06', '20:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('expecting', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('205', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))],  word_scores_max: [('expecting', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('to', tensor(0.4985, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('205', tensor(0., device='cuda:0')), ('.', tensor(0.5015, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))]
idx: 1346, example: $fb they are hitting  everything in sight.short it. but twtr, prediction: 2, correct_label: 0, class_scores: [0.2531922 0.3319429 0.414865 ], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'they:0.0', 'are:0.0', 'hitting:0.0', 'everything:0.0', 'in:3.0217122457543155e-06', 'sight:0.0', '.:2.903296945078182e-06', 'short:0.0', 'it:3.3415778943890473e-06', '.:2.903296945078182e-06', 'but:0.0', 't:0.0', '##wt:0.0', '##r:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('hitting', tensor(0., device='cuda:0')), ('everything', tensor(0., device='cuda:0')), ('in', tensor(0.2483, device='cuda:0')), ('sight', tensor(0., device='cuda:0')), ('.', tensor(0.2386, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('it', tensor(0.2746, device='cuda:0')), ('.', tensor(0.2386, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('twtr', tensor(0., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('they', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('hitting', tensor(0., device='cuda:0')), ('everything', tensor(0., device='cuda:0')), ('in', tensor(0.2483, device='cuda:0')), ('sight', tensor(0., device='cuda:0')), ('.', tensor(0.2386, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('it', tensor(0.2746, device='cuda:0')), ('.', tensor(0.2386, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('twtr', tensor(0., device='cuda:0'))]
idx: 1347, example: phew! so far good $bbry did not break 10.40 coz i was told that is key support level., prediction: 2, correct_label: 2, class_scores: [0.28447416 0.3005198  0.415006  ], word_scores: ['ph:0.0', '##ew:0.0', '!:0.0', 'so:0.0', 'far:0.0', 'good:0.0', '$:0.0', 'bb:0.0', '##ry:0.0', 'did:0.0', 'not:0.0', 'break:0.0', '10:0.0', '.:2.903296945078182e-06', '40:0.0', 'co:0.0', '##z:0.0', 'i:0.0', 'was:0.0', 'told:0.0', 'that:1.5133816759771435e-06', 'is:0.0', 'key:0.0', 'support:0.0', 'level:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('phew', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('bbry', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.3966, device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('coz', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('told', tensor(0., device='cuda:0')), ('that', tensor(0.2067, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('.', tensor(0.3966, device='cuda:0'))],  word_scores_max: [('phew', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('bbry', tensor(0., device='cuda:0')), ('did', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.3966, device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('coz', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('told', tensor(0., device='cuda:0')), ('that', tensor(0.2067, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('level', tensor(0., device='cuda:0')), ('.', tensor(0.3966, device='cuda:0'))]
idx: 1348, example: $nvda sideways, prediction: 2, correct_label: 2, class_scores: [0.14881563 0.38421193 0.46697244], word_scores: ['$:0.0', 'n:0.0', '##vd:0.0', '##a:3.804580501309829e-06', 'sideways:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nvda', tensor(nan, device='cuda:0')), ('sideways', tensor(nan, device='cuda:0'))],  word_scores_max: [('nvda', tensor(nan, device='cuda:0')), ('sideways', tensor(nan, device='cuda:0'))]
idx: 1349, example: followed the levels i shared with you on $nflx $googl $tsla calls for nice gains. still holding $fb 110 calls. week made in a morning., prediction: 2, correct_label: 1, class_scores: [0.18274046 0.2972887  0.51997083], word_scores: ['followed:0.0', 'the:6.3806996877247e-06', 'levels:0.0', 'i:0.0', 'shared:0.0', 'with:4.733654350275174e-06', 'you:0.0', 'on:0.0', '$:0.0', 'nfl:0.0', '##x:0.0', '$:0.0', 'goo:0.0', '##gl:0.0', '$:0.0', 'ts:0.0', '##la:0.0', 'calls:0.0', 'for:0.0', 'nice:0.0', 'gains:0.0', '.:2.903296945078182e-06', 'still:0.0', 'holding:0.0', '$:0.0', 'f:0.0', '##b:0.0', '110:0.0', 'calls:0.0', '.:2.903296945078182e-06', 'week:0.0', 'made:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'morning:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('followed', tensor(0., device='cuda:0')), ('the', tensor(0.2027, device='cuda:0')), ('levels', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('shared', tensor(0., device='cuda:0')), ('with', tensor(0.1504, device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('nflx', tensor(0., device='cuda:0')), ('googl', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('110', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('in', tensor(0.0960, device='cuda:0')), ('a', tensor(0.2741, device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0'))],  word_scores_max: [('followed', tensor(0., device='cuda:0')), ('the', tensor(0.2027, device='cuda:0')), ('levels', tensor(0., device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('shared', tensor(0., device='cuda:0')), ('with', tensor(0.1504, device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('nflx', tensor(0., device='cuda:0')), ('googl', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('holding', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('110', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('made', tensor(0., device='cuda:0')), ('in', tensor(0.0960, device='cuda:0')), ('a', tensor(0.2741, device='cuda:0')), ('morning', tensor(0., device='cuda:0')), ('.', tensor(0.0922, device='cuda:0'))]
idx: 1350, example: fastenal misses by $0.01, misses on revenue $fast #nyse , prediction: 1, correct_label: 0, class_scores: [0.2529792  0.37948978 0.36753103], word_scores: ['fast:0.0', '##ena:0.0', '##l:0.0', 'misses:0.0', 'by:0.0', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '01:0.0', ',:7.986737728060689e-06', 'misses:0.0', 'on:0.0', 'revenue:0.0', '$:0.0', 'fast:0.0', '#:0.0', 'ny:0.0', '##se:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fastenal', tensor(0., device='cuda:0')), ('misses', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2666, device='cuda:0')), ('01', tensor(0., device='cuda:0')), (',', tensor(0.7334, device='cuda:0')), ('misses', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('fast', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0'))],  word_scores_max: [('fastenal', tensor(0., device='cuda:0')), ('misses', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.2666, device='cuda:0')), ('01', tensor(0., device='cuda:0')), (',', tensor(0.7334, device='cuda:0')), ('misses', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('fast', tensor(0., device='cuda:0')), ('nyse', tensor(0., device='cuda:0'))]
idx: 1351, example: $trx  long setup. macd cross., prediction: 2, correct_label: 1, class_scores: [0.2061357  0.33998084 0.45388347], word_scores: ['$:0.0', 'tr:0.0', '##x:0.0', 'long:0.0', 'setup:0.0', '.:2.903296945078182e-06', 'mac:0.0', '##d:0.0', 'cross:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('trx', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('setup', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('trx', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('setup', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('cross', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0'))]
idx: 1352, example: why alphabet inc was just upgraded to buy  $googl, prediction: 2, correct_label: 1, class_scores: [0.17745648 0.22610335 0.5964402 ], word_scores: ['why:0.0', 'alphabet:0.0', 'inc:0.0', 'was:0.0', 'just:0.0', 'upgraded:0.0', 'to:2.886244146793615e-06', 'buy:0.0', '$:0.0', 'goo:0.0', '##gl:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('why', tensor(0., device='cuda:0')), ('alphabet', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('googl', tensor(0., device='cuda:0'))],  word_scores_max: [('why', tensor(0., device='cuda:0')), ('alphabet', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('just', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('googl', tensor(0., device='cuda:0'))]
idx: 1353, example: sainsbury's says to outperform rivals in tough market, prediction: 2, correct_label: 1, class_scores: [0.18735088 0.25102228 0.5616268 ], word_scores: ['sai:0.0', '##ns:0.0', '##bury:0.0', "':0.0", 's:0.0', 'says:0.0', 'to:2.886244146793615e-06', 'out:0.0', '##per:0.0', '##form:0.0', 'rivals:0.0', 'in:3.0217122457543155e-06', 'tough:0.0', 'market:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1354, example: covered my small $mww short @ 7.99 for a .16 loss. flat on the day. all cash now., prediction: 1, correct_label: 1, class_scores: [0.13857493 0.5728858  0.28853923], word_scores: ['covered:0.0', 'my:0.0', 'small:0.0', '$:0.0', 'mw:0.0', '##w:0.0', 'short:0.0', '@:0.0', '7:0.0', '.:2.903296945078182e-06', '99:0.0', 'for:0.0', 'a:8.62785782373976e-06', '.:2.903296945078182e-06', '16:0.0', 'loss:0.0', '.:2.903296945078182e-06', 'flat:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'day:0.0', '.:2.903296945078182e-06', 'all:0.0', 'cash:0.0', 'now:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('covered', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('mww', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2922, device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('flat', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2161, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0'))],  word_scores_max: [('covered', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('mww', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('99', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2922, device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('flat', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2161, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('cash', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.0983, device='cuda:0'))]
idx: 1355, example: last month we added to our $gild position and started a new one in $bwld we see slow, steady, unspectacular growth going forward near term, prediction: 2, correct_label: 1, class_scores: [0.25956923 0.36245877 0.37797198], word_scores: ['last:0.0', 'month:0.0', 'we:0.0', 'added:0.0', 'to:2.886244146793615e-06', 'our:0.0', '$:0.0', 'gil:0.0', '##d:0.0', 'position:0.0', 'and:0.0', 'started:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'one:4.584404450724833e-06', 'in:3.0217122457543155e-06', '$:0.0', 'b:0.0', '##wl:0.0', '##d:0.0', 'we:0.0', 'see:0.0', 'slow:0.0', ',:7.986737728060689e-06', 'steady:0.0', ',:7.986737728060689e-06', 'un:0.0', '##sp:0.0', '##ect:0.0', '##ac:0.0', '##ular:0.0', 'growth:0.0', 'going:0.0', 'forward:0.0', 'near:0.0', 'term:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('last', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('to', tensor(0.0762, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('gild', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('a', tensor(0.2277, device='cuda:0')), ('new', tensor(0.0739, device='cuda:0')), ('one', tensor(0.1210, device='cuda:0')), ('in', tensor(0.0797, device='cuda:0')), ('bwld', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('slow', tensor(0., device='cuda:0')), (',', tensor(0.2108, device='cuda:0')), ('steady', tensor(0., device='cuda:0')), (',', tensor(0.2108, device='cuda:0')), ('unspectacular', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0'))],  word_scores_max: [('last', tensor(0., device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('added', tensor(0., device='cuda:0')), ('to', tensor(0.0762, device='cuda:0')), ('our', tensor(0., device='cuda:0')), ('gild', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('started', tensor(0., device='cuda:0')), ('a', tensor(0.2277, device='cuda:0')), ('new', tensor(0.0739, device='cuda:0')), ('one', tensor(0.1210, device='cuda:0')), ('in', tensor(0.0797, device='cuda:0')), ('bwld', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('slow', tensor(0., device='cuda:0')), (',', tensor(0.2108, device='cuda:0')), ('steady', tensor(0., device='cuda:0')), (',', tensor(0.2108, device='cuda:0')), ('unspectacular', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('forward', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0'))]
idx: 1356, example: nasdaq sets up for breakout part ii | via @allstarcharts   $goog $amzn $qcom, prediction: 1, correct_label: 1, class_scores: [0.18204646 0.47279692 0.34515658], word_scores: ['nas:0.0', '##da:0.0', '##q:0.0', 'sets:0.0', 'up:1.4959460941099678e-06', 'for:0.0', 'breakout:0.0', 'part:0.0', 'ii:0.0', '|:0.0', 'via:0.0', '@:0.0', 'all:0.0', '##star:0.0', '##cha:0.0', '##rts:0.0', '$:0.0', 'goo:0.0', '##g:0.0', '$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', '$:0.0', 'qc:0.0', '##om:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nasdaq', tensor(0., device='cuda:0')), ('sets', tensor(0., device='cuda:0')), ('up', tensor(1., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('ii', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('allstarcharts', tensor(0., device='cuda:0')), ('goog', tensor(0., device='cuda:0')), ('amzn', tensor(0., device='cuda:0')), ('qcom', tensor(0., device='cuda:0'))],  word_scores_max: [('nasdaq', tensor(0., device='cuda:0')), ('sets', tensor(0., device='cuda:0')), ('up', tensor(1., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('part', tensor(0., device='cuda:0')), ('ii', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('allstarcharts', tensor(0., device='cuda:0')), ('goog', tensor(0., device='cuda:0')), ('amzn', tensor(0., device='cuda:0')), ('qcom', tensor(0., device='cuda:0'))]
idx: 1357, example: $endp being sued by ftc.....nobody will buy them with that hanging over their heads, prediction: 2, correct_label: 0, class_scores: [0.16819394 0.30740902 0.524397  ], word_scores: ['$:0.0', 'end:0.0', '##p:0.0', 'being:0.0', 'sued:0.0', 'by:0.0', 'ft:0.0', '##c:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'nobody:0.0', 'will:4.073096533829812e-06', 'buy:0.0', 'them:0.0', 'with:4.733654350275174e-06', 'that:1.5133816759771435e-06', 'hanging:0.0', 'over:0.0', 'their:0.0', 'heads:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('endp', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('sued', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ftc', tensor(0., device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('nobody', tensor(0., device='cuda:0')), ('will', tensor(0.1640, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('them', tensor(0., device='cuda:0')), ('with', tensor(0.1906, device='cuda:0')), ('that', tensor(0.0609, device='cuda:0')), ('hanging', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('heads', tensor(0., device='cuda:0'))],  word_scores_max: [('endp', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('sued', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('ftc', tensor(0., device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('.', tensor(0.1169, device='cuda:0')), ('nobody', tensor(0., device='cuda:0')), ('will', tensor(0.1640, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('them', tensor(0., device='cuda:0')), ('with', tensor(0.1906, device='cuda:0')), ('that', tensor(0.0609, device='cuda:0')), ('hanging', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('their', tensor(0., device='cuda:0')), ('heads', tensor(0., device='cuda:0'))]
idx: 1358, example: $rnn day traders flushed out, it should start going up slowly from now on ., prediction: 2, correct_label: 1, class_scores: [0.17428003 0.36193284 0.4637872 ], word_scores: ['$:0.0', 'rn:0.0', '##n:0.0', 'day:0.0', 'traders:0.0', 'flushed:0.0', 'out:0.0', ',:7.986737728060689e-06', 'it:3.3415778943890473e-06', 'should:0.0', 'start:0.0', 'going:0.0', 'up:1.4959460941099678e-06', 'slowly:0.0', 'from:4.495178018260049e-06', 'now:0.0', 'on:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('rnn', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('traders', tensor(0., device='cuda:0')), ('flushed', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), (',', tensor(0.3949, device='cuda:0')), ('it', tensor(0.1652, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('up', tensor(0.0740, device='cuda:0')), ('slowly', tensor(0., device='cuda:0')), ('from', tensor(0.2223, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('.', tensor(0.1436, device='cuda:0'))],  word_scores_max: [('rnn', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('traders', tensor(0., device='cuda:0')), ('flushed', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), (',', tensor(0.3949, device='cuda:0')), ('it', tensor(0.1652, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('start', tensor(0., device='cuda:0')), ('going', tensor(0., device='cuda:0')), ('up', tensor(0.0740, device='cuda:0')), ('slowly', tensor(0., device='cuda:0')), ('from', tensor(0.2223, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('.', tensor(0.1436, device='cuda:0'))]
idx: 1359, example: $lulu  bounced off support early in week - now indicators turning up (rsi, macd, smi) worth a look, prediction: 2, correct_label: 1, class_scores: [0.19348447 0.36635086 0.44016472], word_scores: ['$:0.0', 'lulu:0.0', 'bounced:0.0', 'off:0.0', 'support:0.0', 'early:0.0', 'in:3.0217122457543155e-06', 'week:0.0', '-:4.821180027647642e-06', 'now:0.0', 'indicators:0.0', 'turning:0.0', 'up:1.4959460941099678e-06', '(:0.0', 'rs:0.0', '##i:0.0', ',:7.986737728060689e-06', 'mac:0.0', '##d:0.0', ',:7.986737728060689e-06', 'sm:0.0', '##i:0.0', '):0.0', 'worth:0.0', 'a:8.62785782373976e-06', 'look:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lulu', tensor(0., device='cuda:0')), ('bounced', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('in', tensor(0.0890, device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('-', tensor(0.1420, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('indicators', tensor(0., device='cuda:0')), ('turning', tensor(0., device='cuda:0')), ('up', tensor(0.0441, device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), (',', tensor(0.2353, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), (',', tensor(0.2353, device='cuda:0')), ('smi', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('a', tensor(0.2542, device='cuda:0')), ('look', tensor(0., device='cuda:0'))],  word_scores_max: [('lulu', tensor(0., device='cuda:0')), ('bounced', tensor(0., device='cuda:0')), ('off', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('in', tensor(0.0890, device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('-', tensor(0.1420, device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('indicators', tensor(0., device='cuda:0')), ('turning', tensor(0., device='cuda:0')), ('up', tensor(0.0441, device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), (',', tensor(0.2353, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), (',', tensor(0.2353, device='cuda:0')), ('smi', tensor(0., device='cuda:0')), ('worth', tensor(0., device='cuda:0')), ('a', tensor(0.2542, device='cuda:0')), ('look', tensor(0., device='cuda:0'))]
idx: 1360, example: $rost ross stores upgraded to outperform at rbc capital markets , prediction: 2, correct_label: 1, class_scores: [0.23274308 0.36373076 0.40352616], word_scores: ['$:0.0', 'ro:0.0', '##st:0.0', 'ross:0.0', 'stores:0.0', 'upgraded:0.0', 'to:2.886244146793615e-06', 'out:0.0', '##per:0.0', '##form:0.0', 'at:0.0', 'rb:0.0', '##c:0.0', 'capital:0.0', 'markets:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rost', tensor(0., device='cuda:0')), ('ross', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('outperform', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('rbc', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))],  word_scores_max: [('rost', tensor(0., device='cuda:0')), ('ross', tensor(0., device='cuda:0')), ('stores', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('outperform', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('rbc', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0'))]
idx: 1361, example: barclays bonds rise as lender cuts dividends to shore up capital, prediction: 2, correct_label: 2, class_scores: [0.14345215 0.30899444 0.5475534 ], word_scores: ['barclay:0.0', '##s:4.601175078278175e-06', 'bonds:0.0', 'rise:0.0', 'as:0.0', 'lend:0.0', '##er:0.0', 'cuts:0.0', 'divide:0.0', '##nds:0.0', 'to:2.886244146793615e-06', 'shore:0.0', 'up:1.4959460941099678e-06', 'capital:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('barclays', tensor(0., device='cuda:0')), ('bonds', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('lender', tensor(0., device='cuda:0')), ('cuts', tensor(0., device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('shore', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('capital', tensor(0., device='cuda:0'))],  word_scores_max: [('barclays', tensor(0., device='cuda:0')), ('bonds', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('lender', tensor(0., device='cuda:0')), ('cuts', tensor(0., device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('shore', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('capital', tensor(0., device='cuda:0'))]
idx: 1362, example: irish said chasing standard chartered, rbs as brexit vote nears, prediction: 2, correct_label: 2, class_scores: [0.15418161 0.36927077 0.4765477 ], word_scores: ['irish:0.0', 'said:0.0', 'chasing:0.0', 'standard:0.0', 'chartered:0.0', ',:7.986737728060689e-06', 'rb:0.0', '##s:4.601175078278175e-06', 'as:0.0', 'br:0.0', '##ex:0.0', '##it:0.0', 'vote:0.0', 'near:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('irish', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('chasing', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('brexit', tensor(0., device='cuda:0')), ('vote', tensor(0., device='cuda:0')), ('nears', tensor(0., device='cuda:0'))],  word_scores_max: [('irish', tensor(0., device='cuda:0')), ('said', tensor(0., device='cuda:0')), ('chasing', tensor(0., device='cuda:0')), ('standard', tensor(0., device='cuda:0')), ('chartered', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('brexit', tensor(0., device='cuda:0')), ('vote', tensor(0., device='cuda:0')), ('nears', tensor(0., device='cuda:0'))]
idx: 1363, example: long $vvus shares as a call option w/ an expiration of..  umm.. today.    hitting hod here., prediction: 1, correct_label: 1, class_scores: [0.18561013 0.49493408 0.31945574], word_scores: ['long:0.0', '$:0.0', 'v:0.0', '##vus:0.0', 'shares:0.0', 'as:0.0', 'a:8.62785782373976e-06', 'call:0.0', 'option:0.0', 'w:0.0', '/:0.0', 'an:0.0', 'ex:0.0', '##piration:0.0', 'of:3.4365734791208524e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'umm:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'today:0.0', '.:2.903296945078182e-06', 'hitting:0.0', 'ho:0.0', '##d:0.0', 'here:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('long', tensor(0., device='cuda:0')), ('vvus', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.2926, device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('expiration', tensor(0., device='cuda:0')), ('of', tensor(0.1166, device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('umm', tensor(0., device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('hitting', tensor(0., device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0985, device='cuda:0'))],  word_scores_max: [('long', tensor(0., device='cuda:0')), ('vvus', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('a', tensor(0.2926, device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('option', tensor(0., device='cuda:0')), ('w', tensor(0., device='cuda:0')), ('an', tensor(0., device='cuda:0')), ('expiration', tensor(0., device='cuda:0')), ('of', tensor(0.1166, device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('umm', tensor(0., device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.0985, device='cuda:0')), ('hitting', tensor(0., device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0985, device='cuda:0'))]
idx: 1364, example: johnson matthey share price slumps as company posts full-year results, prediction: 1, correct_label: 0, class_scores: [0.17019603 0.4392778  0.39052615], word_scores: ['johnson:0.0', 'matt:0.0', '##hey:0.0', 'share:0.0', 'price:0.0', 'slump:0.0', '##s:4.601175078278175e-06', 'as:0.0', 'company:6.695386673527537e-06', 'posts:0.0', 'full:3.0938992949813837e-06', '-:4.821180027647642e-06', 'year:0.0', 'results:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('johnson', tensor(0., device='cuda:0')), ('matthey', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('slumps', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('company', tensor(0.4583, device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('full', tensor(0.2118, device='cuda:0')), ('-', tensor(0.3300, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('results', tensor(0., device='cuda:0'))],  word_scores_max: [('johnson', tensor(0., device='cuda:0')), ('matthey', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('slumps', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('company', tensor(0.4583, device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('full', tensor(0.2118, device='cuda:0')), ('-', tensor(0.3300, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('results', tensor(0., device='cuda:0'))]
idx: 1365, example: $aapl aapl: gundlach slams ipad mini, sees downside to $425. , prediction: 2, correct_label: 2, class_scores: [0.22427899 0.23720713 0.5385139 ], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'aa:0.0', '##pl:0.0', '::0.0', 'gun:0.0', '##dl:0.0', '##ach:0.0', 'slams:0.0', 'ipad:0.0', 'mini:0.0', ',:7.986737728060689e-06', 'sees:0.0', 'downs:0.0', '##ide:0.0', 'to:2.886244146793615e-06', '$:0.0', '425:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('gundlach', tensor(0., device='cuda:0')), ('slams', tensor(0., device='cuda:0')), ('ipad', tensor(0., device='cuda:0')), ('mini', tensor(0., device='cuda:0')), (',', tensor(0.5797, device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('to', tensor(0.2095, device='cuda:0')), ('425', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('gundlach', tensor(0., device='cuda:0')), ('slams', tensor(0., device='cuda:0')), ('ipad', tensor(0., device='cuda:0')), ('mini', tensor(0., device='cuda:0')), (',', tensor(0.5797, device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('to', tensor(0.2095, device='cuda:0')), ('425', tensor(0., device='cuda:0')), ('.', tensor(0.2107, device='cuda:0'))]
idx: 1366, example: eu drops shell, bp, statoil from ethanol benchmark investigation, prediction: 2, correct_label: 2, class_scores: [0.19474402 0.28337812 0.5218778 ], word_scores: ['eu:0.0', 'drops:0.0', 'shell:0.0', ',:7.986737728060689e-06', 'bp:0.0', ',:7.986737728060689e-06', 'stat:0.0', '##oi:0.0', '##l:0.0', 'from:4.495178018260049e-06', 'ethanol:0.0', 'bench:0.0', '##mark:0.0', 'investigation:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('eu', tensor(0., device='cuda:0')), ('drops', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), (',', tensor(0.3902, device='cuda:0')), ('bp', tensor(0., device='cuda:0')), (',', tensor(0.3902, device='cuda:0')), ('statoil', tensor(0., device='cuda:0')), ('from', tensor(0.2196, device='cuda:0')), ('ethanol', tensor(0., device='cuda:0')), ('benchmark', tensor(0., device='cuda:0')), ('investigation', tensor(0., device='cuda:0'))],  word_scores_max: [('eu', tensor(0., device='cuda:0')), ('drops', tensor(0., device='cuda:0')), ('shell', tensor(0., device='cuda:0')), (',', tensor(0.3902, device='cuda:0')), ('bp', tensor(0., device='cuda:0')), (',', tensor(0.3902, device='cuda:0')), ('statoil', tensor(0., device='cuda:0')), ('from', tensor(0.2196, device='cuda:0')), ('ethanol', tensor(0., device='cuda:0')), ('benchmark', tensor(0., device='cuda:0')), ('investigation', tensor(0., device='cuda:0'))]
idx: 1367, example: $aapl goldman sachs reiterates conviction buy on apple with a $155 pt $spy $djia $gs , prediction: 2, correct_label: 1, class_scores: [0.30715185 0.24802022 0.44482794], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'goldman:0.0', 'sachs:0.0', 'rei:0.0', '##tera:0.0', '##tes:0.0', 'conviction:0.0', 'buy:0.0', 'on:0.0', 'apple:0.0', 'with:4.733654350275174e-06', 'a:8.62785782373976e-06', '$:0.0', '155:0.0', 'pt:0.0', '$:0.0', 'spy:0.0', '$:0.0', 'dj:0.0', '##ia:0.0', '$:0.0', 'gs:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('goldman', tensor(0., device='cuda:0')), ('sachs', tensor(0., device='cuda:0')), ('reiterates', tensor(0., device='cuda:0')), ('conviction', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('with', tensor(0.3543, device='cuda:0')), ('a', tensor(0.6457, device='cuda:0')), ('155', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('djia', tensor(0., device='cuda:0')), ('gs', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('goldman', tensor(0., device='cuda:0')), ('sachs', tensor(0., device='cuda:0')), ('reiterates', tensor(0., device='cuda:0')), ('conviction', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('with', tensor(0.3543, device='cuda:0')), ('a', tensor(0.6457, device='cuda:0')), ('155', tensor(0., device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('spy', tensor(0., device='cuda:0')), ('djia', tensor(0., device='cuda:0')), ('gs', tensor(0., device='cuda:0'))]
idx: 1368, example: market report: aviva tops the market as traders approve of its choice of friends, prediction: 2, correct_label: 1, class_scores: [0.18739094 0.31513876 0.49747026], word_scores: ['market:0.0', 'report:0.0', '::0.0', 'aviv:0.0', '##a:3.804580501309829e-06', 'tops:0.0', 'the:6.3806996877247e-06', 'market:0.0', 'as:0.0', 'traders:0.0', 'approve:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'choice:0.0', 'of:3.4365734791208524e-06', 'friends:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('market', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('tops', tensor(0., device='cuda:0')), ('the', tensor(0.4261, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('traders', tensor(0., device='cuda:0')), ('approve', tensor(0., device='cuda:0')), ('of', tensor(0.2295, device='cuda:0')), ('its', tensor(0.1148, device='cuda:0')), ('choice', tensor(0., device='cuda:0')), ('of', tensor(0.2295, device='cuda:0')), ('friends', tensor(0., device='cuda:0'))],  word_scores_max: [('market', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('aviva', tensor(0., device='cuda:0')), ('tops', tensor(0., device='cuda:0')), ('the', tensor(0.4261, device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('traders', tensor(0., device='cuda:0')), ('approve', tensor(0., device='cuda:0')), ('of', tensor(0.2295, device='cuda:0')), ('its', tensor(0.1148, device='cuda:0')), ('choice', tensor(0., device='cuda:0')), ('of', tensor(0.2295, device='cuda:0')), ('friends', tensor(0., device='cuda:0'))]
idx: 1369, example: kinder morgan and bp form joint venture limited liability company to purchase ..., prediction: 1, correct_label: 2, class_scores: [0.22398353 0.4165576  0.35945886], word_scores: ['kind:0.0', '##er:0.0', 'morgan:0.0', 'and:0.0', 'bp:0.0', 'form:0.0', 'joint:0.0', 'venture:0.0', 'limited:0.0', 'liability:0.0', 'company:6.695386673527537e-06', 'to:2.886244146793615e-06', 'purchase:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('kinder', tensor(0., device='cuda:0')), ('morgan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bp', tensor(0., device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('limited', tensor(0., device='cuda:0')), ('liability', tensor(0., device='cuda:0')), ('company', tensor(0.3660, device='cuda:0')), ('to', tensor(0.1578, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('.', tensor(0.1587, device='cuda:0'))],  word_scores_max: [('kinder', tensor(0., device='cuda:0')), ('morgan', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('bp', tensor(0., device='cuda:0')), ('form', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('limited', tensor(0., device='cuda:0')), ('liability', tensor(0., device='cuda:0')), ('company', tensor(0.3660, device='cuda:0')), ('to', tensor(0.1578, device='cuda:0')), ('purchase', tensor(0., device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('.', tensor(0.1587, device='cuda:0')), ('.', tensor(0.1587, device='cuda:0'))]
idx: 1370, example: update 1-astrazeneca buys zs pharma for $2.7 billion, pips actelion, prediction: 2, correct_label: 1, class_scores: [0.19891551 0.36158723 0.43949732], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'buys:0.0', 'z:0.0', '##s:4.601175078278175e-06', 'ph:0.0', '##arm:0.0', '##a:3.804580501309829e-06', 'for:0.0', '$:0.0', '2:0.0', '.:2.903296945078182e-06', '7:0.0', 'billion:0.0', ',:7.986737728060689e-06', 'pip:0.0', '##s:4.601175078278175e-06', 'act:0.0', '##eli:0.0', '##on:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.3069, device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('buys', tensor(0., device='cuda:0')), ('zs', tensor(0., device='cuda:0')), ('pharma', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1848, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), (',', tensor(0.5083, device='cuda:0')), ('pips', tensor(0., device='cuda:0')), ('actelion', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.3069, device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('buys', tensor(0., device='cuda:0')), ('zs', tensor(0., device='cuda:0')), ('pharma', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.1848, device='cuda:0')), ('7', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), (',', tensor(0.5083, device='cuda:0')), ('pips', tensor(0., device='cuda:0')), ('actelion', tensor(0., device='cuda:0'))]
idx: 1371, example: $kndi break that hod on volume, and we have a nice consolidation completed for another run., prediction: 2, correct_label: 1, class_scores: [0.19621877 0.32937548 0.47440574], word_scores: ['$:0.0', 'kn:0.0', '##di:0.0', 'break:0.0', 'that:1.5133816759771435e-06', 'ho:0.0', '##d:0.0', 'on:0.0', 'volume:0.0', ',:7.986737728060689e-06', 'and:0.0', 'we:0.0', 'have:2.910326429628185e-06', 'a:8.62785782373976e-06', 'nice:0.0', 'consolidation:0.0', 'completed:0.0', 'for:0.0', 'another:0.0', 'run:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kndi', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('that', tensor(0.0632, device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), (',', tensor(0.3336, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.1216, device='cuda:0')), ('a', tensor(0.3604, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0'))],  word_scores_max: [('kndi', tensor(0., device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('that', tensor(0.0632, device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), (',', tensor(0.3336, device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('have', tensor(0.1216, device='cuda:0')), ('a', tensor(0.3604, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('consolidation', tensor(0., device='cuda:0')), ('completed', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('.', tensor(0.1213, device='cuda:0'))]
idx: 1372, example: $aapl double bottom could be in, keep in mind, prediction: 2, correct_label: 2, class_scores: [0.174941   0.3013998  0.52365917], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'double:0.0', 'bottom:0.0', 'could:0.0', 'be:0.0', 'in:3.0217122457543155e-06', ',:7.986737728060689e-06', 'keep:0.0', 'in:3.0217122457543155e-06', 'mind:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('in', tensor(0.2154, device='cuda:0')), (',', tensor(0.5693, device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('in', tensor(0.2154, device='cuda:0')), ('mind', tensor(0., device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('bottom', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('in', tensor(0.2154, device='cuda:0')), (',', tensor(0.5693, device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('in', tensor(0.2154, device='cuda:0')), ('mind', tensor(0., device='cuda:0'))]
idx: 1373, example: new credit suisse boss faces stiff challenge in asia, prediction: 2, correct_label: 2, class_scores: [0.2096543  0.3872977  0.40304804], word_scores: ['new:2.798587502184091e-06', 'credit:0.0', 'sui:0.0', '##sse:0.0', 'boss:0.0', 'faces:0.0', 'stiff:0.0', 'challenge:0.0', 'in:3.0217122457543155e-06', 'asia:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('new', tensor(0.4808, device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('suisse', tensor(0., device='cuda:0')), ('boss', tensor(0., device='cuda:0')), ('faces', tensor(0., device='cuda:0')), ('stiff', tensor(0., device='cuda:0')), ('challenge', tensor(0., device='cuda:0')), ('in', tensor(0.5192, device='cuda:0')), ('asia', tensor(0., device='cuda:0'))],  word_scores_max: [('new', tensor(0.4808, device='cuda:0')), ('credit', tensor(0., device='cuda:0')), ('suisse', tensor(0., device='cuda:0')), ('boss', tensor(0., device='cuda:0')), ('faces', tensor(0., device='cuda:0')), ('stiff', tensor(0., device='cuda:0')), ('challenge', tensor(0., device='cuda:0')), ('in', tensor(0.5192, device='cuda:0')), ('asia', tensor(0., device='cuda:0'))]
idx: 1374, example: $iwm same conditions that sent markets to tumble all hitting this week, prediction: 2, correct_label: 2, class_scores: [0.15619    0.37422967 0.46958032], word_scores: ['$:0.0', 'i:0.0', '##w:0.0', '##m:0.0', 'same:0.0', 'conditions:0.0', 'that:1.5133816759771435e-06', 'sent:0.0', 'markets:0.0', 'to:2.886244146793615e-06', 'tumble:0.0', 'all:0.0', 'hitting:0.0', 'this:0.0', 'week:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('iwm', tensor(0., device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('that', tensor(0.3440, device='cuda:0')), ('sent', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('to', tensor(0.6560, device='cuda:0')), ('tumble', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('hitting', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))],  word_scores_max: [('iwm', tensor(0., device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('that', tensor(0.3440, device='cuda:0')), ('sent', tensor(0., device='cuda:0')), ('markets', tensor(0., device='cuda:0')), ('to', tensor(0.6560, device='cuda:0')), ('tumble', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('hitting', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0'))]
idx: 1375, example: trlpc - crh backs lafarge holcim asset buy with 6.5 bln euro bridge loan, prediction: 2, correct_label: 1, class_scores: [0.2217067  0.36359566 0.41469762], word_scores: ['tr:0.0', '##lp:0.0', '##c:0.0', '-:4.821180027647642e-06', 'cr:0.0', '##h:0.0', 'backs:0.0', 'la:0.0', '##far:0.0', '##ge:0.0', 'ho:0.0', '##lc:0.0', '##im:0.0', 'asset:0.0', 'buy:0.0', 'with:4.733654350275174e-06', '6:0.0', '.:2.903296945078182e-06', '5:0.0', 'b:0.0', '##ln:0.0', 'euro:0.0', 'bridge:0.0', 'loan:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('trlpc', tensor(0., device='cuda:0')), ('-', tensor(0.3870, device='cuda:0')), ('crh', tensor(0., device='cuda:0')), ('backs', tensor(0., device='cuda:0')), ('lafarge', tensor(0., device='cuda:0')), ('holcim', tensor(0., device='cuda:0')), ('asset', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('with', tensor(0.3800, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.2330, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0'))],  word_scores_max: [('trlpc', tensor(0., device='cuda:0')), ('-', tensor(0.3870, device='cuda:0')), ('crh', tensor(0., device='cuda:0')), ('backs', tensor(0., device='cuda:0')), ('lafarge', tensor(0., device='cuda:0')), ('holcim', tensor(0., device='cuda:0')), ('asset', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('with', tensor(0.3800, device='cuda:0')), ('6', tensor(0., device='cuda:0')), ('.', tensor(0.2330, device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('euro', tensor(0., device='cuda:0')), ('bridge', tensor(0., device='cuda:0')), ('loan', tensor(0., device='cuda:0'))]
idx: 1376, example: aviva promises higher dividends to boost flagging share price, prediction: 1, correct_label: 2, class_scores: [0.12895192 0.4483676  0.42268044], word_scores: ['aviv:0.0', '##a:3.804580501309829e-06', 'promises:0.0', 'higher:0.0', 'divide:0.0', '##nds:0.0', 'to:2.886244146793615e-06', 'boost:0.0', 'flag:0.0', '##ging:0.0', 'share:0.0', 'price:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aviva', tensor(0., device='cuda:0')), ('promises', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('boost', tensor(0., device='cuda:0')), ('flagging', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))],  word_scores_max: [('aviva', tensor(0., device='cuda:0')), ('promises', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('dividends', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('boost', tensor(0., device='cuda:0')), ('flagging', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0'))]
idx: 1377, example: $ctrp breaking out , prediction: 2, correct_label: 1, class_scores: [0.3088886  0.28299692 0.40811452], word_scores: ['$:0.0', 'ct:0.0', '##rp:0.0', 'breaking:0.0', 'out:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ctrp', tensor(nan, device='cuda:0')), ('breaking', tensor(nan, device='cuda:0')), ('out', tensor(nan, device='cuda:0'))],  word_scores_max: [('ctrp', tensor(nan, device='cuda:0')), ('breaking', tensor(nan, device='cuda:0')), ('out', tensor(nan, device='cuda:0'))]
idx: 1378, example: sab's chairman digs in with board divided on inbev offer, prediction: 2, correct_label: 2, class_scores: [0.24898583 0.3238317  0.42718244], word_scores: ['sa:0.0', '##b:0.0', "':0.0", 's:0.0', 'chairman:3.5376444884605007e-06', 'dig:0.0', '##s:4.601175078278175e-06', 'in:3.0217122457543155e-06', 'with:4.733654350275174e-06', 'board:0.0', 'divided:0.0', 'on:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'offer:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1379, example: still short $lng from $11.70 area...next stop could be down through $9.00. someone slammed it hard with 230,000 shs this am! more to follow, prediction: 2, correct_label: 0, class_scores: [0.19354063 0.31591573 0.4905437 ], word_scores: ['still:0.0', 'short:0.0', '$:0.0', 'l:0.0', '##ng:0.0', 'from:4.495178018260049e-06', '$:0.0', '11:0.0', '.:2.903296945078182e-06', '70:0.0', 'area:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'next:0.0', 'stop:0.0', 'could:0.0', 'be:0.0', 'down:0.0', 'through:0.0', '$:0.0', '9:0.0', '.:2.903296945078182e-06', '00:0.0', '.:2.903296945078182e-06', 'someone:0.0', 'slammed:0.0', 'it:3.3415778943890473e-06', 'hard:0.0', 'with:4.733654350275174e-06', '230:0.0', ',:7.986737728060689e-06', '000:0.0', 'sh:0.0', '##s:4.601175078278175e-06', 'this:0.0', 'am:0.0', '!:0.0', 'more:0.0', 'to:2.886244146793615e-06', 'follow:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('still', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('lng', tensor(0., device='cuda:0')), ('from', tensor(0.1100, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('stop', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('someone', tensor(0., device='cuda:0')), ('slammed', tensor(0., device='cuda:0')), ('it', tensor(0.0818, device='cuda:0')), ('hard', tensor(0., device='cuda:0')), ('with', tensor(0.1158, device='cuda:0')), ('230', tensor(0., device='cuda:0')), (',', tensor(0.1955, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('shs', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('to', tensor(0.0706, device='cuda:0')), ('follow', tensor(0., device='cuda:0'))],  word_scores_max: [('still', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('lng', tensor(0., device='cuda:0')), ('from', tensor(0.1100, device='cuda:0')), ('11', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('70', tensor(0., device='cuda:0')), ('area', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('stop', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('through', tensor(0., device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('00', tensor(0., device='cuda:0')), ('.', tensor(0.0710, device='cuda:0')), ('someone', tensor(0., device='cuda:0')), ('slammed', tensor(0., device='cuda:0')), ('it', tensor(0.0818, device='cuda:0')), ('hard', tensor(0., device='cuda:0')), ('with', tensor(0.1158, device='cuda:0')), ('230', tensor(0., device='cuda:0')), (',', tensor(0.1955, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('shs', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('more', tensor(0., device='cuda:0')), ('to', tensor(0.0706, device='cuda:0')), ('follow', tensor(0., device='cuda:0'))]
idx: 1380, example: sheryl sandberg sells 109,000 shares of facebook inc $fb stock  via @ratingsnetwork, prediction: 2, correct_label: 2, class_scores: [0.2157098  0.32738632 0.45690382], word_scores: ['she:0.0', '##ryl:0.0', 'sand:0.0', '##berg:0.0', 'sells:0.0', '109:0.0', ',:7.986737728060689e-06', '000:0.0', 'shares:0.0', 'of:3.4365734791208524e-06', 'facebook:0.0', 'inc:0.0', '$:0.0', 'f:0.0', '##b:0.0', 'stock:0.0', 'via:0.0', '@:0.0', 'ratings:0.0', '##net:0.0', '##work:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sheryl', tensor(0., device='cuda:0')), ('sandberg', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('109', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('facebook', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('ratingsnetwork', tensor(0., device='cuda:0'))],  word_scores_max: [('sheryl', tensor(0., device='cuda:0')), ('sandberg', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('109', tensor(0., device='cuda:0')), (',', tensor(0.6992, device='cuda:0')), ('000', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('of', tensor(0.3008, device='cuda:0')), ('facebook', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('via', tensor(0., device='cuda:0')), ('ratingsnetwork', tensor(0., device='cuda:0'))]
idx: 1381, example: update 2-pricey beers lift sabmiller's quarterly underlying sales, prediction: 2, correct_label: 1, class_scores: [0.27407968 0.35337955 0.37254074], word_scores: ['update:0.0', '2:0.0', '-:4.821180027647642e-06', 'price:0.0', '##y:1.832826342251792e-06', 'beers:0.0', 'lift:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', "':0.0", 's:0.0', 'quarterly:0.0', 'underlying:0.0', 'sales:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('pricey', tensor(0., device='cuda:0')), ('beers', tensor(0., device='cuda:0')), ('lift', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('pricey', tensor(0., device='cuda:0')), ('beers', tensor(0., device='cuda:0')), ('lift', tensor(0., device='cuda:0'))]
idx: 1382, example: unilever profit rises despite sales slump in china, prediction: 2, correct_label: 2, class_scores: [0.2413678  0.19996606 0.5586661 ], word_scores: ['un:0.0', '##ile:0.0', '##ver:0.0', 'profit:0.0', 'rises:0.0', 'despite:0.0', 'sales:0.0', 'slump:0.0', 'in:3.0217122457543155e-06', 'china:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('unilever', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('despite', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('slump', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('china', tensor(0., device='cuda:0'))],  word_scores_max: [('unilever', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('despite', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('slump', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0')), ('china', tensor(0., device='cuda:0'))]
idx: 1383, example: $hrl ready to pop! , prediction: 2, correct_label: 1, class_scores: [0.18395504 0.39222836 0.42381665], word_scores: ['$:0.0', 'hr:0.0', '##l:0.0', 'ready:0.0', 'to:2.886244146793615e-06', 'pop:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('hrl', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('pop', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('hrl', tensor(0., device='cuda:0')), ('ready', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('pop', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1384, example: tesla motors recalls 2,700 model x suvs  $tsla, prediction: 1, correct_label: 0, class_scores: [0.22527148 0.45327806 0.32145044], word_scores: ['tesla:0.0', 'motors:0.0', 'recalls:0.0', '2:0.0', ',:7.986737728060689e-06', '700:0.0', 'model:0.0', 'x:0.0', 'suv:0.0', '##s:4.601175078278175e-06', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesla', tensor(0., device='cuda:0')), ('motors', tensor(0., device='cuda:0')), ('recalls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('suvs', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('tesla', tensor(0., device='cuda:0')), ('motors', tensor(0., device='cuda:0')), ('recalls', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('700', tensor(0., device='cuda:0')), ('model', tensor(0., device='cuda:0')), ('x', tensor(0., device='cuda:0')), ('suvs', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1385, example: $aapl news is becoming very bullish again , prediction: 2, correct_label: 1, class_scores: [0.2275697  0.33130443 0.44112584], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', 'news:0.0', 'is:0.0', 'becoming:0.0', 'very:0.0', 'bull:0.0', '##ish:0.0', 'again:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aapl', tensor(nan, device='cuda:0')), ('news', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('becoming', tensor(nan, device='cuda:0')), ('very', tensor(nan, device='cuda:0')), ('bullish', tensor(nan, device='cuda:0')), ('again', tensor(nan, device='cuda:0'))],  word_scores_max: [('aapl', tensor(nan, device='cuda:0')), ('news', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0')), ('becoming', tensor(nan, device='cuda:0')), ('very', tensor(nan, device='cuda:0')), ('bullish', tensor(nan, device='cuda:0')), ('again', tensor(nan, device='cuda:0'))]
idx: 1386, example: stanchart and rbs struggle in bank of england stress tests, prediction: 2, correct_label: 0, class_scores: [0.21984018 0.37251619 0.40764368], word_scores: ['stan:0.0', '##cha:0.0', '##rt:0.0', 'and:0.0', 'rb:0.0', '##s:4.601175078278175e-06', 'struggle:0.0', 'in:3.0217122457543155e-06', 'bank:0.0', 'of:3.4365734791208524e-06', 'england:0.0', 'stress:0.0', 'tests:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('stanchart', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('struggle', tensor(0., device='cuda:0')), ('in', tensor(0.4679, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.5321, device='cuda:0')), ('england', tensor(0., device='cuda:0')), ('stress', tensor(0., device='cuda:0')), ('tests', tensor(0., device='cuda:0'))],  word_scores_max: [('stanchart', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('struggle', tensor(0., device='cuda:0')), ('in', tensor(0.4679, device='cuda:0')), ('bank', tensor(0., device='cuda:0')), ('of', tensor(0.5321, device='cuda:0')), ('england', tensor(0., device='cuda:0')), ('stress', tensor(0., device='cuda:0')), ('tests', tensor(0., device='cuda:0'))]
idx: 1387, example: $amrn full bull call spread ranging july to jan 15. lets see what this baby does,, prediction: 2, correct_label: 1, class_scores: [0.25126028 0.32950974 0.41923   ], word_scores: ['$:0.0', 'am:0.0', '##rn:0.0', 'full:3.0938992949813837e-06', 'bull:0.0', 'call:0.0', 'spread:0.0', 'ranging:0.0', 'july:0.0', 'to:2.886244146793615e-06', 'jan:0.0', '15:0.0', '.:2.903296945078182e-06', 'lets:0.0', 'see:0.0', 'what:0.0', 'this:0.0', 'baby:0.0', 'does:0.0', ',:7.986737728060689e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('amrn', tensor(0., device='cuda:0')), ('full', tensor(0.1834, device='cuda:0')), ('bull', tensor(0., device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('spread', tensor(0., device='cuda:0')), ('ranging', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('to', tensor(0.1711, device='cuda:0')), ('jan', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.1721, device='cuda:0')), ('lets', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('baby', tensor(0., device='cuda:0')), ('does', tensor(0., device='cuda:0')), (',', tensor(0.4734, device='cuda:0'))],  word_scores_max: [('amrn', tensor(0., device='cuda:0')), ('full', tensor(0.1834, device='cuda:0')), ('bull', tensor(0., device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('spread', tensor(0., device='cuda:0')), ('ranging', tensor(0., device='cuda:0')), ('july', tensor(0., device='cuda:0')), ('to', tensor(0.1711, device='cuda:0')), ('jan', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.1721, device='cuda:0')), ('lets', tensor(0., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('baby', tensor(0., device='cuda:0')), ('does', tensor(0., device='cuda:0')), (',', tensor(0.4734, device='cuda:0'))]
idx: 1388, example: $kep breaking out when the market pulls back  , prediction: 2, correct_label: 1, class_scores: [0.26331538 0.34075406 0.39593062], word_scores: ['$:0.0', 'ke:0.0', '##p:0.0', 'breaking:0.0', 'out:0.0', 'when:0.0', 'the:6.3806996877247e-06', 'market:0.0', 'pulls:0.0', 'back:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('kep', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('pulls', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0'))],  word_scores_max: [('kep', tensor(0., device='cuda:0')), ('breaking', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('pulls', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0'))]
idx: 1389, example: @chessnwine: $iwm 30-minute chart. small caps threatening descending triangle breakdown under $110.20.  , prediction: 2, correct_label: 0, class_scores: [0.18154274 0.34045842 0.47799876], word_scores: ['@:0.0', 'chess:0.0', '##n:0.0', '##wine:0.0', '::0.0', '$:0.0', 'i:0.0', '##w:0.0', '##m:0.0', '30:0.0', '-:4.821180027647642e-06', 'minute:0.0', 'chart:0.0', '.:2.903296945078182e-06', 'small:0.0', 'caps:0.0', 'threatening:0.0', 'descending:0.0', 'triangle:0.0', 'breakdown:0.0', 'under:0.0', '$:0.0', '110:0.0', '.:2.903296945078182e-06', '20:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('chessnwine', tensor(0., device='cuda:0')), ('iwm', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('-', tensor(0.3563, device='cuda:0')), ('minute', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('.', tensor(0.2146, device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('caps', tensor(0., device='cuda:0')), ('threatening', tensor(0., device='cuda:0')), ('descending', tensor(0., device='cuda:0')), ('triangle', tensor(0., device='cuda:0')), ('breakdown', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('110', tensor(0., device='cuda:0')), ('.', tensor(0.2146, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.2146, device='cuda:0'))],  word_scores_max: [('chessnwine', tensor(0., device='cuda:0')), ('iwm', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('-', tensor(0.3563, device='cuda:0')), ('minute', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('.', tensor(0.2146, device='cuda:0')), ('small', tensor(0., device='cuda:0')), ('caps', tensor(0., device='cuda:0')), ('threatening', tensor(0., device='cuda:0')), ('descending', tensor(0., device='cuda:0')), ('triangle', tensor(0., device='cuda:0')), ('breakdown', tensor(0., device='cuda:0')), ('under', tensor(0., device='cuda:0')), ('110', tensor(0., device='cuda:0')), ('.', tensor(0.2146, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.2146, device='cuda:0'))]
idx: 1390, example: ocbc to buy barclay's wealth management unit in singapore, hong kong, prediction: 2, correct_label: 2, class_scores: [0.20147157 0.33474758 0.46378088], word_scores: ['o:0.0', '##cb:0.0', '##c:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'barclay:0.0', "':0.0", 's:0.0', 'wealth:0.0', 'management:0.0', 'unit:0.0', 'in:3.0217122457543155e-06', 'singapore:0.0', ',:7.986737728060689e-06', 'hong:0.0', 'kong:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ocbc', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0'))],  word_scores_max: [('ocbc', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('buy', tensor(0., device='cuda:0'))]
idx: 1391, example: $amzn new hod with conviction keeping $570 on watch for resistance., prediction: 2, correct_label: 1, class_scores: [0.21438885 0.36027443 0.42533672], word_scores: ['$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', 'new:2.798587502184091e-06', 'ho:0.0', '##d:0.0', 'with:4.733654350275174e-06', 'conviction:0.0', 'keeping:0.0', '$:0.0', '570:0.0', 'on:0.0', 'watch:0.0', 'for:0.0', 'resistance:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('amzn', tensor(0., device='cuda:0')), ('new', tensor(0.2682, device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('with', tensor(0.4536, device='cuda:0')), ('conviction', tensor(0., device='cuda:0')), ('keeping', tensor(0., device='cuda:0')), ('570', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('.', tensor(0.2782, device='cuda:0'))],  word_scores_max: [('amzn', tensor(0., device='cuda:0')), ('new', tensor(0.2682, device='cuda:0')), ('hod', tensor(0., device='cuda:0')), ('with', tensor(0.4536, device='cuda:0')), ('conviction', tensor(0., device='cuda:0')), ('keeping', tensor(0., device='cuda:0')), ('570', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('resistance', tensor(0., device='cuda:0')), ('.', tensor(0.2782, device='cuda:0'))]
idx: 1392, example: glaxosmithkline targets growth across units, scraps viiv ipo, prediction: 1, correct_label: 2, class_scores: [0.22996254 0.40700385 0.36303365], word_scores: ['g:0.0', '##la:0.0', '##x:0.0', '##os:0.0', '##mith:0.0', '##k:0.0', '##line:0.0', 'targets:0.0', 'growth:0.0', 'across:0.0', 'units:2.8638919502554927e-06', ',:7.986737728060689e-06', 'scrap:0.0', '##s:4.601175078278175e-06', 'vii:0.0', '##v:0.0', 'ip:0.0', '##o:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('glaxosmithkline', tensor(0., device='cuda:0')), ('targets', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('across', tensor(0., device='cuda:0')), ('units', tensor(0.2639, device='cuda:0')), (',', tensor(0.7361, device='cuda:0')), ('scraps', tensor(0., device='cuda:0')), ('viiv', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0'))],  word_scores_max: [('glaxosmithkline', tensor(0., device='cuda:0')), ('targets', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('across', tensor(0., device='cuda:0')), ('units', tensor(0.2639, device='cuda:0')), (',', tensor(0.7361, device='cuda:0')), ('scraps', tensor(0., device='cuda:0')), ('viiv', tensor(0., device='cuda:0')), ('ipo', tensor(0., device='cuda:0'))]
idx: 1393, example: piper upgrades symantec on improving renewal rates and enterprise growth $symc, prediction: 2, correct_label: 1, class_scores: [0.19750565 0.37048286 0.4320115 ], word_scores: ['piper:0.0', 'upgrades:0.0', 'sy:0.0', '##man:0.0', '##tec:0.0', 'on:0.0', 'improving:0.0', 'renewal:0.0', 'rates:0.0', 'and:0.0', 'enterprise:0.0', 'growth:0.0', '$:0.0', 'sy:0.0', '##mc:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('piper', tensor(nan, device='cuda:0')), ('upgrades', tensor(nan, device='cuda:0')), ('symantec', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('improving', tensor(nan, device='cuda:0')), ('renewal', tensor(nan, device='cuda:0')), ('rates', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('enterprise', tensor(nan, device='cuda:0')), ('growth', tensor(nan, device='cuda:0')), ('symc', tensor(nan, device='cuda:0'))],  word_scores_max: [('piper', tensor(nan, device='cuda:0')), ('upgrades', tensor(nan, device='cuda:0')), ('symantec', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('improving', tensor(nan, device='cuda:0')), ('renewal', tensor(nan, device='cuda:0')), ('rates', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('enterprise', tensor(nan, device='cuda:0')), ('growth', tensor(nan, device='cuda:0')), ('symc', tensor(nan, device='cuda:0'))]
idx: 1394, example: $sppi..building rs. sweet. i want this to break a new 52week. the earnings growth justifies way higher, prediction: 2, correct_label: 1, class_scores: [0.19245036 0.3376735  0.4698761 ], word_scores: ['$:0.0', 'spp:0.0', '##i:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'building:0.0', 'rs:0.0', '.:2.903296945078182e-06', 'sweet:0.0', '.:2.903296945078182e-06', 'i:0.0', 'want:0.0', 'this:0.0', 'to:2.886244146793615e-06', 'break:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', '52:0.0', '##week:0.0', '.:2.903296945078182e-06', 'the:6.3806996877247e-06', 'earnings:0.0', 'growth:0.0', 'just:0.0', '##ifies:0.0', 'way:0.0', 'higher:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sppi', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('rs', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('sweet', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('want', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('to', tensor(0.0820, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('a', tensor(0.2450, device='cuda:0')), ('new', tensor(0.0795, device='cuda:0')), ('52week', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('the', tensor(0.1812, device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('justifies', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0'))],  word_scores_max: [('sppi', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('building', tensor(0., device='cuda:0')), ('rs', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('sweet', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('want', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('to', tensor(0.0820, device='cuda:0')), ('break', tensor(0., device='cuda:0')), ('a', tensor(0.2450, device='cuda:0')), ('new', tensor(0.0795, device='cuda:0')), ('52week', tensor(0., device='cuda:0')), ('.', tensor(0.0825, device='cuda:0')), ('the', tensor(0.1812, device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('growth', tensor(0., device='cuda:0')), ('justifies', tensor(0., device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0'))]
idx: 1395, example: 4 beaten-down internet companies that may be ripe for a #takeover target: #twitter $twtr - #linkedin $lnkd - #yahoo! $yhoo - #groupon $grpn, prediction: 1, correct_label: 2, class_scores: [0.18089658 0.45118594 0.36791745], word_scores: ['4:0.0', 'beaten:0.0', '-:4.821180027647642e-06', 'down:0.0', 'internet:0.0', 'companies:0.0', 'that:1.5133816759771435e-06', 'may:0.0', 'be:0.0', 'ripe:0.0', 'for:0.0', 'a:8.62785782373976e-06', '#:0.0', 'takeover:0.0', 'target:0.0', '::0.0', '#:0.0', 'twitter:0.0', '$:0.0', 't:0.0', '##wt:0.0', '##r:0.0', '-:4.821180027647642e-06', '#:0.0', 'linked:0.0', '##in:0.0', '$:0.0', 'l:0.0', '##nk:0.0', '##d:0.0', '-:4.821180027647642e-06', '#:0.0', 'yahoo:0.0', '!:0.0', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', '-:4.821180027647642e-06', '#:0.0', 'group:0.0', '##on:0.0', '$:0.0', 'gr:0.0', '##p:0.0', '##n:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('4', tensor(0., device='cuda:0')), ('beaten', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('internet', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('that', tensor(0.0514, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('ripe', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2932, device='cuda:0')), ('takeover', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('twitter', tensor(0., device='cuda:0')), ('twtr', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('linkedin', tensor(0., device='cuda:0')), ('lnkd', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('yahoo', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('yhoo', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('groupon', tensor(0., device='cuda:0')), ('grpn', tensor(0., device='cuda:0'))],  word_scores_max: [('4', tensor(0., device='cuda:0')), ('beaten', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('internet', tensor(0., device='cuda:0')), ('companies', tensor(0., device='cuda:0')), ('that', tensor(0.0514, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('ripe', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2932, device='cuda:0')), ('takeover', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('twitter', tensor(0., device='cuda:0')), ('twtr', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('linkedin', tensor(0., device='cuda:0')), ('lnkd', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('yahoo', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('yhoo', tensor(0., device='cuda:0')), ('-', tensor(0.1638, device='cuda:0')), ('groupon', tensor(0., device='cuda:0')), ('grpn', tensor(0., device='cuda:0'))]
idx: 1396, example: $expe working on the second leg of its reversal run as it breaks another down trend and continues higher. , prediction: 2, correct_label: 1, class_scores: [0.25586164 0.35120726 0.39293107], word_scores: ['$:0.0', 'ex:0.0', '##pe:0.0', 'working:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'second:0.0', 'leg:0.0', 'of:3.4365734791208524e-06', 'its:1.7191393908433383e-06', 'reversal:0.0', 'run:0.0', 'as:0.0', 'it:3.3415778943890473e-06', 'breaks:0.0', 'another:0.0', 'down:0.0', 'trend:0.0', 'and:0.0', 'continues:0.0', 'higher:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('expe', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3588, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('leg', tensor(0., device='cuda:0')), ('of', tensor(0.1933, device='cuda:0')), ('its', tensor(0.0967, device='cuda:0')), ('reversal', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('it', tensor(0.1879, device='cuda:0')), ('breaks', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('.', tensor(0.1633, device='cuda:0'))],  word_scores_max: [('expe', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.3588, device='cuda:0')), ('second', tensor(0., device='cuda:0')), ('leg', tensor(0., device='cuda:0')), ('of', tensor(0.1933, device='cuda:0')), ('its', tensor(0.0967, device='cuda:0')), ('reversal', tensor(0., device='cuda:0')), ('run', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('it', tensor(0.1879, device='cuda:0')), ('breaks', tensor(0., device='cuda:0')), ('another', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('trend', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('.', tensor(0.1633, device='cuda:0'))]
idx: 1397, example: alert: new macd signal created on $ctxs - buy at 77.09 - time: 18:23 - strength: 10. powered by , prediction: 1, correct_label: 1, class_scores: [0.22949478 0.42112407 0.3493811 ], word_scores: ['alert:0.0', '::0.0', 'new:2.798587502184091e-06', 'mac:0.0', '##d:0.0', 'signal:0.0', 'created:0.0', 'on:0.0', '$:0.0', 'ct:0.0', '##x:0.0', '##s:4.601175078278175e-06', '-:4.821180027647642e-06', 'buy:0.0', 'at:0.0', '77:0.0', '.:2.903296945078182e-06', '09:0.0', '-:4.821180027647642e-06', 'time:0.0', '::0.0', '18:0.0', '::0.0', '23:3.2229838780040154e-06', '-:4.821180027647642e-06', 'strength:0.0', '::0.0', '10:0.0', '.:2.903296945078182e-06', 'powered:0.0', 'by:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('alert', tensor(0., device='cuda:0')), ('new', tensor(0.1064, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('created', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('ctxs', tensor(0., device='cuda:0')), ('-', tensor(0.1834, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('77', tensor(0., device='cuda:0')), ('.', tensor(0.1104, device='cuda:0')), ('09', tensor(0., device='cuda:0')), ('-', tensor(0.1834, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('23', tensor(0.1226, device='cuda:0')), ('-', tensor(0.1834, device='cuda:0')), ('strength', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.1104, device='cuda:0')), ('powered', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))],  word_scores_max: [('alert', tensor(0., device='cuda:0')), ('new', tensor(0.1064, device='cuda:0')), ('macd', tensor(0., device='cuda:0')), ('signal', tensor(0., device='cuda:0')), ('created', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('ctxs', tensor(0., device='cuda:0')), ('-', tensor(0.1834, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('77', tensor(0., device='cuda:0')), ('.', tensor(0.1104, device='cuda:0')), ('09', tensor(0., device='cuda:0')), ('-', tensor(0.1834, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('23', tensor(0.1226, device='cuda:0')), ('-', tensor(0.1834, device='cuda:0')), ('strength', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('.', tensor(0.1104, device='cuda:0')), ('powered', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0'))]
idx: 1398, example: $dgi technical alerts: gilligan's island buy setup, stochastic buy signal, lizard bullish, hammer candlestick, wid... , prediction: 2, correct_label: 1, class_scores: [0.15762459 0.42031482 0.4220606 ], word_scores: ['$:0.0', 'd:0.0', '##gi:0.0', 'technical:0.0', 'alert:0.0', '##s:4.601175078278175e-06', '::0.0', 'gill:0.0', '##igan:0.0', "':0.0", 's:0.0', 'island:0.0', 'buy:0.0', 'setup:0.0', ',:7.986737728060689e-06', 'st:0.0', '##och:0.0', '##astic:0.0', 'buy:0.0', 'signal:0.0', ',:7.986737728060689e-06', 'lizard:0.0', 'bull:0.0', '##ish:0.0', ',:7.986737728060689e-06', 'hammer:0.0', 'candles:0.0', '##tick:0.0', ',:7.986737728060689e-06', 'wi:0.0', '##d:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('dgi', tensor(nan, device='cuda:0')), ('technical', tensor(nan, device='cuda:0')), ('alerts', tensor(nan, device='cuda:0'))],  word_scores_max: [('dgi', tensor(nan, device='cuda:0')), ('technical', tensor(nan, device='cuda:0')), ('alerts', tensor(nan, device='cuda:0'))]
idx: 1399, example: companiescar insurer hastings group driving â£180m ipo, prediction: 1, correct_label: 2, class_scores: [0.21332909 0.42793584 0.35873502], word_scores: ['companies:0.0', '##car:0.0', 'ins:0.0', '##urer:0.0', 'hastings:0.0', 'group:0.0', 'driving:0.0', 'a:8.62785782373976e-06', '##£:0.0', '##18:0.0', '##0:0.0', '##m:0.0', 'ip:0.0', '##o:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('companiescar', tensor(0., device='cuda:0')), ('insurer', tensor(0., device='cuda:0')), ('hastings', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('driving', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0'))],  word_scores_max: [('companiescar', tensor(0., device='cuda:0')), ('insurer', tensor(0., device='cuda:0')), ('hastings', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('driving', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0'))]
idx: 1400, example: bhp billiton drags ftse lower after slashing dividend, prediction: 1, correct_label: 0, class_scores: [0.18645948 0.42267638 0.3908642 ], word_scores: ['bhp:0.0', 'bill:0.0', '##ito:0.0', '##n:0.0', 'drag:0.0', '##s:4.601175078278175e-06', 'ft:0.0', '##se:0.0', 'lower:0.0', 'after:0.0', 'slash:0.0', '##ing:0.0', 'divide:0.0', '##nd:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bhp', tensor(nan, device='cuda:0')), ('billiton', tensor(nan, device='cuda:0')), ('drags', tensor(nan, device='cuda:0')), ('ftse', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('slashing', tensor(nan, device='cuda:0')), ('dividend', tensor(nan, device='cuda:0'))],  word_scores_max: [('bhp', tensor(nan, device='cuda:0')), ('billiton', tensor(nan, device='cuda:0')), ('drags', tensor(nan, device='cuda:0')), ('ftse', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('slashing', tensor(nan, device='cuda:0')), ('dividend', tensor(nan, device='cuda:0'))]
idx: 1401, example: baird likes $tsla - upgrades to outperform, lifts price target to $300. research firm also sees no capital raise necessary in next few qtrs, prediction: 2, correct_label: 1, class_scores: [0.16380434 0.37250188 0.46369383], word_scores: ['baird:0.0', 'likes:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '-:4.821180027647642e-06', 'upgrades:0.0', 'to:2.886244146793615e-06', 'out:0.0', '##per:0.0', '##form:0.0', ',:7.986737728060689e-06', 'lifts:0.0', 'price:0.0', 'target:0.0', 'to:2.886244146793615e-06', '$:0.0', '300:0.0', '.:2.903296945078182e-06', 'research:0.0', 'firm:0.0', 'also:0.0', 'sees:0.0', 'no:0.0', 'capital:0.0', 'raise:0.0', 'necessary:0.0', 'in:3.0217122457543155e-06', 'next:0.0', 'few:0.0', 'q:0.0', '##tr:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('baird', tensor(0., device='cuda:0')), ('likes', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('-', tensor(0.1967, device='cuda:0')), ('upgrades', tensor(0., device='cuda:0')), ('to', tensor(0.1178, device='cuda:0')), ('outperform', tensor(0., device='cuda:0')), (',', tensor(0.3259, device='cuda:0')), ('lifts', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('to', tensor(0.1178, device='cuda:0')), ('300', tensor(0., device='cuda:0')), ('.', tensor(0.1185, device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('necessary', tensor(0., device='cuda:0')), ('in', tensor(0.1233, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('qtrs', tensor(0., device='cuda:0'))],  word_scores_max: [('baird', tensor(0., device='cuda:0')), ('likes', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0')), ('-', tensor(0.1967, device='cuda:0')), ('upgrades', tensor(0., device='cuda:0')), ('to', tensor(0.1178, device='cuda:0')), ('outperform', tensor(0., device='cuda:0')), (',', tensor(0.3259, device='cuda:0')), ('lifts', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('to', tensor(0.1178, device='cuda:0')), ('300', tensor(0., device='cuda:0')), ('.', tensor(0.1185, device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('firm', tensor(0., device='cuda:0')), ('also', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('no', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('raise', tensor(0., device='cuda:0')), ('necessary', tensor(0., device='cuda:0')), ('in', tensor(0.1233, device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('few', tensor(0., device='cuda:0')), ('qtrs', tensor(0., device='cuda:0'))]
idx: 1402, example: gsk and novartis complete deals to reshape both drugmakers, prediction: 2, correct_label: 2, class_scores: [0.22135493 0.33927917 0.4393659 ], word_scores: ['gs:0.0', '##k:0.0', 'and:0.0', 'nova:0.0', '##rti:0.0', '##s:4.601175078278175e-06', 'complete:0.0', 'deals:0.0', 'to:2.886244146793615e-06', 'res:0.0', '##ha:0.0', '##pe:0.0', 'both:0.0', 'drug:0.0', '##makers:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gsk', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('novartis', tensor(0., device='cuda:0')), ('complete', tensor(0., device='cuda:0')), ('deals', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('reshape', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('drugmakers', tensor(0., device='cuda:0'))],  word_scores_max: [('gsk', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('novartis', tensor(0., device='cuda:0')), ('complete', tensor(0., device='cuda:0')), ('deals', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('reshape', tensor(0., device='cuda:0')), ('both', tensor(0., device='cuda:0')), ('drugmakers', tensor(0., device='cuda:0'))]
idx: 1403, example: exact (exas) flagged as strong on high volume $exas , prediction: 1, correct_label: 1, class_scores: [0.21424194 0.4178412  0.36791688], word_scores: ['exact:0.0', '(:0.0', 'ex:0.0', '##as:0.0', '):0.0', 'flag:0.0', '##ged:0.0', 'as:0.0', 'strong:0.0', 'on:0.0', 'high:0.0', 'volume:0.0', '$:0.0', 'ex:0.0', '##as:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('exact', tensor(nan, device='cuda:0')), ('exas', tensor(nan, device='cuda:0')), ('flagged', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('high', tensor(nan, device='cuda:0')), ('volume', tensor(nan, device='cuda:0')), ('exas', tensor(nan, device='cuda:0'))],  word_scores_max: [('exact', tensor(nan, device='cuda:0')), ('exas', tensor(nan, device='cuda:0')), ('flagged', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('high', tensor(nan, device='cuda:0')), ('volume', tensor(nan, device='cuda:0')), ('exas', tensor(nan, device='cuda:0'))]
idx: 1404, example: travis perkins hikes dividend 20% as profit and revenue rise, prediction: 2, correct_label: 1, class_scores: [0.24795006 0.32477394 0.42727605], word_scores: ['travis:0.0', 'perkins:0.0', 'hike:0.0', '##s:4.601175078278175e-06', 'divide:0.0', '##nd:0.0', '20:0.0', '%:0.0', 'as:0.0', 'profit:0.0', 'and:0.0', 'revenue:0.0', 'rise:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('travis', tensor(nan, device='cuda:0')), ('perkins', tensor(nan, device='cuda:0')), ('hikes', tensor(nan, device='cuda:0')), ('dividend', tensor(nan, device='cuda:0')), ('20', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('revenue', tensor(nan, device='cuda:0')), ('rise', tensor(nan, device='cuda:0'))],  word_scores_max: [('travis', tensor(nan, device='cuda:0')), ('perkins', tensor(nan, device='cuda:0')), ('hikes', tensor(nan, device='cuda:0')), ('dividend', tensor(nan, device='cuda:0')), ('20', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('revenue', tensor(nan, device='cuda:0')), ('rise', tensor(nan, device='cuda:0'))]
idx: 1405, example: nyse owner ice may gatecrash deutsche boerse-lse merger, prediction: 2, correct_label: 2, class_scores: [0.1597961  0.29558492 0.5446189 ], word_scores: ['ny:0.0', '##se:0.0', 'owner:5.6893281907832716e-06', 'ice:0.0', 'may:0.0', 'gate:0.0', '##cr:6.230764483916573e-06', '##ash:0.0', 'deutsche:0.0', 'boer:0.0', '##se:0.0', '-:4.821180027647642e-06', 'l:0.0', '##se:0.0', 'merger:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nyse', tensor(0., device='cuda:0')), ('owner', tensor(0.3398, device='cuda:0')), ('ice', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('gatecrash', tensor(0.3722, device='cuda:0')), ('deutsche', tensor(0., device='cuda:0')), ('boerse', tensor(0., device='cuda:0')), ('-', tensor(0.2880, device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0'))],  word_scores_max: [('nyse', tensor(0., device='cuda:0')), ('owner', tensor(0.3398, device='cuda:0')), ('ice', tensor(0., device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('gatecrash', tensor(0.3722, device='cuda:0')), ('deutsche', tensor(0., device='cuda:0')), ('boerse', tensor(0., device='cuda:0')), ('-', tensor(0.2880, device='cuda:0')), ('lse', tensor(0., device='cuda:0')), ('merger', tensor(0., device='cuda:0'))]
idx: 1406, example: $msft sql server revenue grew double-digit with sql server premium revenue growing over 30% , prediction: 1, correct_label: 1, class_scores: [0.23345345 0.41515258 0.351394  ], word_scores: ['$:0.0', 'ms:0.0', '##ft:0.0', 'sql:0.0', 'server:0.0', 'revenue:0.0', 'grew:0.0', 'double:0.0', '-:4.821180027647642e-06', 'digit:0.0', 'with:4.733654350275174e-06', 'sql:0.0', 'server:0.0', 'premium:0.0', 'revenue:0.0', 'growing:0.0', 'over:0.0', '30:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('msft', tensor(0., device='cuda:0')), ('sql', tensor(0., device='cuda:0')), ('server', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('grew', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('-', tensor(0.5046, device='cuda:0')), ('digit', tensor(0., device='cuda:0')), ('with', tensor(0.4954, device='cuda:0')), ('sql', tensor(0., device='cuda:0')), ('server', tensor(0., device='cuda:0')), ('premium', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0'))],  word_scores_max: [('msft', tensor(0., device='cuda:0')), ('sql', tensor(0., device='cuda:0')), ('server', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('grew', tensor(0., device='cuda:0')), ('double', tensor(0., device='cuda:0')), ('-', tensor(0.5046, device='cuda:0')), ('digit', tensor(0., device='cuda:0')), ('with', tensor(0.4954, device='cuda:0')), ('sql', tensor(0., device='cuda:0')), ('server', tensor(0., device='cuda:0')), ('premium', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0'))]
idx: 1407, example: $kgc  oversold, falling wedge and positive divergence place it on the launch pad; looking for a bounce., prediction: 1, correct_label: 2, class_scores: [0.18585703 0.43843696 0.37570602], word_scores: ['$:0.0', 'kg:0.0', '##c:0.0', 'overs:0.0', '##old:0.0', ',:7.986737728060689e-06', 'falling:0.0', 'wedge:0.0', 'and:0.0', 'positive:0.0', 'diver:0.0', '##gence:0.0', 'place:0.0', 'it:3.3415778943890473e-06', 'on:0.0', 'the:6.3806996877247e-06', 'launch:0.0', 'pad:0.0', ';:0.0', 'looking:0.0', 'for:0.0', 'a:8.62785782373976e-06', 'bounce:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('kgc', tensor(0., device='cuda:0')), ('oversold', tensor(0., device='cuda:0')), (',', tensor(0.2731, device='cuda:0')), ('falling', tensor(0., device='cuda:0')), ('wedge', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('divergence', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('it', tensor(0.1143, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2182, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('pad', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2951, device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('.', tensor(0.0993, device='cuda:0'))],  word_scores_max: [('kgc', tensor(0., device='cuda:0')), ('oversold', tensor(0., device='cuda:0')), (',', tensor(0.2731, device='cuda:0')), ('falling', tensor(0., device='cuda:0')), ('wedge', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('positive', tensor(0., device='cuda:0')), ('divergence', tensor(0., device='cuda:0')), ('place', tensor(0., device='cuda:0')), ('it', tensor(0.1143, device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.2182, device='cuda:0')), ('launch', tensor(0., device='cuda:0')), ('pad', tensor(0., device='cuda:0')), (';', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('a', tensor(0.2951, device='cuda:0')), ('bounce', tensor(0., device='cuda:0')), ('.', tensor(0.0993, device='cuda:0'))]
idx: 1408, example: astrazeneca weighing up acerta bid to secure blood cancer drug, prediction: 2, correct_label: 2, class_scores: [0.19031422 0.35835677 0.45132902], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'weighing:0.0', 'up:1.4959460941099678e-06', 'ace:0.0', '##rta:0.0', 'bid:0.0', 'to:2.886244146793615e-06', 'secure:0.0', 'blood:0.0', 'cancer:0.0', 'drug:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('weighing', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('acerta', tensor(0., device='cuda:0')), ('bid', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('secure', tensor(0., device='cuda:0')), ('blood', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('weighing', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('acerta', tensor(0., device='cuda:0')), ('bid', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('secure', tensor(0., device='cuda:0')), ('blood', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0'))]
idx: 1409, example: $bioc rsi extremely in long's favor looking at bioc historically., prediction: 2, correct_label: 1, class_scores: [0.19624837 0.38227168 0.42147988], word_scores: ['$:0.0', 'bio:0.0', '##c:0.0', 'rs:0.0', '##i:0.0', 'extremely:0.0', 'in:3.0217122457543155e-06', 'long:0.0', "':0.0", 's:0.0', 'favor:0.0', 'looking:0.0', 'at:0.0', 'bio:0.0', '##c:0.0', 'historically:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('bioc', tensor(0., device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), ('extremely', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0'))],  word_scores_max: [('bioc', tensor(0., device='cuda:0')), ('rsi', tensor(0., device='cuda:0')), ('extremely', tensor(0., device='cuda:0')), ('in', tensor(1., device='cuda:0'))]
idx: 1410, example: 5-star analyst @brianwieser from pivotal research upgraded rating on $googl to buy. brian has a 79% success rate , prediction: 2, correct_label: 1, class_scores: [0.20302776 0.39721704 0.3997552 ], word_scores: ['5:0.0', '-:4.821180027647642e-06', 'star:0.0', 'analyst:0.0', '@:0.0', 'brian:0.0', '##wi:0.0', '##ese:0.0', '##r:0.0', 'from:4.495178018260049e-06', 'pivotal:0.0', 'research:0.0', 'upgraded:0.0', 'rating:0.0', 'on:0.0', '$:0.0', 'goo:0.0', '##gl:0.0', 'to:2.886244146793615e-06', 'buy:0.0', '.:2.903296945078182e-06', 'brian:0.0', 'has:5.9214244174654596e-06', 'a:8.62785782373976e-06', '79:0.0', '%:0.0', 'success:0.0', 'rate:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('5', tensor(0., device='cuda:0')), ('-', tensor(0.1626, device='cuda:0')), ('star', tensor(0., device='cuda:0')), ('analyst', tensor(0., device='cuda:0')), ('brianwieser', tensor(0., device='cuda:0')), ('from', tensor(0.1516, device='cuda:0')), ('pivotal', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('googl', tensor(0., device='cuda:0')), ('to', tensor(0.0973, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('.', tensor(0.0979, device='cuda:0')), ('brian', tensor(0., device='cuda:0')), ('has', tensor(0.1997, device='cuda:0')), ('a', tensor(0.2909, device='cuda:0')), ('79', tensor(0., device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0'))],  word_scores_max: [('5', tensor(0., device='cuda:0')), ('-', tensor(0.1626, device='cuda:0')), ('star', tensor(0., device='cuda:0')), ('analyst', tensor(0., device='cuda:0')), ('brianwieser', tensor(0., device='cuda:0')), ('from', tensor(0.1516, device='cuda:0')), ('pivotal', tensor(0., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('upgraded', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('googl', tensor(0., device='cuda:0')), ('to', tensor(0.0973, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('.', tensor(0.0979, device='cuda:0')), ('brian', tensor(0., device='cuda:0')), ('has', tensor(0.1997, device='cuda:0')), ('a', tensor(0.2909, device='cuda:0')), ('79', tensor(0., device='cuda:0')), ('success', tensor(0., device='cuda:0')), ('rate', tensor(0., device='cuda:0'))]
idx: 1411, example: $jd down 20% in after-hour market. anyone care to explain why?, prediction: 2, correct_label: 0, class_scores: [0.16270615 0.4110737  0.4262201 ], word_scores: ['$:0.0', 'jd:0.0', 'down:0.0', '20:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'after:0.0', '-:4.821180027647642e-06', 'hour:0.0', 'market:0.0', '.:2.903296945078182e-06', 'anyone:0.0', 'care:0.0', 'to:2.886244146793615e-06', 'explain:0.0', 'why:0.0', '?:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('jd', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('in', tensor(0.2217, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('-', tensor(0.3537, device='cuda:0')), ('hour', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('.', tensor(0.2130, device='cuda:0')), ('anyone', tensor(0., device='cuda:0')), ('care', tensor(0., device='cuda:0')), ('to', tensor(0.2117, device='cuda:0')), ('explain', tensor(0., device='cuda:0')), ('why', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))],  word_scores_max: [('jd', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('in', tensor(0.2217, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('-', tensor(0.3537, device='cuda:0')), ('hour', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('.', tensor(0.2130, device='cuda:0')), ('anyone', tensor(0., device='cuda:0')), ('care', tensor(0., device='cuda:0')), ('to', tensor(0.2117, device='cuda:0')), ('explain', tensor(0., device='cuda:0')), ('why', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))]
idx: 1412, example: intuitive surgical $isrg is in a great financial position, take a look  , prediction: 2, correct_label: 1, class_scores: [0.19339108 0.35149717 0.4551118 ], word_scores: ['intuitive:0.0', 'surgical:0.0', '$:0.0', 'is:0.0', '##rg:0.0', 'is:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'great:0.0', 'financial:0.0', 'position:0.0', ',:7.986737728060689e-06', 'take:2.0325496734585613e-06', 'a:8.62785782373976e-06', 'look:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('intuitive', tensor(0., device='cuda:0')), ('surgical', tensor(0., device='cuda:0')), ('isrg', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0997, device='cuda:0')), ('a', tensor(0.2848, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), (',', tensor(0.2636, device='cuda:0')), ('take', tensor(0.0671, device='cuda:0')), ('a', tensor(0.2848, device='cuda:0')), ('look', tensor(0., device='cuda:0'))],  word_scores_max: [('intuitive', tensor(0., device='cuda:0')), ('surgical', tensor(0., device='cuda:0')), ('isrg', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('in', tensor(0.0997, device='cuda:0')), ('a', tensor(0.2848, device='cuda:0')), ('great', tensor(0., device='cuda:0')), ('financial', tensor(0., device='cuda:0')), ('position', tensor(0., device='cuda:0')), (',', tensor(0.2636, device='cuda:0')), ('take', tensor(0.0671, device='cuda:0')), ('a', tensor(0.2848, device='cuda:0')), ('look', tensor(0., device='cuda:0'))]
idx: 1413, example: $nflx +1% $104.80 long streaming services rapidly outpacing traditional cable, prediction: 2, correct_label: 1, class_scores: [0.19321175 0.30770716 0.49908105], word_scores: ['$:0.0', 'nfl:0.0', '##x:0.0', '+:0.0', '1:0.0', '%:0.0', '$:0.0', '104:0.0', '.:2.903296945078182e-06', '80:0.0', 'long:0.0', 'streaming:0.0', 'services:0.0', 'rapidly:0.0', 'out:0.0', '##pac:0.0', '##ing:0.0', 'traditional:0.0', 'cable:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('nflx', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('104', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('streaming', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('rapidly', tensor(0., device='cuda:0')), ('outpacing', tensor(0., device='cuda:0')), ('traditional', tensor(0., device='cuda:0')), ('cable', tensor(0., device='cuda:0'))],  word_scores_max: [('nflx', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('104', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('80', tensor(0., device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('streaming', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('rapidly', tensor(0., device='cuda:0')), ('outpacing', tensor(0., device='cuda:0')), ('traditional', tensor(0., device='cuda:0')), ('cable', tensor(0., device='cuda:0'))]
idx: 1414, example: .@barronsonline sees #apple at $150/share in a year (+36% from today) on growing services business. $aapl , prediction: 2, correct_label: 1, class_scores: [0.12543492 0.37599328 0.49857178], word_scores: ['.:2.903296945078182e-06', '@:0.0', 'barron:0.0', '##son:0.0', '##line:0.0', 'sees:0.0', '#:0.0', 'apple:0.0', 'at:0.0', '$:0.0', '150:0.0', '/:0.0', 'share:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'year:0.0', '(:0.0', '+:0.0', '36:0.0', '%:0.0', 'from:4.495178018260049e-06', 'today:0.0', '):0.0', 'on:0.0', 'growing:0.0', 'services:0.0', 'business:0.0', '.:2.903296945078182e-06', '$:0.0', 'aa:0.0', '##pl:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('.', tensor(0.1323, device='cuda:0')), ('barronsonline', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('150', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('in', tensor(0.1377, device='cuda:0')), ('a', tensor(0.3930, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('from', tensor(0.2048, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('.', tensor(0.1323, device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))],  word_scores_max: [('.', tensor(0.1323, device='cuda:0')), ('barronsonline', tensor(0., device='cuda:0')), ('sees', tensor(0., device='cuda:0')), ('apple', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('150', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('in', tensor(0.1377, device='cuda:0')), ('a', tensor(0.3930, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('from', tensor(0.2048, device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('growing', tensor(0., device='cuda:0')), ('services', tensor(0., device='cuda:0')), ('business', tensor(0., device='cuda:0')), ('.', tensor(0.1323, device='cuda:0')), ('aapl', tensor(0., device='cuda:0'))]
idx: 1415, example: $fb gettin in the buy zone soon ;), prediction: 2, correct_label: 1, class_scores: [0.26143882 0.28420752 0.45435366], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'get:0.0', '##tin:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'buy:0.0', 'zone:0.0', 'soon:4.303194600652205e-06', ';:0.0', '):0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('gettin', tensor(0., device='cuda:0')), ('in', tensor(0.2205, device='cuda:0')), ('the', tensor(0.4656, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('soon', tensor(0.3140, device='cuda:0')), (';', tensor(0., device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('gettin', tensor(0., device='cuda:0')), ('in', tensor(0.2205, device='cuda:0')), ('the', tensor(0.4656, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('zone', tensor(0., device='cuda:0')), ('soon', tensor(0.3140, device='cuda:0')), (';', tensor(0., device='cuda:0'))]
idx: 1416, example: bbcn bancorp to buy wilshire bancorp in $1 bln deal, prediction: 2, correct_label: 1, class_scores: [0.29927543 0.32282335 0.37790126], word_scores: ['bbc:0.0', '##n:0.0', 'banco:0.0', '##rp:0.0', 'to:2.886244146793615e-06', 'buy:0.0', 'wil:0.0', '##shire:0.0', 'banco:0.0', '##rp:0.0', 'in:3.0217122457543155e-06', '$:0.0', '1:0.0', 'b:0.0', '##ln:0.0', 'deal:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bbcn', tensor(0., device='cuda:0')), ('bancorp', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('wilshire', tensor(0., device='cuda:0')), ('bancorp', tensor(0., device='cuda:0')), ('in', tensor(0.5115, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0'))],  word_scores_max: [('bbcn', tensor(0., device='cuda:0')), ('bancorp', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('wilshire', tensor(0., device='cuda:0')), ('bancorp', tensor(0., device='cuda:0')), ('in', tensor(0.5115, device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('deal', tensor(0., device='cuda:0'))]
idx: 1417, example: bullish engulfing of coca cola:  $ko, prediction: 1, correct_label: 1, class_scores: [0.2480636  0.4228338  0.32910267], word_scores: ['bull:0.0', '##ish:0.0', 'eng:0.0', '##ulf:0.0', '##ing:0.0', 'of:3.4365734791208524e-06', 'coca:0.0', 'cola:0.0', '::0.0', '$:0.0', 'ko:5.9404255807748996e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('bullish', tensor(0., device='cuda:0')), ('engulfing', tensor(0., device='cuda:0')), ('of', tensor(0.3665, device='cuda:0')), ('coca', tensor(0., device='cuda:0')), ('cola', tensor(0., device='cuda:0')), ('ko', tensor(0.6335, device='cuda:0'))],  word_scores_max: [('bullish', tensor(0., device='cuda:0')), ('engulfing', tensor(0., device='cuda:0')), ('of', tensor(0.3665, device='cuda:0')), ('coca', tensor(0., device='cuda:0')), ('cola', tensor(0., device='cuda:0')), ('ko', tensor(0.6335, device='cuda:0'))]
idx: 1418, example: $oil slid to a four-year low after #opec kept its oil production unchanged   $uso $wti $brent, prediction: 2, correct_label: 0, class_scores: [0.19967586 0.35744292 0.4428813 ], word_scores: ['$:0.0', 'oil:0.0', 'slid:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', 'four:3.606506425057887e-06', '-:4.821180027647642e-06', 'year:0.0', 'low:0.0', 'after:0.0', '#:0.0', 'op:0.0', '##ec:0.0', 'kept:0.0', 'its:1.7191393908433383e-06', 'oil:0.0', 'production:0.0', 'unchanged:0.0', '$:0.0', 'us:0.0', '##o:0.0', '$:0.0', 'w:0.0', '##ti:2.5915114747476764e-06', '$:0.0', 'brent:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('oil', tensor(0., device='cuda:0')), ('slid', tensor(0., device='cuda:0')), ('to', tensor(0.1332, device='cuda:0')), ('a', tensor(0.3983, device='cuda:0')), ('four', tensor(0.1665, device='cuda:0')), ('-', tensor(0.2226, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('opec', tensor(0., device='cuda:0')), ('kept', tensor(0., device='cuda:0')), ('its', tensor(0.0794, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('unchanged', tensor(0., device='cuda:0')), ('uso', tensor(0., device='cuda:0')), ('wti', tensor(0., device='cuda:0')), ('brent', tensor(0., device='cuda:0'))],  word_scores_max: [('oil', tensor(0., device='cuda:0')), ('slid', tensor(0., device='cuda:0')), ('to', tensor(0.1332, device='cuda:0')), ('a', tensor(0.3983, device='cuda:0')), ('four', tensor(0.1665, device='cuda:0')), ('-', tensor(0.2226, device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('opec', tensor(0., device='cuda:0')), ('kept', tensor(0., device='cuda:0')), ('its', tensor(0.0794, device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('production', tensor(0., device='cuda:0')), ('unchanged', tensor(0., device='cuda:0')), ('uso', tensor(0., device='cuda:0')), ('wti', tensor(0., device='cuda:0')), ('brent', tensor(0., device='cuda:0'))]
idx: 1419, example: $gild 91 now support. $ibb $bib , prediction: 2, correct_label: 2, class_scores: [0.26337498 0.31542152 0.42120355], word_scores: ['$:0.0', 'gil:0.0', '##d:0.0', '91:0.0', 'now:0.0', 'support:0.0', '.:2.903296945078182e-06', '$:0.0', 'ib:0.0', '##b:0.0', '$:0.0', 'bi:0.0', '##b:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('gild', tensor(0., device='cuda:0')), ('91', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('ibb', tensor(0., device='cuda:0')), ('bib', tensor(0., device='cuda:0'))],  word_scores_max: [('gild', tensor(0., device='cuda:0')), ('91', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('.', tensor(1., device='cuda:0')), ('ibb', tensor(0., device='cuda:0')), ('bib', tensor(0., device='cuda:0'))]
idx: 1420, example: ab inbev looks to win over sabmiller investors, prediction: 2, correct_label: 2, class_scores: [0.24195643 0.36351192 0.39453167], word_scores: ['ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'looks:0.0', 'to:2.886244146793615e-06', 'win:0.0', 'over:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', 'investors:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.5115, device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('win', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('investors', tensor(0., device='cuda:0'))],  word_scores_max: [('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.5115, device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('to', tensor(0.4885, device='cuda:0')), ('win', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('investors', tensor(0., device='cuda:0'))]
idx: 1421, example: tesco, asda sales fall as march of the discounters continues: kantar, prediction: 2, correct_label: 0, class_scores: [0.19081676 0.33850214 0.47068113], word_scores: ['te:0.0', '##sco:0.0', ',:7.986737728060689e-06', 'as:0.0', '##da:0.0', 'sales:0.0', 'fall:0.0', 'as:0.0', 'march:0.0', 'of:3.4365734791208524e-06', 'the:6.3806996877247e-06', 'discount:0.0', '##ers:5.0093617574020755e-06', 'continues:0.0', '::0.0', 'kant:0.0', '##ar:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(0., device='cuda:0')), (',', tensor(0.4486, device='cuda:0')), ('asda', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('of', tensor(0.1930, device='cuda:0')), ('the', tensor(0.3584, device='cuda:0')), ('discounters', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('kantar', tensor(0., device='cuda:0'))],  word_scores_max: [('tesco', tensor(0., device='cuda:0')), (',', tensor(0.4486, device='cuda:0')), ('asda', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('march', tensor(0., device='cuda:0')), ('of', tensor(0.1930, device='cuda:0')), ('the', tensor(0.3584, device='cuda:0')), ('discounters', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('kantar', tensor(0., device='cuda:0'))]
idx: 1422, example: intertek swings to â£347 mln loss on oil's slump, prediction: 2, correct_label: 0, class_scores: [0.24384739 0.3521431  0.40400943], word_scores: ['inter:0.0', '##tek:0.0', 'swings:0.0', 'to:2.886244146793615e-06', 'a:8.62785782373976e-06', '##£:0.0', '##34:0.0', '##7:0.0', 'ml:0.0', '##n:0.0', 'loss:0.0', 'on:0.0', 'oil:0.0', "':0.0", 's:0.0', 'slump:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('intertek', tensor(0., device='cuda:0')), ('swings', tensor(0., device='cuda:0')), ('to', tensor(0.2507, device='cuda:0')), ('a', tensor(0.7493, device='cuda:0'))],  word_scores_max: [('intertek', tensor(0., device='cuda:0')), ('swings', tensor(0., device='cuda:0')), ('to', tensor(0.2507, device='cuda:0')), ('a', tensor(0.7493, device='cuda:0'))]
idx: 1423, example: $isrg trading at all-time high after strong earnings report with 4 days of short interest., prediction: 2, correct_label: 1, class_scores: [0.19847652 0.3104628  0.49106067], word_scores: ['$:0.0', 'is:0.0', '##rg:0.0', 'trading:0.0', 'at:0.0', 'all:0.0', '-:4.821180027647642e-06', 'time:0.0', 'high:0.0', 'after:0.0', 'strong:0.0', 'earnings:0.0', 'report:0.0', 'with:4.733654350275174e-06', '4:0.0', 'days:0.0', 'of:3.4365734791208524e-06', 'short:0.0', 'interest:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('isrg', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('-', tensor(0.3033, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('with', tensor(0.2978, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('of', tensor(0.2162, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('interest', tensor(0., device='cuda:0')), ('.', tensor(0.1827, device='cuda:0'))],  word_scores_max: [('isrg', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('-', tensor(0.3033, device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('strong', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('report', tensor(0., device='cuda:0')), ('with', tensor(0.2978, device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('days', tensor(0., device='cuda:0')), ('of', tensor(0.2162, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('interest', tensor(0., device='cuda:0')), ('.', tensor(0.1827, device='cuda:0'))]
idx: 1424, example: $lnkd daily phase 2 retest - price experiencing early rejection. can it retest? , prediction: 1, correct_label: 2, class_scores: [0.12959796 0.57187456 0.29852754], word_scores: ['$:0.0', 'l:0.0', '##nk:0.0', '##d:0.0', 'daily:0.0', 'phase:0.0', '2:0.0', 're:0.0', '##test:0.0', '-:4.821180027647642e-06', 'price:0.0', 'experiencing:0.0', 'early:0.0', 'rejection:0.0', '.:2.903296945078182e-06', 'can:0.0', 'it:3.3415778943890473e-06', 're:0.0', '##test:0.0', '?:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('lnkd', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('retest', tensor(0., device='cuda:0')), ('-', tensor(0.4357, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('experiencing', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('rejection', tensor(0., device='cuda:0')), ('.', tensor(0.2624, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('it', tensor(0.3020, device='cuda:0')), ('retest', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))],  word_scores_max: [('lnkd', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('phase', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('retest', tensor(0., device='cuda:0')), ('-', tensor(0.4357, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('experiencing', tensor(0., device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('rejection', tensor(0., device='cuda:0')), ('.', tensor(0.2624, device='cuda:0')), ('can', tensor(0., device='cuda:0')), ('it', tensor(0.3020, device='cuda:0')), ('retest', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0'))]
idx: 1425, example: $save breaking it's downtrend line on increasing volume. a move above 20.57 could see more upside. , prediction: 2, correct_label: 1, class_scores: [0.20751275 0.3561633  0.4363239 ], word_scores: ['$:0.0', 'save:0.0', 'breaking:0.0', 'it:3.3415778943890473e-06', "':0.0", 's:0.0', 'down:0.0', '##tre:0.0', '##nd:0.0', 'line:0.0', 'on:0.0', 'increasing:0.0', 'volume:0.0', '.:2.903296945078182e-06', 'a:8.62785782373976e-06', 'move:0.0', 'above:0.0', '20:0.0', '.:2.903296945078182e-06', '57:0.0', 'could:0.0', 'see:0.0', 'more:0.0', 'upside:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('save', tensor(nan, device='cuda:0')), ('breaking', tensor(nan, device='cuda:0'))],  word_scores_max: [('save', tensor(nan, device='cuda:0')), ('breaking', tensor(nan, device='cuda:0'))]
idx: 1426, example: refile-update 4-britain's lloyds to pay first dividend since rescue, prediction: 2, correct_label: 1, class_scores: [0.13681065 0.38070944 0.48247984], word_scores: ['ref:0.0', '##ile:0.0', '-:4.821180027647642e-06', 'update:0.0', '4:0.0', '-:4.821180027647642e-06', 'britain:0.0', "':0.0", 's:0.0', 'lloyd:0.0', '##s:4.601175078278175e-06', 'to:2.886244146793615e-06', 'pay:0.0', 'first:0.0', 'divide:0.0', '##nd:0.0', 'since:0.0', 'rescue:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('refile', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('update', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0'))],  word_scores_max: [('refile', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0')), ('update', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('-', tensor(0.5000, device='cuda:0'))]
idx: 1427, example: $yelp wayyy overvalued right now imo. should be trading single digits. may take a short pos. into earnings. near term target 18 ......, prediction: 2, correct_label: 0, class_scores: [0.2389184  0.24230917 0.5187725 ], word_scores: ['$:0.0', 'ye:0.0', '##lp:0.0', 'way:0.0', '##y:1.832826342251792e-06', '##y:1.832826342251792e-06', 'over:0.0', '##val:0.0', '##ue:0.0', '##d:0.0', 'right:0.0', 'now:0.0', 'im:0.0', '##o:0.0', '.:2.903296945078182e-06', 'should:0.0', 'be:0.0', 'trading:0.0', 'single:0.0', 'digits:0.0', '.:2.903296945078182e-06', 'may:0.0', 'take:2.0325496734585613e-06', 'a:8.62785782373976e-06', 'short:0.0', 'po:0.0', '##s:4.601175078278175e-06', '.:2.903296945078182e-06', 'into:0.0', 'earnings:0.0', '.:2.903296945078182e-06', 'near:0.0', 'term:0.0', 'target:0.0', '18:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('yelp', tensor(0., device='cuda:0')), ('wayyy', tensor(0.0441, device='cuda:0')), ('overvalued', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('imo', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('digits', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('take', tensor(0.0489, device='cuda:0')), ('a', tensor(0.2078, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('pos', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0'))],  word_scores_max: [('yelp', tensor(0., device='cuda:0')), ('wayyy', tensor(0.0441, device='cuda:0')), ('overvalued', tensor(0., device='cuda:0')), ('right', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('imo', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('should', tensor(0., device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('single', tensor(0., device='cuda:0')), ('digits', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('take', tensor(0.0489, device='cuda:0')), ('a', tensor(0.2078, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('pos', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('into', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('term', tensor(0., device='cuda:0')), ('target', tensor(0., device='cuda:0')), ('18', tensor(0., device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0')), ('.', tensor(0.0699, device='cuda:0'))]
idx: 1428, example: bhp billiton posts big loss, slashes dividend, prediction: 1, correct_label: 0, class_scores: [0.26607385 0.42201468 0.31191143], word_scores: ['bhp:0.0', 'bill:0.0', '##ito:0.0', '##n:0.0', 'posts:0.0', 'big:0.0', 'loss:0.0', ',:7.986737728060689e-06', 'slash:0.0', '##es:0.0', 'divide:0.0', '##nd:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('bhp', tensor(0., device='cuda:0')), ('billiton', tensor(0., device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('slashes', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0'))],  word_scores_max: [('bhp', tensor(0., device='cuda:0')), ('billiton', tensor(0., device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('loss', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('slashes', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0'))]
idx: 1429, example: interest heats up for @yahoo $yhoo - the wall street journal  , prediction: 2, correct_label: 1, class_scores: [0.16997252 0.26153025 0.56849724], word_scores: ['interest:0.0', 'heats:0.0', 'up:1.4959460941099678e-06', 'for:0.0', '@:0.0', 'yahoo:0.0', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', '-:4.821180027647642e-06', 'the:6.3806996877247e-06', 'wall:0.0', 'street:0.0', 'journal:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('interest', tensor(0., device='cuda:0')), ('heats', tensor(0., device='cuda:0')), ('up', tensor(0.1178, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('yahoo', tensor(0., device='cuda:0')), ('yhoo', tensor(0., device='cuda:0')), ('-', tensor(0.3797, device='cuda:0')), ('the', tensor(0.5025, device='cuda:0')), ('wall', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('journal', tensor(0., device='cuda:0'))],  word_scores_max: [('interest', tensor(0., device='cuda:0')), ('heats', tensor(0., device='cuda:0')), ('up', tensor(0.1178, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('yahoo', tensor(0., device='cuda:0')), ('yhoo', tensor(0., device='cuda:0')), ('-', tensor(0.3797, device='cuda:0')), ('the', tensor(0.5025, device='cuda:0')), ('wall', tensor(0., device='cuda:0')), ('street', tensor(0., device='cuda:0')), ('journal', tensor(0., device='cuda:0'))]
idx: 1430, example: $trip maintains neutral rating at jp morgan- pt cut $61 from $66, prediction: 2, correct_label: 2, class_scores: [0.25133058 0.32710716 0.42156228], word_scores: ['$:0.0', 'trip:0.0', 'maintains:0.0', 'neutral:0.0', 'rating:0.0', 'at:0.0', 'jp:0.0', 'morgan:0.0', '-:4.821180027647642e-06', 'pt:0.0', 'cut:0.0', '$:0.0', '61:0.0', 'from:4.495178018260049e-06', '$:0.0', '66:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('trip', tensor(0., device='cuda:0')), ('maintains', tensor(0., device='cuda:0')), ('neutral', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('jp', tensor(0., device='cuda:0')), ('morgan', tensor(0., device='cuda:0')), ('-', tensor(0.5175, device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('61', tensor(0., device='cuda:0')), ('from', tensor(0.4825, device='cuda:0')), ('66', tensor(0., device='cuda:0'))],  word_scores_max: [('trip', tensor(0., device='cuda:0')), ('maintains', tensor(0., device='cuda:0')), ('neutral', tensor(0., device='cuda:0')), ('rating', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('jp', tensor(0., device='cuda:0')), ('morgan', tensor(0., device='cuda:0')), ('-', tensor(0.5175, device='cuda:0')), ('pt', tensor(0., device='cuda:0')), ('cut', tensor(0., device='cuda:0')), ('61', tensor(0., device='cuda:0')), ('from', tensor(0.4825, device='cuda:0')), ('66', tensor(0., device='cuda:0'))]
idx: 1431, example: looks like its booking a one way ticket to its 40 week ma near 50. losing 10 week here $lulu , prediction: 1, correct_label: 2, class_scores: [0.2244951  0.39152747 0.38397738], word_scores: ['looks:0.0', 'like:0.0', 'its:1.7191393908433383e-06', 'booking:0.0', 'a:8.62785782373976e-06', 'one:4.584404450724833e-06', 'way:0.0', 'ticket:0.0', 'to:2.886244146793615e-06', 'its:1.7191393908433383e-06', '40:0.0', 'week:0.0', 'ma:0.0', 'near:0.0', '50:0.0', '.:2.903296945078182e-06', 'losing:0.0', '10:0.0', 'week:0.0', 'here:0.0', '$:0.0', 'lulu:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('its', tensor(0.0766, device='cuda:0')), ('booking', tensor(0., device='cuda:0')), ('a', tensor(0.3845, device='cuda:0')), ('one', tensor(0.2043, device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('ticket', tensor(0., device='cuda:0')), ('to', tensor(0.1286, device='cuda:0')), ('its', tensor(0.0766, device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('ma', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('losing', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('lulu', tensor(0., device='cuda:0'))],  word_scores_max: [('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('its', tensor(0.0766, device='cuda:0')), ('booking', tensor(0., device='cuda:0')), ('a', tensor(0.3845, device='cuda:0')), ('one', tensor(0.2043, device='cuda:0')), ('way', tensor(0., device='cuda:0')), ('ticket', tensor(0., device='cuda:0')), ('to', tensor(0.1286, device='cuda:0')), ('its', tensor(0.0766, device='cuda:0')), ('40', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('ma', tensor(0., device='cuda:0')), ('near', tensor(0., device='cuda:0')), ('50', tensor(0., device='cuda:0')), ('.', tensor(0.1294, device='cuda:0')), ('losing', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('lulu', tensor(0., device='cuda:0'))]
idx: 1432, example: carnival corporation and china merchants group sign memo of understanding ..., prediction: 2, correct_label: 2, class_scores: [0.22149631 0.34692782 0.4315759 ], word_scores: ['carnival:0.0', 'corporation:0.0', 'and:0.0', 'china:0.0', 'merchants:0.0', 'group:0.0', 'sign:0.0', 'memo:0.0', 'of:3.4365734791208524e-06', 'understanding:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('carnival', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('merchants', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('sign', tensor(0., device='cuda:0')), ('memo', tensor(0., device='cuda:0')), ('of', tensor(0.2829, device='cuda:0')), ('understanding', tensor(0., device='cuda:0')), ('.', tensor(0.2390, device='cuda:0')), ('.', tensor(0.2390, device='cuda:0')), ('.', tensor(0.2390, device='cuda:0'))],  word_scores_max: [('carnival', tensor(0., device='cuda:0')), ('corporation', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('china', tensor(0., device='cuda:0')), ('merchants', tensor(0., device='cuda:0')), ('group', tensor(0., device='cuda:0')), ('sign', tensor(0., device='cuda:0')), ('memo', tensor(0., device='cuda:0')), ('of', tensor(0.2829, device='cuda:0')), ('understanding', tensor(0., device='cuda:0')), ('.', tensor(0.2390, device='cuda:0')), ('.', tensor(0.2390, device='cuda:0')), ('.', tensor(0.2390, device='cuda:0'))]
idx: 1433, example: talktalk hires bae systems to investigate cyber attack, prediction: 2, correct_label: 2, class_scores: [0.17033668 0.40132523 0.42833808], word_scores: ['talk:0.0', '##talk:0.0', 'hires:0.0', 'bae:0.0', 'systems:0.0', 'to:2.886244146793615e-06', 'investigate:0.0', 'cyber:0.0', 'attack:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('talktalk', tensor(0., device='cuda:0')), ('hires', tensor(0., device='cuda:0')), ('bae', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('investigate', tensor(0., device='cuda:0')), ('cyber', tensor(0., device='cuda:0')), ('attack', tensor(0., device='cuda:0'))],  word_scores_max: [('talktalk', tensor(0., device='cuda:0')), ('hires', tensor(0., device='cuda:0')), ('bae', tensor(0., device='cuda:0')), ('systems', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('investigate', tensor(0., device='cuda:0')), ('cyber', tensor(0., device='cuda:0')), ('attack', tensor(0., device='cuda:0'))]
idx: 1434, example: $wynn big bounce, prediction: 2, correct_label: 1, class_scores: [0.2536099  0.35392332 0.39246678], word_scores: ['$:0.0', 'wynn:0.0', 'big:0.0', 'bounce:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('wynn', tensor(nan, device='cuda:0')), ('big', tensor(nan, device='cuda:0')), ('bounce', tensor(nan, device='cuda:0'))],  word_scores_max: [('wynn', tensor(nan, device='cuda:0')), ('big', tensor(nan, device='cuda:0')), ('bounce', tensor(nan, device='cuda:0'))]
idx: 1435, example: valeant names interim leader as ceo remains hospitalized, prediction: 2, correct_label: 2, class_scores: [0.17316216 0.29506466 0.5317732 ], word_scores: ['vale:0.0', '##ant:0.0', 'names:0.0', 'interim:0.0', 'leader:0.0', 'as:0.0', 'ceo:0.0', 'remains:0.0', 'hospitalized:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('valeant', tensor(nan, device='cuda:0')), ('names', tensor(nan, device='cuda:0')), ('interim', tensor(nan, device='cuda:0')), ('leader', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('ceo', tensor(nan, device='cuda:0')), ('remains', tensor(nan, device='cuda:0')), ('hospitalized', tensor(nan, device='cuda:0'))],  word_scores_max: [('valeant', tensor(nan, device='cuda:0')), ('names', tensor(nan, device='cuda:0')), ('interim', tensor(nan, device='cuda:0')), ('leader', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('ceo', tensor(nan, device='cuda:0')), ('remains', tensor(nan, device='cuda:0')), ('hospitalized', tensor(nan, device='cuda:0'))]
idx: 1436, example: companiesfresnillo shares jump 8% as silver price breaks $21, prediction: 1, correct_label: 1, class_scores: [0.18525234 0.41753554 0.3972121 ], word_scores: ['companies:0.0', '##fr:0.0', '##es:0.0', '##ni:0.0', '##llo:0.0', 'shares:0.0', 'jump:0.0', '8:0.0', '%:0.0', 'as:0.0', 'silver:0.0', 'price:0.0', 'breaks:0.0', '$:0.0', '21:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companiesfresnillo', tensor(nan, device='cuda:0')), ('shares', tensor(nan, device='cuda:0')), ('jump', tensor(nan, device='cuda:0')), ('8', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('silver', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('breaks', tensor(nan, device='cuda:0')), ('21', tensor(nan, device='cuda:0'))],  word_scores_max: [('companiesfresnillo', tensor(nan, device='cuda:0')), ('shares', tensor(nan, device='cuda:0')), ('jump', tensor(nan, device='cuda:0')), ('8', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('silver', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('breaks', tensor(nan, device='cuda:0')), ('21', tensor(nan, device='cuda:0'))]
idx: 1437, example: new morrisons duo get former boss's support to diffuse investor tension, prediction: 2, correct_label: 2, class_scores: [0.18383665 0.30312487 0.5130385 ], word_scores: ['new:2.798587502184091e-06', 'morrison:0.0', '##s:4.601175078278175e-06', 'duo:0.0', 'get:0.0', 'former:0.0', 'boss:0.0', "':0.0", 's:0.0', 'support:0.0', 'to:2.886244146793615e-06', 'diffuse:0.0', 'investor:0.0', 'tension:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('new', tensor(1., device='cuda:0')), ('morrisons', tensor(0., device='cuda:0')), ('duo', tensor(0., device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('former', tensor(0., device='cuda:0'))],  word_scores_max: [('new', tensor(1., device='cuda:0')), ('morrisons', tensor(0., device='cuda:0')), ('duo', tensor(0., device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('former', tensor(0., device='cuda:0'))]
idx: 1438, example: sanofi poaches astrazeneca scientist as new research head, prediction: 1, correct_label: 2, class_scores: [0.17570098 0.4387548  0.38554424], word_scores: ['san:0.0', '##of:0.0', '##i:0.0', 'po:0.0', '##ache:0.0', '##s:4.601175078278175e-06', 'as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'scientist:0.0', 'as:0.0', 'new:2.798587502184091e-06', 'research:0.0', 'head:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('sanofi', tensor(0., device='cuda:0')), ('poaches', tensor(0., device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('scientist', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0'))],  word_scores_max: [('sanofi', tensor(0., device='cuda:0')), ('poaches', tensor(0., device='cuda:0')), ('astrazeneca', tensor(0., device='cuda:0')), ('scientist', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('research', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0'))]
idx: 1439, example: ftse falls to 3-month low on greek debt concerns, easyjet skids, prediction: 2, correct_label: 0, class_scores: [0.1822031  0.33840266 0.47939417], word_scores: ['ft:0.0', '##se:0.0', 'falls:0.0', 'to:2.886244146793615e-06', '3:0.0', '-:4.821180027647642e-06', 'month:0.0', 'low:0.0', 'on:0.0', 'greek:0.0', 'debt:0.0', 'concerns:0.0', ',:7.986737728060689e-06', 'easy:0.0', '##jet:0.0', 'ski:0.0', '##ds:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ftse', tensor(0., device='cuda:0')), ('falls', tensor(0., device='cuda:0')), ('to', tensor(0.1839, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3072, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('greek', tensor(0., device='cuda:0')), ('debt', tensor(0., device='cuda:0')), ('concerns', tensor(0., device='cuda:0')), (',', tensor(0.5089, device='cuda:0')), ('easyjet', tensor(0., device='cuda:0')), ('skids', tensor(0., device='cuda:0'))],  word_scores_max: [('ftse', tensor(0., device='cuda:0')), ('falls', tensor(0., device='cuda:0')), ('to', tensor(0.1839, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('-', tensor(0.3072, device='cuda:0')), ('month', tensor(0., device='cuda:0')), ('low', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('greek', tensor(0., device='cuda:0')), ('debt', tensor(0., device='cuda:0')), ('concerns', tensor(0., device='cuda:0')), (',', tensor(0.5089, device='cuda:0')), ('easyjet', tensor(0., device='cuda:0')), ('skids', tensor(0., device='cuda:0'))]
idx: 1440, example: rt @robbielolz $nflx a close above here is looking good for the bulls. will hold my positions to see where we close at. keep buying here., prediction: 2, correct_label: 1, class_scores: [0.19443467 0.390846   0.41471934], word_scores: ['rt:0.0', '@:0.0', 'robbie:0.0', '##lo:0.0', '##lz:0.0', '$:0.0', 'nfl:0.0', '##x:0.0', 'a:8.62785782373976e-06', 'close:0.0', 'above:0.0', 'here:0.0', 'is:0.0', 'looking:0.0', 'good:0.0', 'for:0.0', 'the:6.3806996877247e-06', 'bulls:0.0', '.:2.903296945078182e-06', 'will:4.073096533829812e-06', 'hold:0.0', 'my:0.0', 'positions:0.0', 'to:2.886244146793615e-06', 'see:0.0', 'where:0.0', 'we:0.0', 'close:0.0', 'at:0.0', '.:2.903296945078182e-06', 'keep:0.0', 'buying:0.0', 'here:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rt', tensor(0., device='cuda:0')), ('robbielolz', tensor(0., device='cuda:0')), ('nflx', tensor(0., device='cuda:0')), ('a', tensor(0.2812, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2080, device='cuda:0')), ('bulls', tensor(0., device='cuda:0')), ('.', tensor(0.0946, device='cuda:0')), ('will', tensor(0.1328, device='cuda:0')), ('hold', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0')), ('to', tensor(0.0941, device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('.', tensor(0.0946, device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0946, device='cuda:0'))],  word_scores_max: [('rt', tensor(0., device='cuda:0')), ('robbielolz', tensor(0., device='cuda:0')), ('nflx', tensor(0., device='cuda:0')), ('a', tensor(0.2812, device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2080, device='cuda:0')), ('bulls', tensor(0., device='cuda:0')), ('.', tensor(0.0946, device='cuda:0')), ('will', tensor(0.1328, device='cuda:0')), ('hold', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('positions', tensor(0., device='cuda:0')), ('to', tensor(0.0941, device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('where', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('close', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('.', tensor(0.0946, device='cuda:0')), ('keep', tensor(0., device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0')), ('.', tensor(0.0946, device='cuda:0'))]
idx: 1441, example: astrazeneca wins fda approval for key new lung cancer pill, prediction: 2, correct_label: 1, class_scores: [0.25428832 0.30719554 0.43851617], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'wins:0.0', 'fda:0.0', 'approval:0.0', 'for:0.0', 'key:0.0', 'new:2.798587502184091e-06', 'lung:0.0', 'cancer:0.0', 'pill:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('wins', tensor(0., device='cuda:0')), ('fda', tensor(0., device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('lung', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('pill', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('wins', tensor(0., device='cuda:0')), ('fda', tensor(0., device='cuda:0')), ('approval', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('key', tensor(0., device='cuda:0')), ('new', tensor(1., device='cuda:0')), ('lung', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('pill', tensor(0., device='cuda:0'))]
idx: 1442, example: ab inbev offers sabmiller $3 billion breakup fee, prediction: 1, correct_label: 2, class_scores: [0.20224348 0.4755709  0.32218572], word_scores: ['ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'offers:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', '$:0.0', '3:0.0', 'billion:0.0', 'breakup:0.0', 'fee:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ab', tensor(0., device='cuda:0')), ('inbev', tensor(1., device='cuda:0')), ('offers', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('breakup', tensor(0., device='cuda:0')), ('fee', tensor(0., device='cuda:0'))],  word_scores_max: [('ab', tensor(0., device='cuda:0')), ('inbev', tensor(1., device='cuda:0')), ('offers', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0')), ('breakup', tensor(0., device='cuda:0')), ('fee', tensor(0., device='cuda:0'))]
idx: 1443, example: ingenious, hsbc, ubs and coutts sued by 'tax avoidance' clients, prediction: 2, correct_label: 2, class_scores: [0.16528055 0.33441055 0.5003089 ], word_scores: ['ing:0.0', '##eni:0.0', '##ous:0.0', ',:7.986737728060689e-06', 'hs:0.0', '##bc:0.0', ',:7.986737728060689e-06', 'u:0.0', '##bs:0.0', 'and:0.0', 'co:0.0', '##ut:0.0', '##ts:0.0', 'sued:0.0', 'by:0.0', "':0.0", 'tax:0.0', 'avoidance:0.0', "':0.0", 'clients:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ingenious', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('hsbc', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('ubs', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('coutts', tensor(0., device='cuda:0')), ('sued', tensor(0., device='cuda:0'))],  word_scores_max: [('ingenious', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('hsbc', tensor(0., device='cuda:0')), (',', tensor(0.5000, device='cuda:0')), ('ubs', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('coutts', tensor(0., device='cuda:0')), ('sued', tensor(0., device='cuda:0'))]
idx: 1444, example: $trow ascending triangle gives a bullish bias to this chart. breakout above 84 will be positive , prediction: 2, correct_label: 1, class_scores: [0.17396802 0.3342731  0.49175888], word_scores: ['$:0.0', 'tr:0.0', '##ow:0.0', 'ascending:0.0', 'triangle:0.0', 'gives:0.0', 'a:8.62785782373976e-06', 'bull:0.0', '##ish:0.0', 'bias:0.0', 'to:2.886244146793615e-06', 'this:0.0', 'chart:0.0', '.:2.903296945078182e-06', 'breakout:0.0', 'above:0.0', '84:0.0', 'will:4.073096533829812e-06', 'be:0.0', 'positive:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('trow', tensor(0., device='cuda:0')), ('ascending', tensor(0., device='cuda:0')), ('triangle', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('a', tensor(0.4666, device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('bias', tensor(0., device='cuda:0')), ('to', tensor(0.1561, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('.', tensor(0.1570, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('84', tensor(0., device='cuda:0')), ('will', tensor(0.2203, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('positive', tensor(0., device='cuda:0'))],  word_scores_max: [('trow', tensor(0., device='cuda:0')), ('ascending', tensor(0., device='cuda:0')), ('triangle', tensor(0., device='cuda:0')), ('gives', tensor(0., device='cuda:0')), ('a', tensor(0.4666, device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('bias', tensor(0., device='cuda:0')), ('to', tensor(0.1561, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('.', tensor(0.1570, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('84', tensor(0., device='cuda:0')), ('will', tensor(0.2203, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('positive', tensor(0., device='cuda:0'))]
idx: 1445, example: $bbry hearing rumours of a major joint venture announcement., prediction: 2, correct_label: 1, class_scores: [0.22052534 0.38534182 0.39413282], word_scores: ['$:0.0', 'bb:0.0', '##ry:0.0', 'hearing:0.0', 'rumours:0.0', 'of:3.4365734791208524e-06', 'a:8.62785782373976e-06', 'major:0.0', 'joint:0.0', 'venture:0.0', 'announcement:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('bbry', tensor(0., device='cuda:0')), ('hearing', tensor(0., device='cuda:0')), ('rumours', tensor(0., device='cuda:0')), ('of', tensor(0.2296, device='cuda:0')), ('a', tensor(0.5764, device='cuda:0')), ('major', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('.', tensor(0.1940, device='cuda:0'))],  word_scores_max: [('bbry', tensor(0., device='cuda:0')), ('hearing', tensor(0., device='cuda:0')), ('rumours', tensor(0., device='cuda:0')), ('of', tensor(0.2296, device='cuda:0')), ('a', tensor(0.5764, device='cuda:0')), ('major', tensor(0., device='cuda:0')), ('joint', tensor(0., device='cuda:0')), ('venture', tensor(0., device='cuda:0')), ('announcement', tensor(0., device='cuda:0')), ('.', tensor(0.1940, device='cuda:0'))]
idx: 1446, example: news feedftse 100 movers: lse surges as ice says mulling offer; ashtead and barclays tank, prediction: 2, correct_label: 2, class_scores: [0.26402473 0.3652256  0.37074968], word_scores: ['news:0.0', 'feed:0.0', '##ft:0.0', '##se:0.0', '100:0.0', 'move:0.0', '##rs:0.0', '::0.0', 'l:0.0', '##se:0.0', 'surge:0.0', '##s:4.601175078278175e-06', 'as:0.0', 'ice:0.0', 'says:0.0', 'mu:0.0', '##lling:0.0', 'offer:0.0', ';:0.0', 'ash:0.0', '##tead:0.0', 'and:0.0', 'barclay:0.0', '##s:4.601175078278175e-06', 'tank:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('news', tensor(nan, device='cuda:0')), ('feedftse', tensor(nan, device='cuda:0')), ('100', tensor(nan, device='cuda:0')), ('movers', tensor(nan, device='cuda:0')), ('lse', tensor(nan, device='cuda:0')), ('surges', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('ice', tensor(nan, device='cuda:0')), ('says', tensor(nan, device='cuda:0')), ('mulling', tensor(nan, device='cuda:0')), ('offer', tensor(nan, device='cuda:0')), (';', tensor(nan, device='cuda:0')), ('ashtead', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('barclays', tensor(nan, device='cuda:0')), ('tank', tensor(nan, device='cuda:0'))],  word_scores_max: [('news', tensor(nan, device='cuda:0')), ('feedftse', tensor(nan, device='cuda:0')), ('100', tensor(nan, device='cuda:0')), ('movers', tensor(nan, device='cuda:0')), ('lse', tensor(nan, device='cuda:0')), ('surges', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('ice', tensor(nan, device='cuda:0')), ('says', tensor(nan, device='cuda:0')), ('mulling', tensor(nan, device='cuda:0')), ('offer', tensor(nan, device='cuda:0')), (';', tensor(nan, device='cuda:0')), ('ashtead', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('barclays', tensor(nan, device='cuda:0')), ('tank', tensor(nan, device='cuda:0'))]
idx: 1447, example: millercoors board names gavin hattersley interim ceo, prediction: 1, correct_label: 2, class_scores: [0.20809205 0.39739102 0.39451697], word_scores: ['miller:0.0', '##co:0.0', '##ors:0.0', 'board:0.0', 'names:0.0', 'gavin:0.0', 'hat:0.0', '##ters:0.0', '##ley:0.0', 'interim:0.0', 'ceo:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('millercoors', tensor(nan, device='cuda:0')), ('board', tensor(nan, device='cuda:0')), ('names', tensor(nan, device='cuda:0')), ('gavin', tensor(nan, device='cuda:0')), ('hattersley', tensor(nan, device='cuda:0')), ('interim', tensor(nan, device='cuda:0')), ('ceo', tensor(nan, device='cuda:0'))],  word_scores_max: [('millercoors', tensor(nan, device='cuda:0')), ('board', tensor(nan, device='cuda:0')), ('names', tensor(nan, device='cuda:0')), ('gavin', tensor(nan, device='cuda:0')), ('hattersley', tensor(nan, device='cuda:0')), ('interim', tensor(nan, device='cuda:0')), ('ceo', tensor(nan, device='cuda:0'))]
idx: 1448, example: glaxo's viiv healthcare signs china manufacturing deal with desano, prediction: 1, correct_label: 2, class_scores: [0.2325164  0.40114045 0.36634317], word_scores: ['g:0.0', '##la:0.0', '##x:0.0', '##o:0.0', "':0.0", 's:0.0', 'vii:0.0', '##v:0.0', 'healthcare:0.0', 'signs:0.0', 'china:0.0', 'manufacturing:0.0', 'deal:0.0', 'with:4.733654350275174e-06', 'des:0.0', '##ano:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1449, example: $nuan held up well after the big gains! maybe we're finally on the move on this!!its still very undervalued and has major upside, prediction: 1, correct_label: 1, class_scores: [0.18330781 0.46058413 0.35610807], word_scores: ['$:0.0', 'nu:0.0', '##an:0.0', 'held:0.0', 'up:1.4959460941099678e-06', 'well:0.0', 'after:0.0', 'the:6.3806996877247e-06', 'big:0.0', 'gains:0.0', '!:0.0', 'maybe:0.0', 'we:0.0', "':0.0", 're:0.0', 'finally:0.0', 'on:0.0', 'the:6.3806996877247e-06', 'move:0.0', 'on:0.0', 'this:0.0', '!:0.0', '!:0.0', 'its:1.7191393908433383e-06', 'still:0.0', 'very:0.0', 'under:0.0', '##val:0.0', '##ue:0.0', '##d:0.0', 'and:0.0', 'has:5.9214244174654596e-06', 'major:0.0', 'upside:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('nuan', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('up', tensor(0.1899, device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('the', tensor(0.8101, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('maybe', tensor(0., device='cuda:0'))],  word_scores_max: [('nuan', tensor(0., device='cuda:0')), ('held', tensor(0., device='cuda:0')), ('up', tensor(0.1899, device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('the', tensor(0.8101, device='cuda:0')), ('big', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('maybe', tensor(0., device='cuda:0'))]
idx: 1450, example: 09:01 am      $aks  dj ak steel revenue rises 36% on auto sector demand, acquisition, prediction: 1, correct_label: 1, class_scores: [0.26329443 0.37876725 0.35793838], word_scores: ['09:0.0', '::0.0', '01:0.0', 'am:0.0', '$:0.0', 'ak:0.0', '##s:4.601175078278175e-06', 'dj:0.0', 'ak:0.0', 'steel:0.0', 'revenue:0.0', 'rises:0.0', '36:0.0', '%:0.0', 'on:0.0', 'auto:0.0', 'sector:0.0', 'demand:0.0', ',:7.986737728060689e-06', 'acquisition:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('09', tensor(0., device='cuda:0')), ('01', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('aks', tensor(0., device='cuda:0')), ('dj', tensor(0., device='cuda:0')), ('ak', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('auto', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0'))],  word_scores_max: [('09', tensor(0., device='cuda:0')), ('01', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('aks', tensor(0., device='cuda:0')), ('dj', tensor(0., device='cuda:0')), ('ak', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('auto', tensor(0., device='cuda:0')), ('sector', tensor(0., device='cuda:0')), ('demand', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('acquisition', tensor(0., device='cuda:0'))]
idx: 1451, example: $gnrc finding support at its 10-day line so far., prediction: 1, correct_label: 2, class_scores: [0.23922946 0.3863961  0.3743744 ], word_scores: ['$:0.0', 'g:0.0', '##nr:0.0', '##c:0.0', 'finding:0.0', 'support:0.0', 'at:0.0', 'its:1.7191393908433383e-06', '10:0.0', '-:4.821180027647642e-06', 'day:0.0', 'line:0.0', 'so:0.0', 'far:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('gnrc', tensor(0., device='cuda:0')), ('finding', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.1820, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.5105, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('.', tensor(0.3074, device='cuda:0'))],  word_scores_max: [('gnrc', tensor(0., device='cuda:0')), ('finding', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('its', tensor(0.1820, device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('-', tensor(0.5105, device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('line', tensor(0., device='cuda:0')), ('so', tensor(0., device='cuda:0')), ('far', tensor(0., device='cuda:0')), ('.', tensor(0.3074, device='cuda:0'))]
idx: 1452, example: $tsla steaming up again, this stock is relentless at the moment, prediction: 1, correct_label: 1, class_scores: [0.15591793 0.45466563 0.38941643], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'steaming:0.0', 'up:1.4959460941099678e-06', 'again:0.0', ',:7.986737728060689e-06', 'this:0.0', 'stock:0.0', 'is:0.0', 'relentless:0.0', 'at:0.0', 'the:6.3806996877247e-06', 'moment:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('steaming', tensor(0., device='cuda:0')), ('up', tensor(0.0943, device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.5035, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('relentless', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.4022, device='cuda:0')), ('moment', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('steaming', tensor(0., device='cuda:0')), ('up', tensor(0.0943, device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.5035, device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('relentless', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('the', tensor(0.4022, device='cuda:0')), ('moment', tensor(0., device='cuda:0'))]
idx: 1453, example: glencore cuts 2015 budget, plans to divest from lonmin, prediction: 2, correct_label: 2, class_scores: [0.16459145 0.33798173 0.49742684], word_scores: ['glen:0.0', '##core:0.0', 'cuts:0.0', '2015:0.0', 'budget:0.0', ',:7.986737728060689e-06', 'plans:0.0', 'to:2.886244146793615e-06', 'dive:0.0', '##st:0.0', 'from:4.495178018260049e-06', 'lo:0.0', '##n:0.0', '##min:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('glencore', tensor(0., device='cuda:0')), ('cuts', tensor(0., device='cuda:0')), ('2015', tensor(0., device='cuda:0')), ('budget', tensor(0., device='cuda:0')), (',', tensor(0.5197, device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.1878, device='cuda:0')), ('divest', tensor(0., device='cuda:0')), ('from', tensor(0.2925, device='cuda:0')), ('lonmin', tensor(0., device='cuda:0'))],  word_scores_max: [('glencore', tensor(0., device='cuda:0')), ('cuts', tensor(0., device='cuda:0')), ('2015', tensor(0., device='cuda:0')), ('budget', tensor(0., device='cuda:0')), (',', tensor(0.5197, device='cuda:0')), ('plans', tensor(0., device='cuda:0')), ('to', tensor(0.1878, device='cuda:0')), ('divest', tensor(0., device='cuda:0')), ('from', tensor(0.2925, device='cuda:0')), ('lonmin', tensor(0., device='cuda:0'))]
idx: 1454, example: $hcp come to the party and buy this -gonna give solid gains and a dividend $$$$$$, prediction: 1, correct_label: 1, class_scores: [0.1748119  0.5157111  0.30947697], word_scores: ['$:0.0', 'hc:0.0', '##p:0.0', 'come:0.0', 'to:2.886244146793615e-06', 'the:6.3806996877247e-06', 'party:0.0', 'and:0.0', 'buy:0.0', 'this:0.0', '-:4.821180027647642e-06', 'gonna:0.0', 'give:0.0', 'solid:0.0', 'gains:0.0', 'and:0.0', 'a:8.62785782373976e-06', 'divide:0.0', '##nd:0.0', '$:0.0', '$:0.0', '$:0.0', '$:0.0', '$:0.0', '$:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('hcp', tensor(0., device='cuda:0')), ('come', tensor(0., device='cuda:0')), ('to', tensor(0.1271, device='cuda:0')), ('the', tensor(0.2809, device='cuda:0')), ('party', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('-', tensor(0.2122, device='cuda:0')), ('gonna', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('solid', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.3798, device='cuda:0')), ('dividend', tensor(0., device='cuda:0'))],  word_scores_max: [('hcp', tensor(0., device='cuda:0')), ('come', tensor(0., device='cuda:0')), ('to', tensor(0.1271, device='cuda:0')), ('the', tensor(0.2809, device='cuda:0')), ('party', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('buy', tensor(0., device='cuda:0')), ('this', tensor(0., device='cuda:0')), ('-', tensor(0.2122, device='cuda:0')), ('gonna', tensor(0., device='cuda:0')), ('give', tensor(0., device='cuda:0')), ('solid', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('a', tensor(0.3798, device='cuda:0')), ('dividend', tensor(0., device='cuda:0'))]
idx: 1455, example: crown castle buys tower development corp for $461 million, prediction: 1, correct_label: 1, class_scores: [0.22159003 0.39158633 0.38682362], word_scores: ['crown:0.0', 'castle:0.0', 'buys:0.0', 'tower:0.0', 'development:0.0', 'corp:0.0', 'for:0.0', '$:0.0', '46:0.0', '##1:0.0', 'million:6.018835847498849e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('crown', tensor(0., device='cuda:0')), ('castle', tensor(0., device='cuda:0')), ('buys', tensor(0., device='cuda:0')), ('tower', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('461', tensor(0., device='cuda:0')), ('million', tensor(1., device='cuda:0'))],  word_scores_max: [('crown', tensor(0., device='cuda:0')), ('castle', tensor(0., device='cuda:0')), ('buys', tensor(0., device='cuda:0')), ('tower', tensor(0., device='cuda:0')), ('development', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('461', tensor(0., device='cuda:0')), ('million', tensor(1., device='cuda:0'))]
idx: 1456, example: $ddd 3d systems (ddd) stock receives ratings downgrade today at jefferies , prediction: 1, correct_label: 0, class_scores: [0.15816936 0.4341126  0.407718  ], word_scores: ['$:0.0', 'dd:0.0', '##d:0.0', '3d:0.0', 'systems:0.0', '(:0.0', 'dd:0.0', '##d:0.0', '):0.0', 'stock:0.0', 'receives:0.0', 'ratings:0.0', 'down:0.0', '##grade:0.0', 'today:0.0', 'at:0.0', 'jeff:0.0', '##eries:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ddd', tensor(nan, device='cuda:0')), ('3d', tensor(nan, device='cuda:0')), ('systems', tensor(nan, device='cuda:0')), ('ddd', tensor(nan, device='cuda:0')), ('stock', tensor(nan, device='cuda:0')), ('receives', tensor(nan, device='cuda:0')), ('ratings', tensor(nan, device='cuda:0')), ('downgrade', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('at', tensor(nan, device='cuda:0')), ('jefferies', tensor(nan, device='cuda:0'))],  word_scores_max: [('ddd', tensor(nan, device='cuda:0')), ('3d', tensor(nan, device='cuda:0')), ('systems', tensor(nan, device='cuda:0')), ('ddd', tensor(nan, device='cuda:0')), ('stock', tensor(nan, device='cuda:0')), ('receives', tensor(nan, device='cuda:0')), ('ratings', tensor(nan, device='cuda:0')), ('downgrade', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('at', tensor(nan, device='cuda:0')), ('jefferies', tensor(nan, device='cuda:0'))]
idx: 1457, example: $siga bid for reargument denied by judge, prediction: 2, correct_label: 0, class_scores: [0.24787252 0.3002352  0.45189226], word_scores: ['$:0.0', 'si:0.0', '##ga:0.0', 'bid:0.0', 'for:0.0', 'rear:0.0', '##gum:0.0', '##ent:0.0', 'denied:0.0', 'by:0.0', 'judge:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('siga', tensor(nan, device='cuda:0')), ('bid', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('reargument', tensor(nan, device='cuda:0')), ('denied', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('judge', tensor(nan, device='cuda:0'))],  word_scores_max: [('siga', tensor(nan, device='cuda:0')), ('bid', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('reargument', tensor(nan, device='cuda:0')), ('denied', tensor(nan, device='cuda:0')), ('by', tensor(nan, device='cuda:0')), ('judge', tensor(nan, device='cuda:0'))]
idx: 1458, example: 2 turnaround buys for 2016? bhp billiton plc and home retail group plc, prediction: 2, correct_label: 1, class_scores: [0.12727399 0.38881904 0.48390692], word_scores: ['2:0.0', 'turn:0.0', '##around:0.0', 'buys:0.0', 'for:0.0', '2016:0.0', '?:0.0', 'bhp:0.0', 'bill:0.0', '##ito:0.0', '##n:0.0', 'plc:0.0', 'and:0.0', 'home:0.0', 'retail:0.0', 'group:0.0', 'plc:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('2', tensor(nan, device='cuda:0')), ('turnaround', tensor(nan, device='cuda:0')), ('buys', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('2016', tensor(nan, device='cuda:0')), ('?', tensor(nan, device='cuda:0')), ('bhp', tensor(nan, device='cuda:0')), ('billiton', tensor(nan, device='cuda:0')), ('plc', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('home', tensor(nan, device='cuda:0')), ('retail', tensor(nan, device='cuda:0')), ('group', tensor(nan, device='cuda:0')), ('plc', tensor(nan, device='cuda:0'))],  word_scores_max: [('2', tensor(nan, device='cuda:0')), ('turnaround', tensor(nan, device='cuda:0')), ('buys', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('2016', tensor(nan, device='cuda:0')), ('?', tensor(nan, device='cuda:0')), ('bhp', tensor(nan, device='cuda:0')), ('billiton', tensor(nan, device='cuda:0')), ('plc', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('home', tensor(nan, device='cuda:0')), ('retail', tensor(nan, device='cuda:0')), ('group', tensor(nan, device='cuda:0')), ('plc', tensor(nan, device='cuda:0'))]
idx: 1459, example: sainsbury sells unit to lloydspharmacy, prediction: 2, correct_label: 2, class_scores: [0.27013332 0.23399355 0.49587315], word_scores: ['sai:0.0', '##ns:0.0', '##bury:0.0', 'sells:0.0', 'unit:0.0', 'to:2.886244146793615e-06', 'lloyd:0.0', '##sp:0.0', '##har:0.0', '##mac:0.0', '##y:1.832826342251792e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('sainsbury', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('lloydspharmacy', tensor(0., device='cuda:0'))],  word_scores_max: [('sainsbury', tensor(0., device='cuda:0')), ('sells', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('lloydspharmacy', tensor(0., device='cuda:0'))]
idx: 1460, example: renewed ab inbev bid for sabmiller ups stake in beer battle, prediction: 2, correct_label: 2, class_scores: [0.3017588  0.27867267 0.4195685 ], word_scores: ['renewed:0.0', 'ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', 'bid:0.0', 'for:0.0', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', 'ups:0.0', 'stake:0.0', 'in:3.0217122457543155e-06', 'beer:0.0', 'battle:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('renewed', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.5000, device='cuda:0')), ('bid', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('ups', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.5000, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('battle', tensor(0., device='cuda:0'))],  word_scores_max: [('renewed', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0')), ('inbev', tensor(0.5000, device='cuda:0')), ('bid', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('ups', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('in', tensor(0.5000, device='cuda:0')), ('beer', tensor(0., device='cuda:0')), ('battle', tensor(0., device='cuda:0'))]
idx: 1461, example: $spy looks like bear traps getting laid faster than cadbury creme eggs by the easter bunny, prediction: 2, correct_label: 1, class_scores: [0.28279984 0.31379476 0.4034054 ], word_scores: ['$:0.0', 'spy:0.0', 'looks:0.0', 'like:0.0', 'bear:0.0', 'traps:0.0', 'getting:0.0', 'laid:0.0', 'faster:0.0', 'than:0.0', 'cad:0.0', '##bury:0.0', 'cr:0.0', '##eme:0.0', 'eggs:0.0', 'by:0.0', 'the:6.3806996877247e-06', 'easter:0.0', 'bunny:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('spy', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('bear', tensor(0., device='cuda:0')), ('traps', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('faster', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('cadbury', tensor(0., device='cuda:0')), ('creme', tensor(0., device='cuda:0')), ('eggs', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('easter', tensor(0., device='cuda:0')), ('bunny', tensor(0., device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('like', tensor(0., device='cuda:0')), ('bear', tensor(0., device='cuda:0')), ('traps', tensor(0., device='cuda:0')), ('getting', tensor(0., device='cuda:0')), ('laid', tensor(0., device='cuda:0')), ('faster', tensor(0., device='cuda:0')), ('than', tensor(0., device='cuda:0')), ('cadbury', tensor(0., device='cuda:0')), ('creme', tensor(0., device='cuda:0')), ('eggs', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('easter', tensor(0., device='cuda:0')), ('bunny', tensor(0., device='cuda:0'))]
idx: 1462, example: $axp looking for continuation with volume increase , prediction: 1, correct_label: 2, class_scores: [0.20634429 0.40414482 0.38951087], word_scores: ['$:0.0', 'ax:0.0', '##p:0.0', 'looking:0.0', 'for:0.0', 'continuation:0.0', 'with:4.733654350275174e-06', 'volume:0.0', 'increase:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('axp', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('continuation', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0'))],  word_scores_max: [('axp', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('continuation', tensor(0., device='cuda:0')), ('with', tensor(1., device='cuda:0')), ('volume', tensor(0., device='cuda:0')), ('increase', tensor(0., device='cuda:0'))]
idx: 1463, example: update 5-sabmiller rejects ab inbev's $104 bln takeover approach, prediction: 1, correct_label: 2, class_scores: [0.169076   0.43695578 0.39396825], word_scores: ['update:0.0', '5:0.0', '-:4.821180027647642e-06', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', 'rejects:0.0', 'ab:0.0', 'in:3.0217122457543155e-06', '##be:0.0', '##v:0.0', "':0.0", 's:0.0', '$:0.0', '104:0.0', 'b:0.0', '##ln:0.0', 'takeover:0.0', 'approach:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('update', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('rejects', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('5', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('rejects', tensor(0., device='cuda:0')), ('ab', tensor(0., device='cuda:0'))]
idx: 1464, example: $spy $vxx $aapl the parties over loaded on $uvxy volatility is back, prediction: 2, correct_label: 2, class_scores: [0.19951633 0.37854922 0.42193443], word_scores: ['$:0.0', 'spy:0.0', '$:0.0', 'v:0.0', '##xx:0.0', '$:0.0', 'aa:0.0', '##pl:0.0', 'the:6.3806996877247e-06', 'parties:0.0', 'over:0.0', 'loaded:0.0', 'on:0.0', '$:0.0', 'uv:0.0', '##xy:0.0', 'vol:0.0', '##ati:0.0', '##lity:0.0', 'is:0.0', 'back:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('spy', tensor(0., device='cuda:0')), ('vxx', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('parties', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('loaded', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('uvxy', tensor(0., device='cuda:0')), ('volatility', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0'))],  word_scores_max: [('spy', tensor(0., device='cuda:0')), ('vxx', tensor(0., device='cuda:0')), ('aapl', tensor(0., device='cuda:0')), ('the', tensor(1., device='cuda:0')), ('parties', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('loaded', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('uvxy', tensor(0., device='cuda:0')), ('volatility', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0'))]
idx: 1465, example: $bac $adsk $nflx long this morning, prediction: 2, correct_label: 1, class_scores: [0.19479854 0.31701842 0.48818302], word_scores: ['$:0.0', 'ba:0.0', '##c:0.0', '$:0.0', 'ads:0.0', '##k:0.0', '$:0.0', 'nfl:0.0', '##x:0.0', 'long:0.0', 'this:0.0', 'morning:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('bac', tensor(nan, device='cuda:0')), ('adsk', tensor(nan, device='cuda:0')), ('nflx', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('this', tensor(nan, device='cuda:0')), ('morning', tensor(nan, device='cuda:0'))],  word_scores_max: [('bac', tensor(nan, device='cuda:0')), ('adsk', tensor(nan, device='cuda:0')), ('nflx', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('this', tensor(nan, device='cuda:0')), ('morning', tensor(nan, device='cuda:0'))]
idx: 1466, example: $wft closng higher from here, prediction: 2, correct_label: 1, class_scores: [0.23834445 0.35698754 0.40466794], word_scores: ['$:0.0', 'w:0.0', '##ft:0.0', 'cl:0.0', '##os:0.0', '##ng:0.0', 'higher:0.0', 'from:4.495178018260049e-06', 'here:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('wft', tensor(0., device='cuda:0')), ('closng', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('from', tensor(1., device='cuda:0')), ('here', tensor(0., device='cuda:0'))],  word_scores_max: [('wft', tensor(0., device='cuda:0')), ('closng', tensor(0., device='cuda:0')), ('higher', tensor(0., device='cuda:0')), ('from', tensor(1., device='cuda:0')), ('here', tensor(0., device='cuda:0'))]
idx: 1467, example: walter investment management corp receives a sell from compass point $wac , prediction: 1, correct_label: 0, class_scores: [0.14640237 0.47282016 0.38077748], word_scores: ['walter:0.0', 'investment:0.0', 'management:0.0', 'corp:0.0', 'receives:0.0', 'a:8.62785782373976e-06', 'sell:0.0', 'from:4.495178018260049e-06', 'compass:0.0', 'point:0.0', '$:0.0', 'wa:0.0', '##c:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('walter', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('receives', tensor(0., device='cuda:0')), ('a', tensor(0.6575, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('from', tensor(0.3425, device='cuda:0')), ('compass', tensor(0., device='cuda:0')), ('point', tensor(0., device='cuda:0')), ('wac', tensor(0., device='cuda:0'))],  word_scores_max: [('walter', tensor(0., device='cuda:0')), ('investment', tensor(0., device='cuda:0')), ('management', tensor(0., device='cuda:0')), ('corp', tensor(0., device='cuda:0')), ('receives', tensor(0., device='cuda:0')), ('a', tensor(0.6575, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('from', tensor(0.3425, device='cuda:0')), ('compass', tensor(0., device='cuda:0')), ('point', tensor(0., device='cuda:0')), ('wac', tensor(0., device='cuda:0'))]
idx: 1468, example: $astx daily technical indicators are bullish. breakout watch over 4.58  , prediction: 2, correct_label: 1, class_scores: [0.13967276 0.3214585  0.5388687 ], word_scores: ['$:0.0', 'as:0.0', '##t:0.0', '##x:0.0', 'daily:0.0', 'technical:0.0', 'indicators:0.0', 'are:0.0', 'bull:0.0', '##ish:0.0', '.:2.903296945078182e-06', 'breakout:0.0', 'watch:0.0', 'over:0.0', '4:0.0', '.:2.903296945078182e-06', '58:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('astx', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('indicators', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('58', tensor(0., device='cuda:0'))],  word_scores_max: [('astx', tensor(0., device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('indicators', tensor(0., device='cuda:0')), ('are', tensor(0., device='cuda:0')), ('bullish', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('watch', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.5000, device='cuda:0')), ('58', tensor(0., device='cuda:0'))]
idx: 1469, example: $spy bull move ended waiting for next setup, prediction: 1, correct_label: 2, class_scores: [0.22910048 0.41973865 0.3511609 ], word_scores: ['$:0.0', 'spy:0.0', 'bull:0.0', 'move:0.0', 'ended:0.0', 'waiting:0.0', 'for:0.0', 'next:0.0', 'setup:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('spy', tensor(nan, device='cuda:0')), ('bull', tensor(nan, device='cuda:0')), ('move', tensor(nan, device='cuda:0')), ('ended', tensor(nan, device='cuda:0')), ('waiting', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('next', tensor(nan, device='cuda:0')), ('setup', tensor(nan, device='cuda:0'))],  word_scores_max: [('spy', tensor(nan, device='cuda:0')), ('bull', tensor(nan, device='cuda:0')), ('move', tensor(nan, device='cuda:0')), ('ended', tensor(nan, device='cuda:0')), ('waiting', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('next', tensor(nan, device='cuda:0')), ('setup', tensor(nan, device='cuda:0'))]
idx: 1470, example: @mugatushair now it is time to short $tsla, prediction: 2, correct_label: 0, class_scores: [0.1697862  0.35375103 0.4764627 ], word_scores: ['@:0.0', 'mug:0.0', '##atus:0.0', '##hair:0.0', 'now:0.0', 'it:3.3415778943890473e-06', 'is:0.0', 'time:0.0', 'to:2.886244146793615e-06', 'short:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('mugatushair', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('it', tensor(0.5366, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('to', tensor(0.4634, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('mugatushair', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('it', tensor(0.5366, device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('time', tensor(0., device='cuda:0')), ('to', tensor(0.4634, device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1471, example: synergy pharma soars 67% today on positive phase 3 results $sgyp , prediction: 2, correct_label: 1, class_scores: [0.14774284 0.35279104 0.49946615], word_scores: ['syn:0.0', '##ergy:0.0', 'ph:0.0', '##arm:0.0', '##a:3.804580501309829e-06', 'so:0.0', '##ars:0.0', '67:0.0', '%:0.0', 'today:0.0', 'on:0.0', 'positive:0.0', 'phase:0.0', '3:0.0', 'results:0.0', '$:0.0', 'sg:0.0', '##yp:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('synergy', tensor(nan, device='cuda:0')), ('pharma', tensor(nan, device='cuda:0')), ('soars', tensor(nan, device='cuda:0')), ('67', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('positive', tensor(nan, device='cuda:0')), ('phase', tensor(nan, device='cuda:0')), ('3', tensor(nan, device='cuda:0')), ('results', tensor(nan, device='cuda:0')), ('sgyp', tensor(nan, device='cuda:0'))],  word_scores_max: [('synergy', tensor(nan, device='cuda:0')), ('pharma', tensor(nan, device='cuda:0')), ('soars', tensor(nan, device='cuda:0')), ('67', tensor(nan, device='cuda:0')), ('today', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('positive', tensor(nan, device='cuda:0')), ('phase', tensor(nan, device='cuda:0')), ('3', tensor(nan, device='cuda:0')), ('results', tensor(nan, device='cuda:0')), ('sgyp', tensor(nan, device='cuda:0'))]
idx: 1472, example: $adbe technical alerts: expansion breakout, gilligan's island sell setup, volume surge, and new 52... , prediction: 2, correct_label: 2, class_scores: [0.16507225 0.36116937 0.47375837], word_scores: ['$:0.0', 'ad:0.0', '##be:0.0', 'technical:0.0', 'alert:0.0', '##s:4.601175078278175e-06', '::0.0', 'expansion:0.0', 'breakout:0.0', ',:7.986737728060689e-06', 'gill:0.0', '##igan:0.0', "':0.0", 's:0.0', 'island:0.0', 'sell:0.0', 'setup:0.0', ',:7.986737728060689e-06', 'volume:0.0', 'surge:0.0', ',:7.986737728060689e-06', 'and:0.0', 'new:2.798587502184091e-06', '52:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('adbe', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('alerts', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))],  word_scores_max: [('adbe', tensor(0., device='cuda:0')), ('technical', tensor(0., device='cuda:0')), ('alerts', tensor(0., device='cuda:0')), ('expansion', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0'))]
idx: 1473, example: $tsla yeah lets go down to 230s lol, prediction: 2, correct_label: 0, class_scores: [0.22576106 0.32244712 0.4517918 ], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'yeah:0.0', 'lets:0.0', 'go:0.0', 'down:0.0', 'to:2.886244146793615e-06', '230:0.0', '##s:4.601175078278175e-06', 'lo:0.0', '##l:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tsla', tensor(0., device='cuda:0')), ('yeah', tensor(0., device='cuda:0')), ('lets', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('230s', tensor(0., device='cuda:0')), ('lol', tensor(0., device='cuda:0'))],  word_scores_max: [('tsla', tensor(0., device='cuda:0')), ('yeah', tensor(0., device='cuda:0')), ('lets', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('230s', tensor(0., device='cuda:0')), ('lol', tensor(0., device='cuda:0'))]
idx: 1474, example: tesco breaks its downward slide by cutting sales decline in half, prediction: 2, correct_label: 2, class_scores: [0.1986125  0.37130827 0.43007925], word_scores: ['te:0.0', '##sco:0.0', 'breaks:0.0', 'its:1.7191393908433383e-06', 'downward:0.0', 'slide:0.0', 'by:0.0', 'cutting:0.0', 'sales:0.0', 'decline:0.0', 'in:3.0217122457543155e-06', 'half:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(0., device='cuda:0')), ('breaks', tensor(0., device='cuda:0')), ('its', tensor(0.3626, device='cuda:0')), ('downward', tensor(0., device='cuda:0')), ('slide', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decline', tensor(0., device='cuda:0')), ('in', tensor(0.6374, device='cuda:0')), ('half', tensor(0., device='cuda:0'))],  word_scores_max: [('tesco', tensor(0., device='cuda:0')), ('breaks', tensor(0., device='cuda:0')), ('its', tensor(0.3626, device='cuda:0')), ('downward', tensor(0., device='cuda:0')), ('slide', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('cutting', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('decline', tensor(0., device='cuda:0')), ('in', tensor(0.6374, device='cuda:0')), ('half', tensor(0., device='cuda:0'))]
idx: 1475, example: severn trent share price rises as first half profit inches up as customer ..., prediction: 2, correct_label: 1, class_scores: [0.24345599 0.31680098 0.43974304], word_scores: ['severn:0.0', 'trent:0.0', 'share:0.0', 'price:0.0', 'rises:0.0', 'as:0.0', 'first:0.0', 'half:0.0', 'profit:0.0', 'inches:0.0', 'up:1.4959460941099678e-06', 'as:0.0', 'customer:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('severn', tensor(0., device='cuda:0')), ('trent', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('inches', tensor(0., device='cuda:0')), ('up', tensor(0.1466, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('.', tensor(0.2845, device='cuda:0')), ('.', tensor(0.2845, device='cuda:0')), ('.', tensor(0.2845, device='cuda:0'))],  word_scores_max: [('severn', tensor(0., device='cuda:0')), ('trent', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('first', tensor(0., device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('profit', tensor(0., device='cuda:0')), ('inches', tensor(0., device='cuda:0')), ('up', tensor(0.1466, device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('customer', tensor(0., device='cuda:0')), ('.', tensor(0.2845, device='cuda:0')), ('.', tensor(0.2845, device='cuda:0')), ('.', tensor(0.2845, device='cuda:0'))]
idx: 1476, example: $fast $gww - daily sales slowing again, pretty timely coincident indicator , prediction: 2, correct_label: 2, class_scores: [0.16907004 0.36725873 0.4636712 ], word_scores: ['$:0.0', 'fast:0.0', '$:0.0', 'g:0.0', '##w:0.0', '##w:0.0', '-:4.821180027647642e-06', 'daily:0.0', 'sales:0.0', 'slowing:0.0', 'again:0.0', ',:7.986737728060689e-06', 'pretty:0.0', 'timely:0.0', 'coincide:0.0', '##nt:0.0', 'indicator:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('fast', tensor(0., device='cuda:0')), ('gww', tensor(0., device='cuda:0')), ('-', tensor(0.3764, device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('slowing', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.6236, device='cuda:0')), ('pretty', tensor(0., device='cuda:0')), ('timely', tensor(0., device='cuda:0')), ('coincident', tensor(0., device='cuda:0')), ('indicator', tensor(0., device='cuda:0'))],  word_scores_max: [('fast', tensor(0., device='cuda:0')), ('gww', tensor(0., device='cuda:0')), ('-', tensor(0.3764, device='cuda:0')), ('daily', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('slowing', tensor(0., device='cuda:0')), ('again', tensor(0., device='cuda:0')), (',', tensor(0.6236, device='cuda:0')), ('pretty', tensor(0., device='cuda:0')), ('timely', tensor(0., device='cuda:0')), ('coincident', tensor(0., device='cuda:0')), ('indicator', tensor(0., device='cuda:0'))]
idx: 1477, example: $fb turns back down in early trading.... , prediction: 2, correct_label: 0, class_scores: [0.27237216 0.27372667 0.4539012 ], word_scores: ['$:0.0', 'f:0.0', '##b:0.0', 'turns:0.0', 'back:0.0', 'down:0.0', 'in:3.0217122457543155e-06', 'early:0.0', 'trading:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('fb', tensor(0., device='cuda:0')), ('turns', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('in', tensor(0.2065, device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('.', tensor(0.1984, device='cuda:0')), ('.', tensor(0.1984, device='cuda:0')), ('.', tensor(0.1984, device='cuda:0')), ('.', tensor(0.1984, device='cuda:0'))],  word_scores_max: [('fb', tensor(0., device='cuda:0')), ('turns', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('in', tensor(0.2065, device='cuda:0')), ('early', tensor(0., device='cuda:0')), ('trading', tensor(0., device='cuda:0')), ('.', tensor(0.1984, device='cuda:0')), ('.', tensor(0.1984, device='cuda:0')), ('.', tensor(0.1984, device='cuda:0')), ('.', tensor(0.1984, device='cuda:0'))]
idx: 1478, example: micron technology inc #nasdaq: $mu down 2.3% today and down 8.9% since being put on "the short" , prediction: 2, correct_label: 0, class_scores: [0.13975684 0.40434164 0.45590153], word_scores: ['micro:0.0', '##n:0.0', 'technology:0.0', 'inc:0.0', '#:0.0', 'nas:0.0', '##da:0.0', '##q:0.0', '::0.0', '$:0.0', 'mu:0.0', 'down:0.0', '2:0.0', '.:2.903296945078182e-06', '3:0.0', '%:0.0', 'today:0.0', 'and:0.0', 'down:0.0', '8:0.0', '.:2.903296945078182e-06', '9:0.0', '%:0.0', 'since:0.0', 'being:0.0', 'put:0.0', 'on:0.0', '":0.0', 'the:6.3806996877247e-06', 'short:0.0', '":0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('micron', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('nasdaq', tensor(0., device='cuda:0')), ('mu', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.2382, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('.', tensor(0.2382, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5236, device='cuda:0')), ('short', tensor(0., device='cuda:0'))],  word_scores_max: [('micron', tensor(0., device='cuda:0')), ('technology', tensor(0., device='cuda:0')), ('inc', tensor(0., device='cuda:0')), ('nasdaq', tensor(0., device='cuda:0')), ('mu', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('.', tensor(0.2382, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0')), ('.', tensor(0.2382, device='cuda:0')), ('9', tensor(0., device='cuda:0')), ('since', tensor(0., device='cuda:0')), ('being', tensor(0., device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('the', tensor(0.5236, device='cuda:0')), ('short', tensor(0., device='cuda:0'))]
idx: 1479, example: companieshome retail trims gains but is considered 'in play', prediction: 2, correct_label: 2, class_scores: [0.19754317 0.3266057  0.47585118], word_scores: ['companies:0.0', '##hom:0.0', '##e:0.0', 'retail:0.0', 'trim:0.0', '##s:4.601175078278175e-06', 'gains:0.0', 'but:0.0', 'is:0.0', 'considered:0.0', "':0.0", 'in:3.0217122457543155e-06', 'play:0.0', "':0.0", '[SEP]:1.4596897017327137eword_scores_sum: [('companieshome', tensor(nan, device='cuda:0')), ('retail', tensor(nan, device='cuda:0')), ('trims', tensor(nan, device='cuda:0')), ('gains', tensor(nan, device='cuda:0')), ('but', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0'))],  word_scores_max: [('companieshome', tensor(nan, device='cuda:0')), ('retail', tensor(nan, device='cuda:0')), ('trims', tensor(nan, device='cuda:0')), ('gains', tensor(nan, device='cuda:0')), ('but', tensor(nan, device='cuda:0')), ('is', tensor(nan, device='cuda:0'))]
idx: 1480, example: $gild chart: with $ibb back over support. , prediction: 2, correct_label: 1, class_scores: [0.2300506  0.31487632 0.45507303], word_scores: ['$:0.0', 'gil:0.0', '##d:0.0', 'chart:0.0', '::0.0', 'with:4.733654350275174e-06', '$:0.0', 'ib:0.0', '##b:0.0', 'back:0.0', 'over:0.0', 'support:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('gild', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('with', tensor(0.6198, device='cuda:0')), ('ibb', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('.', tensor(0.3802, device='cuda:0'))],  word_scores_max: [('gild', tensor(0., device='cuda:0')), ('chart', tensor(0., device='cuda:0')), ('with', tensor(0.6198, device='cuda:0')), ('ibb', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('over', tensor(0., device='cuda:0')), ('support', tensor(0., device='cuda:0')), ('.', tensor(0.3802, device='cuda:0'))]
idx: 1481, example: aberdeen am posts h1 outflows, says conditions to remain challenging, prediction: 1, correct_label: 0, class_scores: [0.20506908 0.49413174 0.30079922], word_scores: ['aberdeen:0.0', 'am:0.0', 'posts:0.0', 'h:0.0', '##1:0.0', 'out:0.0', '##flow:0.0', '##s:4.601175078278175e-06', ',:7.986737728060689e-06', 'says:0.0', 'conditions:0.0', 'to:2.886244146793615e-06', 'remain:0.0', 'challenging:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aberdeen', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('h1', tensor(0., device='cuda:0')), ('outflows', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('challenging', tensor(0., device='cuda:0'))],  word_scores_max: [('aberdeen', tensor(0., device='cuda:0')), ('am', tensor(0., device='cuda:0')), ('posts', tensor(0., device='cuda:0')), ('h1', tensor(0., device='cuda:0')), ('outflows', tensor(0., device='cuda:0')), (',', tensor(0.7345, device='cuda:0')), ('says', tensor(0., device='cuda:0')), ('conditions', tensor(0., device='cuda:0')), ('to', tensor(0.2655, device='cuda:0')), ('remain', tensor(0., device='cuda:0')), ('challenging', tensor(0., device='cuda:0'))]
idx: 1482, example: thank you $goog (google alphabet) and $fb (facebook) stocks! what a nice reversal., prediction: 2, correct_label: 2, class_scores: [0.24798366 0.3468578  0.40515852], word_scores: ['thank:0.0', 'you:0.0', '$:0.0', 'goo:0.0', '##g:0.0', '(:0.0', 'google:0.0', 'alphabet:0.0', '):0.0', 'and:0.0', '$:0.0', 'f:0.0', '##b:0.0', '(:0.0', 'facebook:0.0', '):0.0', 'stocks:0.0', '!:0.0', 'what:0.0', 'a:8.62785782373976e-06', 'nice:0.0', 'reversal:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('thank', tensor(0., device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('goog', tensor(0., device='cuda:0')), ('google', tensor(0., device='cuda:0')), ('alphabet', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('facebook', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('a', tensor(0.7482, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('reversal', tensor(0., device='cuda:0')), ('.', tensor(0.2518, device='cuda:0'))],  word_scores_max: [('thank', tensor(0., device='cuda:0')), ('you', tensor(0., device='cuda:0')), ('goog', tensor(0., device='cuda:0')), ('google', tensor(0., device='cuda:0')), ('alphabet', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('facebook', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('what', tensor(0., device='cuda:0')), ('a', tensor(0.7482, device='cuda:0')), ('nice', tensor(0., device='cuda:0')), ('reversal', tensor(0., device='cuda:0')), ('.', tensor(0.2518, device='cuda:0'))]
idx: 1483, example: costco: a premier retail dividend play  $cost, prediction: 2, correct_label: 1, class_scores: [0.19336997 0.39552864 0.4111013 ], word_scores: ['cost:0.0', '##co:0.0', '::0.0', 'a:8.62785782373976e-06', 'premier:0.0', 'retail:0.0', 'divide:0.0', '##nd:0.0', 'play:0.0', '$:0.0', 'cost:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('costco', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('premier', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0'))],  word_scores_max: [('costco', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('premier', tensor(0., device='cuda:0')), ('retail', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('play', tensor(0., device='cuda:0')), ('cost', tensor(0., device='cuda:0'))]
idx: 1484, example: $jnk  does not want to go down... risk appetite still high, prediction: 2, correct_label: 2, class_scores: [0.20738031 0.38635752 0.40626213], word_scores: ['$:0.0', 'j:0.0', '##nk:0.0', 'does:0.0', 'not:0.0', 'want:0.0', 'to:2.886244146793615e-06', 'go:0.0', 'down:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', 'risk:0.0', 'appetite:0.0', 'still:0.0', 'high:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('jnk', tensor(0., device='cuda:0')), ('does', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('want', tensor(0., device='cuda:0')), ('to', tensor(0.2489, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('.', tensor(0.2504, device='cuda:0')), ('.', tensor(0.2504, device='cuda:0')), ('.', tensor(0.2504, device='cuda:0')), ('risk', tensor(0., device='cuda:0')), ('appetite', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0'))],  word_scores_max: [('jnk', tensor(0., device='cuda:0')), ('does', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('want', tensor(0., device='cuda:0')), ('to', tensor(0.2489, device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('.', tensor(0.2504, device='cuda:0')), ('.', tensor(0.2504, device='cuda:0')), ('.', tensor(0.2504, device='cuda:0')), ('risk', tensor(0., device='cuda:0')), ('appetite', tensor(0., device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('high', tensor(0., device='cuda:0'))]
idx: 1485, example: tata steel working with stanchart for uk unit sale - source, prediction: 2, correct_label: 2, class_scores: [0.29169613 0.29036728 0.41793656], word_scores: ['tata:0.0', 'steel:0.0', 'working:0.0', 'with:4.733654350275174e-06', 'stan:0.0', '##cha:0.0', '##rt:0.0', 'for:0.0', 'uk:0.0', 'unit:0.0', 'sale:0.0', '-:4.821180027647642e-06', 'source:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tata', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('with', tensor(0.4954, device='cuda:0')), ('stanchart', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('-', tensor(0.5046, device='cuda:0')), ('source', tensor(0., device='cuda:0'))],  word_scores_max: [('tata', tensor(0., device='cuda:0')), ('steel', tensor(0., device='cuda:0')), ('working', tensor(0., device='cuda:0')), ('with', tensor(0.4954, device='cuda:0')), ('stanchart', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('uk', tensor(0., device='cuda:0')), ('unit', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0')), ('-', tensor(0.5046, device='cuda:0')), ('source', tensor(0., device='cuda:0'))]
idx: 1486, example: commodity channel index indicator signaled a oversold for $fb #stockmarket  , prediction: 2, correct_label: 2, class_scores: [0.19919261 0.32015434 0.4806531 ], word_scores: ['commodity:0.0', 'channel:0.0', 'index:0.0', 'indicator:0.0', 'signaled:0.0', 'a:8.62785782373976e-06', 'overs:0.0', '##old:0.0', 'for:0.0', '$:0.0', 'f:0.0', '##b:0.0', '#:0.0', 'stock:0.0', '##market:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('commodity', tensor(0., device='cuda:0')), ('channel', tensor(0., device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('indicator', tensor(0., device='cuda:0')), ('signaled', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('oversold', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('stockmarket', tensor(0., device='cuda:0'))],  word_scores_max: [('commodity', tensor(0., device='cuda:0')), ('channel', tensor(0., device='cuda:0')), ('index', tensor(0., device='cuda:0')), ('indicator', tensor(0., device='cuda:0')), ('signaled', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0')), ('oversold', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('fb', tensor(0., device='cuda:0')), ('stockmarket', tensor(0., device='cuda:0'))]
idx: 1487, example: easyjet leads britain's ftse lower as global bond rout resumes, prediction: 2, correct_label: 0, class_scores: [0.18293594 0.31580213 0.50126195], word_scores: ['easy:0.0', '##jet:0.0', 'leads:0.0', 'britain:0.0', "':0.0", 's:0.0', 'ft:0.0', '##se:0.0', 'lower:0.0', 'as:0.0', 'global:0.0', 'bond:0.0', 'ro:0.0', '##ut:0.0', 'resume:0.0', '##s:4.601175078278175e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('easyjet', tensor(nan, device='cuda:0')), ('leads', tensor(nan, device='cuda:0'))],  word_scores_max: [('easyjet', tensor(nan, device='cuda:0')), ('leads', tensor(nan, device='cuda:0'))]
idx: 1488, example: petrofac share price rises despite â£30m costs on north sea project, prediction: 1, correct_label: 2, class_scores: [0.23834917 0.41715023 0.3445006 ], word_scores: ['pet:0.0', '##ro:0.0', '##fa:0.0', '##c:0.0', 'share:0.0', 'price:0.0', 'rises:0.0', 'despite:0.0', 'a:8.62785782373976e-06', '##£:0.0', '##30:0.0', '##m:0.0', 'costs:0.0', 'on:0.0', 'north:0.0', 'sea:0.0', 'project:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('petrofac', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('despite', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0'))],  word_scores_max: [('petrofac', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('rises', tensor(0., device='cuda:0')), ('despite', tensor(0., device='cuda:0')), ('a', tensor(1., device='cuda:0'))]
idx: 1489, example: whats up with $lulu?  numbers looked good, not great, but good.  i think conference call will instill confidence., prediction: 2, correct_label: 2, class_scores: [0.20947345 0.3867512  0.40377533], word_scores: ['what:0.0', '##s:4.601175078278175e-06', 'up:1.4959460941099678e-06', 'with:4.733654350275174e-06', '$:0.0', 'lulu:0.0', '?:0.0', 'numbers:0.0', 'looked:0.0', 'good:0.0', ',:7.986737728060689e-06', 'not:0.0', 'great:0.0', ',:7.986737728060689e-06', 'but:0.0', 'good:0.0', '.:2.903296945078182e-06', 'i:0.0', 'think:0.0', 'conference:0.0', 'call:0.0', 'will:4.073096533829812e-06', 'ins:0.0', '##till:0.0', 'confidence:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('whats', tensor(0., device='cuda:0')), ('up', tensor(0.0466, device='cuda:0')), ('with', tensor(0.1475, device='cuda:0')), ('lulu', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('numbers', tensor(0., device='cuda:0')), ('looked', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), (',', tensor(0.2489, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('great', tensor(0., device='cuda:0')), (',', tensor(0.2489, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('.', tensor(0.0905, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('conference', tensor(0., device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('will', tensor(0.1270, device='cuda:0')), ('instill', tensor(0., device='cuda:0')), ('confidence', tensor(0., device='cuda:0')), ('.', tensor(0.0905, device='cuda:0'))],  word_scores_max: [('whats', tensor(0., device='cuda:0')), ('up', tensor(0.0466, device='cuda:0')), ('with', tensor(0.1475, device='cuda:0')), ('lulu', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('numbers', tensor(0., device='cuda:0')), ('looked', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), (',', tensor(0.2489, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('great', tensor(0., device='cuda:0')), (',', tensor(0.2489, device='cuda:0')), ('but', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('.', tensor(0.0905, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('think', tensor(0., device='cuda:0')), ('conference', tensor(0., device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('will', tensor(0.1270, device='cuda:0')), ('instill', tensor(0., device='cuda:0')), ('confidence', tensor(0., device='cuda:0')), ('.', tensor(0.0905, device='cuda:0'))]
idx: 1490, example: uk housing market steadies after brexit dip, persimmon says, prediction: 1, correct_label: 1, class_scores: [0.23965873 0.38267073 0.3776705 ], word_scores: ['uk:0.0', 'housing:0.0', 'market:0.0', 'ste:0.0', '##adi:0.0', '##es:0.0', 'after:0.0', 'br:0.0', '##ex:0.0', '##it:0.0', 'dip:0.0', ',:7.986737728060689e-06', 'per:0.0', '##si:0.0', '##mmon:0.0', 'says:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('uk', tensor(0., device='cuda:0')), ('housing', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('steadies', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('brexit', tensor(0., device='cuda:0')), ('dip', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('persimmon', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0'))],  word_scores_max: [('uk', tensor(0., device='cuda:0')), ('housing', tensor(0., device='cuda:0')), ('market', tensor(0., device='cuda:0')), ('steadies', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('brexit', tensor(0., device='cuda:0')), ('dip', tensor(0., device='cuda:0')), (',', tensor(1., device='cuda:0')), ('persimmon', tensor(0., device='cuda:0')), ('says', tensor(0., device='cuda:0'))]
idx: 1491, example: update 1-nomura, rbs must pay $806 mln in mortgage bond case-us judge, prediction: 2, correct_label: 0, class_scores: [0.19730048 0.27794987 0.52474964], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'no:0.0', '##mura:0.0', ',:7.986737728060689e-06', 'rb:0.0', '##s:4.601175078278175e-06', 'must:0.0', 'pay:0.0', '$:0.0', '80:0.0', '##6:0.0', 'ml:0.0', '##n:0.0', 'in:3.0217122457543155e-06', 'mortgage:0.0', 'bond:0.0', 'case:0.0', '-:4.821180027647642e-06', 'us:0.0', 'judge:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.2335, device='cuda:0')), ('nomura', tensor(0., device='cuda:0')), (',', tensor(0.3868, device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('must', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('806', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('in', tensor(0.1463, device='cuda:0')), ('mortgage', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('case', tensor(0., device='cuda:0')), ('-', tensor(0.2335, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('judge', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.2335, device='cuda:0')), ('nomura', tensor(0., device='cuda:0')), (',', tensor(0.3868, device='cuda:0')), ('rbs', tensor(0., device='cuda:0')), ('must', tensor(0., device='cuda:0')), ('pay', tensor(0., device='cuda:0')), ('806', tensor(0., device='cuda:0')), ('mln', tensor(0., device='cuda:0')), ('in', tensor(0.1463, device='cuda:0')), ('mortgage', tensor(0., device='cuda:0')), ('bond', tensor(0., device='cuda:0')), ('case', tensor(0., device='cuda:0')), ('-', tensor(0.2335, device='cuda:0')), ('us', tensor(0., device='cuda:0')), ('judge', tensor(0., device='cuda:0'))]
idx: 1492, example: tesco leads ftse higher on clubcard bid reports, prediction: 2, correct_label: 1, class_scores: [0.20003487 0.3368897  0.4630754 ], word_scores: ['te:0.0', '##sco:0.0', 'leads:0.0', 'ft:0.0', '##se:0.0', 'higher:0.0', 'on:0.0', 'club:0.0', '##card:0.0', 'bid:0.0', 'reports:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(nan, device='cuda:0')), ('leads', tensor(nan, device='cuda:0')), ('ftse', tensor(nan, device='cuda:0')), ('higher', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('clubcard', tensor(nan, device='cuda:0')), ('bid', tensor(nan, device='cuda:0')), ('reports', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0')), ('leads', tensor(nan, device='cuda:0')), ('ftse', tensor(nan, device='cuda:0')), ('higher', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('clubcard', tensor(nan, device='cuda:0')), ('bid', tensor(nan, device='cuda:0')), ('reports', tensor(nan, device='cuda:0'))]
idx: 1493, example: $sds +1.46% 15.32, picking up some speed. may 16 calls now +35% .19:  next week $16 calls .11c: , prediction: 2, correct_label: 1, class_scores: [0.2212751  0.30318257 0.4755423 ], word_scores: ['$:0.0', 'sd:0.0', '##s:4.601175078278175e-06', '+:0.0', '1:0.0', '.:2.903296945078182e-06', '46:0.0', '%:0.0', '15:0.0', '.:2.903296945078182e-06', '32:0.0', ',:7.986737728060689e-06', 'picking:0.0', 'up:1.4959460941099678e-06', 'some:0.0', 'speed:0.0', '.:2.903296945078182e-06', 'may:0.0', '16:0.0', 'calls:0.0', 'now:0.0', '+:0.0', '35:0.0', '%:0.0', '.:2.903296945078182e-06', '19:0.0', '::0.0', 'next:0.0', 'week:0.0', '$:0.0', '16:0.0', 'calls:0.0', '.:2.903296945078182e-06', '11:0.0', '##c:0.0', '::0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sds', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('32', tensor(0., device='cuda:0')), (',', tensor(0.3328, device='cuda:0')), ('picking', tensor(0., device='cuda:0')), ('up', tensor(0.0623, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('speed', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('11c', tensor(0., device='cuda:0'))],  word_scores_max: [('sds', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('15', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('32', tensor(0., device='cuda:0')), (',', tensor(0.3328, device='cuda:0')), ('picking', tensor(0., device='cuda:0')), ('up', tensor(0.0623, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('speed', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('may', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('35', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('week', tensor(0., device='cuda:0')), ('16', tensor(0., device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('.', tensor(0.1210, device='cuda:0')), ('11c', tensor(0., device='cuda:0'))]
idx: 1494, example: $ma  continues to consolidate / base here, prediction: 2, correct_label: 2, class_scores: [0.2615582  0.306397   0.43204477], word_scores: ['$:0.0', 'ma:0.0', 'continues:0.0', 'to:2.886244146793615e-06', 'consolidate:0.0', '/:0.0', 'base:0.0', 'here:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ma', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('consolidate', tensor(0., device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0'))],  word_scores_max: [('ma', tensor(0., device='cuda:0')), ('continues', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('consolidate', tensor(0., device='cuda:0')), ('base', tensor(0., device='cuda:0')), ('here', tensor(0., device='cuda:0'))]
idx: 1495, example: added long at friday close  $spy $labu $blue $amzn, prediction: 2, correct_label: 1, class_scores: [0.19230604 0.28324363 0.5244503 ], word_scores: ['added:0.0', 'long:0.0', 'at:0.0', 'friday:0.0', 'close:0.0', '$:0.0', 'spy:0.0', '$:0.0', 'lab:0.0', '##u:0.0', '$:0.0', 'blue:0.0', '$:0.0', 'am:0.0', '##z:0.0', '##n:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('added', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('at', tensor(nan, device='cuda:0')), ('friday', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('labu', tensor(nan, device='cuda:0')), ('blue', tensor(nan, device='cuda:0')), ('amzn', tensor(nan, device='cuda:0'))],  word_scores_max: [('added', tensor(nan, device='cuda:0')), ('long', tensor(nan, device='cuda:0')), ('at', tensor(nan, device='cuda:0')), ('friday', tensor(nan, device='cuda:0')), ('close', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('labu', tensor(nan, device='cuda:0')), ('blue', tensor(nan, device='cuda:0')), ('amzn', tensor(nan, device='cuda:0'))]
idx: 1496, example: update 1-sabmiller 2nd-quarter underlying sales rise, forex impacts margins, prediction: 1, correct_label: 2, class_scores: [0.21310855 0.43266976 0.3542217 ], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'sa:0.0', '##bm:0.0', '##ille:0.0', '##r:0.0', '2nd:0.0', '-:4.821180027647642e-06', 'quarter:0.0', 'underlying:0.0', 'sales:0.0', 'rise:0.0', ',:7.986737728060689e-06', 'fore:0.0', '##x:0.0', 'impacts:0.0', 'margins:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.2735, device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('2nd', tensor(0., device='cuda:0')), ('-', tensor(0.2735, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('underlying', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), (',', tensor(0.4530, device='cuda:0')), ('forex', tensor(0., device='cuda:0')), ('impacts', tensor(0., device='cuda:0')), ('margins', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.2735, device='cuda:0')), ('sabmiller', tensor(0., device='cuda:0')), ('2nd', tensor(0., device='cuda:0')), ('-', tensor(0.2735, device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('underlying', tensor(0., device='cuda:0')), ('sales', tensor(0., device='cuda:0')), ('rise', tensor(0., device='cuda:0')), (',', tensor(0.4530, device='cuda:0')), ('forex', tensor(0., device='cuda:0')), ('impacts', tensor(0., device='cuda:0')), ('margins', tensor(0., device='cuda:0'))]
idx: 1497, example: $cost short finally making gains. i will take half my gains at 147, prediction: 2, correct_label: 0, class_scores: [0.16338734 0.278598   0.55801463], word_scores: ['$:0.0', 'cost:0.0', 'short:0.0', 'finally:0.0', 'making:0.0', 'gains:0.0', '.:2.903296945078182e-06', 'i:0.0', 'will:4.073096533829812e-06', 'take:2.0325496734585613e-06', 'half:0.0', 'my:0.0', 'gains:0.0', 'at:0.0', '147:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('cost', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('.', tensor(0.3223, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('will', tensor(0.4521, device='cuda:0')), ('take', tensor(0.2256, device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('147', tensor(0., device='cuda:0'))],  word_scores_max: [('cost', tensor(0., device='cuda:0')), ('short', tensor(0., device='cuda:0')), ('finally', tensor(0., device='cuda:0')), ('making', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('.', tensor(0.3223, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('will', tensor(0.4521, device='cuda:0')), ('take', tensor(0.2256, device='cuda:0')), ('half', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('gains', tensor(0., device='cuda:0')), ('at', tensor(0., device='cuda:0')), ('147', tensor(0., device='cuda:0'))]
idx: 1498, example: rt @alphatrends vmarkets are still acting weak   $spy $qqq $xlf $smh $iwm, prediction: 2, correct_label: 0, class_scores: [0.24093863 0.30888113 0.45018023], word_scores: ['rt:0.0', '@:0.0', 'alpha:0.0', '##tre:0.0', '##nds:0.0', 'v:0.0', '##market:0.0', '##s:4.601175078278175e-06', 'are:0.0', 'still:0.0', 'acting:0.0', 'weak:0.0', '$:0.0', 'spy:0.0', '$:0.0', 'q:0.0', '##q:0.0', '##q:0.0', '$:0.0', 'xl:0.0', '##f:0.0', '$:0.0', 'sm:0.0', '##h:0.0', '$:0.0', 'i:0.0', '##w:0.0', '##m:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('rt', tensor(nan, device='cuda:0')), ('alphatrends', tensor(nan, device='cuda:0')), ('vmarkets', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('still', tensor(nan, device='cuda:0')), ('acting', tensor(nan, device='cuda:0')), ('weak', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('qqq', tensor(nan, device='cuda:0')), ('xlf', tensor(nan, device='cuda:0')), ('smh', tensor(nan, device='cuda:0')), ('iwm', tensor(nan, device='cuda:0'))],  word_scores_max: [('rt', tensor(nan, device='cuda:0')), ('alphatrends', tensor(nan, device='cuda:0')), ('vmarkets', tensor(nan, device='cuda:0')), ('are', tensor(nan, device='cuda:0')), ('still', tensor(nan, device='cuda:0')), ('acting', tensor(nan, device='cuda:0')), ('weak', tensor(nan, device='cuda:0')), ('spy', tensor(nan, device='cuda:0')), ('qqq', tensor(nan, device='cuda:0')), ('xlf', tensor(nan, device='cuda:0')), ('smh', tensor(nan, device='cuda:0')), ('iwm', tensor(nan, device='cuda:0'))]
idx: 1499, example: tesco share price closes higher as two more directors leave grocer, prediction: 2, correct_label: 1, class_scores: [0.24824953 0.29462665 0.45712382], word_scores: ['te:0.0', '##sco:0.0', 'share:0.0', 'price:0.0', 'closes:0.0', 'higher:0.0', 'as:0.0', 'two:0.0', 'more:0.0', 'directors:0.0', 'leave:0.0', 'gr:0.0', '##oc:0.0', '##er:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('closes', tensor(nan, device='cuda:0')), ('higher', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('two', tensor(nan, device='cuda:0')), ('more', tensor(nan, device='cuda:0')), ('directors', tensor(nan, device='cuda:0')), ('leave', tensor(nan, device='cuda:0')), ('grocer', tensor(nan, device='cuda:0'))],  word_scores_max: [('tesco', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('closes', tensor(nan, device='cuda:0')), ('higher', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('two', tensor(nan, device='cuda:0')), ('more', tensor(nan, device='cuda:0')), ('directors', tensor(nan, device='cuda:0')), ('leave', tensor(nan, device='cuda:0')), ('grocer', tensor(nan, device='cuda:0'))]
idx: 1500, example: $mako hanging in well today. still in a basing pattern. have eyes on it, prediction: 2, correct_label: 2, class_scores: [0.16859397 0.29284674 0.5385593 ], word_scores: ['$:0.0', 'ma:0.0', '##ko:0.0', 'hanging:0.0', 'in:3.0217122457543155e-06', 'well:0.0', 'today:0.0', '.:2.903296945078182e-06', 'still:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'basin:0.0', '##g:0.0', 'pattern:0.0', '.:2.903296945078182e-06', 'have:2.910326429628185e-06', 'eyes:0.0', 'on:0.0', 'it:3.3415778943890473e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('mako', tensor(0., device='cuda:0')), ('hanging', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.1086, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('a', tensor(0.3228, device='cuda:0')), ('basing', tensor(0., device='cuda:0')), ('pattern', tensor(0., device='cuda:0')), ('.', tensor(0.1086, device='cuda:0')), ('have', tensor(0.1089, device='cuda:0')), ('eyes', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('it', tensor(0.1250, device='cuda:0'))],  word_scores_max: [('mako', tensor(0., device='cuda:0')), ('hanging', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('well', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('.', tensor(0.1086, device='cuda:0')), ('still', tensor(0., device='cuda:0')), ('in', tensor(0.1130, device='cuda:0')), ('a', tensor(0.3228, device='cuda:0')), ('basing', tensor(0., device='cuda:0')), ('pattern', tensor(0., device='cuda:0')), ('.', tensor(0.1086, device='cuda:0')), ('have', tensor(0.1089, device='cuda:0')), ('eyes', tensor(0., device='cuda:0')), ('on', tensor(0., device='cuda:0')), ('it', tensor(0.1250, device='cuda:0'))]
idx: 1501, example: $ibm staying strong, prediction: 1, correct_label: 1, class_scores: [0.22744228 0.38852668 0.38403112], word_scores: ['$:0.0', 'ibm:0.0', 'staying:0.0', 'strong:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('ibm', tensor(nan, device='cuda:0')), ('staying', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0'))],  word_scores_max: [('ibm', tensor(nan, device='cuda:0')), ('staying', tensor(nan, device='cuda:0')), ('strong', tensor(nan, device='cuda:0'))]
idx: 1502, example: update 1-berkshire applies to boost wells fargo stake above 10 pct, prediction: 2, correct_label: 1, class_scores: [0.23064888 0.33136734 0.43798384], word_scores: ['update:0.0', '1:0.0', '-:4.821180027647642e-06', 'berkshire:0.0', 'applies:0.0', 'to:2.886244146793615e-06', 'boost:0.0', 'wells:0.0', 'fargo:0.0', 'stake:0.0', 'above:0.0', '10:0.0', 'pc:0.0', '##t:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0')), ('berkshire', tensor(0., device='cuda:0')), ('applies', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('boost', tensor(0., device='cuda:0')), ('wells', tensor(0., device='cuda:0')), ('fargo', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0'))],  word_scores_max: [('update', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), ('-', tensor(0.6255, device='cuda:0')), ('berkshire', tensor(0., device='cuda:0')), ('applies', tensor(0., device='cuda:0')), ('to', tensor(0.3745, device='cuda:0')), ('boost', tensor(0., device='cuda:0')), ('wells', tensor(0., device='cuda:0')), ('fargo', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('pct', tensor(0., device='cuda:0'))]
idx: 1503, example: $lulu #outlook #q1 2013 #lost revenue in the range of $12 million to $17 million -not good, prediction: 2, correct_label: 0, class_scores: [0.26152527 0.2763804  0.46209437], word_scores: ['$:0.0', 'lulu:0.0', '#:0.0', 'outlook:0.0', '#:0.0', 'q:0.0', '##1:0.0', '2013:0.0', '#:0.0', 'lost:0.0', 'revenue:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'range:0.0', 'of:3.4365734791208524e-06', '$:0.0', '12:0.0', 'million:6.018835847498849e-06', 'to:2.886244146793615e-06', '$:0.0', '17:0.0', 'million:6.018835847498849e-06', '-:4.821180027647642e-06', 'not:0.0', 'good:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('lulu', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('2013', tensor(0., device='cuda:0')), ('lost', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('in', tensor(0.0927, device='cuda:0')), ('the', tensor(0.1958, device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.1055, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('million', tensor(0.1847, device='cuda:0')), ('to', tensor(0.0886, device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('million', tensor(0.1847, device='cuda:0')), ('-', tensor(0.1480, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0'))],  word_scores_max: [('lulu', tensor(0., device='cuda:0')), ('outlook', tensor(0., device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('2013', tensor(0., device='cuda:0')), ('lost', tensor(0., device='cuda:0')), ('revenue', tensor(0., device='cuda:0')), ('in', tensor(0.0927, device='cuda:0')), ('the', tensor(0.1958, device='cuda:0')), ('range', tensor(0., device='cuda:0')), ('of', tensor(0.1055, device='cuda:0')), ('12', tensor(0., device='cuda:0')), ('million', tensor(0.1847, device='cuda:0')), ('to', tensor(0.0886, device='cuda:0')), ('17', tensor(0., device='cuda:0')), ('million', tensor(0.1847, device='cuda:0')), ('-', tensor(0.1480, device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0'))]
idx: 1504, example: maglan capital up +20.84% in february, long fairpoint   $$ $frp, prediction: 2, correct_label: 1, class_scores: [0.19091456 0.34656236 0.46252307], word_scores: ['mag:0.0', '##lan:0.0', 'capital:0.0', 'up:1.4959460941099678e-06', '+:0.0', '20:0.0', '.:2.903296945078182e-06', '84:0.0', '%:0.0', 'in:3.0217122457543155e-06', 'february:0.0', ',:7.986737728060689e-06', 'long:0.0', 'fair:0.0', '##point:0.0', '$:0.0', '$:0.0', '$:0.0', 'fr:0.0', '##p:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('maglan', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('up', tensor(0.0971, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.1884, device='cuda:0')), ('84', tensor(0., device='cuda:0')), ('in', tensor(0.1961, device='cuda:0')), ('february', tensor(0., device='cuda:0')), (',', tensor(0.5184, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('fairpoint', tensor(0., device='cuda:0')), ('frp', tensor(0., device='cuda:0'))],  word_scores_max: [('maglan', tensor(0., device='cuda:0')), ('capital', tensor(0., device='cuda:0')), ('up', tensor(0.0971, device='cuda:0')), ('20', tensor(0., device='cuda:0')), ('.', tensor(0.1884, device='cuda:0')), ('84', tensor(0., device='cuda:0')), ('in', tensor(0.1961, device='cuda:0')), ('february', tensor(0., device='cuda:0')), (',', tensor(0.5184, device='cuda:0')), ('long', tensor(0., device='cuda:0')), ('fairpoint', tensor(0., device='cuda:0')), ('frp', tensor(0., device='cuda:0'))]
idx: 1505, example: citigroup to sell onemain to springleaf for $4.25 billion, prediction: 2, correct_label: 2, class_scores: [0.25464547 0.34752786 0.39782667], word_scores: ['ci:0.0', '##ti:2.5915114747476764e-06', '##group:0.0', 'to:2.886244146793615e-06', 'sell:0.0', 'one:4.584404450724833e-06', '##main:0.0', 'to:2.886244146793615e-06', 'spring:0.0', '##leaf:0.0', 'for:0.0', '$:0.0', '4:0.0', '.:2.903296945078182e-06', '25:0.0', 'billion:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('citigroup', tensor(0.1635, device='cuda:0')), ('to', tensor(0.1821, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('onemain', tensor(0.2892, device='cuda:0')), ('to', tensor(0.1821, device='cuda:0')), ('springleaf', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1832, device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0'))],  word_scores_max: [('citigroup', tensor(0.1635, device='cuda:0')), ('to', tensor(0.1821, device='cuda:0')), ('sell', tensor(0., device='cuda:0')), ('onemain', tensor(0.2892, device='cuda:0')), ('to', tensor(0.1821, device='cuda:0')), ('springleaf', tensor(0., device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('4', tensor(0., device='cuda:0')), ('.', tensor(0.1832, device='cuda:0')), ('25', tensor(0., device='cuda:0')), ('billion', tensor(0., device='cuda:0'))]
idx: 1506, example: tesco abandons video-streaming ambitions in blinkbox sale, prediction: 2, correct_label: 2, class_scores: [0.20601061 0.33992392 0.45406547], word_scores: ['te:0.0', '##sco:0.0', 'abandon:0.0', '##s:4.601175078278175e-06', 'video:0.0', '-:4.821180027647642e-06', 'streaming:0.0', 'ambitions:0.0', 'in:3.0217122457543155e-06', 'blink:0.0', '##box:0.0', 'sale:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tesco', tensor(0., device='cuda:0')), ('abandons', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('streaming', tensor(0., device='cuda:0')), ('ambitions', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('blinkbox', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0'))],  word_scores_max: [('tesco', tensor(0., device='cuda:0')), ('abandons', tensor(0., device='cuda:0')), ('video', tensor(0., device='cuda:0')), ('-', tensor(0.6147, device='cuda:0')), ('streaming', tensor(0., device='cuda:0')), ('ambitions', tensor(0., device='cuda:0')), ('in', tensor(0.3853, device='cuda:0')), ('blinkbox', tensor(0., device='cuda:0')), ('sale', tensor(0., device='cuda:0'))]
idx: 1507, example: 3rd red day in a row ? $tsla, prediction: 2, correct_label: 0, class_scores: [0.21033023 0.36483327 0.4248365 ], word_scores: ['3rd:0.0', 'red:0.0', 'day:0.0', 'in:3.0217122457543155e-06', 'a:8.62785782373976e-06', 'row:0.0', '?:0.0', '$:0.0', 'ts:0.0', '##la:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('3rd', tensor(0., device='cuda:0')), ('red', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('in', tensor(0.2594, device='cuda:0')), ('a', tensor(0.7406, device='cuda:0')), ('row', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))],  word_scores_max: [('3rd', tensor(0., device='cuda:0')), ('red', tensor(0., device='cuda:0')), ('day', tensor(0., device='cuda:0')), ('in', tensor(0.2594, device='cuda:0')), ('a', tensor(0.7406, device='cuda:0')), ('row', tensor(0., device='cuda:0')), ('?', tensor(0., device='cuda:0')), ('tsla', tensor(0., device='cuda:0'))]
idx: 1508, example: companieslse adds ex-sec head schapiro to board, prediction: 1, correct_label: 2, class_scores: [0.18951395 0.43172592 0.3787602 ], word_scores: ['companies:0.0', '##ls:0.0', '##e:0.0', 'adds:0.0', 'ex:0.0', '-:4.821180027647642e-06', 'sec:0.0', 'head:0.0', 'sc:1.3329485000213026e-06', '##ha:0.0', '##pi:0.0', '##ro:0.0', 'to:2.886244146793615e-06', 'board:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('companieslse', tensor(0., device='cuda:0')), ('adds', tensor(0., device='cuda:0')), ('ex', tensor(0., device='cuda:0')), ('-', tensor(0.5333, device='cuda:0')), ('sec', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('schapiro', tensor(0.1474, device='cuda:0')), ('to', tensor(0.3193, device='cuda:0')), ('board', tensor(0., device='cuda:0'))],  word_scores_max: [('companieslse', tensor(0., device='cuda:0')), ('adds', tensor(0., device='cuda:0')), ('ex', tensor(0., device='cuda:0')), ('-', tensor(0.5333, device='cuda:0')), ('sec', tensor(0., device='cuda:0')), ('head', tensor(0., device='cuda:0')), ('schapiro', tensor(0.1474, device='cuda:0')), ('to', tensor(0.3193, device='cuda:0')), ('board', tensor(0., device='cuda:0'))]
idx: 1509, example: astrazeneca chases acerta to secure next cancer drug winner, prediction: 2, correct_label: 1, class_scores: [0.21210693 0.28800124 0.4998919 ], word_scores: ['as:0.0', '##tra:0.0', '##zen:0.0', '##eca:0.0', 'chases:0.0', 'ace:0.0', '##rta:0.0', 'to:2.886244146793615e-06', 'secure:0.0', 'next:0.0', 'cancer:0.0', 'drug:0.0', 'winner:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('astrazeneca', tensor(0., device='cuda:0')), ('chases', tensor(0., device='cuda:0')), ('acerta', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('secure', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('winner', tensor(0., device='cuda:0'))],  word_scores_max: [('astrazeneca', tensor(0., device='cuda:0')), ('chases', tensor(0., device='cuda:0')), ('acerta', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('secure', tensor(0., device='cuda:0')), ('next', tensor(0., device='cuda:0')), ('cancer', tensor(0., device='cuda:0')), ('drug', tensor(0., device='cuda:0')), ('winner', tensor(0., device='cuda:0'))]
idx: 1510, example: juniper tumbles on q1 warning; cisco also lower  $jnpr $csco, prediction: 2, correct_label: 0, class_scores: [0.23673016 0.33599153 0.42727825], word_scores: ['juniper:0.0', 'tumble:0.0', '##s:4.601175078278175e-06', 'on:0.0', 'q:0.0', '##1:0.0', 'warning:0.0', ';:0.0', 'cisco:0.0', 'also:0.0', 'lower:0.0', '$:0.0', 'j:0.0', '##np:0.0', '##r:0.0', '$:0.0', 'cs:0.0', '##co:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('juniper', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('q1', tensor(nan, device='cuda:0')), ('warning', tensor(nan, device='cuda:0')), (';', tensor(nan, device='cuda:0')), ('cisco', tensor(nan, device='cuda:0')), ('also', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('jnpr', tensor(nan, device='cuda:0')), ('csco', tensor(nan, device='cuda:0'))],  word_scores_max: [('juniper', tensor(nan, device='cuda:0')), ('tumbles', tensor(nan, device='cuda:0')), ('on', tensor(nan, device='cuda:0')), ('q1', tensor(nan, device='cuda:0')), ('warning', tensor(nan, device='cuda:0')), (';', tensor(nan, device='cuda:0')), ('cisco', tensor(nan, device='cuda:0')), ('also', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('jnpr', tensor(nan, device='cuda:0')), ('csco', tensor(nan, device='cuda:0'))]
idx: 1511, example: $ocn has the stuff. will be looking to add shares if we get a new high breakout., prediction: 2, correct_label: 1, class_scores: [0.16417898 0.34959778 0.48622328], word_scores: ['$:0.0', 'o:0.0', '##c:0.0', '##n:0.0', 'has:5.9214244174654596e-06', 'the:6.3806996877247e-06', 'stuff:0.0', '.:2.903296945078182e-06', 'will:4.073096533829812e-06', 'be:0.0', 'looking:0.0', 'to:2.886244146793615e-06', 'add:0.0', 'shares:0.0', 'if:0.0', 'we:0.0', 'get:0.0', 'a:8.62785782373976e-06', 'new:2.798587502184091e-06', 'high:0.0', 'breakout:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('ocn', tensor(0., device='cuda:0')), ('has', tensor(0.1623, device='cuda:0')), ('the', tensor(0.1748, device='cuda:0')), ('stuff', tensor(0., device='cuda:0')), ('.', tensor(0.0796, device='cuda:0')), ('will', tensor(0.1116, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('to', tensor(0.0791, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('a', tensor(0.2364, device='cuda:0')), ('new', tensor(0.0767, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('.', tensor(0.0796, device='cuda:0'))],  word_scores_max: [('ocn', tensor(0., device='cuda:0')), ('has', tensor(0.1623, device='cuda:0')), ('the', tensor(0.1748, device='cuda:0')), ('stuff', tensor(0., device='cuda:0')), ('.', tensor(0.0796, device='cuda:0')), ('will', tensor(0.1116, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('looking', tensor(0., device='cuda:0')), ('to', tensor(0.0791, device='cuda:0')), ('add', tensor(0., device='cuda:0')), ('shares', tensor(0., device='cuda:0')), ('if', tensor(0., device='cuda:0')), ('we', tensor(0., device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('a', tensor(0.2364, device='cuda:0')), ('new', tensor(0.0767, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('.', tensor(0.0796, device='cuda:0'))]
idx: 1512, example: $txrh reports q1 eps of $0.37 versus the estimated $0.35, beating by $0.02. eps were up 19% from the same quarter last year., prediction: 2, correct_label: 1, class_scores: [0.18148458 0.3852012  0.43331432], word_scores: ['$:0.0', 'tx:0.0', '##rh:0.0', 'reports:0.0', 'q:0.0', '##1:0.0', 'eps:0.0', 'of:3.4365734791208524e-06', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '37:0.0', 'versus:0.0', 'the:6.3806996877247e-06', 'estimated:0.0', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '35:0.0', ',:7.986737728060689e-06', 'beating:0.0', 'by:0.0', '$:0.0', '0:0.0', '.:2.903296945078182e-06', '02:0.0', '.:2.903296945078182e-06', 'eps:0.0', 'were:0.0', 'up:1.4959460941099678e-06', '19:0.0', '%:0.0', 'from:4.495178018260049e-06', 'the:6.3806996877247e-06', 'same:0.0', 'quarter:0.0', 'last:0.0', 'year:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('txrh', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('of', tensor(0.0769, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('37', tensor(0., device='cuda:0')), ('versus', tensor(0., device='cuda:0')), ('the', tensor(0.1428, device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('35', tensor(0., device='cuda:0')), (',', tensor(0.1787, device='cuda:0')), ('beating', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('02', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('up', tensor(0.0335, device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('from', tensor(0.1006, device='cuda:0')), ('the', tensor(0.1428, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0'))],  word_scores_max: [('txrh', tensor(0., device='cuda:0')), ('reports', tensor(0., device='cuda:0')), ('q1', tensor(0., device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('of', tensor(0.0769, device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('37', tensor(0., device='cuda:0')), ('versus', tensor(0., device='cuda:0')), ('the', tensor(0.1428, device='cuda:0')), ('estimated', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('35', tensor(0., device='cuda:0')), (',', tensor(0.1787, device='cuda:0')), ('beating', tensor(0., device='cuda:0')), ('by', tensor(0., device='cuda:0')), ('0', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('02', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0')), ('eps', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('up', tensor(0.0335, device='cuda:0')), ('19', tensor(0., device='cuda:0')), ('from', tensor(0.1006, device='cuda:0')), ('the', tensor(0.1428, device='cuda:0')), ('same', tensor(0., device='cuda:0')), ('quarter', tensor(0., device='cuda:0')), ('last', tensor(0., device='cuda:0')), ('year', tensor(0., device='cuda:0')), ('.', tensor(0.0650, device='cuda:0'))]
idx: 1513, example: refile-hikma and barclays help britain's ftse to climb higher, prediction: 2, correct_label: 1, class_scores: [0.17506854 0.32216728 0.50276417], word_scores: ['ref:0.0', '##ile:0.0', '-:4.821180027647642e-06', 'hi:0.0', '##km:0.0', '##a:3.804580501309829e-06', 'and:0.0', 'barclay:0.0', '##s:4.601175078278175e-06', 'help:0.0', 'britain:0.0', "':0.0", 's:0.0', 'ft:0.0', '##se:0.0', 'to:2.886244146793615e-06', 'climb:0.0', 'higher:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('refile', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('hikma', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), ('help', tensor(0., device='cuda:0'))],  word_scores_max: [('refile', tensor(0., device='cuda:0')), ('-', tensor(1., device='cuda:0')), ('hikma', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('barclays', tensor(0., device='cuda:0')), ('help', tensor(0., device='cuda:0'))]
idx: 1514, example: tullow oil suspends dividend amid oil price fall, prediction: 2, correct_label: 0, class_scores: [0.19084671 0.31535578 0.49379754], word_scores: ['tu:3.6499097859632457e-06', '##llo:0.0', '##w:0.0', 'oil:0.0', 'suspend:0.0', '##s:4.601175078278175e-06', 'divide:0.0', '##nd:0.0', 'amid:0.0', 'oil:0.0', 'price:0.0', 'fall:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('tullow', tensor(1., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('suspends', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('amid', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0'))],  word_scores_max: [('tullow', tensor(1., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('suspends', tensor(0., device='cuda:0')), ('dividend', tensor(0., device='cuda:0')), ('amid', tensor(0., device='cuda:0')), ('oil', tensor(0., device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('fall', tensor(0., device='cuda:0'))]
idx: 1515, example: $rnn staying above the open a very good sign!!!, prediction: 2, correct_label: 1, class_scores: [0.20444477 0.35051697 0.4450382 ], word_scores: ['$:0.0', 'rn:0.0', '##n:0.0', 'staying:0.0', 'above:0.0', 'the:6.3806996877247e-06', 'open:0.0', 'a:8.62785782373976e-06', 'very:0.0', 'good:0.0', 'sign:0.0', '!:0.0', '!:0.0', '!:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('rnn', tensor(0., device='cuda:0')), ('staying', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('the', tensor(0.4251, device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('a', tensor(0.5749, device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('sign', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))],  word_scores_max: [('rnn', tensor(0., device='cuda:0')), ('staying', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('the', tensor(0.4251, device='cuda:0')), ('open', tensor(0., device='cuda:0')), ('a', tensor(0.5749, device='cuda:0')), ('very', tensor(0., device='cuda:0')), ('good', tensor(0., device='cuda:0')), ('sign', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0'))]
idx: 1516, example: yahoo stock is up to $36.46 as the bidding war picks up for the company  $yhoo , prediction: 2, correct_label: 1, class_scores: [0.26594424 0.3078245  0.42623127], word_scores: ['yahoo:0.0', 'stock:0.0', 'is:0.0', 'up:1.4959460941099678e-06', 'to:2.886244146793615e-06', '$:0.0', '36:0.0', '.:2.903296945078182e-06', '46:0.0', 'as:0.0', 'the:6.3806996877247e-06', 'bidding:0.0', 'war:0.0', 'picks:0.0', 'up:1.4959460941099678e-06', 'for:0.0', 'the:6.3806996877247e-06', 'company:6.695386673527537e-06', '$:0.0', 'y:0.0', '##ho:0.0', '##o:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('yahoo', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('up', tensor(0.0530, device='cuda:0')), ('to', tensor(0.1022, device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('.', tensor(0.1028, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.2260, device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('war', tensor(0., device='cuda:0')), ('picks', tensor(0., device='cuda:0')), ('up', tensor(0.0530, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2260, device='cuda:0')), ('company', tensor(0.2371, device='cuda:0')), ('yhoo', tensor(0., device='cuda:0'))],  word_scores_max: [('yahoo', tensor(0., device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('is', tensor(0., device='cuda:0')), ('up', tensor(0.0530, device='cuda:0')), ('to', tensor(0.1022, device='cuda:0')), ('36', tensor(0., device='cuda:0')), ('.', tensor(0.1028, device='cuda:0')), ('46', tensor(0., device='cuda:0')), ('as', tensor(0., device='cuda:0')), ('the', tensor(0.2260, device='cuda:0')), ('bidding', tensor(0., device='cuda:0')), ('war', tensor(0., device='cuda:0')), ('picks', tensor(0., device='cuda:0')), ('up', tensor(0.0530, device='cuda:0')), ('for', tensor(0., device='cuda:0')), ('the', tensor(0.2260, device='cuda:0')), ('company', tensor(0.2371, device='cuda:0')), ('yhoo', tensor(0., device='cuda:0'))]
idx: 1517, example: $inve : see ya above $8, prediction: 2, correct_label: 1, class_scores: [0.14855625 0.4233167  0.42812708], word_scores: ['$:0.0', 'in:3.0217122457543155e-06', '##ve:0.0', '::0.0', 'see:0.0', 'ya:0.0', 'above:0.0', '$:0.0', '8:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('inve', tensor(1., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('ya', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0'))],  word_scores_max: [('inve', tensor(1., device='cuda:0')), ('see', tensor(0., device='cuda:0')), ('ya', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('8', tensor(0., device='cuda:0'))]
idx: 1518, example: glencore studies possible ipo for agricultural trading business, prediction: 2, correct_label: 1, class_scores: [0.16576703 0.4143325  0.41990045], word_scores: ['glen:0.0', '##core:0.0', 'studies:0.0', 'possible:0.0', 'ip:0.0', '##o:0.0', 'for:0.0', 'agricultural:0.0', 'trading:0.0', 'business:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('glencore', tensor(nan, device='cuda:0')), ('studies', tensor(nan, device='cuda:0')), ('possible', tensor(nan, device='cuda:0')), ('ipo', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('agricultural', tensor(nan, device='cuda:0')), ('trading', tensor(nan, device='cuda:0')), ('business', tensor(nan, device='cuda:0'))],  word_scores_max: [('glencore', tensor(nan, device='cuda:0')), ('studies', tensor(nan, device='cuda:0')), ('possible', tensor(nan, device='cuda:0')), ('ipo', tensor(nan, device='cuda:0')), ('for', tensor(nan, device='cuda:0')), ('agricultural', tensor(nan, device='cuda:0')), ('trading', tensor(nan, device='cuda:0')), ('business', tensor(nan, device='cuda:0'))]
idx: 1519, example: berkshire applies to boost wells fargo stake above 10 percent, prediction: 2, correct_label: 1, class_scores: [0.19618236 0.24745597 0.5563617 ], word_scores: ['berkshire:0.0', 'applies:0.0', 'to:2.886244146793615e-06', 'boost:0.0', 'wells:0.0', 'fargo:0.0', 'stake:0.0', 'above:0.0', '10:0.0', 'percent:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('berkshire', tensor(0., device='cuda:0')), ('applies', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('boost', tensor(0., device='cuda:0')), ('wells', tensor(0., device='cuda:0')), ('fargo', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0'))],  word_scores_max: [('berkshire', tensor(0., device='cuda:0')), ('applies', tensor(0., device='cuda:0')), ('to', tensor(1., device='cuda:0')), ('boost', tensor(0., device='cuda:0')), ('wells', tensor(0., device='cuda:0')), ('fargo', tensor(0., device='cuda:0')), ('stake', tensor(0., device='cuda:0')), ('above', tensor(0., device='cuda:0')), ('10', tensor(0., device='cuda:0')), ('percent', tensor(0., device='cuda:0'))]
idx: 1520, example: $yndx and the price of some stocks was 2 times lower then annual earnings, i could not resist, i  was buying when everyone was selling, prediction: 2, correct_label: 1, class_scores: [0.20949678 0.33758003 0.45292327], word_scores: ['$:0.0', 'y:0.0', '##nd:0.0', '##x:0.0', 'and:0.0', 'the:6.3806996877247e-06', 'price:0.0', 'of:3.4365734791208524e-06', 'some:0.0', 'stocks:0.0', 'was:0.0', '2:0.0', 'times:0.0', 'lower:0.0', 'then:0.0', 'annual:0.0', 'earnings:0.0', ',:7.986737728060689e-06', 'i:0.0', 'could:0.0', 'not:0.0', 'resist:0.0', ',:7.986737728060689e-06', 'i:0.0', 'was:0.0', 'buying:0.0', 'when:0.0', 'everyone:0.0', 'was:0.0', 'selling:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('yndx', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2474, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('of', tensor(0.1332, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('times', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('resist', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('everyone', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('selling', tensor(0., device='cuda:0'))],  word_scores_max: [('yndx', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('the', tensor(0.2474, device='cuda:0')), ('price', tensor(0., device='cuda:0')), ('of', tensor(0.1332, device='cuda:0')), ('some', tensor(0., device='cuda:0')), ('stocks', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('2', tensor(0., device='cuda:0')), ('times', tensor(0., device='cuda:0')), ('lower', tensor(0., device='cuda:0')), ('then', tensor(0., device='cuda:0')), ('annual', tensor(0., device='cuda:0')), ('earnings', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('could', tensor(0., device='cuda:0')), ('not', tensor(0., device='cuda:0')), ('resist', tensor(0., device='cuda:0')), (',', tensor(0.3097, device='cuda:0')), ('i', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('buying', tensor(0., device='cuda:0')), ('when', tensor(0., device='cuda:0')), ('everyone', tensor(0., device='cuda:0')), ('was', tensor(0., device='cuda:0')), ('selling', tensor(0., device='cuda:0'))]
idx: 1521, example: aviva weighs cash handout after beating profit forecast, prediction: 2, correct_label: 1, class_scores: [0.21898723 0.30468783 0.47632495], word_scores: ['aviv:0.0', '##a:3.804580501309829e-06', 'weighs:0.0', 'cash:0.0', 'hand:0.0', '##out:0.0', 'after:0.0', 'beating:0.0', 'profit:0.0', 'forecast:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('aviva', tensor(nan, device='cuda:0')), ('weighs', tensor(nan, device='cuda:0')), ('cash', tensor(nan, device='cuda:0')), ('handout', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('beating', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('forecast', tensor(nan, device='cuda:0'))],  word_scores_max: [('aviva', tensor(nan, device='cuda:0')), ('weighs', tensor(nan, device='cuda:0')), ('cash', tensor(nan, device='cuda:0')), ('handout', tensor(nan, device='cuda:0')), ('after', tensor(nan, device='cuda:0')), ('beating', tensor(nan, device='cuda:0')), ('profit', tensor(nan, device='cuda:0')), ('forecast', tensor(nan, device='cuda:0'))]
idx: 1522, example: britain's ftse gains, land securities up after dividend hike, prediction: 1, correct_label: 1, class_scores: [0.23245698 0.4146335  0.35290945], word_scores: ['britain:0.0', "':0.0", 's:0.0', 'ft:0.0', '##se:0.0', 'gains:0.0', ',:7.986737728060689e-06', 'land:0.0', 'securities:0.0', 'up:1.4959460941099678e-06', 'after:0.0', 'divide:0.0', '##nd:0.0', 'hike:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [],  word_scores_max: []
idx: 1523, example: shire proposes $30 bln all-share tie-up with baxalta, prediction: 2, correct_label: 2, class_scores: [0.22151743 0.25011644 0.52836615], word_scores: ['shire:0.0', 'proposes:0.0', '$:0.0', '30:0.0', 'b:0.0', '##ln:0.0', 'all:0.0', '-:4.821180027647642e-06', 'share:0.0', 'tie:0.0', '-:4.821180027647642e-06', 'up:1.4959460941099678e-06', 'with:4.733654350275174e-06', 'ba:0.0', '##xa:0.0', '##lta:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('shire', tensor(0., device='cuda:0')), ('proposes', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('-', tensor(0.3038, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('tie', tensor(0., device='cuda:0')), ('-', tensor(0.3038, device='cuda:0')), ('up', tensor(0.0943, device='cuda:0')), ('with', tensor(0.2982, device='cuda:0')), ('baxalta', tensor(0., device='cuda:0'))],  word_scores_max: [('shire', tensor(0., device='cuda:0')), ('proposes', tensor(0., device='cuda:0')), ('30', tensor(0., device='cuda:0')), ('bln', tensor(0., device='cuda:0')), ('all', tensor(0., device='cuda:0')), ('-', tensor(0.3038, device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('tie', tensor(0., device='cuda:0')), ('-', tensor(0.3038, device='cuda:0')), ('up', tensor(0.0943, device='cuda:0')), ('with', tensor(0.2982, device='cuda:0')), ('baxalta', tensor(0., device='cuda:0'))]
idx: 1524, example: standard chartered's shares plunge 7% after fitch downgrade, prediction: 2, correct_label: 0, class_scores: [0.16872989 0.34796208 0.48330802], word_scores: ['standard:0.0', 'chartered:0.0', "':0.0", 's:0.0', 'shares:0.0', 'plunge:0.0', '7:0.0', '%:0.0', 'after:0.0', 'fitch:0.0', 'down:0.0', '##grade:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('standard', tensor(nan, device='cuda:0'))],  word_scores_max: [('standard', tensor(nan, device='cuda:0'))]
idx: 1525, example: passengers rise at easyjet and aer lingus, prediction: 2, correct_label: 2, class_scores: [0.20375152 0.34100068 0.45524773], word_scores: ['passengers:0.0', 'rise:0.0', 'at:0.0', 'easy:0.0', '##jet:0.0', 'and:0.0', 'ae:0.0', '##r:0.0', 'ling:0.0', '##us:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('passengers', tensor(nan, device='cuda:0')), ('rise', tensor(nan, device='cuda:0')), ('at', tensor(nan, device='cuda:0')), ('easyjet', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('aer', tensor(nan, device='cuda:0')), ('lingus', tensor(nan, device='cuda:0'))],  word_scores_max: [('passengers', tensor(nan, device='cuda:0')), ('rise', tensor(nan, device='cuda:0')), ('at', tensor(nan, device='cuda:0')), ('easyjet', tensor(nan, device='cuda:0')), ('and', tensor(nan, device='cuda:0')), ('aer', tensor(nan, device='cuda:0')), ('lingus', tensor(nan, device='cuda:0'))]
idx: 1526, example: sold out $tza 45 $put (down $1), which were hedging my 45 $call. letting the calls ride solo now., prediction: 2, correct_label: 1, class_scores: [0.2506133  0.35876298 0.3906237 ], word_scores: ['sold:0.0', 'out:0.0', '$:0.0', 't:0.0', '##za:0.0', '45:4.878051640844205e-06', '$:0.0', 'put:0.0', '(:0.0', 'down:0.0', '$:0.0', '1:0.0', '):0.0', ',:7.986737728060689e-06', 'which:0.0', 'were:0.0', 'he:0.0', '##d:0.0', '##ging:0.0', 'my:0.0', '45:4.878051640844205e-06', '$:0.0', 'call:0.0', '.:2.903296945078182e-06', 'letting:0.0', 'the:6.3806996877247e-06', 'calls:0.0', 'ride:0.0', 'solo:0.0', 'now:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('sold', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('tza', tensor(0., device='cuda:0')), ('45', tensor(0.1630, device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.2668, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('hedging', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('45', tensor(0.1630, device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('.', tensor(0.0970, device='cuda:0')), ('letting', tensor(0., device='cuda:0')), ('the', tensor(0.2132, device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('ride', tensor(0., device='cuda:0')), ('solo', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.0970, device='cuda:0'))],  word_scores_max: [('sold', tensor(0., device='cuda:0')), ('out', tensor(0., device='cuda:0')), ('tza', tensor(0., device='cuda:0')), ('45', tensor(0.1630, device='cuda:0')), ('put', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('1', tensor(0., device='cuda:0')), (',', tensor(0.2668, device='cuda:0')), ('which', tensor(0., device='cuda:0')), ('were', tensor(0., device='cuda:0')), ('hedging', tensor(0., device='cuda:0')), ('my', tensor(0., device='cuda:0')), ('45', tensor(0.1630, device='cuda:0')), ('call', tensor(0., device='cuda:0')), ('.', tensor(0.0970, device='cuda:0')), ('letting', tensor(0., device='cuda:0')), ('the', tensor(0.2132, device='cuda:0')), ('calls', tensor(0., device='cuda:0')), ('ride', tensor(0., device='cuda:0')), ('solo', tensor(0., device='cuda:0')), ('now', tensor(0., device='cuda:0')), ('.', tensor(0.0970, device='cuda:0'))]
idx: 1527, example: $acom  downside breakout looks to be coming soon., prediction: 1, correct_label: 0, class_scores: [0.19017446 0.44982553 0.36      ], word_scores: ['$:0.0', 'ac:0.0', '##om:0.0', 'downs:0.0', '##ide:0.0', 'breakout:0.0', 'looks:0.0', 'to:2.886244146793615e-06', 'be:0.0', 'coming:0.0', 'soon:4.303194600652205e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('acom', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('to', tensor(0.2860, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('soon', tensor(0.4264, device='cuda:0')), ('.', tensor(0.2877, device='cuda:0'))],  word_scores_max: [('acom', tensor(0., device='cuda:0')), ('downside', tensor(0., device='cuda:0')), ('breakout', tensor(0., device='cuda:0')), ('looks', tensor(0., device='cuda:0')), ('to', tensor(0.2860, device='cuda:0')), ('be', tensor(0., device='cuda:0')), ('coming', tensor(0., device='cuda:0')), ('soon', tensor(0.4264, device='cuda:0')), ('.', tensor(0.2877, device='cuda:0'))]
idx: 1528, example: $tsla recall, prediction: 2, correct_label: 2, class_scores: [0.20854892 0.27552    0.51593107], word_scores: ['$:0.0', 'ts:0.0', '##la:0.0', 'recall:0.0', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('tsla', tensor(nan, device='cuda:0')), ('recall', tensor(nan, device='cuda:0'))],  word_scores_max: [('tsla', tensor(nan, device='cuda:0')), ('recall', tensor(nan, device='cuda:0'))]
idx: 1529, example: $idcc - $89 share total value of company after crunching #'s. the 4g technology is their diamond in the rough., prediction: 1, correct_label: 1, class_scores: [0.17988107 0.43803048 0.38208842], word_scores: ['$:0.0', 'id:0.0', '##cc:0.0', '-:4.821180027647642e-06', '$:0.0', '89:0.0', 'share:0.0', 'total:0.0', 'value:0.0', 'of:3.4365734791208524e-06', 'company:6.695386673527537e-06', 'after:0.0', 'crunch:0.0', '##ing:0.0', '#:0.0', "':0.0", 's:0.0', '.:2.903296945078182e-06', 'the:6.3806996877247e-06', '4:0.0', '##g:0.0', 'technology:0.0', 'is:0.0', 'their:0.0', 'diamond:0.0', 'in:3.0217122457543155e-06', 'the:6.3806996877247e-06', 'rough:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('idcc', tensor(0., device='cuda:0')), ('-', tensor(0.3224, device='cuda:0')), ('89', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2298, device='cuda:0')), ('company', tensor(0.4478, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('crunching', tensor(0., device='cuda:0'))],  word_scores_max: [('idcc', tensor(0., device='cuda:0')), ('-', tensor(0.3224, device='cuda:0')), ('89', tensor(0., device='cuda:0')), ('share', tensor(0., device='cuda:0')), ('total', tensor(0., device='cuda:0')), ('value', tensor(0., device='cuda:0')), ('of', tensor(0.2298, device='cuda:0')), ('company', tensor(0.4478, device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('crunching', tensor(0., device='cuda:0'))]
idx: 1530, example: vivus $vvus bear raid in effect. stock down 12%, prediction: 2, correct_label: 0, class_scores: [0.27300382 0.25473437 0.47226176], word_scores: ['vi:0.0', '##vus:0.0', '$:0.0', 'v:0.0', '##vus:0.0', 'bear:0.0', 'raid:0.0', 'in:3.0217122457543155e-06', 'effect:0.0', '.:2.903296945078182e-06', 'stock:0.0', 'down:0.0', '12:0.0', '%:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('vivus', tensor(0., device='cuda:0')), ('vvus', tensor(0., device='cuda:0')), ('bear', tensor(0., device='cuda:0')), ('raid', tensor(0., device='cuda:0')), ('in', tensor(0.5100, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('.', tensor(0.4900, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0'))],  word_scores_max: [('vivus', tensor(0., device='cuda:0')), ('vvus', tensor(0., device='cuda:0')), ('bear', tensor(0., device='cuda:0')), ('raid', tensor(0., device='cuda:0')), ('in', tensor(0.5100, device='cuda:0')), ('effect', tensor(0., device='cuda:0')), ('.', tensor(0.4900, device='cuda:0')), ('stock', tensor(0., device='cuda:0')), ('down', tensor(0., device='cuda:0')), ('12', tensor(0., device='cuda:0'))]
idx: 1531, example: $gevo plunging!  back to $3.55., prediction: 1, correct_label: 0, class_scores: [0.16418935 0.42513826 0.41067237], word_scores: ['$:0.0', 'ge:0.0', '##vo:0.0', 'plunging:0.0', '!:0.0', 'back:0.0', 'to:2.886244146793615e-06', '$:0.0', '3:0.0', '.:2.903296945078182e-06', '55:0.0', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137eword_scores_sum: [('gevo', tensor(0., device='cuda:0')), ('plunging', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('to', tensor(0.3320, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0')), ('55', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0'))],  word_scores_max: [('gevo', tensor(0., device='cuda:0')), ('plunging', tensor(0., device='cuda:0')), ('!', tensor(0., device='cuda:0')), ('back', tensor(0., device='cuda:0')), ('to', tensor(0.3320, device='cuda:0')), ('3', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0')), ('55', tensor(0., device='cuda:0')), ('.', tensor(0.3340, device='cuda:0'))]
idx: 1532, example: shire ceo steps up drive to get baxalta board talking, prediction: 1, correct_label: 2, class_scores: [0.16618624 0.41713336 0.41668037], word_scores: ['shire:0.0', 'ceo:0.0', 'steps:0.0', 'up:1.4959460941099678e-06', 'drive:0.0', 'to:2.886244146793615e-06', 'get:0.0', 'ba:0.0', '##xa:0.0', '##lta:0.0', 'board:0.0', 'talking:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('shire', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('steps', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('drive', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('baxalta', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('talking', tensor(0., device='cuda:0'))],  word_scores_max: [('shire', tensor(0., device='cuda:0')), ('ceo', tensor(0., device='cuda:0')), ('steps', tensor(0., device='cuda:0')), ('up', tensor(0.3414, device='cuda:0')), ('drive', tensor(0., device='cuda:0')), ('to', tensor(0.6586, device='cuda:0')), ('get', tensor(0., device='cuda:0')), ('baxalta', tensor(0., device='cuda:0')), ('board', tensor(0., device='cuda:0')), ('talking', tensor(0., device='cuda:0'))]
idx: 1533, example: royal mail share price edges lower as group raises stamp price, prediction: 2, correct_label: 2, class_scores: [0.20592122 0.36852306 0.42555574], word_scores: ['royal:0.0', 'mail:0.0', 'share:0.0', 'price:0.0', 'edges:0.0', 'lower:0.0', 'as:0.0', 'group:0.0', 'raises:0.0', 'stamp:0.0', 'price:0.0', '[SEP]:1.4596897017327137eword_scores_sum: [('royal', tensor(nan, device='cuda:0')), ('mail', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('edges', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('group', tensor(nan, device='cuda:0')), ('raises', tensor(nan, device='cuda:0')), ('stamp', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0'))],  word_scores_max: [('royal', tensor(nan, device='cuda:0')), ('mail', tensor(nan, device='cuda:0')), ('share', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0')), ('edges', tensor(nan, device='cuda:0')), ('lower', tensor(nan, device='cuda:0')), ('as', tensor(nan, device='cuda:0')), ('group', tensor(nan, device='cuda:0')), ('raises', tensor(nan, device='cuda:0')), ('stamp', tensor(nan, device='cuda:0')), ('price', tensor(nan, device='cuda:0'))]
idx: 1534, example: $aapl.  test the high today and probably go beyond after hours..., prediction: 2, correct_label: 1, class_scores: [0.26292276 0.3024723  0.43460497], word_scores: ['$:0.0', 'aa:0.0', '##pl:0.0', '.:2.903296945078182e-06', 'test:0.0', 'the:6.3806996877247e-06', 'high:0.0', 'today:0.0', 'and:0.0', 'probably:0.0', 'go:0.0', 'beyond:0.0', 'after:0.0', 'hours:0.0', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '.:2.903296945078182e-06', '[SEP]:1.4596897017327137e-05', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0', '[PAD]:0.0'], word_scores_sum: [('aapl', tensor(0., device='cuda:0')), ('.', tensor(0.1613, device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('the', tensor(0.3546, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('probably', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('beyond', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('hours', tensor(0., device='cuda:0')), ('.', tensor(0.1613, device='cuda:0')), ('.', tensor(0.1613, device='cuda:0')), ('.', tensor(0.1613, device='cuda:0'))],  word_scores_max: [('aapl', tensor(0., device='cuda:0')), ('.', tensor(0.1613, device='cuda:0')), ('test', tensor(0., device='cuda:0')), ('the', tensor(0.3546, device='cuda:0')), ('high', tensor(0., device='cuda:0')), ('today', tensor(0., device='cuda:0')), ('and', tensor(0., device='cuda:0')), ('probably', tensor(0., device='cuda:0')), ('go', tensor(0., device='cuda:0')), ('beyond', tensor(0., device='cuda:0')), ('after', tensor(0., device='cuda:0')), ('hours', tensor(0., device='cuda:0')), ('.', tensor(0.1613, device='cuda:0')), ('.', tensor(0.1613, device='cuda:0')), ('.', tensor(0.1613, device='cuda:0'))]
